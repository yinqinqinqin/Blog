{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/butterfly/source/css/center-simple.css","path":"css/center-simple.css","modified":1,"renderable":1},{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":1,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/1.jpg","path":"img/1.jpg","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/Head_Photo.png","path":"img/Head_Photo.png","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/background.jpg","path":"img/background.jpg","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.png","path":"img/favicon.png","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.png.bak","path":"img/favicon.png.bak","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/C++编程技巧与规范.md","hash":"3c5b6fa3cac2d5d17566d62954218bc3738dd9f9","modified":1707095881001},{"_id":"source/_posts/C++随手记.md","hash":"34bd6823ab9b1dbc4106ee09b41952a2d2c0e47b","modified":1707095881266},{"_id":"source/_posts/CPlusPlusthings.md","hash":"6f8176e019a294cc6adae9ed2db51fa209cc7671","modified":1707095881557},{"_id":"source/_posts/C与C++基础知识.md","hash":"b480d133e1ee8748beffe462dfa60d431765fcb0","modified":1707095881802},{"_id":"source/_posts/EMS.md","hash":"395509634a047897844ab5c9f525ce6168000c6d","modified":1707095882052},{"_id":"source/_posts/GDB.md","hash":"d7d1647415e8c26c78cc235f3e09438df0d55f7d","modified":1707095882291},{"_id":"source/_posts/butterfly主题搭建.md","hash":"8f10ec7e8fa31f3eafe4aa454636cd3ef7e4fe9e","modified":1707095880765},{"_id":"source/_posts/git.md","hash":"106a249ca4f16bc9742e0fba5e96ede8d044eb28","modified":1707095882552},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1707095882791},{"_id":"source/_posts/三天上元婴！！.md","hash":"254e10a5c55700fd362f4e131b5fdf633c6f8c50","modified":1707080788087},{"_id":"source/_posts/人界功法学习顺序.md","hash":"03ff7cec626cd4c954e090b385fe9c30cc7386fc","modified":1707080788088},{"_id":"source/_posts/新手上路.md","hash":"27ffd942aad07cfce534cf51e0acfc7000912175","modified":1707080788088},{"_id":"source/_posts/模板.md","hash":"baf7574924f3cbaaf1d07c7c7cf048d63ae6ca9c","modified":1710813938168},{"_id":"source/css/custom.css","hash":"954898c429b9b3844803b2bb8ed2c7a73ad280f0","modified":1710822106369},{"_id":"source/js/cat.js","hash":"17a5a59aeb7283c3efabe84fe97338af53ef6e7e","modified":1707087933256},{"_id":"source/js/f12.js","hash":"6fb36778455582614dc8375c9b2ad5cb6567e0ef","modified":1707088522032},{"_id":"source/js/light.js","hash":"0db401affe68d00d3db818669bbb83a981538c7e","modified":1707082939909},{"_id":"source/js/readPercent.js","hash":"fe71a3426b6650058c0660925fcddfff8bc21a16","modified":1707087641465},{"_id":"source/js/share.js","hash":"1b51e8d570bed15c3cdfe52ba1f6ef345ba37e22","modified":1707088192789},{"_id":"source/js/txmap.js","hash":"9018df17b30322faf064e980fb39ab6c3044a2df","modified":1707116141110},{"_id":"themes/butterfly/LICENSE","hash":"1128f8f91104ba9ef98d37eea6523a888dcfa5de","modified":1707080788238},{"_id":"themes/butterfly/README.md","hash":"4e01b47448d9f3a02afc04eef644e2321253f6f4","modified":1707080788238},{"_id":"themes/butterfly/README_CN.md","hash":"262fba7e30cc966b66e6b7aee99f295b15eba724","modified":1707080788239},{"_id":"themes/butterfly/_config.yml","hash":"421b77b99c85035f34183ff14cbfbc4dff1a3078","modified":1707080788240},{"_id":"themes/butterfly/package.json","hash":"2807775d1b79a380b510530faf0735eeacd7a59f","modified":1707080788288},{"_id":"themes/butterfly/plugins.yml","hash":"9b7647f0abda10287f86f66ef81eedbb417459b7","modified":1707080788288},{"_id":"themes/butterfly/languages/default.yml","hash":"90a6dc361de67532437d819a55ec64945ca5404b","modified":1707080788241},{"_id":"themes/butterfly/languages/en.yml","hash":"af5603b1a888f167dc80be6d53a19437b5cf6bef","modified":1707080788241},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"81da87ad2f8295458a7f69aebcf720615da7c7f4","modified":1707080788242},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"03629d1d13a7be09d4933aa5dc0dcbe45e79140c","modified":1707080788243},{"_id":"themes/butterfly/layout/archive.pug","hash":"bb32c9c476372de747dfa563b83f77d7a917a77d","modified":1707080788244},{"_id":"themes/butterfly/layout/category.pug","hash":"710708cfdb436bc875602abf096c919ccdf544db","modified":1707080788244},{"_id":"themes/butterfly/layout/index.pug","hash":"e1c3146834c16e6077406180858add0a8183875a","modified":1707080788285},{"_id":"themes/butterfly/layout/page.pug","hash":"baf469784aef227e4cc840550888554588e87a13","modified":1707080788286},{"_id":"themes/butterfly/layout/post.pug","hash":"fc9f45252d78fcd15e4a82bfd144401cba5b169a","modified":1707080788286},{"_id":"themes/butterfly/layout/tag.pug","hash":"0440f42569df2676273c026a92384fa7729bc4e9","modified":1707080788287},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"fc468a93a64c7a3e408fbac921c9f5a5a8f32027","modified":1707080788233},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/config.yml","hash":"7dfe7189ffeaebb6db13842237f8e124649bea3d","modified":1707080788234},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"996640605ed1e8e35182f0fd9a60a88783b24b03","modified":1707080788235},{"_id":"themes/butterfly/.github/workflows/publish.yml","hash":"05857c2f265246d8de00e31037f2720709540c09","modified":1707080788236},{"_id":"themes/butterfly/.github/workflows/stale.yml","hash":"ac62b989b5550c756e1986fcc68f243170705383","modified":1707080788237},{"_id":"themes/butterfly/layout/includes/404.pug","hash":"cb49f737aca272ccfeb62880bd651eccee72a129","modified":1707080788246},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"aca0ec7ef69b21d1f242c62fed389468a0f0e1a2","modified":1707080788246},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"d4bb282c3d150f2992aaaf892cbdb1112d5b1520","modified":1707080788247},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"6bffbfea80a79fa22b85f5694910e5bbd0ab3cf1","modified":1707086968494},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"91c71f7f04373ce6fb17dbfba798d717d90dff78","modified":1707088484690},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"4c85de4dea4dca4e5088097a79bd6d7009cbf8ef","modified":1707080788256},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"342b99267f23b3b690ca062cf7104fe54ad37a09","modified":1707088279681},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"9f0e9e039f304439007460fa0a7c8ac18e0ffd37","modified":1707080788259},{"_id":"themes/butterfly/scripts/events/404.js","hash":"83cd7f73225ccad123afbd526ce1834eb1eb6a6d","modified":1707080788290},{"_id":"themes/butterfly/scripts/events/cdn.js","hash":"21fb5aabe043486d095c4c8cce361ed85ba88a26","modified":1707080788291},{"_id":"themes/butterfly/scripts/events/comment.js","hash":"5351e0bc09e6b5b3f6d30f333a2520626a28ca3a","modified":1707080788292},{"_id":"themes/butterfly/scripts/events/init.js","hash":"428b94c7b9e83f7ea36227dee66bfe3c23aee4a8","modified":1707080788292},{"_id":"themes/butterfly/scripts/events/stylus.js","hash":"022b870ee8ad7ac05d1569268b61899d2f706221","modified":1707080788293},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"8ad9911b755cba13dde2cc055c3f857a6b0dd20e","modified":1707080788294},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"860f967ecf3c6a6ea785b560a7aae4d0757cd18a","modified":1707080788295},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"a8eef3f37428436554f58a2b6bac7c255fbdf38d","modified":1707080788296},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"2ec66513d5322f185d2071acc052978ba9415a8e","modified":1707080788297},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"96f861151e3b889ef0ffe78821d489ad2625ee43","modified":1707080788298},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"d5c7e61257b08a9648404f6f48ce4d471cd5fa55","modified":1707080788300},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"e2a8a09bfe47da26eab242a36f516e6c452c799a","modified":1707080788300},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"4677be4175da6800c0b3b8c1614e593f73df8831","modified":1707080788301},{"_id":"themes/butterfly/scripts/helpers/findArchiveLength.js","hash":"7caf549810f971c34196fb9deac2d992545bdff9","modified":1707080788299},{"_id":"themes/butterfly/scripts/helpers/series.js","hash":"821e973d41f7b3b64cde91e0e836ea49c43e3c06","modified":1707080788301},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"93229d44b35b9da92e647b89d6d3087085974a29","modified":1707080788301},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"418684993a3a3a2ac534257a2d9ecbcead6808c1","modified":1707080788302},{"_id":"themes/butterfly/scripts/tag/flink.js","hash":"ab62919fa567b95fbe14889517abda649991b1ee","modified":1707080788302},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"365db87ddfc582bf8c15cb440c48bed95106e4b1","modified":1707080788302},{"_id":"themes/butterfly/scripts/tag/inlineImg.js","hash":"512c68a22ae4a58d6a6b24b368a0c00c2ccb4fcb","modified":1707080788303},{"_id":"themes/butterfly/scripts/tag/label.js","hash":"19773218877281ccffed921431e87148413a7c20","modified":1707080788304},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"1acefc59ead75ebd8cafee36efc7da4fa426d088","modified":1707080788305},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"5c2a07df5874b5377540884e4da14dd21489378f","modified":1707080788304},{"_id":"themes/butterfly/scripts/tag/score.js","hash":"5cb273e95846874e3a58074074c501df23c5e912","modified":1707080788305},{"_id":"themes/butterfly/scripts/tag/series.js","hash":"830b1d592278b9f676df0cf9a91b1eeda2456aec","modified":1707080788305},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"ffc62222f8d7b4d44c1c0726c8a08824a2201039","modified":1707080788305},{"_id":"themes/butterfly/scripts/tag/timeline.js","hash":"4526c75e5bf84609d67e92b6af3524bcb278e852","modified":1707080788306},{"_id":"themes/butterfly/source/css/center-simple.css","hash":"42f3ecce9cb5248e509a49521f69012b021c4791","modified":1707080788319},{"_id":"themes/butterfly/source/css/index.styl","hash":"755490867fd8afe47d5cce24faea2ca172b0c4dd","modified":1707080788319},{"_id":"themes/butterfly/source/css/var.styl","hash":"152b6bd4b6285165541a71f5a1c913f8ee6a602b","modified":1707087424237},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1707080788321},{"_id":"themes/butterfly/source/img/favicon.png.bak","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1707080788324},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1707080788325},{"_id":"themes/butterfly/source/js/main.js","hash":"4b4f882a393cbf5b3dfc2b218608a09905f3e3db","modified":1707080788326},{"_id":"themes/butterfly/source/js/utils.js","hash":"8e6b48d294e7aeaba8ff6348c43b2271cf865547","modified":1707080788329},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"f8d2e3f31468991a7f5171cbfdb157dfb86d3372","modified":1707080788329},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"8aa8d799aedbfd811195b84a451bc4b6e2647c12","modified":1707080788247},{"_id":"themes/butterfly/source/img/favicon.png","hash":"51bcd70efd9dff6c640ea1fe8f62360c9c503fe2","modified":1707080788323},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"67e1c3b48e4ca7ee0b2c76d3ca7476b9883cf105","modified":1707080788248},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"ffb13539d343498b7d7093c546831a8bde90b6a2","modified":1707080788248},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"7df90c8e432e33716517ab918b0a125bc284041b","modified":1707080788249},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"95a37e92b39c44bcbea4be7e29ddb3921c5b8220","modified":1707080788250},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"5208fe1e75d97a05fd9bdd6cc53c59d8b741b94b","modified":1707080788251},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"3d492cfe645d37c94d30512e0b230b0a09913148","modified":1707080788251},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"e2e8d681f183f00ce5ee239c42d2e36b3744daad","modified":1707080788251},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"944d6e9dd50df3395f3a2c7ad9db667d50dea4ed","modified":1707080788252},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"31346a210f4f9912c5b29f51d8f659913492f388","modified":1707080788252},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"f61659aa457d1a2d1baa3a13157996cfac4d6609","modified":1707080788252},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"a5c7d362ae63474c1a4e3eb5cd09804b3684e984","modified":1707080788252},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"5de9a82032cdad1db3b868b797460921cd775fc2","modified":1707080788253},{"_id":"themes/butterfly/layout/includes/loading/fullpage-loading.pug","hash":"9e8c5788602b29a527ef35fe8a20076a5fa969bd","modified":1707080788253},{"_id":"themes/butterfly/layout/includes/loading/index.pug","hash":"131f344d68b4c241d6e03849b243ee792fcd3cea","modified":1707080788253},{"_id":"themes/butterfly/layout/includes/loading/pace.pug","hash":"6ab4e301c92586505d6cddce1b3ad23b7c79010d","modified":1707080788254},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"90554c2ca5ba946f4c02e1bc5fe2859cef1b1594","modified":1707080788254},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"50d1b08367f709e5416140043933e79cd8d77559","modified":1707080788254},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1707080788255},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"12c65c174d26a41821df9bad26cdf1087ec5b0ca","modified":1707080788255},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"f9ce83978b217a71a2eb8761dc14b09866faa3f4","modified":1707080788255},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"9621991359e22b14049346f1cf87bdedc94edf5a","modified":1707080788255},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"5574804fdea5edf7fd52aad2caf030614d5e7f2f","modified":1707080788257},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"a096ff8eb6b2a22395be881f827ff2a686ba5596","modified":1707080788258},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"c7cfade2b160380432c47eef4cd62273b6508c58","modified":1707080788260},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"1d39670ee6225f85f5c53bf5c84f3fd6e19290e8","modified":1707080788276},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"0f024e36b8116118233e10118714bde304e01e12","modified":1707080788279},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"12e57491e94fa00d953bbda9db0b6d6169e2358c","modified":1707080788279},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"ffb9ea15a2b54423cd4cd441e2d061b8233e9b58","modified":1707080788279},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"8044b9c18b34b019ffe26b7383e7e80356b5e4b5","modified":1707080788281},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"60dc48a7b5d89c2a49123c3fc5893ab9c57dd225","modified":1707080788281},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"be6ca012fda852882aed01d2767a8a90a3ca53f1","modified":1707117617430},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"86897010fe71503e239887fd8f6a4f5851737be9","modified":1707080788282},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"0a198d9615552d747cfc23ec89723b9d030f2367","modified":1707117586140},{"_id":"themes/butterfly/layout/includes/widget/card_bottom_self.pug","hash":"13dc8ce922e2e2332fe6ad5856ebb5dbf9ea4444","modified":1707080788282},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"d1a416d0a8a7916d0b1a41d73adc66f8c811e493","modified":1707080788282},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"7834bf7c711e739fd33cfcd0b53d151013b3d449","modified":1707080788282},{"_id":"themes/butterfly/layout/includes/widget/card_post_series.pug","hash":"3ec354778f6a4ac97fb64d5629c83b293ccceb5e","modified":1707080788283},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"3057a2f6f051355e35d3b205121af8735100eacf","modified":1707089913785},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"e5aac7b28ed4123d75797263c64e74ac547945bc","modified":1707080788283},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"eceb4420a64c720f0d2741e89d6229bbb3d87353","modified":1707080788283},{"_id":"themes/butterfly/layout/includes/widget/card_top_self.pug","hash":"ae67c6d4130a6c075058a9c1faea1648bcc6f83e","modified":1707080788284},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"35ce167c5a275211bfc1fa3d49adfde5b404d98f","modified":1707080788284},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"66f7a8b0cebc05c575ec3cb70b08d6854029d87a","modified":1707080788284},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"f19694a42dbe28eda4b39a1696e8fbcd277bc76c","modified":1707080788306},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"c8ff6ddd5bfe1190b7b8056b68ce41114fd79dcb","modified":1707080788307},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"4dcd468e4d11a0ac75406162678feffcd89fee00","modified":1707080788308},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"bcd384c8b2aa0390c9eb69ac1abbfd1240ce1da4","modified":1707080788309},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"fad650f88778b33a6358e38cf50dfafc0974d28f","modified":1707080788310},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"f9a5d3f1fc5ed0ed2ee4c1eaa58ed650d11ddebd","modified":1707080788310},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"134811b2d696f9ed2c0cd578f3886f1c60770c0a","modified":1707080788310},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"83a7a70eb0532ea9c4267939fe484af915fca01e","modified":1707080788310},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"029eebbdcb3c682780d1de629fa06858cbe9782b","modified":1707080788311},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"ac2aeee9926f75b2a0098efe1c114126987430f2","modified":1707080788311},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"fb9f78bfbb79579f1d752cb73fb6d25c8418e0fd","modified":1707080788311},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"f853075c1399be950107247b1fe79cdd086120e4","modified":1707080788311},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"d53de408cb27a2e704aba7f7402b7caebe0410d8","modified":1707080788312},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"d6cf26ffb8a0343eda1cde65b6b73b0ddbe8fcfc","modified":1707080788312},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"f845b9b4efdee750f70c023aab27432611f83059","modified":1707080788312},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"1ca53ee8c4a2dee23acba46c67e5a9f01c5d2eb5","modified":1707080788312},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"5556c9bf4f53a90cb9b4945cd76a8849bd67f3f3","modified":1707080788312},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"0db591a1f4ed5adcb8668a549bbee5c9d62682cf","modified":1707080788313},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"e549d24ad81a7d93326a509ff8dcfcc58c80729e","modified":1707080788313},{"_id":"themes/butterfly/source/css/_page/404.styl","hash":"50dbb9e6d98c71ffe16741b8c1b0c1b9771efd2b","modified":1707080788314},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"c9e98027f2dd730ce389c2047f62ebb748955fcf","modified":1707080788314},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"f01ee74948cedb44e53cd3bb1ef36b7d2778ede7","modified":1707080788314},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"4e320e16d49bc18085045937681f7331a1e243ca","modified":1707080788314},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"98d755b686ee833e9da10afaa40c4ec2bd66c19a","modified":1707080788315},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"d4ebc41b5c855dd75f47de7345d62f85ce7cf073","modified":1707080788315},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"580feb7e8b0822a1be48ac380f8c5c53b1523321","modified":1707080788315},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"649a054e73278b6724bd4dd9b94724791ec5c928","modified":1707080788315},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"20a3134e1302b62bfc881f4ec43f398267111f22","modified":1707080788316},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"a9bf2e1153a8486acd1ea8e0e528a07059ade17b","modified":1707080788316},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"45f0c32bdea117540f6b14ebac6450d7142bd710","modified":1707080788316},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"5cddbb5f4eae695a26685e415d821b523e0f17bf","modified":1707080788317},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"d76c38adf1d9c1279ef4241835667789f5b736e0","modified":1707080788317},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"ce489ca2e249e2a3cf71584e20d84bdb022e3475","modified":1707080788317},{"_id":"themes/butterfly/source/css/_tags/inlineImg.styl","hash":"df9d405c33a9a68946b530410f64096bcb72560c","modified":1707080788317},{"_id":"themes/butterfly/source/css/_tags/label.styl","hash":"66c59e193d794cdb02cca7bd1dc4aea5a19d7e84","modified":1707080788318},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"909bb5079b26b6ee68177919f522566503654058","modified":1707080788318},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"2d02e52b360f6e6cae47c293ae57ed78e2554663","modified":1707080788318},{"_id":"themes/butterfly/source/css/_tags/timeline.styl","hash":"f071156d439556e7463ed4bc61ceee87170d5d08","modified":1707080788318},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"2c18a1c9604af475b4749def8f1959df88d8b276","modified":1707080788319},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"108988d046da9a4716148df43b3975217c8ceaae","modified":1707080788327},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"e1f60ebac53a3f596fd0a4769b4f9275c48c6542","modified":1707080788328},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/abcjs.pug","hash":"f7299f9fef5bf94bb58c8cd3be8ee660ad2f9cd4","modified":1707080788260},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/index.pug","hash":"f58f1648d2d71311bafca4833f20b605bb5f18c8","modified":1707080788260},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/artalk.pug","hash":"5f86add36eeffbed61d11f08972a13697b4d9437","modified":1707080788262},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"c5f7081ca29db8cc80f808dfc29e36d5fa22fd7e","modified":1707080788263},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"0344477a2cf38698318ead2681c63ac12f01586e","modified":1707080788264},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"b2d274db84ef22fbd6d5ea8f4404821898934209","modified":1707080788265},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/remark42.pug","hash":"001e8be47854b891efe04013c240c38fed4185eb","modified":1707080788266},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"56c028ba0ea8fac19f0125114d765dfc56ce2b48","modified":1707080788267},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"39427e107230a10790972349c9dd4c4f31d55eb7","modified":1707080788268},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"3a5ccfc69bd8ccb4b8f3ce3502023f7914f2a022","modified":1707080788269},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"ddce8352b371a1fb426bdb6c33f587eb37a69647","modified":1707080788269},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"2fb098a7aa45010a8cd212dc0bd5308c6e7c63e3","modified":1707080788269},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"9b57a8e13de8fc51a5f550854e47164fd8ac1be8","modified":1707080788270},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"618e1b7f9204049b07beb9e1363c844a78a9ace3","modified":1707080788270},{"_id":"themes/butterfly/layout/includes/third-party/chat/messenger.pug","hash":"e39a9c37adf4cb15a2ba3b2cc65542ffea88650d","modified":1707080788270},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"dd61eca6e9a45f63e09bdefba89fe285a81ba096","modified":1707080788270},{"_id":"themes/butterfly/layout/includes/third-party/comments/artalk.pug","hash":"5d5b73920843ce858df6e3b03325d5d1f43cdab3","modified":1707080788271},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"62f16a602e57e5f7f7c5249dd37b42d436dc032a","modified":1707080788271},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"3bc4c1b91568561f0491bdac65b75aa0bfd01f27","modified":1707080788271},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"46aec6466959baec1c3d71a5dbc510fbeb00c91d","modified":1707080788272},{"_id":"themes/butterfly/layout/includes/third-party/comments/giscus.pug","hash":"2d7b0b09678adba09481e3152e0b32962677f650","modified":1707080788273},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"0d378ee8a671982a46213a4bfb223b4f3409aea9","modified":1707080788274},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"a9709905593d960954e2dd572f09f48a6c2b1ef7","modified":1707080788274},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"00ed91c52939b9675b316137f854d13684c895a6","modified":1707080788274},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"63cea2b5c8f7b59f5919379d61a2bb2ce8ed7623","modified":1707080788274},{"_id":"themes/butterfly/layout/includes/third-party/comments/remark42.pug","hash":"f15699abb8c7a255aabad0222ae53eee387c66a3","modified":1707080788275},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"894bf60ff5170cf1e4f276a8cedaf8301bceb824","modified":1707080788275},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"1995a654ba7ad62775a0a6e2922209cd1a85f2e3","modified":1707080788275},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"46865e3f52096acb07d0212174b4e8751b123aea","modified":1707080788275},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"ad7f1ee2e67deee0706e0838b5724dd37fc30a34","modified":1707080788275},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"b8ae5fd7d74e1edcef21f5004fc96147e064d219","modified":1707080788276},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"dfcbd9881be569ea420eff1a6b00e4f4dbe2138e","modified":1707080788276},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"fc072ac839401174b5d3cf9acd3b694246c23a55","modified":1707080788276},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"6b67982bb7a3713b5bffd6a23ba2810425c504d0","modified":1707080788277},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/artalk.pug","hash":"8c0d9a45bd2d83cc6d0e7bbfe172a09ff33c0178","modified":1707080788277},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"4fe8faf77b8420fc031ae1b54f78b2ece9fcc07e","modified":1707080788277},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"0330e3063ccf0ce40e4828b8d4fbef62362e8195","modified":1707080788277},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"44991d67abb81784c5cdb4337b2b9798fc4361e1","modified":1707080788278},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"b7b2aa5be4112065d5066c0f066f5f58721153bf","modified":1707080788278},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"42496c6a32406604178d24685408b77a40adc993","modified":1707080788278},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"9c3c109a12d2b6916e8b4965cca12f521510ead9","modified":1707080788279},{"_id":"themes/butterfly/layout/includes/third-party/search/docsearch.pug","hash":"b928be14d1b47a9fadb1bcc5f5072a7328752d4b","modified":1707080788280},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"a99a41334387ee9a46c6f8e8212331a29a10d159","modified":1707080788280},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"3335024ba91f55ccf3858571b7898f46881c455c","modified":1707080788280},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"85c92f8a7e44d7cd1c86f089a05be438535e5362","modified":1707080788280},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"3ba49cfe186e9ca05faf9f0d0113611ec47e9b38","modified":1707080788281},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"c7dd2b2ae9b23aa0a60fffd7df9e9f76ef52033e","modified":1707080788281},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"cf1fae641c927621a4df1be5ca4a853b9b526e23","modified":1707080788307},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"5972c61f5125068cbe0af279a0c93a54847fdc3b","modified":1707080788309},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"18804c58239d95798fa86d0597f32d7f7dd30051","modified":1707080788308},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"5dc2e0bcae9a54bfb9bdcc82d02ae5a3cf1ca97d","modified":1707080788309},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"25914321762e30aacc610bc4dfb9de3e1cb556a3","modified":1707080788309},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"4ec0642f2d5444acfab570a6f8c7868e7ff43fde","modified":1707080788278},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/remark42.pug","hash":"aa6061183a32472cd1882fce445a5049108a984b","modified":1707080788278},{"_id":"themes/butterfly/source/img/Head_Photo.png","hash":"8b4ecd3c491636d2f2ba67e445f5c3a77da50a58","modified":1707080788322},{"_id":"themes/butterfly/source/img/1.jpg","hash":"c6f722181ab4ebc16575563517c3dbb714ee6ecd","modified":1707080788320},{"_id":"themes/butterfly/source/img/background.jpg","hash":"26615e069c80113be017438251def87f8daeed29","modified":1707080788323}],"Category":[],"Data":[],"Page":[{"_content":"\n\n\n/* 一图流 */\n/* 页脚与头图透明 */\n#footer {\n    background: transparent !important;\n  }\n  #page-header {\n    background: transparent !important;\n  }\n  \n  /* 白天模式遮罩透明 */\n  #footer::before {\n    background: transparent !important;\n  }\n  #page-header::before {\n    background: transparent !important;\n  }\n  \n  /* 夜间模式遮罩透明 */\n  [data-theme=\"dark\"] #footer::before {\n    background: transparent !important;\n  }\n  [data-theme=\"dark\"] #page-header::before {\n    background: transparent !important;\n  }\n\n\n  /* 小冰分类分类磁铁黑夜模式适配 */\n/* 一般状态 */\n[data-theme=\"dark\"] .magnet_link_context {\n    background: #1e1e1e;\n    color: antiquewhite;\n  }\n  /* 鼠标悬浮状态 */\n  [data-theme=\"dark\"] .magnet_link_context:hover {\n    background: #3ecdf1;\n    color: #f2f2f2;\n  }\n\n  /* 一级菜单居中 */\n#nav .menus_items {\n    position: absolute !important;\n    width: fit-content !important;\n    left: 50% !important;\n    transform: translateX(-50%) !important;\n  }\n  /* 子菜单横向展示 */\n  #nav .menus_items .menus_item:hover .menus_item_child {\n    display: flex !important;\n  }\n  /* 这里的2是代表导航栏的第2个元素，即有子菜单的元素，可以按自己需求修改 */\n  .menus_items .menus_item:nth-child(3) .menus_item_child {\n    left: -125px;\n  }\n\n  /* 侧边栏个人信息卡片动态渐变色 */\n#aside-content > .card-widget.card-info {\n    background: linear-gradient(\n      -45deg,\n      #e8d8b9,\n      #eccec5,\n      #a3e9eb,\n      #bdbdf0,\n      #eec1ea\n    );\n    box-shadow: 0 0 5px rgb(66, 68, 68);\n    position: relative;\n    background-size: 400% 400%;\n    -webkit-animation: Gradient 10s ease infinite;\n    -moz-animation: Gradient 10s ease infinite;\n    animation: Gradient 10s ease infinite !important;\n  }\n  @-webkit-keyframes Gradient {\n    0% {\n      background-position: 0% 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0% 50%;\n    }\n  }\n  @-moz-keyframes Gradient {\n    0% {\n      background-position: 0% 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0% 50%;\n    }\n  }\n  @keyframes Gradient {\n    0% {\n      background-position: 0% 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0% 50%;\n    }\n  }\n  \n  /* 黑夜模式适配 */\n  [data-theme=\"dark\"] #aside-content > .card-widget.card-info {\n    background: #191919ee;\n  }\n  \n  /* 个人信息Follow me按钮 */\n  #aside-content > .card-widget.card-info > #card-info-btn {\n    background-color: #3eb8be;\n    border-radius: 8px;\n  }\n\n  :root {\n  --trans-light: rgba(255, 255, 255, 0.88);\n  --trans-dark: rgba(25, 25, 25, 0.88);\n  --border-style: 1px solid rgb(169, 169, 169);\n  --backdrop-filter: blur(5px) saturate(150%);\n}\n\n/* 首页文章卡片 */\n#recent-posts > .recent-post-item {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border-radius: 25px;\n  border: var(--border-style);\n}\n\n/* 首页侧栏卡片 */\n#aside-content .card-widget {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border-radius: 18px;\n  border: var(--border-style);\n}\n\n/* 文章页、归档页、普通页面 */\ndiv#post,\ndiv#page,\ndiv#archive {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border: var(--border-style);\n  border-radius: 20px;\n}\n\n/* 导航栏 */\n#page-header.nav-fixed #nav {\n  background: rgba(255, 255, 255, 0.75);\n  backdrop-filter: var(--backdrop-filter);\n}\n\n[data-theme=\"dark\"] #page-header.nav-fixed #nav {\n  background: rgba(0, 0, 0, 0.7) !important;\n}\n\n/* 夜间模式遮罩 */\n[data-theme=\"dark\"] #recent-posts > .recent-post-item,\n[data-theme=\"dark\"] #aside-content .card-widget,\n[data-theme=\"dark\"] div#post,\n[data-theme=\"dark\"] div#archive,\n[data-theme=\"dark\"] div#page {\n  background: var(--trans-dark);\n}\n\n\n/* 夜间模式页脚页头遮罩透明 */\n[data-theme=\"dark\"] #footer::before {\n  background: transparent !important;\n}\n[data-theme=\"dark\"] #page-header::before {\n  background: transparent !important;\n}\n\n/* 阅读模式 */\n.read-mode #aside-content .card-widget {\n  background: rgba(158, 204, 171, 0.5) !important;\n}\n.read-mode div#post {\n  background: rgba(158, 204, 171, 0.5) !important;\n}\n\n/* 夜间模式下的阅读模式 */\n[data-theme=\"dark\"] .read-mode #aside-content .card-widget {\n  background: rgba(25, 25, 25, 0.9) !important;\n  color: #ffffff;\n}\n[data-theme=\"dark\"] .read-mode div#post {\n  background: rgba(25, 25, 25, 0.9) !important;\n  color: #ffffff;\n}\n\n\n/* 页面调节 */\n:root {\n    --trans-light: rgba(255, 255, 255, 0.88);\n    --trans-dark: rgba(25, 25, 25, 0.88);\n    --border-style: 1px solid rgb(169, 169, 169);\n    --backdrop-filter: blur(5px) saturate(150%);\n  }\n  \n  /* 首页文章卡片 */\n  #recent-posts > .recent-post-item {\n    background: var(--trans-light);\n    backdrop-filter: var(--backdrop-filter);\n    border-radius: 25px;\n    border: var(--border-style);\n  }\n  \n  /* 首页侧栏卡片 */\n  #aside-content .card-widget {\n    background: var(--trans-light);\n    backdrop-filter: var(--backdrop-filter);\n    border-radius: 18px;\n    border: var(--border-style);\n  }\n  \n  /* 文章页、归档页、普通页面 */\n  div#post,\n  div#page,\n  div#archive {\n    background: var(--trans-light);\n    backdrop-filter: var(--backdrop-filter);\n    border: var(--border-style);\n    border-radius: 20px;\n  }\n  \n  /* 导航栏 */\n  #page-header.nav-fixed #nav {\n    background: rgba(255, 255, 255, 0.75);\n    backdrop-filter: var(--backdrop-filter);\n  }\n  \n  [data-theme=\"dark\"] #page-header.nav-fixed #nav {\n    background: rgba(0, 0, 0, 0.7) !important;\n  }\n  \n  /* 夜间模式遮罩 */\n  [data-theme=\"dark\"] #recent-posts > .recent-post-item,\n  [data-theme=\"dark\"] #aside-content .card-widget,\n  [data-theme=\"dark\"] div#post,\n  [data-theme=\"dark\"] div#archive,\n  [data-theme=\"dark\"] div#page {\n    background: var(--trans-dark);\n  }\n  \n  \n  /* 夜间模式页脚页头遮罩透明 */\n  [data-theme=\"dark\"] #footer::before {\n    background: transparent !important;\n  }\n  [data-theme=\"dark\"] #page-header::before {\n    background: transparent !important;\n  }\n  \n  /* 阅读模式 */\n  .read-mode #aside-content .card-widget {\n    background: rgba(158, 204, 171, 0.5) !important;\n  }\n  .read-mode div#post {\n    background: rgba(158, 204, 171, 0.5) !important;\n  }\n  \n  /* 夜间模式下的阅读模式 */\n  [data-theme=\"dark\"] .read-mode #aside-content .card-widget {\n    background: rgba(25, 25, 25, 0.9) !important;\n    color: #ffffff;\n  }\n  [data-theme=\"dark\"] .read-mode div#post {\n    background: rgba(25, 25, 25, 0.9) !important;\n    color: #ffffff;\n  }\n\n  /* 翻页按钮居中 */\n#pagination {\n  width: 100%;\n  margin: auto;\n}\n\n/* 自定义字体 */\n@font-face {\n  /* 为载入的字体取名字(随意) */\n  font-family: 'Zhi Mang Xing';\t\n  /* 字体文件地址(相对或者绝对路径都可以) */\n  src: url(https://fonts.googleapis.com/css);\n  /* 定义加粗样式(加粗多少) */\n  font-weight: normal;\n  /* 定义字体样式(斜体/非斜体) */\n  font-style: normal;\n  /* 定义显示样式 */\n  font-display: block;\n}\n\n@font-face {\n  font-family: 'Sacramento';\n  font-style: normal;\n  font-weight: 400;\n  src: url(https://fonts.googleapis.com/css?family);\n  unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n\n/* 黑夜霓虹灯 */\n/* 夜间模式菜单栏发光字 */\n[data-theme=\"dark\"] #nav .site-page,\n[data-theme=\"dark\"] #nav .menus_items .menus_item .menus_item_child li a {\n  text-shadow: 0 0 2px var(--theme-color) !important;\n}\n\n/* 手机端适配 */\n[data-theme=\"dark\"] #sidebar #sidebar-menus .menus_items .site-page {\n  text-shadow: 0 0 2px var(--theme-color) !important;\n}\n\n/* 闪烁变动颜色连续渐变 */\n#site-name,\n#site-title,\n#site-subtitle,\n#post-info,\n.author-info__name,\n.author-info__description {\n  transition: text-shadow 1s linear !important;\n}\n\n/* 黑夜霓虹灯2.0 */\n/* 日间模式不生效 */\n[data-theme=\"light\"] #site-name,\n[data-theme=\"light\"] #site-title,\n[data-theme=\"light\"] #site-subtitle,\n[data-theme=\"light\"] #post-info {\n  animation: none;\n}\n/* 夜间模式生效 */\n[data-theme=\"dark\"] #site-name,\n[data-theme=\"dark\"] #site-title {\n  animation: light_15px 10s linear infinite;\n}\n[data-theme=\"dark\"] #site-subtitle {\n  animation: light_10px 10s linear infinite;\n}\n[data-theme=\"dark\"] #post-info {\n  animation: light_5px 10s linear infinite;\n}\n/* 关键帧描述 */\n@keyframes light_15px {\n  0% {\n    text-shadow: #5636ed 0 0 15px;\n  }\n  12.5% {\n    text-shadow: #11ee5e 0 0 15px;\n  }\n  25% {\n    text-shadow: #f14747 0 0 15px;\n  }\n  37.5% {\n    text-shadow: #f1a247 0 0 15px;\n  }\n  50% {\n    text-shadow: #f1ee47 0 0 15px;\n  }\n  50% {\n    text-shadow: #b347f1 0 0 15px;\n  }\n  62.5% {\n    text-shadow: #002afa 0 0 15px;\n  }\n  75% {\n    text-shadow: #ed709b 0 0 15px;\n  }\n  87.5% {\n    text-shadow: #39c5bb 0 0 15px;\n  }\n  100% {\n    text-shadow: #5636ed 0 0 15px;\n  }\n}\n\n@keyframes light_10px {\n  0% {\n    text-shadow: #5636ed 0 0 10px;\n  }\n  12.5% {\n    text-shadow: #11ee5e 0 0 10px;\n  }\n  25% {\n    text-shadow: #f14747 0 0 10px;\n  }\n  37.5% {\n    text-shadow: #f1a247 0 0 10px;\n  }\n  50% {\n    text-shadow: #f1ee47 0 0 10px;\n  }\n  50% {\n    text-shadow: #b347f1 0 0 10px;\n  }\n  62.5% {\n    text-shadow: #002afa 0 0 10px;\n  }\n  75% {\n    text-shadow: #ed709b 0 0 10px;\n  }\n  87.5% {\n    text-shadow: #39c5bb 0 0 10px;\n  }\n  100% {\n    text-shadow: #5636ed 0 0 10px;\n  }\n}\n\n@keyframes light_5px {\n  0% {\n    text-shadow: #5636ed 0 0 5px;\n  }\n  12.5% {\n    text-shadow: #11ee5e 0 0 5px;\n  }\n  25% {\n    text-shadow: #f14747 0 0 5px;\n  }\n  37.5% {\n    text-shadow: #f1a247 0 0 15px;\n  }\n  50% {\n    text-shadow: #f1ee47 0 0 5px;\n  }\n  50% {\n    text-shadow: #b347f1 0 0 5px;\n  }\n  62.5% {\n    text-shadow: #002afa 0 0 5px;\n  }\n  75% {\n    text-shadow: #ed709b 0 0 5px;\n  }\n  87.5% {\n    text-shadow: #39c5bb 0 0 5px;\n  }\n  100% {\n    text-shadow: #5636ed 0 0 5px;\n  }\n}\n\n/* 页面样式调节 */\n:root {\n  --trans-light: rgba(255, 255, 255, 0.88);\n  --trans-dark: rgba(25, 25, 25, 0.88);\n  --border-style: 1px solid rgb(169, 169, 169);\n  --backdrop-filter: blur(5px) saturate(150%);\n}\n\n/* 首页文章卡片 */\n#recent-posts > .recent-post-item {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border-radius: 25px;\n  border: var(--border-style);\n}\n\n/* 首页侧栏卡片 */\n#aside-content .card-widget {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border-radius: 18px;\n  border: var(--border-style);\n}\n\n/* 文章页、归档页、普通页面 */\ndiv#post,\ndiv#page,\ndiv#archive {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border: var(--border-style);\n  border-radius: 20px;\n}\n\n/* 导航栏 */\n#page-header.nav-fixed #nav {\n  background: rgba(255, 255, 255, 0.75);\n  backdrop-filter: var(--backdrop-filter);\n}\n\n[data-theme=\"dark\"] #page-header.nav-fixed #nav {\n  background: rgba(0, 0, 0, 0.7) !important;\n}\n\n/* 夜间模式遮罩 */\n[data-theme=\"dark\"] #recent-posts > .recent-post-item,\n[data-theme=\"dark\"] #aside-content .card-widget,\n[data-theme=\"dark\"] div#post,\n[data-theme=\"dark\"] div#archive,\n[data-theme=\"dark\"] div#page {\n  background: var(--trans-dark);\n}\n\n\n/* 夜间模式页脚页头遮罩透明 */\n[data-theme=\"dark\"] #footer::before {\n  background: transparent !important;\n}\n[data-theme=\"dark\"] #page-header::before {\n  background: transparent !important;\n}\n\n/* 阅读模式 */\n.read-mode #aside-content .card-widget {\n  background: rgba(158, 204, 171, 0.5) !important;\n}\n.read-mode div#post {\n  background: rgba(158, 204, 171, 0.5) !important;\n}\n\n/* 夜间模式下的阅读模式 */\n[data-theme=\"dark\"] .read-mode #aside-content .card-widget {\n  background: rgba(25, 25, 25, 0.9) !important;\n  color: #ffffff;\n}\n[data-theme=\"dark\"] .read-mode div#post {\n  background: rgba(25, 25, 25, 0.9) !important;\n  color: #ffffff;\n}\n\n/*哔哩哔哩视频适配*/\n.aspect-ratio {\n  position: relative;\n  width: 90%;\n  height: auto;\n  padding-bottom: 75%;\n  margin: 3% auto;\n  text-align: center;\n}\n.aspect-ratio iframe {\n  position: absolute;\n  width: 100%;\n  height: 86%;\n  left: 0;\n  top: 0;\n}\n\n/* 挂绳小猫 */\n\nbody::-webkit-scrollbar {\n  width: 0;\n}\n\n.neko {\n  width: 64px;\n  height: 64px;\n  background-image: url(\"https://bu.dusays.com/2022/07/20/62d812db74be9.png\");\n  position: absolute;\n  right: 32px;\n  background-repeat: no-repeat;\n  background-size: contain;\n  transform: translateX(50%);\n  cursor: pointer;\n  font-family: tzy;\n  font-weight: 600;\n  font-size: 16px;\n  color: #6f42c1;\n  display: none;\n}\n\n.neko::after {\n  display: none;\n  width: 100px;\n  height: 100px;\n  background-image: url(\"https://bu.dusays.com/2022/07/20/62d812d95e6f5.png\");\n  background-size: contain;\n  z-index: 9999;\n  position: absolute;\n  right: 50%;\n  text-align: center;\n  line-height: 100px;\n  top: -115%;\n\n}\n\n.neko.showMsg::after {\n  content: attr(data-msg);\n  display: block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.neko:hover::after {\n  content: attr(data-msg);\n  display: block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.neko.fontColor::after {\n  color: #333;\n}\n\n/**\n* @description: 滚动条样式  跟猫二选一\n*/\n@media screen and (max-width:992px) {\n  ::-webkit-scrollbar {\n      width: 8px !important;\n      height: 8px !important\n  }\n\n  ::-webkit-scrollbar-track {\n      border-radius: 2em;\n  }\n\n  ::-webkit-scrollbar-thumb {\n      background-color: rgb(255 255 255 / .3);\n      background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent);\n      border-radius: 2em\n  }\n\n  ::-webkit-scrollbar-corner {\n      background-color: transparent\n  }\n}\n\n/* 右边按钮阅读进度 */\n/* 返回顶部 */\n\nbutton#go-up #percent {\n  display: none;\n  font-weight: bold;\n  font-size: 15px !important;\n}\n\nbutton#go-up span {\n  font-size: 12px!important;\n  margin-right: -1px;\n}\n\n/* 鼠标滑动到按钮上时显示返回顶部图标 */\nbutton#go-up:hover i {\n  display: block !important;\n}\n\nbutton#go-up:hover #percent {\n  display: none !important;\n}\n\n/* 用户地理位置欢迎信息 */\n:root {\n  --ichika-color: #3c6ae7;\n}\n\n/* 公告&欢迎页 */\n.card-announcement {\n  line-height:30px;\n  font-size:16px;\n}\n\n.card-announcement .item-headline span{\n  margin-left:0!important;\n}\n\n.card-announcement span{\n  font-weight:bold;\n  font-size:20px!important;\n  color:var(--ichika-color);\n}\n\n","source":"css/custom.css","raw":"\n\n\n/* 一图流 */\n/* 页脚与头图透明 */\n#footer {\n    background: transparent !important;\n  }\n  #page-header {\n    background: transparent !important;\n  }\n  \n  /* 白天模式遮罩透明 */\n  #footer::before {\n    background: transparent !important;\n  }\n  #page-header::before {\n    background: transparent !important;\n  }\n  \n  /* 夜间模式遮罩透明 */\n  [data-theme=\"dark\"] #footer::before {\n    background: transparent !important;\n  }\n  [data-theme=\"dark\"] #page-header::before {\n    background: transparent !important;\n  }\n\n\n  /* 小冰分类分类磁铁黑夜模式适配 */\n/* 一般状态 */\n[data-theme=\"dark\"] .magnet_link_context {\n    background: #1e1e1e;\n    color: antiquewhite;\n  }\n  /* 鼠标悬浮状态 */\n  [data-theme=\"dark\"] .magnet_link_context:hover {\n    background: #3ecdf1;\n    color: #f2f2f2;\n  }\n\n  /* 一级菜单居中 */\n#nav .menus_items {\n    position: absolute !important;\n    width: fit-content !important;\n    left: 50% !important;\n    transform: translateX(-50%) !important;\n  }\n  /* 子菜单横向展示 */\n  #nav .menus_items .menus_item:hover .menus_item_child {\n    display: flex !important;\n  }\n  /* 这里的2是代表导航栏的第2个元素，即有子菜单的元素，可以按自己需求修改 */\n  .menus_items .menus_item:nth-child(3) .menus_item_child {\n    left: -125px;\n  }\n\n  /* 侧边栏个人信息卡片动态渐变色 */\n#aside-content > .card-widget.card-info {\n    background: linear-gradient(\n      -45deg,\n      #e8d8b9,\n      #eccec5,\n      #a3e9eb,\n      #bdbdf0,\n      #eec1ea\n    );\n    box-shadow: 0 0 5px rgb(66, 68, 68);\n    position: relative;\n    background-size: 400% 400%;\n    -webkit-animation: Gradient 10s ease infinite;\n    -moz-animation: Gradient 10s ease infinite;\n    animation: Gradient 10s ease infinite !important;\n  }\n  @-webkit-keyframes Gradient {\n    0% {\n      background-position: 0% 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0% 50%;\n    }\n  }\n  @-moz-keyframes Gradient {\n    0% {\n      background-position: 0% 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0% 50%;\n    }\n  }\n  @keyframes Gradient {\n    0% {\n      background-position: 0% 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0% 50%;\n    }\n  }\n  \n  /* 黑夜模式适配 */\n  [data-theme=\"dark\"] #aside-content > .card-widget.card-info {\n    background: #191919ee;\n  }\n  \n  /* 个人信息Follow me按钮 */\n  #aside-content > .card-widget.card-info > #card-info-btn {\n    background-color: #3eb8be;\n    border-radius: 8px;\n  }\n\n  :root {\n  --trans-light: rgba(255, 255, 255, 0.88);\n  --trans-dark: rgba(25, 25, 25, 0.88);\n  --border-style: 1px solid rgb(169, 169, 169);\n  --backdrop-filter: blur(5px) saturate(150%);\n}\n\n/* 首页文章卡片 */\n#recent-posts > .recent-post-item {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border-radius: 25px;\n  border: var(--border-style);\n}\n\n/* 首页侧栏卡片 */\n#aside-content .card-widget {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border-radius: 18px;\n  border: var(--border-style);\n}\n\n/* 文章页、归档页、普通页面 */\ndiv#post,\ndiv#page,\ndiv#archive {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border: var(--border-style);\n  border-radius: 20px;\n}\n\n/* 导航栏 */\n#page-header.nav-fixed #nav {\n  background: rgba(255, 255, 255, 0.75);\n  backdrop-filter: var(--backdrop-filter);\n}\n\n[data-theme=\"dark\"] #page-header.nav-fixed #nav {\n  background: rgba(0, 0, 0, 0.7) !important;\n}\n\n/* 夜间模式遮罩 */\n[data-theme=\"dark\"] #recent-posts > .recent-post-item,\n[data-theme=\"dark\"] #aside-content .card-widget,\n[data-theme=\"dark\"] div#post,\n[data-theme=\"dark\"] div#archive,\n[data-theme=\"dark\"] div#page {\n  background: var(--trans-dark);\n}\n\n\n/* 夜间模式页脚页头遮罩透明 */\n[data-theme=\"dark\"] #footer::before {\n  background: transparent !important;\n}\n[data-theme=\"dark\"] #page-header::before {\n  background: transparent !important;\n}\n\n/* 阅读模式 */\n.read-mode #aside-content .card-widget {\n  background: rgba(158, 204, 171, 0.5) !important;\n}\n.read-mode div#post {\n  background: rgba(158, 204, 171, 0.5) !important;\n}\n\n/* 夜间模式下的阅读模式 */\n[data-theme=\"dark\"] .read-mode #aside-content .card-widget {\n  background: rgba(25, 25, 25, 0.9) !important;\n  color: #ffffff;\n}\n[data-theme=\"dark\"] .read-mode div#post {\n  background: rgba(25, 25, 25, 0.9) !important;\n  color: #ffffff;\n}\n\n\n/* 页面调节 */\n:root {\n    --trans-light: rgba(255, 255, 255, 0.88);\n    --trans-dark: rgba(25, 25, 25, 0.88);\n    --border-style: 1px solid rgb(169, 169, 169);\n    --backdrop-filter: blur(5px) saturate(150%);\n  }\n  \n  /* 首页文章卡片 */\n  #recent-posts > .recent-post-item {\n    background: var(--trans-light);\n    backdrop-filter: var(--backdrop-filter);\n    border-radius: 25px;\n    border: var(--border-style);\n  }\n  \n  /* 首页侧栏卡片 */\n  #aside-content .card-widget {\n    background: var(--trans-light);\n    backdrop-filter: var(--backdrop-filter);\n    border-radius: 18px;\n    border: var(--border-style);\n  }\n  \n  /* 文章页、归档页、普通页面 */\n  div#post,\n  div#page,\n  div#archive {\n    background: var(--trans-light);\n    backdrop-filter: var(--backdrop-filter);\n    border: var(--border-style);\n    border-radius: 20px;\n  }\n  \n  /* 导航栏 */\n  #page-header.nav-fixed #nav {\n    background: rgba(255, 255, 255, 0.75);\n    backdrop-filter: var(--backdrop-filter);\n  }\n  \n  [data-theme=\"dark\"] #page-header.nav-fixed #nav {\n    background: rgba(0, 0, 0, 0.7) !important;\n  }\n  \n  /* 夜间模式遮罩 */\n  [data-theme=\"dark\"] #recent-posts > .recent-post-item,\n  [data-theme=\"dark\"] #aside-content .card-widget,\n  [data-theme=\"dark\"] div#post,\n  [data-theme=\"dark\"] div#archive,\n  [data-theme=\"dark\"] div#page {\n    background: var(--trans-dark);\n  }\n  \n  \n  /* 夜间模式页脚页头遮罩透明 */\n  [data-theme=\"dark\"] #footer::before {\n    background: transparent !important;\n  }\n  [data-theme=\"dark\"] #page-header::before {\n    background: transparent !important;\n  }\n  \n  /* 阅读模式 */\n  .read-mode #aside-content .card-widget {\n    background: rgba(158, 204, 171, 0.5) !important;\n  }\n  .read-mode div#post {\n    background: rgba(158, 204, 171, 0.5) !important;\n  }\n  \n  /* 夜间模式下的阅读模式 */\n  [data-theme=\"dark\"] .read-mode #aside-content .card-widget {\n    background: rgba(25, 25, 25, 0.9) !important;\n    color: #ffffff;\n  }\n  [data-theme=\"dark\"] .read-mode div#post {\n    background: rgba(25, 25, 25, 0.9) !important;\n    color: #ffffff;\n  }\n\n  /* 翻页按钮居中 */\n#pagination {\n  width: 100%;\n  margin: auto;\n}\n\n/* 自定义字体 */\n@font-face {\n  /* 为载入的字体取名字(随意) */\n  font-family: 'Zhi Mang Xing';\t\n  /* 字体文件地址(相对或者绝对路径都可以) */\n  src: url(https://fonts.googleapis.com/css);\n  /* 定义加粗样式(加粗多少) */\n  font-weight: normal;\n  /* 定义字体样式(斜体/非斜体) */\n  font-style: normal;\n  /* 定义显示样式 */\n  font-display: block;\n}\n\n@font-face {\n  font-family: 'Sacramento';\n  font-style: normal;\n  font-weight: 400;\n  src: url(https://fonts.googleapis.com/css?family);\n  unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n\n/* 黑夜霓虹灯 */\n/* 夜间模式菜单栏发光字 */\n[data-theme=\"dark\"] #nav .site-page,\n[data-theme=\"dark\"] #nav .menus_items .menus_item .menus_item_child li a {\n  text-shadow: 0 0 2px var(--theme-color) !important;\n}\n\n/* 手机端适配 */\n[data-theme=\"dark\"] #sidebar #sidebar-menus .menus_items .site-page {\n  text-shadow: 0 0 2px var(--theme-color) !important;\n}\n\n/* 闪烁变动颜色连续渐变 */\n#site-name,\n#site-title,\n#site-subtitle,\n#post-info,\n.author-info__name,\n.author-info__description {\n  transition: text-shadow 1s linear !important;\n}\n\n/* 黑夜霓虹灯2.0 */\n/* 日间模式不生效 */\n[data-theme=\"light\"] #site-name,\n[data-theme=\"light\"] #site-title,\n[data-theme=\"light\"] #site-subtitle,\n[data-theme=\"light\"] #post-info {\n  animation: none;\n}\n/* 夜间模式生效 */\n[data-theme=\"dark\"] #site-name,\n[data-theme=\"dark\"] #site-title {\n  animation: light_15px 10s linear infinite;\n}\n[data-theme=\"dark\"] #site-subtitle {\n  animation: light_10px 10s linear infinite;\n}\n[data-theme=\"dark\"] #post-info {\n  animation: light_5px 10s linear infinite;\n}\n/* 关键帧描述 */\n@keyframes light_15px {\n  0% {\n    text-shadow: #5636ed 0 0 15px;\n  }\n  12.5% {\n    text-shadow: #11ee5e 0 0 15px;\n  }\n  25% {\n    text-shadow: #f14747 0 0 15px;\n  }\n  37.5% {\n    text-shadow: #f1a247 0 0 15px;\n  }\n  50% {\n    text-shadow: #f1ee47 0 0 15px;\n  }\n  50% {\n    text-shadow: #b347f1 0 0 15px;\n  }\n  62.5% {\n    text-shadow: #002afa 0 0 15px;\n  }\n  75% {\n    text-shadow: #ed709b 0 0 15px;\n  }\n  87.5% {\n    text-shadow: #39c5bb 0 0 15px;\n  }\n  100% {\n    text-shadow: #5636ed 0 0 15px;\n  }\n}\n\n@keyframes light_10px {\n  0% {\n    text-shadow: #5636ed 0 0 10px;\n  }\n  12.5% {\n    text-shadow: #11ee5e 0 0 10px;\n  }\n  25% {\n    text-shadow: #f14747 0 0 10px;\n  }\n  37.5% {\n    text-shadow: #f1a247 0 0 10px;\n  }\n  50% {\n    text-shadow: #f1ee47 0 0 10px;\n  }\n  50% {\n    text-shadow: #b347f1 0 0 10px;\n  }\n  62.5% {\n    text-shadow: #002afa 0 0 10px;\n  }\n  75% {\n    text-shadow: #ed709b 0 0 10px;\n  }\n  87.5% {\n    text-shadow: #39c5bb 0 0 10px;\n  }\n  100% {\n    text-shadow: #5636ed 0 0 10px;\n  }\n}\n\n@keyframes light_5px {\n  0% {\n    text-shadow: #5636ed 0 0 5px;\n  }\n  12.5% {\n    text-shadow: #11ee5e 0 0 5px;\n  }\n  25% {\n    text-shadow: #f14747 0 0 5px;\n  }\n  37.5% {\n    text-shadow: #f1a247 0 0 15px;\n  }\n  50% {\n    text-shadow: #f1ee47 0 0 5px;\n  }\n  50% {\n    text-shadow: #b347f1 0 0 5px;\n  }\n  62.5% {\n    text-shadow: #002afa 0 0 5px;\n  }\n  75% {\n    text-shadow: #ed709b 0 0 5px;\n  }\n  87.5% {\n    text-shadow: #39c5bb 0 0 5px;\n  }\n  100% {\n    text-shadow: #5636ed 0 0 5px;\n  }\n}\n\n/* 页面样式调节 */\n:root {\n  --trans-light: rgba(255, 255, 255, 0.88);\n  --trans-dark: rgba(25, 25, 25, 0.88);\n  --border-style: 1px solid rgb(169, 169, 169);\n  --backdrop-filter: blur(5px) saturate(150%);\n}\n\n/* 首页文章卡片 */\n#recent-posts > .recent-post-item {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border-radius: 25px;\n  border: var(--border-style);\n}\n\n/* 首页侧栏卡片 */\n#aside-content .card-widget {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border-radius: 18px;\n  border: var(--border-style);\n}\n\n/* 文章页、归档页、普通页面 */\ndiv#post,\ndiv#page,\ndiv#archive {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border: var(--border-style);\n  border-radius: 20px;\n}\n\n/* 导航栏 */\n#page-header.nav-fixed #nav {\n  background: rgba(255, 255, 255, 0.75);\n  backdrop-filter: var(--backdrop-filter);\n}\n\n[data-theme=\"dark\"] #page-header.nav-fixed #nav {\n  background: rgba(0, 0, 0, 0.7) !important;\n}\n\n/* 夜间模式遮罩 */\n[data-theme=\"dark\"] #recent-posts > .recent-post-item,\n[data-theme=\"dark\"] #aside-content .card-widget,\n[data-theme=\"dark\"] div#post,\n[data-theme=\"dark\"] div#archive,\n[data-theme=\"dark\"] div#page {\n  background: var(--trans-dark);\n}\n\n\n/* 夜间模式页脚页头遮罩透明 */\n[data-theme=\"dark\"] #footer::before {\n  background: transparent !important;\n}\n[data-theme=\"dark\"] #page-header::before {\n  background: transparent !important;\n}\n\n/* 阅读模式 */\n.read-mode #aside-content .card-widget {\n  background: rgba(158, 204, 171, 0.5) !important;\n}\n.read-mode div#post {\n  background: rgba(158, 204, 171, 0.5) !important;\n}\n\n/* 夜间模式下的阅读模式 */\n[data-theme=\"dark\"] .read-mode #aside-content .card-widget {\n  background: rgba(25, 25, 25, 0.9) !important;\n  color: #ffffff;\n}\n[data-theme=\"dark\"] .read-mode div#post {\n  background: rgba(25, 25, 25, 0.9) !important;\n  color: #ffffff;\n}\n\n/*哔哩哔哩视频适配*/\n.aspect-ratio {\n  position: relative;\n  width: 90%;\n  height: auto;\n  padding-bottom: 75%;\n  margin: 3% auto;\n  text-align: center;\n}\n.aspect-ratio iframe {\n  position: absolute;\n  width: 100%;\n  height: 86%;\n  left: 0;\n  top: 0;\n}\n\n/* 挂绳小猫 */\n\nbody::-webkit-scrollbar {\n  width: 0;\n}\n\n.neko {\n  width: 64px;\n  height: 64px;\n  background-image: url(\"https://bu.dusays.com/2022/07/20/62d812db74be9.png\");\n  position: absolute;\n  right: 32px;\n  background-repeat: no-repeat;\n  background-size: contain;\n  transform: translateX(50%);\n  cursor: pointer;\n  font-family: tzy;\n  font-weight: 600;\n  font-size: 16px;\n  color: #6f42c1;\n  display: none;\n}\n\n.neko::after {\n  display: none;\n  width: 100px;\n  height: 100px;\n  background-image: url(\"https://bu.dusays.com/2022/07/20/62d812d95e6f5.png\");\n  background-size: contain;\n  z-index: 9999;\n  position: absolute;\n  right: 50%;\n  text-align: center;\n  line-height: 100px;\n  top: -115%;\n\n}\n\n.neko.showMsg::after {\n  content: attr(data-msg);\n  display: block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.neko:hover::after {\n  content: attr(data-msg);\n  display: block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.neko.fontColor::after {\n  color: #333;\n}\n\n/**\n* @description: 滚动条样式  跟猫二选一\n*/\n@media screen and (max-width:992px) {\n  ::-webkit-scrollbar {\n      width: 8px !important;\n      height: 8px !important\n  }\n\n  ::-webkit-scrollbar-track {\n      border-radius: 2em;\n  }\n\n  ::-webkit-scrollbar-thumb {\n      background-color: rgb(255 255 255 / .3);\n      background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent);\n      border-radius: 2em\n  }\n\n  ::-webkit-scrollbar-corner {\n      background-color: transparent\n  }\n}\n\n/* 右边按钮阅读进度 */\n/* 返回顶部 */\n\nbutton#go-up #percent {\n  display: none;\n  font-weight: bold;\n  font-size: 15px !important;\n}\n\nbutton#go-up span {\n  font-size: 12px!important;\n  margin-right: -1px;\n}\n\n/* 鼠标滑动到按钮上时显示返回顶部图标 */\nbutton#go-up:hover i {\n  display: block !important;\n}\n\nbutton#go-up:hover #percent {\n  display: none !important;\n}\n\n/* 用户地理位置欢迎信息 */\n:root {\n  --ichika-color: #3c6ae7;\n}\n\n/* 公告&欢迎页 */\n.card-announcement {\n  line-height:30px;\n  font-size:16px;\n}\n\n.card-announcement .item-headline span{\n  margin-left:0!important;\n}\n\n.card-announcement span{\n  font-weight:bold;\n  font-size:20px!important;\n  color:var(--ichika-color);\n}\n\n","date":"2024-03-19T04:21:46.369Z","updated":"2024-03-19T04:21:46.369Z","path":"css/custom.css","layout":"false","title":"","comments":1,"_id":"cltxxet9v00006cdsc8agaktb","content":"\n\n\n/* 一图流 */\n/* 页脚与头图透明 */\n#footer {\n    background: transparent !important;\n  }\n  #page-header {\n    background: transparent !important;\n  }\n  \n  /* 白天模式遮罩透明 */\n  #footer::before {\n    background: transparent !important;\n  }\n  #page-header::before {\n    background: transparent !important;\n  }\n  \n  /* 夜间模式遮罩透明 */\n  [data-theme=\"dark\"] #footer::before {\n    background: transparent !important;\n  }\n  [data-theme=\"dark\"] #page-header::before {\n    background: transparent !important;\n  }\n\n\n  /* 小冰分类分类磁铁黑夜模式适配 */\n/* 一般状态 */\n[data-theme=\"dark\"] .magnet_link_context {\n    background: #1e1e1e;\n    color: antiquewhite;\n  }\n  /* 鼠标悬浮状态 */\n  [data-theme=\"dark\"] .magnet_link_context:hover {\n    background: #3ecdf1;\n    color: #f2f2f2;\n  }\n\n  /* 一级菜单居中 */\n#nav .menus_items {\n    position: absolute !important;\n    width: fit-content !important;\n    left: 50% !important;\n    transform: translateX(-50%) !important;\n  }\n  /* 子菜单横向展示 */\n  #nav .menus_items .menus_item:hover .menus_item_child {\n    display: flex !important;\n  }\n  /* 这里的2是代表导航栏的第2个元素，即有子菜单的元素，可以按自己需求修改 */\n  .menus_items .menus_item:nth-child(3) .menus_item_child {\n    left: -125px;\n  }\n\n  /* 侧边栏个人信息卡片动态渐变色 */\n#aside-content > .card-widget.card-info {\n    background: linear-gradient(\n      -45deg,\n      #e8d8b9,\n      #eccec5,\n      #a3e9eb,\n      #bdbdf0,\n      #eec1ea\n    );\n    box-shadow: 0 0 5px rgb(66, 68, 68);\n    position: relative;\n    background-size: 400% 400%;\n    -webkit-animation: Gradient 10s ease infinite;\n    -moz-animation: Gradient 10s ease infinite;\n    animation: Gradient 10s ease infinite !important;\n  }\n  @-webkit-keyframes Gradient {\n    0% {\n      background-position: 0% 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0% 50%;\n    }\n  }\n  @-moz-keyframes Gradient {\n    0% {\n      background-position: 0% 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0% 50%;\n    }\n  }\n  @keyframes Gradient {\n    0% {\n      background-position: 0% 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0% 50%;\n    }\n  }\n  \n  /* 黑夜模式适配 */\n  [data-theme=\"dark\"] #aside-content > .card-widget.card-info {\n    background: #191919ee;\n  }\n  \n  /* 个人信息Follow me按钮 */\n  #aside-content > .card-widget.card-info > #card-info-btn {\n    background-color: #3eb8be;\n    border-radius: 8px;\n  }\n\n  :root {\n  --trans-light: rgba(255, 255, 255, 0.88);\n  --trans-dark: rgba(25, 25, 25, 0.88);\n  --border-style: 1px solid rgb(169, 169, 169);\n  --backdrop-filter: blur(5px) saturate(150%);\n}\n\n/* 首页文章卡片 */\n#recent-posts > .recent-post-item {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border-radius: 25px;\n  border: var(--border-style);\n}\n\n/* 首页侧栏卡片 */\n#aside-content .card-widget {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border-radius: 18px;\n  border: var(--border-style);\n}\n\n/* 文章页、归档页、普通页面 */\ndiv#post,\ndiv#page,\ndiv#archive {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border: var(--border-style);\n  border-radius: 20px;\n}\n\n/* 导航栏 */\n#page-header.nav-fixed #nav {\n  background: rgba(255, 255, 255, 0.75);\n  backdrop-filter: var(--backdrop-filter);\n}\n\n[data-theme=\"dark\"] #page-header.nav-fixed #nav {\n  background: rgba(0, 0, 0, 0.7) !important;\n}\n\n/* 夜间模式遮罩 */\n[data-theme=\"dark\"] #recent-posts > .recent-post-item,\n[data-theme=\"dark\"] #aside-content .card-widget,\n[data-theme=\"dark\"] div#post,\n[data-theme=\"dark\"] div#archive,\n[data-theme=\"dark\"] div#page {\n  background: var(--trans-dark);\n}\n\n\n/* 夜间模式页脚页头遮罩透明 */\n[data-theme=\"dark\"] #footer::before {\n  background: transparent !important;\n}\n[data-theme=\"dark\"] #page-header::before {\n  background: transparent !important;\n}\n\n/* 阅读模式 */\n.read-mode #aside-content .card-widget {\n  background: rgba(158, 204, 171, 0.5) !important;\n}\n.read-mode div#post {\n  background: rgba(158, 204, 171, 0.5) !important;\n}\n\n/* 夜间模式下的阅读模式 */\n[data-theme=\"dark\"] .read-mode #aside-content .card-widget {\n  background: rgba(25, 25, 25, 0.9) !important;\n  color: #ffffff;\n}\n[data-theme=\"dark\"] .read-mode div#post {\n  background: rgba(25, 25, 25, 0.9) !important;\n  color: #ffffff;\n}\n\n\n/* 页面调节 */\n:root {\n    --trans-light: rgba(255, 255, 255, 0.88);\n    --trans-dark: rgba(25, 25, 25, 0.88);\n    --border-style: 1px solid rgb(169, 169, 169);\n    --backdrop-filter: blur(5px) saturate(150%);\n  }\n  \n  /* 首页文章卡片 */\n  #recent-posts > .recent-post-item {\n    background: var(--trans-light);\n    backdrop-filter: var(--backdrop-filter);\n    border-radius: 25px;\n    border: var(--border-style);\n  }\n  \n  /* 首页侧栏卡片 */\n  #aside-content .card-widget {\n    background: var(--trans-light);\n    backdrop-filter: var(--backdrop-filter);\n    border-radius: 18px;\n    border: var(--border-style);\n  }\n  \n  /* 文章页、归档页、普通页面 */\n  div#post,\n  div#page,\n  div#archive {\n    background: var(--trans-light);\n    backdrop-filter: var(--backdrop-filter);\n    border: var(--border-style);\n    border-radius: 20px;\n  }\n  \n  /* 导航栏 */\n  #page-header.nav-fixed #nav {\n    background: rgba(255, 255, 255, 0.75);\n    backdrop-filter: var(--backdrop-filter);\n  }\n  \n  [data-theme=\"dark\"] #page-header.nav-fixed #nav {\n    background: rgba(0, 0, 0, 0.7) !important;\n  }\n  \n  /* 夜间模式遮罩 */\n  [data-theme=\"dark\"] #recent-posts > .recent-post-item,\n  [data-theme=\"dark\"] #aside-content .card-widget,\n  [data-theme=\"dark\"] div#post,\n  [data-theme=\"dark\"] div#archive,\n  [data-theme=\"dark\"] div#page {\n    background: var(--trans-dark);\n  }\n  \n  \n  /* 夜间模式页脚页头遮罩透明 */\n  [data-theme=\"dark\"] #footer::before {\n    background: transparent !important;\n  }\n  [data-theme=\"dark\"] #page-header::before {\n    background: transparent !important;\n  }\n  \n  /* 阅读模式 */\n  .read-mode #aside-content .card-widget {\n    background: rgba(158, 204, 171, 0.5) !important;\n  }\n  .read-mode div#post {\n    background: rgba(158, 204, 171, 0.5) !important;\n  }\n  \n  /* 夜间模式下的阅读模式 */\n  [data-theme=\"dark\"] .read-mode #aside-content .card-widget {\n    background: rgba(25, 25, 25, 0.9) !important;\n    color: #ffffff;\n  }\n  [data-theme=\"dark\"] .read-mode div#post {\n    background: rgba(25, 25, 25, 0.9) !important;\n    color: #ffffff;\n  }\n\n  /* 翻页按钮居中 */\n#pagination {\n  width: 100%;\n  margin: auto;\n}\n\n/* 自定义字体 */\n@font-face {\n  /* 为载入的字体取名字(随意) */\n  font-family: 'Zhi Mang Xing';\t\n  /* 字体文件地址(相对或者绝对路径都可以) */\n  src: url(https://fonts.googleapis.com/css);\n  /* 定义加粗样式(加粗多少) */\n  font-weight: normal;\n  /* 定义字体样式(斜体/非斜体) */\n  font-style: normal;\n  /* 定义显示样式 */\n  font-display: block;\n}\n\n@font-face {\n  font-family: 'Sacramento';\n  font-style: normal;\n  font-weight: 400;\n  src: url(https://fonts.googleapis.com/css?family);\n  unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n\n/* 黑夜霓虹灯 */\n/* 夜间模式菜单栏发光字 */\n[data-theme=\"dark\"] #nav .site-page,\n[data-theme=\"dark\"] #nav .menus_items .menus_item .menus_item_child li a {\n  text-shadow: 0 0 2px var(--theme-color) !important;\n}\n\n/* 手机端适配 */\n[data-theme=\"dark\"] #sidebar #sidebar-menus .menus_items .site-page {\n  text-shadow: 0 0 2px var(--theme-color) !important;\n}\n\n/* 闪烁变动颜色连续渐变 */\n#site-name,\n#site-title,\n#site-subtitle,\n#post-info,\n.author-info__name,\n.author-info__description {\n  transition: text-shadow 1s linear !important;\n}\n\n/* 黑夜霓虹灯2.0 */\n/* 日间模式不生效 */\n[data-theme=\"light\"] #site-name,\n[data-theme=\"light\"] #site-title,\n[data-theme=\"light\"] #site-subtitle,\n[data-theme=\"light\"] #post-info {\n  animation: none;\n}\n/* 夜间模式生效 */\n[data-theme=\"dark\"] #site-name,\n[data-theme=\"dark\"] #site-title {\n  animation: light_15px 10s linear infinite;\n}\n[data-theme=\"dark\"] #site-subtitle {\n  animation: light_10px 10s linear infinite;\n}\n[data-theme=\"dark\"] #post-info {\n  animation: light_5px 10s linear infinite;\n}\n/* 关键帧描述 */\n@keyframes light_15px {\n  0% {\n    text-shadow: #5636ed 0 0 15px;\n  }\n  12.5% {\n    text-shadow: #11ee5e 0 0 15px;\n  }\n  25% {\n    text-shadow: #f14747 0 0 15px;\n  }\n  37.5% {\n    text-shadow: #f1a247 0 0 15px;\n  }\n  50% {\n    text-shadow: #f1ee47 0 0 15px;\n  }\n  50% {\n    text-shadow: #b347f1 0 0 15px;\n  }\n  62.5% {\n    text-shadow: #002afa 0 0 15px;\n  }\n  75% {\n    text-shadow: #ed709b 0 0 15px;\n  }\n  87.5% {\n    text-shadow: #39c5bb 0 0 15px;\n  }\n  100% {\n    text-shadow: #5636ed 0 0 15px;\n  }\n}\n\n@keyframes light_10px {\n  0% {\n    text-shadow: #5636ed 0 0 10px;\n  }\n  12.5% {\n    text-shadow: #11ee5e 0 0 10px;\n  }\n  25% {\n    text-shadow: #f14747 0 0 10px;\n  }\n  37.5% {\n    text-shadow: #f1a247 0 0 10px;\n  }\n  50% {\n    text-shadow: #f1ee47 0 0 10px;\n  }\n  50% {\n    text-shadow: #b347f1 0 0 10px;\n  }\n  62.5% {\n    text-shadow: #002afa 0 0 10px;\n  }\n  75% {\n    text-shadow: #ed709b 0 0 10px;\n  }\n  87.5% {\n    text-shadow: #39c5bb 0 0 10px;\n  }\n  100% {\n    text-shadow: #5636ed 0 0 10px;\n  }\n}\n\n@keyframes light_5px {\n  0% {\n    text-shadow: #5636ed 0 0 5px;\n  }\n  12.5% {\n    text-shadow: #11ee5e 0 0 5px;\n  }\n  25% {\n    text-shadow: #f14747 0 0 5px;\n  }\n  37.5% {\n    text-shadow: #f1a247 0 0 15px;\n  }\n  50% {\n    text-shadow: #f1ee47 0 0 5px;\n  }\n  50% {\n    text-shadow: #b347f1 0 0 5px;\n  }\n  62.5% {\n    text-shadow: #002afa 0 0 5px;\n  }\n  75% {\n    text-shadow: #ed709b 0 0 5px;\n  }\n  87.5% {\n    text-shadow: #39c5bb 0 0 5px;\n  }\n  100% {\n    text-shadow: #5636ed 0 0 5px;\n  }\n}\n\n/* 页面样式调节 */\n:root {\n  --trans-light: rgba(255, 255, 255, 0.88);\n  --trans-dark: rgba(25, 25, 25, 0.88);\n  --border-style: 1px solid rgb(169, 169, 169);\n  --backdrop-filter: blur(5px) saturate(150%);\n}\n\n/* 首页文章卡片 */\n#recent-posts > .recent-post-item {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border-radius: 25px;\n  border: var(--border-style);\n}\n\n/* 首页侧栏卡片 */\n#aside-content .card-widget {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border-radius: 18px;\n  border: var(--border-style);\n}\n\n/* 文章页、归档页、普通页面 */\ndiv#post,\ndiv#page,\ndiv#archive {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border: var(--border-style);\n  border-radius: 20px;\n}\n\n/* 导航栏 */\n#page-header.nav-fixed #nav {\n  background: rgba(255, 255, 255, 0.75);\n  backdrop-filter: var(--backdrop-filter);\n}\n\n[data-theme=\"dark\"] #page-header.nav-fixed #nav {\n  background: rgba(0, 0, 0, 0.7) !important;\n}\n\n/* 夜间模式遮罩 */\n[data-theme=\"dark\"] #recent-posts > .recent-post-item,\n[data-theme=\"dark\"] #aside-content .card-widget,\n[data-theme=\"dark\"] div#post,\n[data-theme=\"dark\"] div#archive,\n[data-theme=\"dark\"] div#page {\n  background: var(--trans-dark);\n}\n\n\n/* 夜间模式页脚页头遮罩透明 */\n[data-theme=\"dark\"] #footer::before {\n  background: transparent !important;\n}\n[data-theme=\"dark\"] #page-header::before {\n  background: transparent !important;\n}\n\n/* 阅读模式 */\n.read-mode #aside-content .card-widget {\n  background: rgba(158, 204, 171, 0.5) !important;\n}\n.read-mode div#post {\n  background: rgba(158, 204, 171, 0.5) !important;\n}\n\n/* 夜间模式下的阅读模式 */\n[data-theme=\"dark\"] .read-mode #aside-content .card-widget {\n  background: rgba(25, 25, 25, 0.9) !important;\n  color: #ffffff;\n}\n[data-theme=\"dark\"] .read-mode div#post {\n  background: rgba(25, 25, 25, 0.9) !important;\n  color: #ffffff;\n}\n\n/*哔哩哔哩视频适配*/\n.aspect-ratio {\n  position: relative;\n  width: 90%;\n  height: auto;\n  padding-bottom: 75%;\n  margin: 3% auto;\n  text-align: center;\n}\n.aspect-ratio iframe {\n  position: absolute;\n  width: 100%;\n  height: 86%;\n  left: 0;\n  top: 0;\n}\n\n/* 挂绳小猫 */\n\nbody::-webkit-scrollbar {\n  width: 0;\n}\n\n.neko {\n  width: 64px;\n  height: 64px;\n  background-image: url(\"https://bu.dusays.com/2022/07/20/62d812db74be9.png\");\n  position: absolute;\n  right: 32px;\n  background-repeat: no-repeat;\n  background-size: contain;\n  transform: translateX(50%);\n  cursor: pointer;\n  font-family: tzy;\n  font-weight: 600;\n  font-size: 16px;\n  color: #6f42c1;\n  display: none;\n}\n\n.neko::after {\n  display: none;\n  width: 100px;\n  height: 100px;\n  background-image: url(\"https://bu.dusays.com/2022/07/20/62d812d95e6f5.png\");\n  background-size: contain;\n  z-index: 9999;\n  position: absolute;\n  right: 50%;\n  text-align: center;\n  line-height: 100px;\n  top: -115%;\n\n}\n\n.neko.showMsg::after {\n  content: attr(data-msg);\n  display: block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.neko:hover::after {\n  content: attr(data-msg);\n  display: block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.neko.fontColor::after {\n  color: #333;\n}\n\n/**\n* @description: 滚动条样式  跟猫二选一\n*/\n@media screen and (max-width:992px) {\n  ::-webkit-scrollbar {\n      width: 8px !important;\n      height: 8px !important\n  }\n\n  ::-webkit-scrollbar-track {\n      border-radius: 2em;\n  }\n\n  ::-webkit-scrollbar-thumb {\n      background-color: rgb(255 255 255 / .3);\n      background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent);\n      border-radius: 2em\n  }\n\n  ::-webkit-scrollbar-corner {\n      background-color: transparent\n  }\n}\n\n/* 右边按钮阅读进度 */\n/* 返回顶部 */\n\nbutton#go-up #percent {\n  display: none;\n  font-weight: bold;\n  font-size: 15px !important;\n}\n\nbutton#go-up span {\n  font-size: 12px!important;\n  margin-right: -1px;\n}\n\n/* 鼠标滑动到按钮上时显示返回顶部图标 */\nbutton#go-up:hover i {\n  display: block !important;\n}\n\nbutton#go-up:hover #percent {\n  display: none !important;\n}\n\n/* 用户地理位置欢迎信息 */\n:root {\n  --ichika-color: #3c6ae7;\n}\n\n/* 公告&欢迎页 */\n.card-announcement {\n  line-height:30px;\n  font-size:16px;\n}\n\n.card-announcement .item-headline span{\n  margin-left:0!important;\n}\n\n.card-announcement span{\n  font-weight:bold;\n  font-size:20px!important;\n  color:var(--ichika-color);\n}\n\n","site":{"data":{}},"cover":false,"excerpt":"","more":"\n\n\n/* 一图流 */\n/* 页脚与头图透明 */\n#footer {\n    background: transparent !important;\n  }\n  #page-header {\n    background: transparent !important;\n  }\n  \n  /* 白天模式遮罩透明 */\n  #footer::before {\n    background: transparent !important;\n  }\n  #page-header::before {\n    background: transparent !important;\n  }\n  \n  /* 夜间模式遮罩透明 */\n  [data-theme=\"dark\"] #footer::before {\n    background: transparent !important;\n  }\n  [data-theme=\"dark\"] #page-header::before {\n    background: transparent !important;\n  }\n\n\n  /* 小冰分类分类磁铁黑夜模式适配 */\n/* 一般状态 */\n[data-theme=\"dark\"] .magnet_link_context {\n    background: #1e1e1e;\n    color: antiquewhite;\n  }\n  /* 鼠标悬浮状态 */\n  [data-theme=\"dark\"] .magnet_link_context:hover {\n    background: #3ecdf1;\n    color: #f2f2f2;\n  }\n\n  /* 一级菜单居中 */\n#nav .menus_items {\n    position: absolute !important;\n    width: fit-content !important;\n    left: 50% !important;\n    transform: translateX(-50%) !important;\n  }\n  /* 子菜单横向展示 */\n  #nav .menus_items .menus_item:hover .menus_item_child {\n    display: flex !important;\n  }\n  /* 这里的2是代表导航栏的第2个元素，即有子菜单的元素，可以按自己需求修改 */\n  .menus_items .menus_item:nth-child(3) .menus_item_child {\n    left: -125px;\n  }\n\n  /* 侧边栏个人信息卡片动态渐变色 */\n#aside-content > .card-widget.card-info {\n    background: linear-gradient(\n      -45deg,\n      #e8d8b9,\n      #eccec5,\n      #a3e9eb,\n      #bdbdf0,\n      #eec1ea\n    );\n    box-shadow: 0 0 5px rgb(66, 68, 68);\n    position: relative;\n    background-size: 400% 400%;\n    -webkit-animation: Gradient 10s ease infinite;\n    -moz-animation: Gradient 10s ease infinite;\n    animation: Gradient 10s ease infinite !important;\n  }\n  @-webkit-keyframes Gradient {\n    0% {\n      background-position: 0% 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0% 50%;\n    }\n  }\n  @-moz-keyframes Gradient {\n    0% {\n      background-position: 0% 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0% 50%;\n    }\n  }\n  @keyframes Gradient {\n    0% {\n      background-position: 0% 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0% 50%;\n    }\n  }\n  \n  /* 黑夜模式适配 */\n  [data-theme=\"dark\"] #aside-content > .card-widget.card-info {\n    background: #191919ee;\n  }\n  \n  /* 个人信息Follow me按钮 */\n  #aside-content > .card-widget.card-info > #card-info-btn {\n    background-color: #3eb8be;\n    border-radius: 8px;\n  }\n\n  :root {\n  --trans-light: rgba(255, 255, 255, 0.88);\n  --trans-dark: rgba(25, 25, 25, 0.88);\n  --border-style: 1px solid rgb(169, 169, 169);\n  --backdrop-filter: blur(5px) saturate(150%);\n}\n\n/* 首页文章卡片 */\n#recent-posts > .recent-post-item {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border-radius: 25px;\n  border: var(--border-style);\n}\n\n/* 首页侧栏卡片 */\n#aside-content .card-widget {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border-radius: 18px;\n  border: var(--border-style);\n}\n\n/* 文章页、归档页、普通页面 */\ndiv#post,\ndiv#page,\ndiv#archive {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border: var(--border-style);\n  border-radius: 20px;\n}\n\n/* 导航栏 */\n#page-header.nav-fixed #nav {\n  background: rgba(255, 255, 255, 0.75);\n  backdrop-filter: var(--backdrop-filter);\n}\n\n[data-theme=\"dark\"] #page-header.nav-fixed #nav {\n  background: rgba(0, 0, 0, 0.7) !important;\n}\n\n/* 夜间模式遮罩 */\n[data-theme=\"dark\"] #recent-posts > .recent-post-item,\n[data-theme=\"dark\"] #aside-content .card-widget,\n[data-theme=\"dark\"] div#post,\n[data-theme=\"dark\"] div#archive,\n[data-theme=\"dark\"] div#page {\n  background: var(--trans-dark);\n}\n\n\n/* 夜间模式页脚页头遮罩透明 */\n[data-theme=\"dark\"] #footer::before {\n  background: transparent !important;\n}\n[data-theme=\"dark\"] #page-header::before {\n  background: transparent !important;\n}\n\n/* 阅读模式 */\n.read-mode #aside-content .card-widget {\n  background: rgba(158, 204, 171, 0.5) !important;\n}\n.read-mode div#post {\n  background: rgba(158, 204, 171, 0.5) !important;\n}\n\n/* 夜间模式下的阅读模式 */\n[data-theme=\"dark\"] .read-mode #aside-content .card-widget {\n  background: rgba(25, 25, 25, 0.9) !important;\n  color: #ffffff;\n}\n[data-theme=\"dark\"] .read-mode div#post {\n  background: rgba(25, 25, 25, 0.9) !important;\n  color: #ffffff;\n}\n\n\n/* 页面调节 */\n:root {\n    --trans-light: rgba(255, 255, 255, 0.88);\n    --trans-dark: rgba(25, 25, 25, 0.88);\n    --border-style: 1px solid rgb(169, 169, 169);\n    --backdrop-filter: blur(5px) saturate(150%);\n  }\n  \n  /* 首页文章卡片 */\n  #recent-posts > .recent-post-item {\n    background: var(--trans-light);\n    backdrop-filter: var(--backdrop-filter);\n    border-radius: 25px;\n    border: var(--border-style);\n  }\n  \n  /* 首页侧栏卡片 */\n  #aside-content .card-widget {\n    background: var(--trans-light);\n    backdrop-filter: var(--backdrop-filter);\n    border-radius: 18px;\n    border: var(--border-style);\n  }\n  \n  /* 文章页、归档页、普通页面 */\n  div#post,\n  div#page,\n  div#archive {\n    background: var(--trans-light);\n    backdrop-filter: var(--backdrop-filter);\n    border: var(--border-style);\n    border-radius: 20px;\n  }\n  \n  /* 导航栏 */\n  #page-header.nav-fixed #nav {\n    background: rgba(255, 255, 255, 0.75);\n    backdrop-filter: var(--backdrop-filter);\n  }\n  \n  [data-theme=\"dark\"] #page-header.nav-fixed #nav {\n    background: rgba(0, 0, 0, 0.7) !important;\n  }\n  \n  /* 夜间模式遮罩 */\n  [data-theme=\"dark\"] #recent-posts > .recent-post-item,\n  [data-theme=\"dark\"] #aside-content .card-widget,\n  [data-theme=\"dark\"] div#post,\n  [data-theme=\"dark\"] div#archive,\n  [data-theme=\"dark\"] div#page {\n    background: var(--trans-dark);\n  }\n  \n  \n  /* 夜间模式页脚页头遮罩透明 */\n  [data-theme=\"dark\"] #footer::before {\n    background: transparent !important;\n  }\n  [data-theme=\"dark\"] #page-header::before {\n    background: transparent !important;\n  }\n  \n  /* 阅读模式 */\n  .read-mode #aside-content .card-widget {\n    background: rgba(158, 204, 171, 0.5) !important;\n  }\n  .read-mode div#post {\n    background: rgba(158, 204, 171, 0.5) !important;\n  }\n  \n  /* 夜间模式下的阅读模式 */\n  [data-theme=\"dark\"] .read-mode #aside-content .card-widget {\n    background: rgba(25, 25, 25, 0.9) !important;\n    color: #ffffff;\n  }\n  [data-theme=\"dark\"] .read-mode div#post {\n    background: rgba(25, 25, 25, 0.9) !important;\n    color: #ffffff;\n  }\n\n  /* 翻页按钮居中 */\n#pagination {\n  width: 100%;\n  margin: auto;\n}\n\n/* 自定义字体 */\n@font-face {\n  /* 为载入的字体取名字(随意) */\n  font-family: 'Zhi Mang Xing';\t\n  /* 字体文件地址(相对或者绝对路径都可以) */\n  src: url(https://fonts.googleapis.com/css);\n  /* 定义加粗样式(加粗多少) */\n  font-weight: normal;\n  /* 定义字体样式(斜体/非斜体) */\n  font-style: normal;\n  /* 定义显示样式 */\n  font-display: block;\n}\n\n@font-face {\n  font-family: 'Sacramento';\n  font-style: normal;\n  font-weight: 400;\n  src: url(https://fonts.googleapis.com/css?family);\n  unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n\n/* 黑夜霓虹灯 */\n/* 夜间模式菜单栏发光字 */\n[data-theme=\"dark\"] #nav .site-page,\n[data-theme=\"dark\"] #nav .menus_items .menus_item .menus_item_child li a {\n  text-shadow: 0 0 2px var(--theme-color) !important;\n}\n\n/* 手机端适配 */\n[data-theme=\"dark\"] #sidebar #sidebar-menus .menus_items .site-page {\n  text-shadow: 0 0 2px var(--theme-color) !important;\n}\n\n/* 闪烁变动颜色连续渐变 */\n#site-name,\n#site-title,\n#site-subtitle,\n#post-info,\n.author-info__name,\n.author-info__description {\n  transition: text-shadow 1s linear !important;\n}\n\n/* 黑夜霓虹灯2.0 */\n/* 日间模式不生效 */\n[data-theme=\"light\"] #site-name,\n[data-theme=\"light\"] #site-title,\n[data-theme=\"light\"] #site-subtitle,\n[data-theme=\"light\"] #post-info {\n  animation: none;\n}\n/* 夜间模式生效 */\n[data-theme=\"dark\"] #site-name,\n[data-theme=\"dark\"] #site-title {\n  animation: light_15px 10s linear infinite;\n}\n[data-theme=\"dark\"] #site-subtitle {\n  animation: light_10px 10s linear infinite;\n}\n[data-theme=\"dark\"] #post-info {\n  animation: light_5px 10s linear infinite;\n}\n/* 关键帧描述 */\n@keyframes light_15px {\n  0% {\n    text-shadow: #5636ed 0 0 15px;\n  }\n  12.5% {\n    text-shadow: #11ee5e 0 0 15px;\n  }\n  25% {\n    text-shadow: #f14747 0 0 15px;\n  }\n  37.5% {\n    text-shadow: #f1a247 0 0 15px;\n  }\n  50% {\n    text-shadow: #f1ee47 0 0 15px;\n  }\n  50% {\n    text-shadow: #b347f1 0 0 15px;\n  }\n  62.5% {\n    text-shadow: #002afa 0 0 15px;\n  }\n  75% {\n    text-shadow: #ed709b 0 0 15px;\n  }\n  87.5% {\n    text-shadow: #39c5bb 0 0 15px;\n  }\n  100% {\n    text-shadow: #5636ed 0 0 15px;\n  }\n}\n\n@keyframes light_10px {\n  0% {\n    text-shadow: #5636ed 0 0 10px;\n  }\n  12.5% {\n    text-shadow: #11ee5e 0 0 10px;\n  }\n  25% {\n    text-shadow: #f14747 0 0 10px;\n  }\n  37.5% {\n    text-shadow: #f1a247 0 0 10px;\n  }\n  50% {\n    text-shadow: #f1ee47 0 0 10px;\n  }\n  50% {\n    text-shadow: #b347f1 0 0 10px;\n  }\n  62.5% {\n    text-shadow: #002afa 0 0 10px;\n  }\n  75% {\n    text-shadow: #ed709b 0 0 10px;\n  }\n  87.5% {\n    text-shadow: #39c5bb 0 0 10px;\n  }\n  100% {\n    text-shadow: #5636ed 0 0 10px;\n  }\n}\n\n@keyframes light_5px {\n  0% {\n    text-shadow: #5636ed 0 0 5px;\n  }\n  12.5% {\n    text-shadow: #11ee5e 0 0 5px;\n  }\n  25% {\n    text-shadow: #f14747 0 0 5px;\n  }\n  37.5% {\n    text-shadow: #f1a247 0 0 15px;\n  }\n  50% {\n    text-shadow: #f1ee47 0 0 5px;\n  }\n  50% {\n    text-shadow: #b347f1 0 0 5px;\n  }\n  62.5% {\n    text-shadow: #002afa 0 0 5px;\n  }\n  75% {\n    text-shadow: #ed709b 0 0 5px;\n  }\n  87.5% {\n    text-shadow: #39c5bb 0 0 5px;\n  }\n  100% {\n    text-shadow: #5636ed 0 0 5px;\n  }\n}\n\n/* 页面样式调节 */\n:root {\n  --trans-light: rgba(255, 255, 255, 0.88);\n  --trans-dark: rgba(25, 25, 25, 0.88);\n  --border-style: 1px solid rgb(169, 169, 169);\n  --backdrop-filter: blur(5px) saturate(150%);\n}\n\n/* 首页文章卡片 */\n#recent-posts > .recent-post-item {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border-radius: 25px;\n  border: var(--border-style);\n}\n\n/* 首页侧栏卡片 */\n#aside-content .card-widget {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border-radius: 18px;\n  border: var(--border-style);\n}\n\n/* 文章页、归档页、普通页面 */\ndiv#post,\ndiv#page,\ndiv#archive {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border: var(--border-style);\n  border-radius: 20px;\n}\n\n/* 导航栏 */\n#page-header.nav-fixed #nav {\n  background: rgba(255, 255, 255, 0.75);\n  backdrop-filter: var(--backdrop-filter);\n}\n\n[data-theme=\"dark\"] #page-header.nav-fixed #nav {\n  background: rgba(0, 0, 0, 0.7) !important;\n}\n\n/* 夜间模式遮罩 */\n[data-theme=\"dark\"] #recent-posts > .recent-post-item,\n[data-theme=\"dark\"] #aside-content .card-widget,\n[data-theme=\"dark\"] div#post,\n[data-theme=\"dark\"] div#archive,\n[data-theme=\"dark\"] div#page {\n  background: var(--trans-dark);\n}\n\n\n/* 夜间模式页脚页头遮罩透明 */\n[data-theme=\"dark\"] #footer::before {\n  background: transparent !important;\n}\n[data-theme=\"dark\"] #page-header::before {\n  background: transparent !important;\n}\n\n/* 阅读模式 */\n.read-mode #aside-content .card-widget {\n  background: rgba(158, 204, 171, 0.5) !important;\n}\n.read-mode div#post {\n  background: rgba(158, 204, 171, 0.5) !important;\n}\n\n/* 夜间模式下的阅读模式 */\n[data-theme=\"dark\"] .read-mode #aside-content .card-widget {\n  background: rgba(25, 25, 25, 0.9) !important;\n  color: #ffffff;\n}\n[data-theme=\"dark\"] .read-mode div#post {\n  background: rgba(25, 25, 25, 0.9) !important;\n  color: #ffffff;\n}\n\n/*哔哩哔哩视频适配*/\n.aspect-ratio {\n  position: relative;\n  width: 90%;\n  height: auto;\n  padding-bottom: 75%;\n  margin: 3% auto;\n  text-align: center;\n}\n.aspect-ratio iframe {\n  position: absolute;\n  width: 100%;\n  height: 86%;\n  left: 0;\n  top: 0;\n}\n\n/* 挂绳小猫 */\n\nbody::-webkit-scrollbar {\n  width: 0;\n}\n\n.neko {\n  width: 64px;\n  height: 64px;\n  background-image: url(\"https://bu.dusays.com/2022/07/20/62d812db74be9.png\");\n  position: absolute;\n  right: 32px;\n  background-repeat: no-repeat;\n  background-size: contain;\n  transform: translateX(50%);\n  cursor: pointer;\n  font-family: tzy;\n  font-weight: 600;\n  font-size: 16px;\n  color: #6f42c1;\n  display: none;\n}\n\n.neko::after {\n  display: none;\n  width: 100px;\n  height: 100px;\n  background-image: url(\"https://bu.dusays.com/2022/07/20/62d812d95e6f5.png\");\n  background-size: contain;\n  z-index: 9999;\n  position: absolute;\n  right: 50%;\n  text-align: center;\n  line-height: 100px;\n  top: -115%;\n\n}\n\n.neko.showMsg::after {\n  content: attr(data-msg);\n  display: block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.neko:hover::after {\n  content: attr(data-msg);\n  display: block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.neko.fontColor::after {\n  color: #333;\n}\n\n/**\n* @description: 滚动条样式  跟猫二选一\n*/\n@media screen and (max-width:992px) {\n  ::-webkit-scrollbar {\n      width: 8px !important;\n      height: 8px !important\n  }\n\n  ::-webkit-scrollbar-track {\n      border-radius: 2em;\n  }\n\n  ::-webkit-scrollbar-thumb {\n      background-color: rgb(255 255 255 / .3);\n      background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent);\n      border-radius: 2em\n  }\n\n  ::-webkit-scrollbar-corner {\n      background-color: transparent\n  }\n}\n\n/* 右边按钮阅读进度 */\n/* 返回顶部 */\n\nbutton#go-up #percent {\n  display: none;\n  font-weight: bold;\n  font-size: 15px !important;\n}\n\nbutton#go-up span {\n  font-size: 12px!important;\n  margin-right: -1px;\n}\n\n/* 鼠标滑动到按钮上时显示返回顶部图标 */\nbutton#go-up:hover i {\n  display: block !important;\n}\n\nbutton#go-up:hover #percent {\n  display: none !important;\n}\n\n/* 用户地理位置欢迎信息 */\n:root {\n  --ichika-color: #3c6ae7;\n}\n\n/* 公告&欢迎页 */\n.card-announcement {\n  line-height:30px;\n  font-size:16px;\n}\n\n.card-announcement .item-headline span{\n  margin-left:0!important;\n}\n\n.card-announcement span{\n  font-weight:bold;\n  font-size:20px!important;\n  color:var(--ichika-color);\n}\n\n"},{"_content":"// 防抖全局计时器\nlet TT = null;    //time用来控制事件的触发\n// 防抖函数:fn->逻辑 time->防抖时间\nfunction debounce(fn, time) {\n    if (TT !== null) clearTimeout(TT);\n    TT = setTimeout(fn, time);\n}\n\n// 复制提醒\ndocument.addEventListener(\"copy\", function () {\n    debounce(function () {\n        new Vue({\n            data: function () {\n                this.$notify({\n                    title: \"哎嘿！复制成功🍬\",\n                    message: \"若要转载最好保留原文链接哦，给你一个大大的赞！\",\n                    position: 'top-left',\n                    offset: 50,\n                    showClose: true,\n                    type: \"success\",\n                    duration: 5000\n                });\n            }\n        })\n    }, 300);\n})\n\nif (document.body.clientWidth > 992) {\n    function getBasicInfo() {\n        /* 窗口高度 */\n        var ViewH = $(window).height();\n        /* document高度 */\n        var DocH = $(\"body\")[0].scrollHeight;\n        /* 滚动的高度 */\n        var ScrollTop = $(window).scrollTop();\n        /* 可滚动的高度 */\n        var S_V = DocH - ViewH;\n        var Band_H = ScrollTop / (DocH - ViewH) * 100;\n        return {\n            ViewH: ViewH,\n            DocH: DocH,\n            ScrollTop: ScrollTop,\n            Band_H: Band_H,\n            S_V: S_V\n        }\n    };\n    function show(basicInfo) {\n        if (basicInfo.ScrollTop > 0.001) {\n            $(\".neko\").css('display', 'block');\n        } else {\n            $(\".neko\").css('display', 'none');\n        }\n    }\n    (function ($) {\n        $.fn.nekoScroll = function (option) {\n            var defaultSetting = {\n                top: '0',\n                scroWidth: 6 + 'px',\n                z_index: 9999,\n                zoom: 0.9,\n                borderRadius: 5 + 'px',\n                right: 60 + 'px',\n                // 这里可以换为你喜欢的图片，例如我就换为了雪人，但是要抠图\n                nekoImg: \"https://bu.dusays.com/2022/07/20/62d812db74be9.png\",\n                hoverMsg: \"喵喵喵~\",\n                color: \"#6f42c1\",\n                during: 500,\n                blog_body: \"body\",\n            };\n            var setting = $.extend(defaultSetting, option);\n            var getThis = this.prop(\"className\") !== \"\" ? \".\" + this.prop(\"className\") : this.prop(\"id\") !== \"\" ? \"#\" +\n                this.prop(\"id\") : this.prop(\"nodeName\");\n            if ($(\".neko\").length == 0) {\n                this.after(\"<div class=\\\"neko\\\" id=\" + setting.nekoname + \" data-msg=\\\"\" + setting.hoverMsg + \"\\\"></div>\");\n            }\n            let basicInfo = getBasicInfo();\n            $(getThis)\n                .css({\n                    'position': 'fixed',\n                    'width': setting.scroWidth,\n                    'top': setting.top,\n                    'height': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 + 'px',\n                    'z-index': setting.z_index,\n                    'background-color': setting.bgcolor,\n                    \"border-radius\": setting.borderRadius,\n                    'right': setting.right,\n                    'background-image': 'url(' + setting.scImg + ')',\n                    'background-image': '-webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent)', 'border-radius': '2em',\n                    'background-size': 'contain'\n                });\n            $(\"#\" + setting.nekoname)\n                .css({\n                    'position': 'fixed',\n                    'top': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 - 50 + 'px',\n                    'z-index': setting.z_index * 10,\n                    'right': setting.right,\n                    'background-image': 'url(' + setting.nekoImg + ')',\n                });\n            show(getBasicInfo());\n            $(window)\n                .scroll(function () {\n                    let basicInfo = getBasicInfo();\n                    show(basicInfo);\n                    $(getThis)\n                        .css({\n                            'position': 'fixed',\n                            'width': setting.scroWidth,\n                            'top': setting.top,\n                            'height': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 + 'px',\n                            'z-index': setting.z_index,\n                            'background-color': setting.bgcolor,\n                            \"border-radius\": setting.borderRadius,\n                            'right': setting.right,\n                            'background-image': 'url(' + setting.scImg + ')',\n                            'background-image': '-webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent)', 'border-radius': '2em',\n                            'background-size': 'contain'\n                        });\n                    $(\"#\" + setting.nekoname)\n                        .css({\n                            'position': 'fixed',\n                            'top': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 - 50 + 'px',\n                            'z-index': setting.z_index * 10,\n                            'right': setting.right,\n                            'background-image': 'url(' + setting.nekoImg + ')',\n                        });\n                    if (basicInfo.ScrollTop == basicInfo.S_V) {\n                        $(\"#\" + setting.nekoname)\n                            .addClass(\"showMsg\")\n                    } else {\n                        $(\"#\" + setting.nekoname)\n                            .removeClass(\"showMsg\");\n                        $(\"#\" + setting.nekoname)\n                            .attr(\"data-msg\", setting.hoverMsg);\n                    }\n                });\n            this.click(function (e) {\n                btf.scrollToDest(0, 500)\n            });\n            $(\"#\" + setting.nekoname)\n                .click(function () {\n                    btf.scrollToDest(0, 500)\n                });\n            return this;\n        }\n    })(jQuery);\n\n    $(document).ready(function () {\n        //部分自定义\n        $(\"#myscoll\").nekoScroll({\n            bgcolor: 'rgb(0 0 0 / .5)', //背景颜色，没有绳子背景图片时有效\n            borderRadius: '2em',\n            zoom: 0.9\n        }\n        );\n        //自定义（去掉以下注释，并注释掉其他的查看效果）\n        /*\n        $(\"#myscoll\").nekoScroll({\n            nekoname:'neko1', //nekoname，相当于id\n            nekoImg:'img/猫咪.png', //neko的背景图片\n            scImg:\"img/绳1.png\", //绳子的背景图片\n            bgcolor:'#1e90ff', //背景颜色，没有绳子背景图片时有效\n            zoom:0.9, //绳子长度的缩放值\n            hoverMsg:'你好~喵', //鼠标浮动到neko上方的对话框信息\n            right:'100px', //距离页面右边的距离\n            fontFamily:'楷体', //对话框字体\n            fontSize:'14px', //对话框字体的大小\n            color:'#1e90ff', //对话框字体颜色\n            scroWidth:'8px', //绳子的宽度\n            z_index:100, //不用解释了吧\n            during:1200, //从顶部到底部滑动的时长\n        });\n        */\n    })\n}","source":"js/cat.js","raw":"// 防抖全局计时器\nlet TT = null;    //time用来控制事件的触发\n// 防抖函数:fn->逻辑 time->防抖时间\nfunction debounce(fn, time) {\n    if (TT !== null) clearTimeout(TT);\n    TT = setTimeout(fn, time);\n}\n\n// 复制提醒\ndocument.addEventListener(\"copy\", function () {\n    debounce(function () {\n        new Vue({\n            data: function () {\n                this.$notify({\n                    title: \"哎嘿！复制成功🍬\",\n                    message: \"若要转载最好保留原文链接哦，给你一个大大的赞！\",\n                    position: 'top-left',\n                    offset: 50,\n                    showClose: true,\n                    type: \"success\",\n                    duration: 5000\n                });\n            }\n        })\n    }, 300);\n})\n\nif (document.body.clientWidth > 992) {\n    function getBasicInfo() {\n        /* 窗口高度 */\n        var ViewH = $(window).height();\n        /* document高度 */\n        var DocH = $(\"body\")[0].scrollHeight;\n        /* 滚动的高度 */\n        var ScrollTop = $(window).scrollTop();\n        /* 可滚动的高度 */\n        var S_V = DocH - ViewH;\n        var Band_H = ScrollTop / (DocH - ViewH) * 100;\n        return {\n            ViewH: ViewH,\n            DocH: DocH,\n            ScrollTop: ScrollTop,\n            Band_H: Band_H,\n            S_V: S_V\n        }\n    };\n    function show(basicInfo) {\n        if (basicInfo.ScrollTop > 0.001) {\n            $(\".neko\").css('display', 'block');\n        } else {\n            $(\".neko\").css('display', 'none');\n        }\n    }\n    (function ($) {\n        $.fn.nekoScroll = function (option) {\n            var defaultSetting = {\n                top: '0',\n                scroWidth: 6 + 'px',\n                z_index: 9999,\n                zoom: 0.9,\n                borderRadius: 5 + 'px',\n                right: 60 + 'px',\n                // 这里可以换为你喜欢的图片，例如我就换为了雪人，但是要抠图\n                nekoImg: \"https://bu.dusays.com/2022/07/20/62d812db74be9.png\",\n                hoverMsg: \"喵喵喵~\",\n                color: \"#6f42c1\",\n                during: 500,\n                blog_body: \"body\",\n            };\n            var setting = $.extend(defaultSetting, option);\n            var getThis = this.prop(\"className\") !== \"\" ? \".\" + this.prop(\"className\") : this.prop(\"id\") !== \"\" ? \"#\" +\n                this.prop(\"id\") : this.prop(\"nodeName\");\n            if ($(\".neko\").length == 0) {\n                this.after(\"<div class=\\\"neko\\\" id=\" + setting.nekoname + \" data-msg=\\\"\" + setting.hoverMsg + \"\\\"></div>\");\n            }\n            let basicInfo = getBasicInfo();\n            $(getThis)\n                .css({\n                    'position': 'fixed',\n                    'width': setting.scroWidth,\n                    'top': setting.top,\n                    'height': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 + 'px',\n                    'z-index': setting.z_index,\n                    'background-color': setting.bgcolor,\n                    \"border-radius\": setting.borderRadius,\n                    'right': setting.right,\n                    'background-image': 'url(' + setting.scImg + ')',\n                    'background-image': '-webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent)', 'border-radius': '2em',\n                    'background-size': 'contain'\n                });\n            $(\"#\" + setting.nekoname)\n                .css({\n                    'position': 'fixed',\n                    'top': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 - 50 + 'px',\n                    'z-index': setting.z_index * 10,\n                    'right': setting.right,\n                    'background-image': 'url(' + setting.nekoImg + ')',\n                });\n            show(getBasicInfo());\n            $(window)\n                .scroll(function () {\n                    let basicInfo = getBasicInfo();\n                    show(basicInfo);\n                    $(getThis)\n                        .css({\n                            'position': 'fixed',\n                            'width': setting.scroWidth,\n                            'top': setting.top,\n                            'height': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 + 'px',\n                            'z-index': setting.z_index,\n                            'background-color': setting.bgcolor,\n                            \"border-radius\": setting.borderRadius,\n                            'right': setting.right,\n                            'background-image': 'url(' + setting.scImg + ')',\n                            'background-image': '-webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent)', 'border-radius': '2em',\n                            'background-size': 'contain'\n                        });\n                    $(\"#\" + setting.nekoname)\n                        .css({\n                            'position': 'fixed',\n                            'top': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 - 50 + 'px',\n                            'z-index': setting.z_index * 10,\n                            'right': setting.right,\n                            'background-image': 'url(' + setting.nekoImg + ')',\n                        });\n                    if (basicInfo.ScrollTop == basicInfo.S_V) {\n                        $(\"#\" + setting.nekoname)\n                            .addClass(\"showMsg\")\n                    } else {\n                        $(\"#\" + setting.nekoname)\n                            .removeClass(\"showMsg\");\n                        $(\"#\" + setting.nekoname)\n                            .attr(\"data-msg\", setting.hoverMsg);\n                    }\n                });\n            this.click(function (e) {\n                btf.scrollToDest(0, 500)\n            });\n            $(\"#\" + setting.nekoname)\n                .click(function () {\n                    btf.scrollToDest(0, 500)\n                });\n            return this;\n        }\n    })(jQuery);\n\n    $(document).ready(function () {\n        //部分自定义\n        $(\"#myscoll\").nekoScroll({\n            bgcolor: 'rgb(0 0 0 / .5)', //背景颜色，没有绳子背景图片时有效\n            borderRadius: '2em',\n            zoom: 0.9\n        }\n        );\n        //自定义（去掉以下注释，并注释掉其他的查看效果）\n        /*\n        $(\"#myscoll\").nekoScroll({\n            nekoname:'neko1', //nekoname，相当于id\n            nekoImg:'img/猫咪.png', //neko的背景图片\n            scImg:\"img/绳1.png\", //绳子的背景图片\n            bgcolor:'#1e90ff', //背景颜色，没有绳子背景图片时有效\n            zoom:0.9, //绳子长度的缩放值\n            hoverMsg:'你好~喵', //鼠标浮动到neko上方的对话框信息\n            right:'100px', //距离页面右边的距离\n            fontFamily:'楷体', //对话框字体\n            fontSize:'14px', //对话框字体的大小\n            color:'#1e90ff', //对话框字体颜色\n            scroWidth:'8px', //绳子的宽度\n            z_index:100, //不用解释了吧\n            during:1200, //从顶部到底部滑动的时长\n        });\n        */\n    })\n}","date":"2024-02-04T23:05:33.256Z","updated":"2024-02-04T23:05:33.256Z","path":"js/cat.js","layout":"false","title":"","comments":1,"_id":"cltxxeta700026cds8xq0bif3","content":"// 防抖全局计时器\nlet TT = null;    //time用来控制事件的触发\n// 防抖函数:fn->逻辑 time->防抖时间\nfunction debounce(fn, time) {\n    if (TT !== null) clearTimeout(TT);\n    TT = setTimeout(fn, time);\n}\n\n// 复制提醒\ndocument.addEventListener(\"copy\", function () {\n    debounce(function () {\n        new Vue({\n            data: function () {\n                this.$notify({\n                    title: \"哎嘿！复制成功🍬\",\n                    message: \"若要转载最好保留原文链接哦，给你一个大大的赞！\",\n                    position: 'top-left',\n                    offset: 50,\n                    showClose: true,\n                    type: \"success\",\n                    duration: 5000\n                });\n            }\n        })\n    }, 300);\n})\n\nif (document.body.clientWidth > 992) {\n    function getBasicInfo() {\n        /* 窗口高度 */\n        var ViewH = $(window).height();\n        /* document高度 */\n        var DocH = $(\"body\")[0].scrollHeight;\n        /* 滚动的高度 */\n        var ScrollTop = $(window).scrollTop();\n        /* 可滚动的高度 */\n        var S_V = DocH - ViewH;\n        var Band_H = ScrollTop / (DocH - ViewH) * 100;\n        return {\n            ViewH: ViewH,\n            DocH: DocH,\n            ScrollTop: ScrollTop,\n            Band_H: Band_H,\n            S_V: S_V\n        }\n    };\n    function show(basicInfo) {\n        if (basicInfo.ScrollTop > 0.001) {\n            $(\".neko\").css('display', 'block');\n        } else {\n            $(\".neko\").css('display', 'none');\n        }\n    }\n    (function ($) {\n        $.fn.nekoScroll = function (option) {\n            var defaultSetting = {\n                top: '0',\n                scroWidth: 6 + 'px',\n                z_index: 9999,\n                zoom: 0.9,\n                borderRadius: 5 + 'px',\n                right: 60 + 'px',\n                // 这里可以换为你喜欢的图片，例如我就换为了雪人，但是要抠图\n                nekoImg: \"https://bu.dusays.com/2022/07/20/62d812db74be9.png\",\n                hoverMsg: \"喵喵喵~\",\n                color: \"#6f42c1\",\n                during: 500,\n                blog_body: \"body\",\n            };\n            var setting = $.extend(defaultSetting, option);\n            var getThis = this.prop(\"className\") !== \"\" ? \".\" + this.prop(\"className\") : this.prop(\"id\") !== \"\" ? \"#\" +\n                this.prop(\"id\") : this.prop(\"nodeName\");\n            if ($(\".neko\").length == 0) {\n                this.after(\"<div class=\\\"neko\\\" id=\" + setting.nekoname + \" data-msg=\\\"\" + setting.hoverMsg + \"\\\"></div>\");\n            }\n            let basicInfo = getBasicInfo();\n            $(getThis)\n                .css({\n                    'position': 'fixed',\n                    'width': setting.scroWidth,\n                    'top': setting.top,\n                    'height': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 + 'px',\n                    'z-index': setting.z_index,\n                    'background-color': setting.bgcolor,\n                    \"border-radius\": setting.borderRadius,\n                    'right': setting.right,\n                    'background-image': 'url(' + setting.scImg + ')',\n                    'background-image': '-webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent)', 'border-radius': '2em',\n                    'background-size': 'contain'\n                });\n            $(\"#\" + setting.nekoname)\n                .css({\n                    'position': 'fixed',\n                    'top': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 - 50 + 'px',\n                    'z-index': setting.z_index * 10,\n                    'right': setting.right,\n                    'background-image': 'url(' + setting.nekoImg + ')',\n                });\n            show(getBasicInfo());\n            $(window)\n                .scroll(function () {\n                    let basicInfo = getBasicInfo();\n                    show(basicInfo);\n                    $(getThis)\n                        .css({\n                            'position': 'fixed',\n                            'width': setting.scroWidth,\n                            'top': setting.top,\n                            'height': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 + 'px',\n                            'z-index': setting.z_index,\n                            'background-color': setting.bgcolor,\n                            \"border-radius\": setting.borderRadius,\n                            'right': setting.right,\n                            'background-image': 'url(' + setting.scImg + ')',\n                            'background-image': '-webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent)', 'border-radius': '2em',\n                            'background-size': 'contain'\n                        });\n                    $(\"#\" + setting.nekoname)\n                        .css({\n                            'position': 'fixed',\n                            'top': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 - 50 + 'px',\n                            'z-index': setting.z_index * 10,\n                            'right': setting.right,\n                            'background-image': 'url(' + setting.nekoImg + ')',\n                        });\n                    if (basicInfo.ScrollTop == basicInfo.S_V) {\n                        $(\"#\" + setting.nekoname)\n                            .addClass(\"showMsg\")\n                    } else {\n                        $(\"#\" + setting.nekoname)\n                            .removeClass(\"showMsg\");\n                        $(\"#\" + setting.nekoname)\n                            .attr(\"data-msg\", setting.hoverMsg);\n                    }\n                });\n            this.click(function (e) {\n                btf.scrollToDest(0, 500)\n            });\n            $(\"#\" + setting.nekoname)\n                .click(function () {\n                    btf.scrollToDest(0, 500)\n                });\n            return this;\n        }\n    })(jQuery);\n\n    $(document).ready(function () {\n        //部分自定义\n        $(\"#myscoll\").nekoScroll({\n            bgcolor: 'rgb(0 0 0 / .5)', //背景颜色，没有绳子背景图片时有效\n            borderRadius: '2em',\n            zoom: 0.9\n        }\n        );\n        //自定义（去掉以下注释，并注释掉其他的查看效果）\n        /*\n        $(\"#myscoll\").nekoScroll({\n            nekoname:'neko1', //nekoname，相当于id\n            nekoImg:'img/猫咪.png', //neko的背景图片\n            scImg:\"img/绳1.png\", //绳子的背景图片\n            bgcolor:'#1e90ff', //背景颜色，没有绳子背景图片时有效\n            zoom:0.9, //绳子长度的缩放值\n            hoverMsg:'你好~喵', //鼠标浮动到neko上方的对话框信息\n            right:'100px', //距离页面右边的距离\n            fontFamily:'楷体', //对话框字体\n            fontSize:'14px', //对话框字体的大小\n            color:'#1e90ff', //对话框字体颜色\n            scroWidth:'8px', //绳子的宽度\n            z_index:100, //不用解释了吧\n            during:1200, //从顶部到底部滑动的时长\n        });\n        */\n    })\n}","site":{"data":{}},"cover":false,"excerpt":"","more":"// 防抖全局计时器\nlet TT = null;    //time用来控制事件的触发\n// 防抖函数:fn->逻辑 time->防抖时间\nfunction debounce(fn, time) {\n    if (TT !== null) clearTimeout(TT);\n    TT = setTimeout(fn, time);\n}\n\n// 复制提醒\ndocument.addEventListener(\"copy\", function () {\n    debounce(function () {\n        new Vue({\n            data: function () {\n                this.$notify({\n                    title: \"哎嘿！复制成功🍬\",\n                    message: \"若要转载最好保留原文链接哦，给你一个大大的赞！\",\n                    position: 'top-left',\n                    offset: 50,\n                    showClose: true,\n                    type: \"success\",\n                    duration: 5000\n                });\n            }\n        })\n    }, 300);\n})\n\nif (document.body.clientWidth > 992) {\n    function getBasicInfo() {\n        /* 窗口高度 */\n        var ViewH = $(window).height();\n        /* document高度 */\n        var DocH = $(\"body\")[0].scrollHeight;\n        /* 滚动的高度 */\n        var ScrollTop = $(window).scrollTop();\n        /* 可滚动的高度 */\n        var S_V = DocH - ViewH;\n        var Band_H = ScrollTop / (DocH - ViewH) * 100;\n        return {\n            ViewH: ViewH,\n            DocH: DocH,\n            ScrollTop: ScrollTop,\n            Band_H: Band_H,\n            S_V: S_V\n        }\n    };\n    function show(basicInfo) {\n        if (basicInfo.ScrollTop > 0.001) {\n            $(\".neko\").css('display', 'block');\n        } else {\n            $(\".neko\").css('display', 'none');\n        }\n    }\n    (function ($) {\n        $.fn.nekoScroll = function (option) {\n            var defaultSetting = {\n                top: '0',\n                scroWidth: 6 + 'px',\n                z_index: 9999,\n                zoom: 0.9,\n                borderRadius: 5 + 'px',\n                right: 60 + 'px',\n                // 这里可以换为你喜欢的图片，例如我就换为了雪人，但是要抠图\n                nekoImg: \"https://bu.dusays.com/2022/07/20/62d812db74be9.png\",\n                hoverMsg: \"喵喵喵~\",\n                color: \"#6f42c1\",\n                during: 500,\n                blog_body: \"body\",\n            };\n            var setting = $.extend(defaultSetting, option);\n            var getThis = this.prop(\"className\") !== \"\" ? \".\" + this.prop(\"className\") : this.prop(\"id\") !== \"\" ? \"#\" +\n                this.prop(\"id\") : this.prop(\"nodeName\");\n            if ($(\".neko\").length == 0) {\n                this.after(\"<div class=\\\"neko\\\" id=\" + setting.nekoname + \" data-msg=\\\"\" + setting.hoverMsg + \"\\\"></div>\");\n            }\n            let basicInfo = getBasicInfo();\n            $(getThis)\n                .css({\n                    'position': 'fixed',\n                    'width': setting.scroWidth,\n                    'top': setting.top,\n                    'height': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 + 'px',\n                    'z-index': setting.z_index,\n                    'background-color': setting.bgcolor,\n                    \"border-radius\": setting.borderRadius,\n                    'right': setting.right,\n                    'background-image': 'url(' + setting.scImg + ')',\n                    'background-image': '-webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent)', 'border-radius': '2em',\n                    'background-size': 'contain'\n                });\n            $(\"#\" + setting.nekoname)\n                .css({\n                    'position': 'fixed',\n                    'top': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 - 50 + 'px',\n                    'z-index': setting.z_index * 10,\n                    'right': setting.right,\n                    'background-image': 'url(' + setting.nekoImg + ')',\n                });\n            show(getBasicInfo());\n            $(window)\n                .scroll(function () {\n                    let basicInfo = getBasicInfo();\n                    show(basicInfo);\n                    $(getThis)\n                        .css({\n                            'position': 'fixed',\n                            'width': setting.scroWidth,\n                            'top': setting.top,\n                            'height': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 + 'px',\n                            'z-index': setting.z_index,\n                            'background-color': setting.bgcolor,\n                            \"border-radius\": setting.borderRadius,\n                            'right': setting.right,\n                            'background-image': 'url(' + setting.scImg + ')',\n                            'background-image': '-webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent)', 'border-radius': '2em',\n                            'background-size': 'contain'\n                        });\n                    $(\"#\" + setting.nekoname)\n                        .css({\n                            'position': 'fixed',\n                            'top': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 - 50 + 'px',\n                            'z-index': setting.z_index * 10,\n                            'right': setting.right,\n                            'background-image': 'url(' + setting.nekoImg + ')',\n                        });\n                    if (basicInfo.ScrollTop == basicInfo.S_V) {\n                        $(\"#\" + setting.nekoname)\n                            .addClass(\"showMsg\")\n                    } else {\n                        $(\"#\" + setting.nekoname)\n                            .removeClass(\"showMsg\");\n                        $(\"#\" + setting.nekoname)\n                            .attr(\"data-msg\", setting.hoverMsg);\n                    }\n                });\n            this.click(function (e) {\n                btf.scrollToDest(0, 500)\n            });\n            $(\"#\" + setting.nekoname)\n                .click(function () {\n                    btf.scrollToDest(0, 500)\n                });\n            return this;\n        }\n    })(jQuery);\n\n    $(document).ready(function () {\n        //部分自定义\n        $(\"#myscoll\").nekoScroll({\n            bgcolor: 'rgb(0 0 0 / .5)', //背景颜色，没有绳子背景图片时有效\n            borderRadius: '2em',\n            zoom: 0.9\n        }\n        );\n        //自定义（去掉以下注释，并注释掉其他的查看效果）\n        /*\n        $(\"#myscoll\").nekoScroll({\n            nekoname:'neko1', //nekoname，相当于id\n            nekoImg:'img/猫咪.png', //neko的背景图片\n            scImg:\"img/绳1.png\", //绳子的背景图片\n            bgcolor:'#1e90ff', //背景颜色，没有绳子背景图片时有效\n            zoom:0.9, //绳子长度的缩放值\n            hoverMsg:'你好~喵', //鼠标浮动到neko上方的对话框信息\n            right:'100px', //距离页面右边的距离\n            fontFamily:'楷体', //对话框字体\n            fontSize:'14px', //对话框字体的大小\n            color:'#1e90ff', //对话框字体颜色\n            scroWidth:'8px', //绳子的宽度\n            z_index:100, //不用解释了吧\n            during:1200, //从顶部到底部滑动的时长\n        });\n        */\n    })\n}"},{"_content":"document.onkeydown = function (e) {\n    if (123 == e.keyCode || (e.ctrlKey && e.shiftKey && (74 === e.keyCode || 73 === e.keyCode || 67 === e.keyCode)) || (e.ctrlKey && 85 === e.keyCode)) return btf.snackbarShow(\"你真坏，不能打开控制台喔!\"), event.keyCode = 0, event.returnValue = !1, !1\n};","source":"js/f12.js","raw":"document.onkeydown = function (e) {\n    if (123 == e.keyCode || (e.ctrlKey && e.shiftKey && (74 === e.keyCode || 73 === e.keyCode || 67 === e.keyCode)) || (e.ctrlKey && 85 === e.keyCode)) return btf.snackbarShow(\"你真坏，不能打开控制台喔!\"), event.keyCode = 0, event.returnValue = !1, !1\n};","date":"2024-02-04T23:15:22.032Z","updated":"2024-02-04T23:15:22.032Z","path":"js/f12.js","layout":"false","title":"","comments":1,"_id":"cltxxetaa00046cds8o39h1qm","content":"document.onkeydown = function (e) {\n    if (123 == e.keyCode || (e.ctrlKey && e.shiftKey && (74 === e.keyCode || 73 === e.keyCode || 67 === e.keyCode)) || (e.ctrlKey && 85 === e.keyCode)) return btf.snackbarShow(\"你真坏，不能打开控制台喔!\"), event.keyCode = 0, event.returnValue = !1, !1\n};","site":{"data":{}},"cover":false,"excerpt":"","more":"document.onkeydown = function (e) {\n    if (123 == e.keyCode || (e.ctrlKey && e.shiftKey && (74 === e.keyCode || 73 === e.keyCode || 67 === e.keyCode)) || (e.ctrlKey && 85 === e.keyCode)) return btf.snackbarShow(\"你真坏，不能打开控制台喔!\"), event.keyCode = 0, event.returnValue = !1, !1\n};"},{"_content":"// 霓虹灯效果\n// 颜色数组\nvar arr = [\"#39c5bb\", \"#f14747\", \"#f1a247\", \"#f1ee47\", \"#b347f1\", \"#1edbff\", \"#ed709b\", \"#5636ed\"];\n// 颜色索引\nvar idx = 0;\n\n// 切换颜色\nfunction changeColor() {\n    // 仅夜间模式才启用\n    if (document.getElementsByTagName('html')[0].getAttribute('data-theme') == 'dark') {\n        if (document.getElementById(\"site-name\"))\n            document.getElementById(\"site-name\").style.textShadow = arr[idx] + \" 0 0 15px\";\n        if (document.getElementById(\"site-title\"))\n            document.getElementById(\"site-title\").style.textShadow = arr[idx] + \" 0 0 15px\";\n        if (document.getElementById(\"site-subtitle\"))\n            document.getElementById(\"site-subtitle\").style.textShadow = arr[idx] + \" 0 0 10px\";\n        if (document.getElementById(\"post-info\"))\n            document.getElementById(\"post-info\").style.textShadow = arr[idx] + \" 0 0 5px\";\n        try {\n            document.getElementsByClassName(\"author-info__name\")[0].style.textShadow = arr[idx] + \" 0 0 12px\";\n            document.getElementsByClassName(\"author-info__description\")[0].style.textShadow = arr[idx] + \" 0 0 12px\";\n        } catch {\n            \n        }\n        idx++;\n        if (idx == 8) {\n            idx = 0;\n        }\n    } else {\n        // 白天模式恢复默认\n        if (document.getElementById(\"site-name\"))\n            document.getElementById(\"site-name\").style.textShadow = \"#1e1e1ee0 1px 1px 1px\";\n        if (document.getElementById(\"site-title\"))\n            document.getElementById(\"site-title\").style.textShadow = \"#1e1e1ee0 1px 1px 1px\";\n        if (document.getElementById(\"site-subtitle\"))\n            document.getElementById(\"site-subtitle\").style.textShadow = \"#1e1e1ee0 1px 1px 1px\";\n        if (document.getElementById(\"post-info\"))\n            document.getElementById(\"post-info\").style.textShadow = \"#1e1e1ee0 1px 1px 1px\";\n        try {\n            document.getElementsByClassName(\"author-info__name\")[0].style.textShadow = \"\";\n            document.getElementsByClassName(\"author-info__description\")[0].style.textShadow = \"\";\n        } catch {\n            \n        }\n    }\n}\n\n// 开启计时器\nwindow.onload = setInterval(changeColor, 1200);","source":"js/light.js","raw":"// 霓虹灯效果\n// 颜色数组\nvar arr = [\"#39c5bb\", \"#f14747\", \"#f1a247\", \"#f1ee47\", \"#b347f1\", \"#1edbff\", \"#ed709b\", \"#5636ed\"];\n// 颜色索引\nvar idx = 0;\n\n// 切换颜色\nfunction changeColor() {\n    // 仅夜间模式才启用\n    if (document.getElementsByTagName('html')[0].getAttribute('data-theme') == 'dark') {\n        if (document.getElementById(\"site-name\"))\n            document.getElementById(\"site-name\").style.textShadow = arr[idx] + \" 0 0 15px\";\n        if (document.getElementById(\"site-title\"))\n            document.getElementById(\"site-title\").style.textShadow = arr[idx] + \" 0 0 15px\";\n        if (document.getElementById(\"site-subtitle\"))\n            document.getElementById(\"site-subtitle\").style.textShadow = arr[idx] + \" 0 0 10px\";\n        if (document.getElementById(\"post-info\"))\n            document.getElementById(\"post-info\").style.textShadow = arr[idx] + \" 0 0 5px\";\n        try {\n            document.getElementsByClassName(\"author-info__name\")[0].style.textShadow = arr[idx] + \" 0 0 12px\";\n            document.getElementsByClassName(\"author-info__description\")[0].style.textShadow = arr[idx] + \" 0 0 12px\";\n        } catch {\n            \n        }\n        idx++;\n        if (idx == 8) {\n            idx = 0;\n        }\n    } else {\n        // 白天模式恢复默认\n        if (document.getElementById(\"site-name\"))\n            document.getElementById(\"site-name\").style.textShadow = \"#1e1e1ee0 1px 1px 1px\";\n        if (document.getElementById(\"site-title\"))\n            document.getElementById(\"site-title\").style.textShadow = \"#1e1e1ee0 1px 1px 1px\";\n        if (document.getElementById(\"site-subtitle\"))\n            document.getElementById(\"site-subtitle\").style.textShadow = \"#1e1e1ee0 1px 1px 1px\";\n        if (document.getElementById(\"post-info\"))\n            document.getElementById(\"post-info\").style.textShadow = \"#1e1e1ee0 1px 1px 1px\";\n        try {\n            document.getElementsByClassName(\"author-info__name\")[0].style.textShadow = \"\";\n            document.getElementsByClassName(\"author-info__description\")[0].style.textShadow = \"\";\n        } catch {\n            \n        }\n    }\n}\n\n// 开启计时器\nwindow.onload = setInterval(changeColor, 1200);","date":"2024-02-04T21:42:19.909Z","updated":"2024-02-04T21:42:19.909Z","path":"js/light.js","layout":"false","title":"","comments":1,"_id":"cltxxetad00066cdscv5kfyxb","content":"// 霓虹灯效果\n// 颜色数组\nvar arr = [\"#39c5bb\", \"#f14747\", \"#f1a247\", \"#f1ee47\", \"#b347f1\", \"#1edbff\", \"#ed709b\", \"#5636ed\"];\n// 颜色索引\nvar idx = 0;\n\n// 切换颜色\nfunction changeColor() {\n    // 仅夜间模式才启用\n    if (document.getElementsByTagName('html')[0].getAttribute('data-theme') == 'dark') {\n        if (document.getElementById(\"site-name\"))\n            document.getElementById(\"site-name\").style.textShadow = arr[idx] + \" 0 0 15px\";\n        if (document.getElementById(\"site-title\"))\n            document.getElementById(\"site-title\").style.textShadow = arr[idx] + \" 0 0 15px\";\n        if (document.getElementById(\"site-subtitle\"))\n            document.getElementById(\"site-subtitle\").style.textShadow = arr[idx] + \" 0 0 10px\";\n        if (document.getElementById(\"post-info\"))\n            document.getElementById(\"post-info\").style.textShadow = arr[idx] + \" 0 0 5px\";\n        try {\n            document.getElementsByClassName(\"author-info__name\")[0].style.textShadow = arr[idx] + \" 0 0 12px\";\n            document.getElementsByClassName(\"author-info__description\")[0].style.textShadow = arr[idx] + \" 0 0 12px\";\n        } catch {\n            \n        }\n        idx++;\n        if (idx == 8) {\n            idx = 0;\n        }\n    } else {\n        // 白天模式恢复默认\n        if (document.getElementById(\"site-name\"))\n            document.getElementById(\"site-name\").style.textShadow = \"#1e1e1ee0 1px 1px 1px\";\n        if (document.getElementById(\"site-title\"))\n            document.getElementById(\"site-title\").style.textShadow = \"#1e1e1ee0 1px 1px 1px\";\n        if (document.getElementById(\"site-subtitle\"))\n            document.getElementById(\"site-subtitle\").style.textShadow = \"#1e1e1ee0 1px 1px 1px\";\n        if (document.getElementById(\"post-info\"))\n            document.getElementById(\"post-info\").style.textShadow = \"#1e1e1ee0 1px 1px 1px\";\n        try {\n            document.getElementsByClassName(\"author-info__name\")[0].style.textShadow = \"\";\n            document.getElementsByClassName(\"author-info__description\")[0].style.textShadow = \"\";\n        } catch {\n            \n        }\n    }\n}\n\n// 开启计时器\nwindow.onload = setInterval(changeColor, 1200);","site":{"data":{}},"cover":false,"excerpt":"","more":"// 霓虹灯效果\n// 颜色数组\nvar arr = [\"#39c5bb\", \"#f14747\", \"#f1a247\", \"#f1ee47\", \"#b347f1\", \"#1edbff\", \"#ed709b\", \"#5636ed\"];\n// 颜色索引\nvar idx = 0;\n\n// 切换颜色\nfunction changeColor() {\n    // 仅夜间模式才启用\n    if (document.getElementsByTagName('html')[0].getAttribute('data-theme') == 'dark') {\n        if (document.getElementById(\"site-name\"))\n            document.getElementById(\"site-name\").style.textShadow = arr[idx] + \" 0 0 15px\";\n        if (document.getElementById(\"site-title\"))\n            document.getElementById(\"site-title\").style.textShadow = arr[idx] + \" 0 0 15px\";\n        if (document.getElementById(\"site-subtitle\"))\n            document.getElementById(\"site-subtitle\").style.textShadow = arr[idx] + \" 0 0 10px\";\n        if (document.getElementById(\"post-info\"))\n            document.getElementById(\"post-info\").style.textShadow = arr[idx] + \" 0 0 5px\";\n        try {\n            document.getElementsByClassName(\"author-info__name\")[0].style.textShadow = arr[idx] + \" 0 0 12px\";\n            document.getElementsByClassName(\"author-info__description\")[0].style.textShadow = arr[idx] + \" 0 0 12px\";\n        } catch {\n            \n        }\n        idx++;\n        if (idx == 8) {\n            idx = 0;\n        }\n    } else {\n        // 白天模式恢复默认\n        if (document.getElementById(\"site-name\"))\n            document.getElementById(\"site-name\").style.textShadow = \"#1e1e1ee0 1px 1px 1px\";\n        if (document.getElementById(\"site-title\"))\n            document.getElementById(\"site-title\").style.textShadow = \"#1e1e1ee0 1px 1px 1px\";\n        if (document.getElementById(\"site-subtitle\"))\n            document.getElementById(\"site-subtitle\").style.textShadow = \"#1e1e1ee0 1px 1px 1px\";\n        if (document.getElementById(\"post-info\"))\n            document.getElementById(\"post-info\").style.textShadow = \"#1e1e1ee0 1px 1px 1px\";\n        try {\n            document.getElementsByClassName(\"author-info__name\")[0].style.textShadow = \"\";\n            document.getElementsByClassName(\"author-info__description\")[0].style.textShadow = \"\";\n        } catch {\n            \n        }\n    }\n}\n\n// 开启计时器\nwindow.onload = setInterval(changeColor, 1200);"},{"_content":"window.onscroll = percent;// 执行函数\n// 页面百分比\nfunction percent() {\n    let a = document.documentElement.scrollTop || window.pageYOffset, // 卷去高度\n        b = Math.max(document.body.scrollHeight, document.documentElement.scrollHeight, document.body.offsetHeight, document.documentElement.offsetHeight, document.body.clientHeight, document.documentElement.clientHeight) - document.documentElement.clientHeight, // 整个网页高度\n        result = Math.round(a / b * 100), // 计算百分比\n        up = document.querySelector(\"#go-up\") // 获取按钮\n\n    if (result <= 95) {\n        up.childNodes[0].style.display = 'none'\n        up.childNodes[1].style.display = 'block'\n        up.childNodes[1].innerHTML = result;\n    } else {\n        up.childNodes[1].style.display = 'none'\n        up.childNodes[0].style.display = 'block'\n    }\n}","source":"js/readPercent.js","raw":"window.onscroll = percent;// 执行函数\n// 页面百分比\nfunction percent() {\n    let a = document.documentElement.scrollTop || window.pageYOffset, // 卷去高度\n        b = Math.max(document.body.scrollHeight, document.documentElement.scrollHeight, document.body.offsetHeight, document.documentElement.offsetHeight, document.body.clientHeight, document.documentElement.clientHeight) - document.documentElement.clientHeight, // 整个网页高度\n        result = Math.round(a / b * 100), // 计算百分比\n        up = document.querySelector(\"#go-up\") // 获取按钮\n\n    if (result <= 95) {\n        up.childNodes[0].style.display = 'none'\n        up.childNodes[1].style.display = 'block'\n        up.childNodes[1].innerHTML = result;\n    } else {\n        up.childNodes[1].style.display = 'none'\n        up.childNodes[0].style.display = 'block'\n    }\n}","date":"2024-02-04T23:00:41.465Z","updated":"2024-02-04T23:00:41.465Z","path":"js/readPercent.js","layout":"false","title":"","comments":1,"_id":"cltxxetae00086cdsh8bf2bya","content":"window.onscroll = percent;// 执行函数\n// 页面百分比\nfunction percent() {\n    let a = document.documentElement.scrollTop || window.pageYOffset, // 卷去高度\n        b = Math.max(document.body.scrollHeight, document.documentElement.scrollHeight, document.body.offsetHeight, document.documentElement.offsetHeight, document.body.clientHeight, document.documentElement.clientHeight) - document.documentElement.clientHeight, // 整个网页高度\n        result = Math.round(a / b * 100), // 计算百分比\n        up = document.querySelector(\"#go-up\") // 获取按钮\n\n    if (result <= 95) {\n        up.childNodes[0].style.display = 'none'\n        up.childNodes[1].style.display = 'block'\n        up.childNodes[1].innerHTML = result;\n    } else {\n        up.childNodes[1].style.display = 'none'\n        up.childNodes[0].style.display = 'block'\n    }\n}","site":{"data":{}},"cover":false,"excerpt":"","more":"window.onscroll = percent;// 执行函数\n// 页面百分比\nfunction percent() {\n    let a = document.documentElement.scrollTop || window.pageYOffset, // 卷去高度\n        b = Math.max(document.body.scrollHeight, document.documentElement.scrollHeight, document.body.offsetHeight, document.documentElement.offsetHeight, document.body.clientHeight, document.documentElement.clientHeight) - document.documentElement.clientHeight, // 整个网页高度\n        result = Math.round(a / b * 100), // 计算百分比\n        up = document.querySelector(\"#go-up\") // 获取按钮\n\n    if (result <= 95) {\n        up.childNodes[0].style.display = 'none'\n        up.childNodes[1].style.display = 'block'\n        up.childNodes[1].innerHTML = result;\n    } else {\n        up.childNodes[1].style.display = 'none'\n        up.childNodes[0].style.display = 'block'\n    }\n}"},{"_content":"// 分享本页\nfunction share_() {\n    let url = window.location.origin + window.location.pathname\n    try {\n        // 截取标题\n        var title = document.title;\n        var subTitle = title.endsWith(\"| Fomalhaut🥝\") ? title.substring(0, title.length - 14) : title;\n        navigator.clipboard.writeText('Fomalhaut🥝的站内分享\\n标题：' + subTitle + '\\n链接：' + url + '\\n欢迎来访！🍭🍭🍭');\n        new Vue({\n            data: function () {\n                this.$notify({\n                    title: \"成功复制分享信息🎉\",\n                    message: \"您现在可以通过粘贴直接跟小伙伴分享了！\",\n                    position: 'top-left',\n                    offset: 50,\n                    showClose: true,\n                    type: \"success\", \n                    duration: 5000\n                });\n                // return { visible: false }\n            }\n        })\n    } catch (err) {\n        console.error('复制失败！', err);\n    }\n    // new ClipboardJS(\".share\", { text: function () { return '标题：' + document.title + '\\n链接：' + url } });\n    // btf.snackbarShow(\"本页链接已复制到剪切板，快去分享吧~\")\n}\n\n// 防抖\nfunction share() {\n    debounce(share_, 300);\n}","source":"js/share.js","raw":"// 分享本页\nfunction share_() {\n    let url = window.location.origin + window.location.pathname\n    try {\n        // 截取标题\n        var title = document.title;\n        var subTitle = title.endsWith(\"| Fomalhaut🥝\") ? title.substring(0, title.length - 14) : title;\n        navigator.clipboard.writeText('Fomalhaut🥝的站内分享\\n标题：' + subTitle + '\\n链接：' + url + '\\n欢迎来访！🍭🍭🍭');\n        new Vue({\n            data: function () {\n                this.$notify({\n                    title: \"成功复制分享信息🎉\",\n                    message: \"您现在可以通过粘贴直接跟小伙伴分享了！\",\n                    position: 'top-left',\n                    offset: 50,\n                    showClose: true,\n                    type: \"success\", \n                    duration: 5000\n                });\n                // return { visible: false }\n            }\n        })\n    } catch (err) {\n        console.error('复制失败！', err);\n    }\n    // new ClipboardJS(\".share\", { text: function () { return '标题：' + document.title + '\\n链接：' + url } });\n    // btf.snackbarShow(\"本页链接已复制到剪切板，快去分享吧~\")\n}\n\n// 防抖\nfunction share() {\n    debounce(share_, 300);\n}","date":"2024-02-04T23:09:52.789Z","updated":"2024-02-04T23:09:52.789Z","path":"js/share.js","layout":"false","title":"","comments":1,"_id":"cltxxetag000a6cdsdiiybhz7","content":"// 分享本页\nfunction share_() {\n    let url = window.location.origin + window.location.pathname\n    try {\n        // 截取标题\n        var title = document.title;\n        var subTitle = title.endsWith(\"| Fomalhaut🥝\") ? title.substring(0, title.length - 14) : title;\n        navigator.clipboard.writeText('Fomalhaut🥝的站内分享\\n标题：' + subTitle + '\\n链接：' + url + '\\n欢迎来访！🍭🍭🍭');\n        new Vue({\n            data: function () {\n                this.$notify({\n                    title: \"成功复制分享信息🎉\",\n                    message: \"您现在可以通过粘贴直接跟小伙伴分享了！\",\n                    position: 'top-left',\n                    offset: 50,\n                    showClose: true,\n                    type: \"success\", \n                    duration: 5000\n                });\n                // return { visible: false }\n            }\n        })\n    } catch (err) {\n        console.error('复制失败！', err);\n    }\n    // new ClipboardJS(\".share\", { text: function () { return '标题：' + document.title + '\\n链接：' + url } });\n    // btf.snackbarShow(\"本页链接已复制到剪切板，快去分享吧~\")\n}\n\n// 防抖\nfunction share() {\n    debounce(share_, 300);\n}","site":{"data":{}},"cover":false,"excerpt":"","more":"// 分享本页\nfunction share_() {\n    let url = window.location.origin + window.location.pathname\n    try {\n        // 截取标题\n        var title = document.title;\n        var subTitle = title.endsWith(\"| Fomalhaut🥝\") ? title.substring(0, title.length - 14) : title;\n        navigator.clipboard.writeText('Fomalhaut🥝的站内分享\\n标题：' + subTitle + '\\n链接：' + url + '\\n欢迎来访！🍭🍭🍭');\n        new Vue({\n            data: function () {\n                this.$notify({\n                    title: \"成功复制分享信息🎉\",\n                    message: \"您现在可以通过粘贴直接跟小伙伴分享了！\",\n                    position: 'top-left',\n                    offset: 50,\n                    showClose: true,\n                    type: \"success\", \n                    duration: 5000\n                });\n                // return { visible: false }\n            }\n        })\n    } catch (err) {\n        console.error('复制失败！', err);\n    }\n    // new ClipboardJS(\".share\", { text: function () { return '标题：' + document.title + '\\n链接：' + url } });\n    // btf.snackbarShow(\"本页链接已复制到剪切板，快去分享吧~\")\n}\n\n// 防抖\nfunction share() {\n    debounce(share_, 300);\n}"},{"_content":"//get请求\n$.ajax({\n    type: 'get',\n    url: 'https://apis.map.qq.com/ws/location/v1/ip',\n    data: {\n        key: 'PQGBZ-6HFKM-BOK64-6MJYU-5R3O6-7HFW6',\n        output: 'jsonp',\n    },\n    dataType: 'jsonp',\n    success: function (res) {\n        ipLoacation = res;\n        showWelcome();\n    }\n})\n\n//根据经纬度计算两点距离(点1经度,点1纬度,点2经度,点2纬度)\nfunction getDistance(e1, n1, e2, n2) {\n    const R = 6371\n    const { sin, cos, asin, PI, hypot } = Math\n\n    let getPoint = (e, n) => {\n        e *= PI / 180\n        n *= PI / 180\n        return { x: cos(n) * cos(e), y: cos(n) * sin(e), z: sin(n) }\n    }\n\n    let a = getPoint(e1, n1)\n    let b = getPoint(e2, n2)\n    let c = hypot(a.x - b.x, a.y - b.y, a.z - b.z)\n    let r = asin(c / 2) * 2 * R\n    return Math.round(r);\n}\n\n//根据自己的需求定制\nfunction showWelcome() {\n    if (!document.getElementById(\"welcome-info\")) return\n\n    let dist = getDistance(120.57186, 31.29579, ipLoacation.result.location.lng, ipLoacation.result.location.lat); //这里记录你自己的经纬度\n\n    let pos = ipLoacation.result.ad_info.nation;\n    let posdesc;\n    //根据国家、省份、城市信息自定义欢迎语\n    //海外地区不支持省份及城市信息\n    switch (ipLoacation.result.ad_info.nation) {\n        case \"日本\":\n            posdesc = \"よろしく，一起去看樱花吗\";\n            break;\n        case \"美国\":\n            posdesc = \"Make America Great Again!\";\n            break;\n        case \"英国\":\n            posdesc = \"想同你一起夜乘伦敦眼\";\n            break;\n        case \"俄罗斯\":\n            posdesc = \"干了这瓶伏特加！\";\n            break;\n        case \"法国\":\n            posdesc = \"C'est La Vie\";\n            break;\n        case \"德国\":\n            posdesc = \"Die Zeit verging im Fluge.\";\n            break;\n        case \"澳大利亚\":\n            posdesc = \"一起去大堡礁吧！\";\n            break;\n        case \"加拿大\":\n            posdesc = \"拾起一片枫叶赠予你\";\n            break;\n        case \"中国\":\n            pos = ipLoacation.result.ad_info.province + \" \" + ipLoacation.result.ad_info.city;\n            switch (ipLoacation.result.ad_info.province) {\n                case \"北京市\":\n                    pos = \"北京市\";\n                    posdesc = \"北——京——欢迎你~~~\";\n                    break;\n                case \"天津市\":\n                    pos = \"天津市\";\n                    posdesc = \"讲段相声吧。\";\n                    break;\n                case \"重庆市\":\n                    pos = \"重庆市\";\n                    posdesc = \"高德地图:已到达重庆，下面交给百度地图导航。\"\n                    break;\n                case \"河北省\":\n                    posdesc = \"山势巍巍成壁垒，天下雄关。铁马金戈由此向，无限江山。\";\n                    break;\n                case \"山西省\":\n                    posdesc = \"展开坐具长三尺，已占山河五百余。\";\n                    break;\n                case \"内蒙古自治区\":\n                    posdesc = \"天苍苍，野茫茫，风吹草低见牛羊。\";\n                    break;\n                case \"辽宁省\":\n                    posdesc = \"我想吃烤鸡架！\";\n                    break;\n                case \"吉林省\":\n                    posdesc = \"状元阁就是东北烧烤之王。\";\n                    break;\n                case \"黑龙江省\":\n                    posdesc = \"很喜欢哈尔滨大剧院。\";\n                    break;\n                case \"上海市\":\n                    pos = \"上海市\";\n                    posdesc = \"众所周知，中国只有两个城市。\";\n                    break;\n                case \"江苏省\":\n                    switch (ipLoacation.result.ad_info.city) {\n                        case \"南京市\":\n                            posdesc = \"欢迎来自安徽省南京市的小伙伴。\";\n                            break;\n                        case \"苏州市\":\n                            posdesc = \"上有天堂，下有苏杭。\";\n                            break;\n                        case \"泰州市\":\n                            posdesc = \"这里也是我的故乡。\";\n                            break;\n                        default:\n                            posdesc = \"散装是必须要散装的。\";\n                            break;\n                    }\n                    break;\n                case \"浙江省\":\n                    posdesc = \"东风渐绿西湖柳，雁已还人未南归。\";\n                    break;\n                case \"安徽省\":\n                    posdesc = \"蚌埠住了，芜湖起飞。\";\n                    break;\n                case \"福建省\":\n                    posdesc = \"井邑白云间，岩城远带山。\";\n                    break;\n                case \"江西省\":\n                    posdesc = \"落霞与孤鹜齐飞，秋水共长天一色。\";\n                    break;\n                case \"山东省\":\n                    posdesc = \"遥望齐州九点烟，一泓海水杯中泻。\";\n                    break;\n                case \"湖北省\":\n                    posdesc = \"来碗热干面！\";\n                    break;\n                case \"湖南省\":\n                    posdesc = \"74751，长沙斯塔克。\";\n                    break;\n                case \"广东省\":\n                    posdesc = \"老板来两斤福建人。\";\n                    break;\n                case \"广西壮族自治区\":\n                    posdesc = \"桂林山水甲天下。\";\n                    break;\n                case \"海南省\":\n                    posdesc = \"朝观日出逐白浪，夕看云起收霞光。\";\n                    break;\n                case \"四川省\":\n                    posdesc = \"康康川妹子。\";\n                    break;\n                case \"贵州省\":\n                    posdesc = \"茅台，学生，再塞200。\";\n                    break;\n                case \"云南省\":\n                    posdesc = \"玉龙飞舞云缠绕，万仞冰川直耸天。\";\n                    break;\n                case \"西藏自治区\":\n                    posdesc = \"躺在茫茫草原上，仰望蓝天。\";\n                    break;\n                case \"陕西省\":\n                    posdesc = \"来份臊子面加馍。\";\n                    break;\n                case \"甘肃省\":\n                    posdesc = \"羌笛何须怨杨柳，春风不度玉门关。\";\n                    break;\n                case \"青海省\":\n                    posdesc = \"牛肉干和老酸奶都好好吃。\";\n                    break;\n                case \"宁夏回族自治区\":\n                    posdesc = \"大漠孤烟直，长河落日圆。\";\n                    break;\n                case \"新疆维吾尔自治区\":\n                    posdesc = \"驼铃古道丝绸路，胡马犹闻唐汉风。\";\n                    break;\n                case \"台湾省\":\n                    posdesc = \"我在这头，大陆在那头。\";\n                    break;\n                case \"香港特别行政区\":\n                    pos = \"香港特别行政区\";\n                    posdesc = \"永定贼有残留地鬼嚎，迎击光非岁玉。\";\n                    break;\n                case \"澳门特别行政区\":\n                    pos = \"澳门特别行政区\";\n                    posdesc = \"性感荷官，在线发牌。\";\n                    break;\n                default:\n                    posdesc = \"社会主义大法好。\";\n                    break;\n            }\n            break;\n        default:\n            posdesc = \"带我去你的国家逛逛吧。\";\n            break;\n    }\n\n    //判断时间\n    let timeChange;\n    let date = new Date();\n    if (date.getHours()>= 5 && date.getHours() < 11) timeChange = \"<span>上午好</span>，一日之计在于晨\";\n    else if (date.getHours()>= 1 && date.getHours() < 13) timeChange = \"<span>中午好</span>，该摸鱼吃午饭了\";\n    else if (date.getHours() >= 13 && date.getHours() < 15) timeChange = \"<span>下午好</span>，懒懒地睡个午觉吧！\";\n    else if (date.getHours() >= 15 && date.getHours() < 16) timeChange = \"<span>三点几啦</span>，饮茶先啦！\";\n    else if (date.getHours() >= 16 && date.getHours() < 19) timeChange = \"<span>夕阳无限好！</span>\";\n    else if (date.getHours() >= 19 && date.getHours() < 24) timeChange = \"<span>晚上好</span>，夜生活嗨起来！\";\n    else timeChange = \"夜深了，早点休息，少熬夜\";\n\n    //自定义文本需要放的位置\n    document.getElementById(\"welcome-info\").innerHTML = `欢迎来自<span>${pos}</span>的小伙伴，${timeChange}<br>你距离ichika约有<span>${dist}</span>公里，${posdesc}`;\n}\n\n\n\n\n","source":"js/txmap.js","raw":"//get请求\n$.ajax({\n    type: 'get',\n    url: 'https://apis.map.qq.com/ws/location/v1/ip',\n    data: {\n        key: 'PQGBZ-6HFKM-BOK64-6MJYU-5R3O6-7HFW6',\n        output: 'jsonp',\n    },\n    dataType: 'jsonp',\n    success: function (res) {\n        ipLoacation = res;\n        showWelcome();\n    }\n})\n\n//根据经纬度计算两点距离(点1经度,点1纬度,点2经度,点2纬度)\nfunction getDistance(e1, n1, e2, n2) {\n    const R = 6371\n    const { sin, cos, asin, PI, hypot } = Math\n\n    let getPoint = (e, n) => {\n        e *= PI / 180\n        n *= PI / 180\n        return { x: cos(n) * cos(e), y: cos(n) * sin(e), z: sin(n) }\n    }\n\n    let a = getPoint(e1, n1)\n    let b = getPoint(e2, n2)\n    let c = hypot(a.x - b.x, a.y - b.y, a.z - b.z)\n    let r = asin(c / 2) * 2 * R\n    return Math.round(r);\n}\n\n//根据自己的需求定制\nfunction showWelcome() {\n    if (!document.getElementById(\"welcome-info\")) return\n\n    let dist = getDistance(120.57186, 31.29579, ipLoacation.result.location.lng, ipLoacation.result.location.lat); //这里记录你自己的经纬度\n\n    let pos = ipLoacation.result.ad_info.nation;\n    let posdesc;\n    //根据国家、省份、城市信息自定义欢迎语\n    //海外地区不支持省份及城市信息\n    switch (ipLoacation.result.ad_info.nation) {\n        case \"日本\":\n            posdesc = \"よろしく，一起去看樱花吗\";\n            break;\n        case \"美国\":\n            posdesc = \"Make America Great Again!\";\n            break;\n        case \"英国\":\n            posdesc = \"想同你一起夜乘伦敦眼\";\n            break;\n        case \"俄罗斯\":\n            posdesc = \"干了这瓶伏特加！\";\n            break;\n        case \"法国\":\n            posdesc = \"C'est La Vie\";\n            break;\n        case \"德国\":\n            posdesc = \"Die Zeit verging im Fluge.\";\n            break;\n        case \"澳大利亚\":\n            posdesc = \"一起去大堡礁吧！\";\n            break;\n        case \"加拿大\":\n            posdesc = \"拾起一片枫叶赠予你\";\n            break;\n        case \"中国\":\n            pos = ipLoacation.result.ad_info.province + \" \" + ipLoacation.result.ad_info.city;\n            switch (ipLoacation.result.ad_info.province) {\n                case \"北京市\":\n                    pos = \"北京市\";\n                    posdesc = \"北——京——欢迎你~~~\";\n                    break;\n                case \"天津市\":\n                    pos = \"天津市\";\n                    posdesc = \"讲段相声吧。\";\n                    break;\n                case \"重庆市\":\n                    pos = \"重庆市\";\n                    posdesc = \"高德地图:已到达重庆，下面交给百度地图导航。\"\n                    break;\n                case \"河北省\":\n                    posdesc = \"山势巍巍成壁垒，天下雄关。铁马金戈由此向，无限江山。\";\n                    break;\n                case \"山西省\":\n                    posdesc = \"展开坐具长三尺，已占山河五百余。\";\n                    break;\n                case \"内蒙古自治区\":\n                    posdesc = \"天苍苍，野茫茫，风吹草低见牛羊。\";\n                    break;\n                case \"辽宁省\":\n                    posdesc = \"我想吃烤鸡架！\";\n                    break;\n                case \"吉林省\":\n                    posdesc = \"状元阁就是东北烧烤之王。\";\n                    break;\n                case \"黑龙江省\":\n                    posdesc = \"很喜欢哈尔滨大剧院。\";\n                    break;\n                case \"上海市\":\n                    pos = \"上海市\";\n                    posdesc = \"众所周知，中国只有两个城市。\";\n                    break;\n                case \"江苏省\":\n                    switch (ipLoacation.result.ad_info.city) {\n                        case \"南京市\":\n                            posdesc = \"欢迎来自安徽省南京市的小伙伴。\";\n                            break;\n                        case \"苏州市\":\n                            posdesc = \"上有天堂，下有苏杭。\";\n                            break;\n                        case \"泰州市\":\n                            posdesc = \"这里也是我的故乡。\";\n                            break;\n                        default:\n                            posdesc = \"散装是必须要散装的。\";\n                            break;\n                    }\n                    break;\n                case \"浙江省\":\n                    posdesc = \"东风渐绿西湖柳，雁已还人未南归。\";\n                    break;\n                case \"安徽省\":\n                    posdesc = \"蚌埠住了，芜湖起飞。\";\n                    break;\n                case \"福建省\":\n                    posdesc = \"井邑白云间，岩城远带山。\";\n                    break;\n                case \"江西省\":\n                    posdesc = \"落霞与孤鹜齐飞，秋水共长天一色。\";\n                    break;\n                case \"山东省\":\n                    posdesc = \"遥望齐州九点烟，一泓海水杯中泻。\";\n                    break;\n                case \"湖北省\":\n                    posdesc = \"来碗热干面！\";\n                    break;\n                case \"湖南省\":\n                    posdesc = \"74751，长沙斯塔克。\";\n                    break;\n                case \"广东省\":\n                    posdesc = \"老板来两斤福建人。\";\n                    break;\n                case \"广西壮族自治区\":\n                    posdesc = \"桂林山水甲天下。\";\n                    break;\n                case \"海南省\":\n                    posdesc = \"朝观日出逐白浪，夕看云起收霞光。\";\n                    break;\n                case \"四川省\":\n                    posdesc = \"康康川妹子。\";\n                    break;\n                case \"贵州省\":\n                    posdesc = \"茅台，学生，再塞200。\";\n                    break;\n                case \"云南省\":\n                    posdesc = \"玉龙飞舞云缠绕，万仞冰川直耸天。\";\n                    break;\n                case \"西藏自治区\":\n                    posdesc = \"躺在茫茫草原上，仰望蓝天。\";\n                    break;\n                case \"陕西省\":\n                    posdesc = \"来份臊子面加馍。\";\n                    break;\n                case \"甘肃省\":\n                    posdesc = \"羌笛何须怨杨柳，春风不度玉门关。\";\n                    break;\n                case \"青海省\":\n                    posdesc = \"牛肉干和老酸奶都好好吃。\";\n                    break;\n                case \"宁夏回族自治区\":\n                    posdesc = \"大漠孤烟直，长河落日圆。\";\n                    break;\n                case \"新疆维吾尔自治区\":\n                    posdesc = \"驼铃古道丝绸路，胡马犹闻唐汉风。\";\n                    break;\n                case \"台湾省\":\n                    posdesc = \"我在这头，大陆在那头。\";\n                    break;\n                case \"香港特别行政区\":\n                    pos = \"香港特别行政区\";\n                    posdesc = \"永定贼有残留地鬼嚎，迎击光非岁玉。\";\n                    break;\n                case \"澳门特别行政区\":\n                    pos = \"澳门特别行政区\";\n                    posdesc = \"性感荷官，在线发牌。\";\n                    break;\n                default:\n                    posdesc = \"社会主义大法好。\";\n                    break;\n            }\n            break;\n        default:\n            posdesc = \"带我去你的国家逛逛吧。\";\n            break;\n    }\n\n    //判断时间\n    let timeChange;\n    let date = new Date();\n    if (date.getHours()>= 5 && date.getHours() < 11) timeChange = \"<span>上午好</span>，一日之计在于晨\";\n    else if (date.getHours()>= 1 && date.getHours() < 13) timeChange = \"<span>中午好</span>，该摸鱼吃午饭了\";\n    else if (date.getHours() >= 13 && date.getHours() < 15) timeChange = \"<span>下午好</span>，懒懒地睡个午觉吧！\";\n    else if (date.getHours() >= 15 && date.getHours() < 16) timeChange = \"<span>三点几啦</span>，饮茶先啦！\";\n    else if (date.getHours() >= 16 && date.getHours() < 19) timeChange = \"<span>夕阳无限好！</span>\";\n    else if (date.getHours() >= 19 && date.getHours() < 24) timeChange = \"<span>晚上好</span>，夜生活嗨起来！\";\n    else timeChange = \"夜深了，早点休息，少熬夜\";\n\n    //自定义文本需要放的位置\n    document.getElementById(\"welcome-info\").innerHTML = `欢迎来自<span>${pos}</span>的小伙伴，${timeChange}<br>你距离ichika约有<span>${dist}</span>公里，${posdesc}`;\n}\n\n\n\n\n","date":"2024-02-05T06:55:41.110Z","updated":"2024-02-05T06:55:41.110Z","path":"js/txmap.js","layout":"false","title":"","comments":1,"_id":"cltxxetak000c6cds08wt34yo","content":"//get请求\n$.ajax({\n    type: 'get',\n    url: 'https://apis.map.qq.com/ws/location/v1/ip',\n    data: {\n        key: 'PQGBZ-6HFKM-BOK64-6MJYU-5R3O6-7HFW6',\n        output: 'jsonp',\n    },\n    dataType: 'jsonp',\n    success: function (res) {\n        ipLoacation = res;\n        showWelcome();\n    }\n})\n\n//根据经纬度计算两点距离(点1经度,点1纬度,点2经度,点2纬度)\nfunction getDistance(e1, n1, e2, n2) {\n    const R = 6371\n    const { sin, cos, asin, PI, hypot } = Math\n\n    let getPoint = (e, n) => {\n        e *= PI / 180\n        n *= PI / 180\n        return { x: cos(n) * cos(e), y: cos(n) * sin(e), z: sin(n) }\n    }\n\n    let a = getPoint(e1, n1)\n    let b = getPoint(e2, n2)\n    let c = hypot(a.x - b.x, a.y - b.y, a.z - b.z)\n    let r = asin(c / 2) * 2 * R\n    return Math.round(r);\n}\n\n//根据自己的需求定制\nfunction showWelcome() {\n    if (!document.getElementById(\"welcome-info\")) return\n\n    let dist = getDistance(120.57186, 31.29579, ipLoacation.result.location.lng, ipLoacation.result.location.lat); //这里记录你自己的经纬度\n\n    let pos = ipLoacation.result.ad_info.nation;\n    let posdesc;\n    //根据国家、省份、城市信息自定义欢迎语\n    //海外地区不支持省份及城市信息\n    switch (ipLoacation.result.ad_info.nation) {\n        case \"日本\":\n            posdesc = \"よろしく，一起去看樱花吗\";\n            break;\n        case \"美国\":\n            posdesc = \"Make America Great Again!\";\n            break;\n        case \"英国\":\n            posdesc = \"想同你一起夜乘伦敦眼\";\n            break;\n        case \"俄罗斯\":\n            posdesc = \"干了这瓶伏特加！\";\n            break;\n        case \"法国\":\n            posdesc = \"C'est La Vie\";\n            break;\n        case \"德国\":\n            posdesc = \"Die Zeit verging im Fluge.\";\n            break;\n        case \"澳大利亚\":\n            posdesc = \"一起去大堡礁吧！\";\n            break;\n        case \"加拿大\":\n            posdesc = \"拾起一片枫叶赠予你\";\n            break;\n        case \"中国\":\n            pos = ipLoacation.result.ad_info.province + \" \" + ipLoacation.result.ad_info.city;\n            switch (ipLoacation.result.ad_info.province) {\n                case \"北京市\":\n                    pos = \"北京市\";\n                    posdesc = \"北——京——欢迎你~~~\";\n                    break;\n                case \"天津市\":\n                    pos = \"天津市\";\n                    posdesc = \"讲段相声吧。\";\n                    break;\n                case \"重庆市\":\n                    pos = \"重庆市\";\n                    posdesc = \"高德地图:已到达重庆，下面交给百度地图导航。\"\n                    break;\n                case \"河北省\":\n                    posdesc = \"山势巍巍成壁垒，天下雄关。铁马金戈由此向，无限江山。\";\n                    break;\n                case \"山西省\":\n                    posdesc = \"展开坐具长三尺，已占山河五百余。\";\n                    break;\n                case \"内蒙古自治区\":\n                    posdesc = \"天苍苍，野茫茫，风吹草低见牛羊。\";\n                    break;\n                case \"辽宁省\":\n                    posdesc = \"我想吃烤鸡架！\";\n                    break;\n                case \"吉林省\":\n                    posdesc = \"状元阁就是东北烧烤之王。\";\n                    break;\n                case \"黑龙江省\":\n                    posdesc = \"很喜欢哈尔滨大剧院。\";\n                    break;\n                case \"上海市\":\n                    pos = \"上海市\";\n                    posdesc = \"众所周知，中国只有两个城市。\";\n                    break;\n                case \"江苏省\":\n                    switch (ipLoacation.result.ad_info.city) {\n                        case \"南京市\":\n                            posdesc = \"欢迎来自安徽省南京市的小伙伴。\";\n                            break;\n                        case \"苏州市\":\n                            posdesc = \"上有天堂，下有苏杭。\";\n                            break;\n                        case \"泰州市\":\n                            posdesc = \"这里也是我的故乡。\";\n                            break;\n                        default:\n                            posdesc = \"散装是必须要散装的。\";\n                            break;\n                    }\n                    break;\n                case \"浙江省\":\n                    posdesc = \"东风渐绿西湖柳，雁已还人未南归。\";\n                    break;\n                case \"安徽省\":\n                    posdesc = \"蚌埠住了，芜湖起飞。\";\n                    break;\n                case \"福建省\":\n                    posdesc = \"井邑白云间，岩城远带山。\";\n                    break;\n                case \"江西省\":\n                    posdesc = \"落霞与孤鹜齐飞，秋水共长天一色。\";\n                    break;\n                case \"山东省\":\n                    posdesc = \"遥望齐州九点烟，一泓海水杯中泻。\";\n                    break;\n                case \"湖北省\":\n                    posdesc = \"来碗热干面！\";\n                    break;\n                case \"湖南省\":\n                    posdesc = \"74751，长沙斯塔克。\";\n                    break;\n                case \"广东省\":\n                    posdesc = \"老板来两斤福建人。\";\n                    break;\n                case \"广西壮族自治区\":\n                    posdesc = \"桂林山水甲天下。\";\n                    break;\n                case \"海南省\":\n                    posdesc = \"朝观日出逐白浪，夕看云起收霞光。\";\n                    break;\n                case \"四川省\":\n                    posdesc = \"康康川妹子。\";\n                    break;\n                case \"贵州省\":\n                    posdesc = \"茅台，学生，再塞200。\";\n                    break;\n                case \"云南省\":\n                    posdesc = \"玉龙飞舞云缠绕，万仞冰川直耸天。\";\n                    break;\n                case \"西藏自治区\":\n                    posdesc = \"躺在茫茫草原上，仰望蓝天。\";\n                    break;\n                case \"陕西省\":\n                    posdesc = \"来份臊子面加馍。\";\n                    break;\n                case \"甘肃省\":\n                    posdesc = \"羌笛何须怨杨柳，春风不度玉门关。\";\n                    break;\n                case \"青海省\":\n                    posdesc = \"牛肉干和老酸奶都好好吃。\";\n                    break;\n                case \"宁夏回族自治区\":\n                    posdesc = \"大漠孤烟直，长河落日圆。\";\n                    break;\n                case \"新疆维吾尔自治区\":\n                    posdesc = \"驼铃古道丝绸路，胡马犹闻唐汉风。\";\n                    break;\n                case \"台湾省\":\n                    posdesc = \"我在这头，大陆在那头。\";\n                    break;\n                case \"香港特别行政区\":\n                    pos = \"香港特别行政区\";\n                    posdesc = \"永定贼有残留地鬼嚎，迎击光非岁玉。\";\n                    break;\n                case \"澳门特别行政区\":\n                    pos = \"澳门特别行政区\";\n                    posdesc = \"性感荷官，在线发牌。\";\n                    break;\n                default:\n                    posdesc = \"社会主义大法好。\";\n                    break;\n            }\n            break;\n        default:\n            posdesc = \"带我去你的国家逛逛吧。\";\n            break;\n    }\n\n    //判断时间\n    let timeChange;\n    let date = new Date();\n    if (date.getHours()>= 5 && date.getHours() < 11) timeChange = \"<span>上午好</span>，一日之计在于晨\";\n    else if (date.getHours()>= 1 && date.getHours() < 13) timeChange = \"<span>中午好</span>，该摸鱼吃午饭了\";\n    else if (date.getHours() >= 13 && date.getHours() < 15) timeChange = \"<span>下午好</span>，懒懒地睡个午觉吧！\";\n    else if (date.getHours() >= 15 && date.getHours() < 16) timeChange = \"<span>三点几啦</span>，饮茶先啦！\";\n    else if (date.getHours() >= 16 && date.getHours() < 19) timeChange = \"<span>夕阳无限好！</span>\";\n    else if (date.getHours() >= 19 && date.getHours() < 24) timeChange = \"<span>晚上好</span>，夜生活嗨起来！\";\n    else timeChange = \"夜深了，早点休息，少熬夜\";\n\n    //自定义文本需要放的位置\n    document.getElementById(\"welcome-info\").innerHTML = `欢迎来自<span>${pos}</span>的小伙伴，${timeChange}<br>你距离ichika约有<span>${dist}</span>公里，${posdesc}`;\n}\n\n\n\n\n","site":{"data":{}},"cover":false,"excerpt":"","more":"//get请求\n$.ajax({\n    type: 'get',\n    url: 'https://apis.map.qq.com/ws/location/v1/ip',\n    data: {\n        key: 'PQGBZ-6HFKM-BOK64-6MJYU-5R3O6-7HFW6',\n        output: 'jsonp',\n    },\n    dataType: 'jsonp',\n    success: function (res) {\n        ipLoacation = res;\n        showWelcome();\n    }\n})\n\n//根据经纬度计算两点距离(点1经度,点1纬度,点2经度,点2纬度)\nfunction getDistance(e1, n1, e2, n2) {\n    const R = 6371\n    const { sin, cos, asin, PI, hypot } = Math\n\n    let getPoint = (e, n) => {\n        e *= PI / 180\n        n *= PI / 180\n        return { x: cos(n) * cos(e), y: cos(n) * sin(e), z: sin(n) }\n    }\n\n    let a = getPoint(e1, n1)\n    let b = getPoint(e2, n2)\n    let c = hypot(a.x - b.x, a.y - b.y, a.z - b.z)\n    let r = asin(c / 2) * 2 * R\n    return Math.round(r);\n}\n\n//根据自己的需求定制\nfunction showWelcome() {\n    if (!document.getElementById(\"welcome-info\")) return\n\n    let dist = getDistance(120.57186, 31.29579, ipLoacation.result.location.lng, ipLoacation.result.location.lat); //这里记录你自己的经纬度\n\n    let pos = ipLoacation.result.ad_info.nation;\n    let posdesc;\n    //根据国家、省份、城市信息自定义欢迎语\n    //海外地区不支持省份及城市信息\n    switch (ipLoacation.result.ad_info.nation) {\n        case \"日本\":\n            posdesc = \"よろしく，一起去看樱花吗\";\n            break;\n        case \"美国\":\n            posdesc = \"Make America Great Again!\";\n            break;\n        case \"英国\":\n            posdesc = \"想同你一起夜乘伦敦眼\";\n            break;\n        case \"俄罗斯\":\n            posdesc = \"干了这瓶伏特加！\";\n            break;\n        case \"法国\":\n            posdesc = \"C'est La Vie\";\n            break;\n        case \"德国\":\n            posdesc = \"Die Zeit verging im Fluge.\";\n            break;\n        case \"澳大利亚\":\n            posdesc = \"一起去大堡礁吧！\";\n            break;\n        case \"加拿大\":\n            posdesc = \"拾起一片枫叶赠予你\";\n            break;\n        case \"中国\":\n            pos = ipLoacation.result.ad_info.province + \" \" + ipLoacation.result.ad_info.city;\n            switch (ipLoacation.result.ad_info.province) {\n                case \"北京市\":\n                    pos = \"北京市\";\n                    posdesc = \"北——京——欢迎你~~~\";\n                    break;\n                case \"天津市\":\n                    pos = \"天津市\";\n                    posdesc = \"讲段相声吧。\";\n                    break;\n                case \"重庆市\":\n                    pos = \"重庆市\";\n                    posdesc = \"高德地图:已到达重庆，下面交给百度地图导航。\"\n                    break;\n                case \"河北省\":\n                    posdesc = \"山势巍巍成壁垒，天下雄关。铁马金戈由此向，无限江山。\";\n                    break;\n                case \"山西省\":\n                    posdesc = \"展开坐具长三尺，已占山河五百余。\";\n                    break;\n                case \"内蒙古自治区\":\n                    posdesc = \"天苍苍，野茫茫，风吹草低见牛羊。\";\n                    break;\n                case \"辽宁省\":\n                    posdesc = \"我想吃烤鸡架！\";\n                    break;\n                case \"吉林省\":\n                    posdesc = \"状元阁就是东北烧烤之王。\";\n                    break;\n                case \"黑龙江省\":\n                    posdesc = \"很喜欢哈尔滨大剧院。\";\n                    break;\n                case \"上海市\":\n                    pos = \"上海市\";\n                    posdesc = \"众所周知，中国只有两个城市。\";\n                    break;\n                case \"江苏省\":\n                    switch (ipLoacation.result.ad_info.city) {\n                        case \"南京市\":\n                            posdesc = \"欢迎来自安徽省南京市的小伙伴。\";\n                            break;\n                        case \"苏州市\":\n                            posdesc = \"上有天堂，下有苏杭。\";\n                            break;\n                        case \"泰州市\":\n                            posdesc = \"这里也是我的故乡。\";\n                            break;\n                        default:\n                            posdesc = \"散装是必须要散装的。\";\n                            break;\n                    }\n                    break;\n                case \"浙江省\":\n                    posdesc = \"东风渐绿西湖柳，雁已还人未南归。\";\n                    break;\n                case \"安徽省\":\n                    posdesc = \"蚌埠住了，芜湖起飞。\";\n                    break;\n                case \"福建省\":\n                    posdesc = \"井邑白云间，岩城远带山。\";\n                    break;\n                case \"江西省\":\n                    posdesc = \"落霞与孤鹜齐飞，秋水共长天一色。\";\n                    break;\n                case \"山东省\":\n                    posdesc = \"遥望齐州九点烟，一泓海水杯中泻。\";\n                    break;\n                case \"湖北省\":\n                    posdesc = \"来碗热干面！\";\n                    break;\n                case \"湖南省\":\n                    posdesc = \"74751，长沙斯塔克。\";\n                    break;\n                case \"广东省\":\n                    posdesc = \"老板来两斤福建人。\";\n                    break;\n                case \"广西壮族自治区\":\n                    posdesc = \"桂林山水甲天下。\";\n                    break;\n                case \"海南省\":\n                    posdesc = \"朝观日出逐白浪，夕看云起收霞光。\";\n                    break;\n                case \"四川省\":\n                    posdesc = \"康康川妹子。\";\n                    break;\n                case \"贵州省\":\n                    posdesc = \"茅台，学生，再塞200。\";\n                    break;\n                case \"云南省\":\n                    posdesc = \"玉龙飞舞云缠绕，万仞冰川直耸天。\";\n                    break;\n                case \"西藏自治区\":\n                    posdesc = \"躺在茫茫草原上，仰望蓝天。\";\n                    break;\n                case \"陕西省\":\n                    posdesc = \"来份臊子面加馍。\";\n                    break;\n                case \"甘肃省\":\n                    posdesc = \"羌笛何须怨杨柳，春风不度玉门关。\";\n                    break;\n                case \"青海省\":\n                    posdesc = \"牛肉干和老酸奶都好好吃。\";\n                    break;\n                case \"宁夏回族自治区\":\n                    posdesc = \"大漠孤烟直，长河落日圆。\";\n                    break;\n                case \"新疆维吾尔自治区\":\n                    posdesc = \"驼铃古道丝绸路，胡马犹闻唐汉风。\";\n                    break;\n                case \"台湾省\":\n                    posdesc = \"我在这头，大陆在那头。\";\n                    break;\n                case \"香港特别行政区\":\n                    pos = \"香港特别行政区\";\n                    posdesc = \"永定贼有残留地鬼嚎，迎击光非岁玉。\";\n                    break;\n                case \"澳门特别行政区\":\n                    pos = \"澳门特别行政区\";\n                    posdesc = \"性感荷官，在线发牌。\";\n                    break;\n                default:\n                    posdesc = \"社会主义大法好。\";\n                    break;\n            }\n            break;\n        default:\n            posdesc = \"带我去你的国家逛逛吧。\";\n            break;\n    }\n\n    //判断时间\n    let timeChange;\n    let date = new Date();\n    if (date.getHours()>= 5 && date.getHours() < 11) timeChange = \"<span>上午好</span>，一日之计在于晨\";\n    else if (date.getHours()>= 1 && date.getHours() < 13) timeChange = \"<span>中午好</span>，该摸鱼吃午饭了\";\n    else if (date.getHours() >= 13 && date.getHours() < 15) timeChange = \"<span>下午好</span>，懒懒地睡个午觉吧！\";\n    else if (date.getHours() >= 15 && date.getHours() < 16) timeChange = \"<span>三点几啦</span>，饮茶先啦！\";\n    else if (date.getHours() >= 16 && date.getHours() < 19) timeChange = \"<span>夕阳无限好！</span>\";\n    else if (date.getHours() >= 19 && date.getHours() < 24) timeChange = \"<span>晚上好</span>，夜生活嗨起来！\";\n    else timeChange = \"夜深了，早点休息，少熬夜\";\n\n    //自定义文本需要放的位置\n    document.getElementById(\"welcome-info\").innerHTML = `欢迎来自<span>${pos}</span>的小伙伴，${timeChange}<br>你距离ichika约有<span>${dist}</span>公里，${posdesc}`;\n}\n\n\n\n\n"}],"Post":[{"title":"C++编程技巧与规范","_content":"\n\n\n\n\n#### 注释\n\n对函数应有注释说明，内容包括：功能、输入/输出。\n/** \n\n * @brief 函数简要说明-测试函数\n * @param index    参数1\n * @param t        参数2 \n *\n * @return 返回说明\n *     -<em>false</em> fail\n *     -<em>true</em> succeed\n */\n","source":"_posts/C++编程技巧与规范.md","raw":"---\ntitle: C++编程技巧与规范\n---\n\n\n\n\n\n#### 注释\n\n对函数应有注释说明，内容包括：功能、输入/输出。\n/** \n\n * @brief 函数简要说明-测试函数\n * @param index    参数1\n * @param t        参数2 \n *\n * @return 返回说明\n *     -<em>false</em> fail\n *     -<em>true</em> succeed\n */\n","slug":"C++编程技巧与规范","published":1,"date":"2024-02-05T01:18:01.001Z","updated":"2024-02-05T01:18:01.001Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cltxxeta000016cds7pvu88mc","content":"<h4 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h4><p>对函数应有注释说明，内容包括：功能、输入/输出。<br>/** </p>\n<ul>\n<li>@brief 函数简要说明-测试函数</li>\n<li>@param index    参数1</li>\n<li>@param t        参数2<br>*</li>\n<li>@return 返回说明</li>\n<li>-<em>false</em> fail</li>\n<li>-<em>true</em> succeed<br>*/</li>\n</ul>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h4 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h4><p>对函数应有注释说明，内容包括：功能、输入/输出。<br>/** </p>\n<ul>\n<li>@brief 函数简要说明-测试函数</li>\n<li>@param index    参数1</li>\n<li>@param t        参数2<br>*</li>\n<li>@return 返回说明</li>\n<li>-<em>false</em> fail</li>\n<li>-<em>true</em> succeed<br>*/</li>\n</ul>\n"},{"title":"C++随手记","_content":"\n![编译期反射的作用](C:\\Users\\22953\\Desktop\\blog\\img\\编译期反射的作用.png)\n\nhttps://codechina.gitcode.host/programmer/cpp-update/1-C++14-magic_get-and-pod\n\n\n\n\n\n## 安装gcc和g++\n\n天在linux的服务器上安装C/C++的编译器gcc和g++，运行了如下两条命令：\n\nyum install gcc\nyum install g++\n\n　　然后发现gcc可以正确安装，但安装g++时却提示： Cannot find a package matching g++\n\n　　后在网上搜索后才发现，原来在linux下，C++的编译器不是g++这个名称，而是gcc-c++，由此看来的确是我想当然了。然后直接运行\n\n yum install gcc-c++ libstdc++-devel\n　　就可以了。安装完成后在linux下输入: which g++，就看到g++已经安装完成（一般是在 /usr/bin 目录下）\n\n## 关键字\n\n```c++\nstatic const int a;//success\nconst static int b;//success\n```\n\n# 哈希表\n\n**一般哈希表都是用来快速判断一个元素是否出现集合里**。\n\n## 结构体嵌套初始化\n\n 对普通类型int,char new后面添加（）自动初始化\n\n对类来说，无论后面是否添加（）都会初始化，即对结构体同理\n","source":"_posts/C++随手记.md","raw":"---\ntitle: C++随手记\n---\n\n![编译期反射的作用](C:\\Users\\22953\\Desktop\\blog\\img\\编译期反射的作用.png)\n\nhttps://codechina.gitcode.host/programmer/cpp-update/1-C++14-magic_get-and-pod\n\n\n\n\n\n## 安装gcc和g++\n\n天在linux的服务器上安装C/C++的编译器gcc和g++，运行了如下两条命令：\n\nyum install gcc\nyum install g++\n\n　　然后发现gcc可以正确安装，但安装g++时却提示： Cannot find a package matching g++\n\n　　后在网上搜索后才发现，原来在linux下，C++的编译器不是g++这个名称，而是gcc-c++，由此看来的确是我想当然了。然后直接运行\n\n yum install gcc-c++ libstdc++-devel\n　　就可以了。安装完成后在linux下输入: which g++，就看到g++已经安装完成（一般是在 /usr/bin 目录下）\n\n## 关键字\n\n```c++\nstatic const int a;//success\nconst static int b;//success\n```\n\n# 哈希表\n\n**一般哈希表都是用来快速判断一个元素是否出现集合里**。\n\n## 结构体嵌套初始化\n\n 对普通类型int,char new后面添加（）自动初始化\n\n对类来说，无论后面是否添加（）都会初始化，即对结构体同理\n","slug":"C++随手记","published":1,"date":"2024-02-05T01:18:01.266Z","updated":"2024-02-05T01:18:01.266Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cltxxeta800036cdsay2ressb","content":"<p><img src=\"C:\\Users\\22953\\Desktop\\blog\\img\\编译期反射的作用.png\" alt=\"编译期反射的作用\"></p>\n<p><a href=\"https://codechina.gitcode.host/programmer/cpp-update/1-C++14-magic_get-and-pod\">https://codechina.gitcode.host/programmer/cpp-update/1-C++14-magic_get-and-pod</a></p>\n<h2 id=\"安装gcc和g\"><a href=\"#安装gcc和g\" class=\"headerlink\" title=\"安装gcc和g++\"></a>安装gcc和g++</h2><p>天在linux的服务器上安装C/C++的编译器gcc和g++，运行了如下两条命令：</p>\n<p>yum install gcc<br>yum install g++</p>\n<p>　　然后发现gcc可以正确安装，但安装g++时却提示： Cannot find a package matching g++</p>\n<p>　　后在网上搜索后才发现，原来在linux下，C++的编译器不是g++这个名称，而是gcc-c++，由此看来的确是我想当然了。然后直接运行</p>\n<p> yum install gcc-c++ libstdc++-devel<br>　　就可以了。安装完成后在linux下输入: which g++，就看到g++已经安装完成（一般是在 /usr/bin 目录下）</p>\n<h2 id=\"关键字\"><a href=\"#关键字\" class=\"headerlink\" title=\"关键字\"></a>关键字</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">static</span> <span class=\"type\">const</span> <span class=\"type\">int</span> a;<span class=\"comment\">//success</span></span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">static</span> <span class=\"type\">int</span> b;<span class=\"comment\">//success</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"哈希表\"><a href=\"#哈希表\" class=\"headerlink\" title=\"哈希表\"></a>哈希表</h1><p><strong>一般哈希表都是用来快速判断一个元素是否出现集合里</strong>。</p>\n<h2 id=\"结构体嵌套初始化\"><a href=\"#结构体嵌套初始化\" class=\"headerlink\" title=\"结构体嵌套初始化\"></a>结构体嵌套初始化</h2><p> 对普通类型int,char new后面添加（）自动初始化</p>\n<p>对类来说，无论后面是否添加（）都会初始化，即对结构体同理</p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<p><img src=\"C:\\Users\\22953\\Desktop\\blog\\img\\编译期反射的作用.png\" alt=\"编译期反射的作用\"></p>\n<p><a href=\"https://codechina.gitcode.host/programmer/cpp-update/1-C++14-magic_get-and-pod\">https://codechina.gitcode.host/programmer/cpp-update/1-C++14-magic_get-and-pod</a></p>\n<h2 id=\"安装gcc和g\"><a href=\"#安装gcc和g\" class=\"headerlink\" title=\"安装gcc和g++\"></a>安装gcc和g++</h2><p>天在linux的服务器上安装C/C++的编译器gcc和g++，运行了如下两条命令：</p>\n<p>yum install gcc<br>yum install g++</p>\n<p>　　然后发现gcc可以正确安装，但安装g++时却提示： Cannot find a package matching g++</p>\n<p>　　后在网上搜索后才发现，原来在linux下，C++的编译器不是g++这个名称，而是gcc-c++，由此看来的确是我想当然了。然后直接运行</p>\n<p> yum install gcc-c++ libstdc++-devel<br>　　就可以了。安装完成后在linux下输入: which g++，就看到g++已经安装完成（一般是在 /usr/bin 目录下）</p>\n<h2 id=\"关键字\"><a href=\"#关键字\" class=\"headerlink\" title=\"关键字\"></a>关键字</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">static</span> <span class=\"type\">const</span> <span class=\"type\">int</span> a;<span class=\"comment\">//success</span></span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">static</span> <span class=\"type\">int</span> b;<span class=\"comment\">//success</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"哈希表\"><a href=\"#哈希表\" class=\"headerlink\" title=\"哈希表\"></a>哈希表</h1><p><strong>一般哈希表都是用来快速判断一个元素是否出现集合里</strong>。</p>\n<h2 id=\"结构体嵌套初始化\"><a href=\"#结构体嵌套初始化\" class=\"headerlink\" title=\"结构体嵌套初始化\"></a>结构体嵌套初始化</h2><p> 对普通类型int,char new后面添加（）自动初始化</p>\n<p>对类来说，无论后面是否添加（）都会初始化，即对结构体同理</p>\n"},{"title":"CPlusPlusThings","_content":"\n# 1.git代码地址\n\nhttps://github.com/Light-City/CPlusPlusThings\n\n\n\n","source":"_posts/CPlusPlusthings.md","raw":"---\ntitle: CPlusPlusThings\n---\n\n# 1.git代码地址\n\nhttps://github.com/Light-City/CPlusPlusThings\n\n\n\n","slug":"CPlusPlusthings","published":1,"date":"2024-02-05T01:18:01.557Z","updated":"2024-02-05T01:18:01.557Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cltxxetab00056cds19o50o5c","content":"<h1 id=\"1-git代码地址\"><a href=\"#1-git代码地址\" class=\"headerlink\" title=\"1.git代码地址\"></a>1.git代码地址</h1><p><a href=\"https://github.com/Light-City/CPlusPlusThings\">https://github.com/Light-City/CPlusPlusThings</a></p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"1-git代码地址\"><a href=\"#1-git代码地址\" class=\"headerlink\" title=\"1.git代码地址\"></a>1.git代码地址</h1><p><a href=\"https://github.com/Light-City/CPlusPlusThings\">https://github.com/Light-City/CPlusPlusThings</a></p>\n"},{"title":"C与C++基础知识","_content":"\n\n\n#### 字符串赋值\n\n##### char* 赋值\n\n```c++\nchar* temp1;\nchar temp2[24]=\"hello world\";\ntemp1 = temp2;\n\nchar* temp3=\"hello world\"; //error  C++禁止该赋值方式\n```\n\n#### 打印\n\n```c++\nprintf(\"%d\",temp); //打印十进制的整数类型\n\nint temp1=10;\nchar* temp2=\"hello world\";\nprintf(temp1);//error printf支持const char* 类型，不支持int类型\nprintf(temp2);//success 与printf(\"%s\",temp2);一样\n\n```\n\n#### strcpy\n\n```c++\nstrcpy(str1,str2)//将str2复制给str1   前提：sizeof(str1)>sizeof(str2);\n    \n```\n\n#### 局部变量\n\n```c++\n\nchar* GetMemory()\n{\n    char p[] = \"hello world\";//局部变量\n    return p;\n}\n\nint main()\n{\n\tchar* str = NULL;\n\tstr = GetMemory();\n\t\n\tprintf(str);\n\treturn 0;\n}\n```\n\n## 内存模型\n\n堆：程序员自己申请和销毁的内存空间\n\n栈：编译器自动分配释放，参数，局部变量\n\n自由存储区：由malloc/free 申请或者销毁的内存分布在堆区，由new/delete申请的内存在自由存储区\n\n静态/全局存储区:全局变量和静态变量被分配到同一块内存中\n\n常量存储区：存放常量的区间，如字符串常量等，注意在常量区存放的数据一旦经初始化后就不能被修改\n\n#### 内存空间分配\n\n##### new和malloc区别\n\n由malloc/free 申请或者销毁的内存分布在堆区，由new/delete申请的内存在自由存储区。\n\n1.new、delete是C++中的操作符，而malloc和free是标准库函数。操作符可以在类的内部重载，malloc/free不行，唯一的关联只是在默认情况下new/delete调用malloc/free\n\n2.malloc/free(只是分配内存，不能执行构造函数，不能执行析构函数)，new/free。\n\n3.new返回的是指定类型的指针，并且可以自动计算所申请内存的大小。而 malloc需要我们计算申请内存的大小，并且在返回时强行转换为实际类型的指针。\n\n## 关键字\n\n### using\n\n1. 定义别名： 类型别名和类型名字等价，typedef和using定义的别名在语义上等效。using的可读性更好。//建议使用using\n2. 定义模版别名：使用using给模版指定别名更灵活。\n\n### final和override\n\nfinal 限制某个类不能被继承或某个函数不能被重写   如果使用final关键字修饰函数，**只能修饰虚函数**    并且要把final关键字写在**类或者函数的后面**。\n\noverride       确保派生类中声明的重写函数与基类中的虚函数有相同的名字,位置与final一样。\n\n### 静态断言static_assert\n\n### 空指针类型nullptr\n\nNULL字面意思为0，与0一样，会产生二义性。\n\nnullptr专门用于初始化空类型指针，nullptr可以隐式转化为不同类型的指针，(通用指针void*) \n\n### 常量表达式修饰符：constexpr\n\n通常建议将`const`和`constexpr`的功能区分，`表达“只读”语义用const， 表达“常量”语义用constexpr`。在表达常量语义时，const和constexpr等价，都在程序的编译阶段得到运算结果。\n\n### const（引用）\n\n将参数定义为指针或引用，就不用构造临时对象了\n\n```c++\nfunc(const int& a)//该地址的值不可变，地址可变\n\na = 10;\n\nconst int* a    //a的地址的值不可改变，a的地址可以改变\n\nconst int a*    \n\n```\n\n引用与指针的区别：\n\n指针可以为空，引用不能而且引用必须被初始化，\n\n指针初始化之后可以改变，引用不能，\n\n指针大小32位下为4，引用为对象的大小\n\n作为参数，指针传入实参地址，引用传入实参本身\n\n## 运算符重载\n\n#### 重载规则\n\n重载运算符必须符合语言语法\n不能重载对内部c++数据类型进行操作的运算符（例如不能重载二元浮点减法运算符）\n不能创建新的运算符\n不能重载下面的运算符：\n. 类成员选择运算符\n.*成员指针运算符\n:: 作用域运算符\n?:条件表达式运算符\n除此之外的运算符都可以被重载，并且只有“=”的重载函数不能被继承\n重载运算符要保持原有的基本语义不变\n\n```c++\n/*  单目运算符  */\n//++\nClock& operator++()//前置++  返回的是一个左值\nClock operator ++ (int);//后置++    返回的是一个右值\n/*  双目运算符  */\n\n// +：重载为成员函数时：只有一个形参\n  Complex operator + (const Complex &c2) const;\n// +：重载为非成员函数时：两个参数，且函数设为友元函数\n  friend Complex operator+(const Complex &c1, const Complex &c2);\n```\n\n\n\n## C++泛型算法\n\n泛型算法一般定义在头文件`algorithm`中\n\n```c++\n/*\tfind\t*/\n\n    auto it1 = find(nums.begin(), nums.end(), val1);//找与val1相等的元素\n    if(it1 != nums.end())\n        cout<<*it1<<endl;\n    else\n        cout<<\"can not find\"<<endl;\n\n/*\tcopy\t*/\n/**将nums1[1]-nums[6]范围内的内容复制给nums2[2]\n*\n*nums1 = {1,2,3,4,5,6,7,8}\n*nums2 = {0,0,0,0,0,0,0,0}\n*\n*after nums2 = {0,0,2,3,4,5,6,7,0};\n*/\nauto res = copy(nums1.begin() + 1, nums1.begin() + 6, nums2.begin() + 2);\n\n/*\tsort\t*/\nsort(num.begine(),num.end());//默认从小到大排序//num = 1,2,3,4,5,6\nsort(nums.begin(), nums.end(), [](int& a, int& b) { return a > b; });//第三个参数自定义规则，传入一个lambdad表达方便一些,num=6,5,4,3,2,1\n\n/*\tcount\t*/\n//计数\nauto it = count(nums.begin(),nums.end(), val);//查找val,返回找到的个数\n/*\treplace\t*/\n//替换\nreplace(nums.begin(), nums.end(),initval, reval);//在范围内将initval替换成reval\n/*\treverse\t*/\nreverse(nums.begin(), nums.end());//范围内的元素反转\n/*\tunique\t*/\n//清楚相邻重复的元素，想要清楚全部需要排序\n//重复的元素被替换到最后，返回这些元素之前的迭代器，使用erase删除这些元素\n    auto new_end = unique(nums.begin(),nums.end()); //注意unique的返回值\n    a.erase(new_end,nums.end());//使用erase删除重复的元素\n```\n\n\n\n## C++容器\n\n### 顺序容器\n\n#### vector\n\n##### deque\n\n##### list\n\n### 关联容器\n\n#### set\n\n#### map\n\nmap容器的[数据结构](https://so.csdn.net/so/search?q=数据结构&spm=1001.2101.3001.7020)也采用红黑树来实现的，插入元素的键值不允许重复\n\n\n\n#### vector容器扩容过程：\n\nvector是一个动态数组，每次插入是按照1，2，4，8，16，二倍扩容。扩容后是一片新的内存，需要把旧内存空间中的所有元素都拷贝进新内存空间中去，之后再在新内存空间中的原数据的后面继续进行插入构造新元素，并且同时释放旧内存空间，并且，由于vector 空间的重新配置，导致旧vector的所有迭代器都失效了。\n\n**注意:** GCC编译器二倍扩容，G++编译器1.5倍扩容\n\n1.5倍优于2倍：二倍扩容释放的内存连接起来都小于将要申请的内存\n\n#### vectory容器的使用\n\n```c++\n 1 #include <iostream>\n 2 #include <vector>\n 3 #include <algorithm>\n 4 using namespace std;\n 5 \n 6 // unique_ptr::get vs unique_ptr::release\n 7 int main() \n 8 {\n 9     //初始化\n10     vector<int> vec;//声明，未初始化\n11     vector<int> vec1(2, 5);//2个5 \n12     vector<int> vec2 = { 1, 2, 3, 4, 5 };//直接初始化\n\n13     //读取元素\n14     cout << \"第2个元素: \" << vec2[1] << endl;\n15     cout << \"首元素: \" << vec2.front() << endl;\n16     cout << \"尾元素: \" << vec2.back() << endl;\n\n17     //插入元素\n18     vec1.insert(vec1.begin(), 999);//para1-插入位置，要迭代器即指针，para2-插入内容\n19     vec2.push_back(888);//尾部插入\n20     vec2.pop_back();//删除尾部，类似于stack，所以有时候也可以把vector当stack用\n\n21     //删除元素\n22     vec2.erase(vec2.end()-1);//参数也是迭代器类型，所以使用insert和erase时，最好用iterator来遍历\n\t\tvec2.remove(5);\t\n     \n23     //排序\n24     sort(vec2.begin(), vec2.end());//给出首位指针\n25     sort(vec2.begin(), vec2.begin()+3);//甚至这样也可以，因为iterator本身就是类型指针\n26 \n27     //遍历--下标索引访问\n28     cout << \"vec1 : \" ;\n29     for (int i = 0; i < vec1.size(); ++i)\n30     {\n31         cout << vec1[i] << \" \";\n32     }\n33 \n34     //遍历--迭代器指针访问\n35     cout << \"\\nvec2 : \";\n36     vector<int>::iterator it;\n37     for (it=vec2.begin(); it != vec2.end(); ++it)\n38     {\n39         cout << *it << \" \";\n40     }\n41　　　//使用指针遍历vector\n　　　　auto vec = new vector<int>(10, 8);\n　　　　for(int i=0; i<vec->size(); i++)\n　　　　　　cout << (*vec)[i] << \"  \";\n\t\t//for循环遍历\n     for(auto i:vec)//需要被循环的数组有begine和end\n     {\n         cout << i << endl;\n     }\n     \n     //查找容器中的元素\n     auto it =find(vec.begin,vec.end,temp);//vector<int>::iterator it =find(vec.begin,vec.end,temp);\n     if(it != vec.end())\n\t\tcout<<*it<<endl;\n\telse\n\t\tcout<<\"can not find\"<<endl;\n\n41     return 0;\n42 }\n```\n\n## STL的迭代器\n\n```c++\nstd::vector<int> ::iterator it;     //it能读写vector<int>的元素\nstd::vector<int>::const_iterator it;//it只能读vector<int>的元素，不可以修改vector<int>中的元素\n```\n\n## 构造函数和析构函数\n\n### 同作用域下。多个对象构造顺序和析构\n\n先构造后析构\n\n### 全局对象什么时候构造与析构\n\n\n\n### 静态对象什么时候构造\n\n全局：\n\n局部：\n\n## 构造函数初始化列表\n\n成员变量是引用\n\n成员变量是常量\n\n成员对象没有默认构造函数\n\n基类没有默认构造函数\n\n```;\nclass A\n{\n\tA():b(x),a(b){}\n    a\n    b\n}\nA test(100,101);\na---->???\n    b---------->100\n```\n\n## 拷贝构造函数\n\n### **调用时机**\n\nconst和&的作用\n\n### 深拷贝和浅拷贝\n\n**浅拷贝：**简单的赋值拷贝操作。\n\n**深拷贝：**在堆区重新申请空间，进行拷贝操作。\n\n## 移动构造函数（右值引用）\n\n把临时对象的资源转移到将要构造的对象中去\n\n## 继承中的构造函数和析构函数\n\n构造函数和析构函数不能被继承\n\n不能处理派生类新增的成员\n\n派生类名(参数):基类名{参数}\n\n{\n\n}\n\n## 虚函数和构造函数和析构函数\n\n构造函数不可以是虚函数\n\n虚函数---动态绑定\n\n调用虚函数---->找到指针实际指向的对象------>虚函数表指针---->虚函数表------->虚函数\n\n析构函数建议设置为虚函数\n\n# 右值引用\n\n右值：保存在内存的常量存储区中的值\n\n左值：局部变量保存在栈区，全局变量保存在静态全局变量区\n\n```c++\n/*  引用  */\nint num = 10;\nint &b = num; //正确\nint &c = 10; //错误  因为该地址在常量存储区中\n\n\nint num = 10;\nconst int &b = num;//正确\nconst int &c = 10;//正确 添加const保证了不会修改该地址的值\n\n/*   右值引用(C++11)   */ \n//使用  &&  表示，常用于移动构造函数\n\nint num = 10;\n//int && a = num; //右值引用不能初始化为左值，只能使用右值进行初始化\nint && a = 10;\n \nint && a = 10;//右值引用可对右值进行修改\na = 100;\ncout << a << endl;\n//程序输出结果为 100。\n\nconst int&& a = 10;//编译器不会报错，右值不能修改将变得毫无意义 \n\n\n```\n\n## 多态\n\n#### 实现多态的条件：\n\n有继承关系；\n\n子类重写父类的方法；\n\n父类指针指向子类对象；\n\n​\t\t\t\t\t\t\t\t\t\t\t\t函数重载\n\n​\t\t\t\t\t静态多态------->\n\n多态----->\t\t\t\t\t\t\t\t泛型编程（模板编程）\t\t\t\n\n​\t\t\t\t\t动态多态--------> 虚函数\n\n##### 静态绑定\n\n该绑定发生在**编译期**\n\n##### 动态绑定（虚函数）\n\n该绑定发生在**运行期**，虽然降低了运行效率，但是实现了多态\n\n父类中的函数没有virtual声明，则调用父类的方法，即静态绑定\n\n父类中的函数有virtual声明，则绑定子类的方法，子类同名函数默认为virtual虚函数，不管声明与否\n\n\n\n#### 指针问题\n\n##### 一、父指针指向子类对象\n\n##### 二、子类指针指向父类对象\n\n\n\n## 类型强制转换\n\nC++11四种强制转换\n\nstatic_cast\n\nconst_cast\n\n\n\n## 智能指针\n\n从比较简单的层面来看，智能指针是RAII(Resource Acquisition Is Initialization，资源获取即初始化)机制对普通指针进行的一层封装。这样使得智能指针的行为动作像一个指针，本质上却是一个对象，这样可以方便管理一个对象的[生命周期](https://so.csdn.net/so/search?q=生命周期&spm=1001.2101.3001.7020)\n\n#### 强指针，弱指针\n\n- **强智能指针**：资源每被强智能指针引用一次，引用计数+1，释放引用计数-1，如shared_ptr;\n- **弱智能指针**：仅仅起到观察作用，观察对象释放还存在，不改变资源的引用计数，也就是说对象的引用计数是否等于0,如weak_ptr.\n\nC++项目指针的初始化上\n\n  1. 原则上只使用智能指针，不用普通指针，风格更加统一\n\n  2. 强指针的使用范围：局部变量、子对象指针、可影响其生命周期的对象指针\n\n   该条即是利用强指针进行资源回收，不需要再人工计算new和delete，一个对象在何处（父类中或函数中）创建，就在何处（父类析构或函数结束）回收。\n\n  3. 弱指针的使用范围：父对象指针、某些不能影响其生命周期的对象指针\n\n   该条一是避免强指针循环依赖，二是保障线程安全。其他对象成员不是在该类中创建，则不需要该类负责回收，因此使用弱指针。\n\n\n## 虚函数\n\n## 大端格式和小端格式\n\n大端格式：高地址存在低字节，低地址存在高字节\n\n小端格式：低地址存在低字节，高地址存在高字节\n\n\n\n","source":"_posts/C与C++基础知识.md","raw":"---\ntitle: C与C++基础知识\n---\n\n\n\n#### 字符串赋值\n\n##### char* 赋值\n\n```c++\nchar* temp1;\nchar temp2[24]=\"hello world\";\ntemp1 = temp2;\n\nchar* temp3=\"hello world\"; //error  C++禁止该赋值方式\n```\n\n#### 打印\n\n```c++\nprintf(\"%d\",temp); //打印十进制的整数类型\n\nint temp1=10;\nchar* temp2=\"hello world\";\nprintf(temp1);//error printf支持const char* 类型，不支持int类型\nprintf(temp2);//success 与printf(\"%s\",temp2);一样\n\n```\n\n#### strcpy\n\n```c++\nstrcpy(str1,str2)//将str2复制给str1   前提：sizeof(str1)>sizeof(str2);\n    \n```\n\n#### 局部变量\n\n```c++\n\nchar* GetMemory()\n{\n    char p[] = \"hello world\";//局部变量\n    return p;\n}\n\nint main()\n{\n\tchar* str = NULL;\n\tstr = GetMemory();\n\t\n\tprintf(str);\n\treturn 0;\n}\n```\n\n## 内存模型\n\n堆：程序员自己申请和销毁的内存空间\n\n栈：编译器自动分配释放，参数，局部变量\n\n自由存储区：由malloc/free 申请或者销毁的内存分布在堆区，由new/delete申请的内存在自由存储区\n\n静态/全局存储区:全局变量和静态变量被分配到同一块内存中\n\n常量存储区：存放常量的区间，如字符串常量等，注意在常量区存放的数据一旦经初始化后就不能被修改\n\n#### 内存空间分配\n\n##### new和malloc区别\n\n由malloc/free 申请或者销毁的内存分布在堆区，由new/delete申请的内存在自由存储区。\n\n1.new、delete是C++中的操作符，而malloc和free是标准库函数。操作符可以在类的内部重载，malloc/free不行，唯一的关联只是在默认情况下new/delete调用malloc/free\n\n2.malloc/free(只是分配内存，不能执行构造函数，不能执行析构函数)，new/free。\n\n3.new返回的是指定类型的指针，并且可以自动计算所申请内存的大小。而 malloc需要我们计算申请内存的大小，并且在返回时强行转换为实际类型的指针。\n\n## 关键字\n\n### using\n\n1. 定义别名： 类型别名和类型名字等价，typedef和using定义的别名在语义上等效。using的可读性更好。//建议使用using\n2. 定义模版别名：使用using给模版指定别名更灵活。\n\n### final和override\n\nfinal 限制某个类不能被继承或某个函数不能被重写   如果使用final关键字修饰函数，**只能修饰虚函数**    并且要把final关键字写在**类或者函数的后面**。\n\noverride       确保派生类中声明的重写函数与基类中的虚函数有相同的名字,位置与final一样。\n\n### 静态断言static_assert\n\n### 空指针类型nullptr\n\nNULL字面意思为0，与0一样，会产生二义性。\n\nnullptr专门用于初始化空类型指针，nullptr可以隐式转化为不同类型的指针，(通用指针void*) \n\n### 常量表达式修饰符：constexpr\n\n通常建议将`const`和`constexpr`的功能区分，`表达“只读”语义用const， 表达“常量”语义用constexpr`。在表达常量语义时，const和constexpr等价，都在程序的编译阶段得到运算结果。\n\n### const（引用）\n\n将参数定义为指针或引用，就不用构造临时对象了\n\n```c++\nfunc(const int& a)//该地址的值不可变，地址可变\n\na = 10;\n\nconst int* a    //a的地址的值不可改变，a的地址可以改变\n\nconst int a*    \n\n```\n\n引用与指针的区别：\n\n指针可以为空，引用不能而且引用必须被初始化，\n\n指针初始化之后可以改变，引用不能，\n\n指针大小32位下为4，引用为对象的大小\n\n作为参数，指针传入实参地址，引用传入实参本身\n\n## 运算符重载\n\n#### 重载规则\n\n重载运算符必须符合语言语法\n不能重载对内部c++数据类型进行操作的运算符（例如不能重载二元浮点减法运算符）\n不能创建新的运算符\n不能重载下面的运算符：\n. 类成员选择运算符\n.*成员指针运算符\n:: 作用域运算符\n?:条件表达式运算符\n除此之外的运算符都可以被重载，并且只有“=”的重载函数不能被继承\n重载运算符要保持原有的基本语义不变\n\n```c++\n/*  单目运算符  */\n//++\nClock& operator++()//前置++  返回的是一个左值\nClock operator ++ (int);//后置++    返回的是一个右值\n/*  双目运算符  */\n\n// +：重载为成员函数时：只有一个形参\n  Complex operator + (const Complex &c2) const;\n// +：重载为非成员函数时：两个参数，且函数设为友元函数\n  friend Complex operator+(const Complex &c1, const Complex &c2);\n```\n\n\n\n## C++泛型算法\n\n泛型算法一般定义在头文件`algorithm`中\n\n```c++\n/*\tfind\t*/\n\n    auto it1 = find(nums.begin(), nums.end(), val1);//找与val1相等的元素\n    if(it1 != nums.end())\n        cout<<*it1<<endl;\n    else\n        cout<<\"can not find\"<<endl;\n\n/*\tcopy\t*/\n/**将nums1[1]-nums[6]范围内的内容复制给nums2[2]\n*\n*nums1 = {1,2,3,4,5,6,7,8}\n*nums2 = {0,0,0,0,0,0,0,0}\n*\n*after nums2 = {0,0,2,3,4,5,6,7,0};\n*/\nauto res = copy(nums1.begin() + 1, nums1.begin() + 6, nums2.begin() + 2);\n\n/*\tsort\t*/\nsort(num.begine(),num.end());//默认从小到大排序//num = 1,2,3,4,5,6\nsort(nums.begin(), nums.end(), [](int& a, int& b) { return a > b; });//第三个参数自定义规则，传入一个lambdad表达方便一些,num=6,5,4,3,2,1\n\n/*\tcount\t*/\n//计数\nauto it = count(nums.begin(),nums.end(), val);//查找val,返回找到的个数\n/*\treplace\t*/\n//替换\nreplace(nums.begin(), nums.end(),initval, reval);//在范围内将initval替换成reval\n/*\treverse\t*/\nreverse(nums.begin(), nums.end());//范围内的元素反转\n/*\tunique\t*/\n//清楚相邻重复的元素，想要清楚全部需要排序\n//重复的元素被替换到最后，返回这些元素之前的迭代器，使用erase删除这些元素\n    auto new_end = unique(nums.begin(),nums.end()); //注意unique的返回值\n    a.erase(new_end,nums.end());//使用erase删除重复的元素\n```\n\n\n\n## C++容器\n\n### 顺序容器\n\n#### vector\n\n##### deque\n\n##### list\n\n### 关联容器\n\n#### set\n\n#### map\n\nmap容器的[数据结构](https://so.csdn.net/so/search?q=数据结构&spm=1001.2101.3001.7020)也采用红黑树来实现的，插入元素的键值不允许重复\n\n\n\n#### vector容器扩容过程：\n\nvector是一个动态数组，每次插入是按照1，2，4，8，16，二倍扩容。扩容后是一片新的内存，需要把旧内存空间中的所有元素都拷贝进新内存空间中去，之后再在新内存空间中的原数据的后面继续进行插入构造新元素，并且同时释放旧内存空间，并且，由于vector 空间的重新配置，导致旧vector的所有迭代器都失效了。\n\n**注意:** GCC编译器二倍扩容，G++编译器1.5倍扩容\n\n1.5倍优于2倍：二倍扩容释放的内存连接起来都小于将要申请的内存\n\n#### vectory容器的使用\n\n```c++\n 1 #include <iostream>\n 2 #include <vector>\n 3 #include <algorithm>\n 4 using namespace std;\n 5 \n 6 // unique_ptr::get vs unique_ptr::release\n 7 int main() \n 8 {\n 9     //初始化\n10     vector<int> vec;//声明，未初始化\n11     vector<int> vec1(2, 5);//2个5 \n12     vector<int> vec2 = { 1, 2, 3, 4, 5 };//直接初始化\n\n13     //读取元素\n14     cout << \"第2个元素: \" << vec2[1] << endl;\n15     cout << \"首元素: \" << vec2.front() << endl;\n16     cout << \"尾元素: \" << vec2.back() << endl;\n\n17     //插入元素\n18     vec1.insert(vec1.begin(), 999);//para1-插入位置，要迭代器即指针，para2-插入内容\n19     vec2.push_back(888);//尾部插入\n20     vec2.pop_back();//删除尾部，类似于stack，所以有时候也可以把vector当stack用\n\n21     //删除元素\n22     vec2.erase(vec2.end()-1);//参数也是迭代器类型，所以使用insert和erase时，最好用iterator来遍历\n\t\tvec2.remove(5);\t\n     \n23     //排序\n24     sort(vec2.begin(), vec2.end());//给出首位指针\n25     sort(vec2.begin(), vec2.begin()+3);//甚至这样也可以，因为iterator本身就是类型指针\n26 \n27     //遍历--下标索引访问\n28     cout << \"vec1 : \" ;\n29     for (int i = 0; i < vec1.size(); ++i)\n30     {\n31         cout << vec1[i] << \" \";\n32     }\n33 \n34     //遍历--迭代器指针访问\n35     cout << \"\\nvec2 : \";\n36     vector<int>::iterator it;\n37     for (it=vec2.begin(); it != vec2.end(); ++it)\n38     {\n39         cout << *it << \" \";\n40     }\n41　　　//使用指针遍历vector\n　　　　auto vec = new vector<int>(10, 8);\n　　　　for(int i=0; i<vec->size(); i++)\n　　　　　　cout << (*vec)[i] << \"  \";\n\t\t//for循环遍历\n     for(auto i:vec)//需要被循环的数组有begine和end\n     {\n         cout << i << endl;\n     }\n     \n     //查找容器中的元素\n     auto it =find(vec.begin,vec.end,temp);//vector<int>::iterator it =find(vec.begin,vec.end,temp);\n     if(it != vec.end())\n\t\tcout<<*it<<endl;\n\telse\n\t\tcout<<\"can not find\"<<endl;\n\n41     return 0;\n42 }\n```\n\n## STL的迭代器\n\n```c++\nstd::vector<int> ::iterator it;     //it能读写vector<int>的元素\nstd::vector<int>::const_iterator it;//it只能读vector<int>的元素，不可以修改vector<int>中的元素\n```\n\n## 构造函数和析构函数\n\n### 同作用域下。多个对象构造顺序和析构\n\n先构造后析构\n\n### 全局对象什么时候构造与析构\n\n\n\n### 静态对象什么时候构造\n\n全局：\n\n局部：\n\n## 构造函数初始化列表\n\n成员变量是引用\n\n成员变量是常量\n\n成员对象没有默认构造函数\n\n基类没有默认构造函数\n\n```;\nclass A\n{\n\tA():b(x),a(b){}\n    a\n    b\n}\nA test(100,101);\na---->???\n    b---------->100\n```\n\n## 拷贝构造函数\n\n### **调用时机**\n\nconst和&的作用\n\n### 深拷贝和浅拷贝\n\n**浅拷贝：**简单的赋值拷贝操作。\n\n**深拷贝：**在堆区重新申请空间，进行拷贝操作。\n\n## 移动构造函数（右值引用）\n\n把临时对象的资源转移到将要构造的对象中去\n\n## 继承中的构造函数和析构函数\n\n构造函数和析构函数不能被继承\n\n不能处理派生类新增的成员\n\n派生类名(参数):基类名{参数}\n\n{\n\n}\n\n## 虚函数和构造函数和析构函数\n\n构造函数不可以是虚函数\n\n虚函数---动态绑定\n\n调用虚函数---->找到指针实际指向的对象------>虚函数表指针---->虚函数表------->虚函数\n\n析构函数建议设置为虚函数\n\n# 右值引用\n\n右值：保存在内存的常量存储区中的值\n\n左值：局部变量保存在栈区，全局变量保存在静态全局变量区\n\n```c++\n/*  引用  */\nint num = 10;\nint &b = num; //正确\nint &c = 10; //错误  因为该地址在常量存储区中\n\n\nint num = 10;\nconst int &b = num;//正确\nconst int &c = 10;//正确 添加const保证了不会修改该地址的值\n\n/*   右值引用(C++11)   */ \n//使用  &&  表示，常用于移动构造函数\n\nint num = 10;\n//int && a = num; //右值引用不能初始化为左值，只能使用右值进行初始化\nint && a = 10;\n \nint && a = 10;//右值引用可对右值进行修改\na = 100;\ncout << a << endl;\n//程序输出结果为 100。\n\nconst int&& a = 10;//编译器不会报错，右值不能修改将变得毫无意义 \n\n\n```\n\n## 多态\n\n#### 实现多态的条件：\n\n有继承关系；\n\n子类重写父类的方法；\n\n父类指针指向子类对象；\n\n​\t\t\t\t\t\t\t\t\t\t\t\t函数重载\n\n​\t\t\t\t\t静态多态------->\n\n多态----->\t\t\t\t\t\t\t\t泛型编程（模板编程）\t\t\t\n\n​\t\t\t\t\t动态多态--------> 虚函数\n\n##### 静态绑定\n\n该绑定发生在**编译期**\n\n##### 动态绑定（虚函数）\n\n该绑定发生在**运行期**，虽然降低了运行效率，但是实现了多态\n\n父类中的函数没有virtual声明，则调用父类的方法，即静态绑定\n\n父类中的函数有virtual声明，则绑定子类的方法，子类同名函数默认为virtual虚函数，不管声明与否\n\n\n\n#### 指针问题\n\n##### 一、父指针指向子类对象\n\n##### 二、子类指针指向父类对象\n\n\n\n## 类型强制转换\n\nC++11四种强制转换\n\nstatic_cast\n\nconst_cast\n\n\n\n## 智能指针\n\n从比较简单的层面来看，智能指针是RAII(Resource Acquisition Is Initialization，资源获取即初始化)机制对普通指针进行的一层封装。这样使得智能指针的行为动作像一个指针，本质上却是一个对象，这样可以方便管理一个对象的[生命周期](https://so.csdn.net/so/search?q=生命周期&spm=1001.2101.3001.7020)\n\n#### 强指针，弱指针\n\n- **强智能指针**：资源每被强智能指针引用一次，引用计数+1，释放引用计数-1，如shared_ptr;\n- **弱智能指针**：仅仅起到观察作用，观察对象释放还存在，不改变资源的引用计数，也就是说对象的引用计数是否等于0,如weak_ptr.\n\nC++项目指针的初始化上\n\n  1. 原则上只使用智能指针，不用普通指针，风格更加统一\n\n  2. 强指针的使用范围：局部变量、子对象指针、可影响其生命周期的对象指针\n\n   该条即是利用强指针进行资源回收，不需要再人工计算new和delete，一个对象在何处（父类中或函数中）创建，就在何处（父类析构或函数结束）回收。\n\n  3. 弱指针的使用范围：父对象指针、某些不能影响其生命周期的对象指针\n\n   该条一是避免强指针循环依赖，二是保障线程安全。其他对象成员不是在该类中创建，则不需要该类负责回收，因此使用弱指针。\n\n\n## 虚函数\n\n## 大端格式和小端格式\n\n大端格式：高地址存在低字节，低地址存在高字节\n\n小端格式：低地址存在低字节，高地址存在高字节\n\n\n\n","slug":"C与C++基础知识","published":1,"date":"2024-02-05T01:18:01.802Z","updated":"2024-02-05T01:18:01.802Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cltxxetad00076cds0x7zgeep","content":"<h4 id=\"字符串赋值\"><a href=\"#字符串赋值\" class=\"headerlink\" title=\"字符串赋值\"></a>字符串赋值</h4><h5 id=\"char-赋值\"><a href=\"#char-赋值\" class=\"headerlink\" title=\"char* 赋值\"></a>char* 赋值</h5><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">char</span>* temp1;</span><br><span class=\"line\"><span class=\"type\">char</span> temp2[<span class=\"number\">24</span>]=<span class=\"string\">&quot;hello world&quot;</span>;</span><br><span class=\"line\">temp1 = temp2;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">char</span>* temp3=<span class=\"string\">&quot;hello world&quot;</span>; <span class=\"comment\">//error  C++禁止该赋值方式</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"打印\"><a href=\"#打印\" class=\"headerlink\" title=\"打印\"></a>打印</h4><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,temp); <span class=\"comment\">//打印十进制的整数类型</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> temp1=<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">char</span>* temp2=<span class=\"string\">&quot;hello world&quot;</span>;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(temp1);<span class=\"comment\">//error printf支持const char* 类型，不支持int类型</span></span><br><span class=\"line\"><span class=\"built_in\">printf</span>(temp2);<span class=\"comment\">//success 与printf(&quot;%s&quot;,temp2);一样</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h4 id=\"strcpy\"><a href=\"#strcpy\" class=\"headerlink\" title=\"strcpy\"></a>strcpy</h4><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">strcpy</span>(str1,str2)<span class=\"comment\">//将str2复制给str1   前提：sizeof(str1)&gt;sizeof(str2);</span></span><br><span class=\"line\">    </span><br></pre></td></tr></table></figure>\n<h4 id=\"局部变量\"><a href=\"#局部变量\" class=\"headerlink\" title=\"局部变量\"></a>局部变量</h4><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">char</span>* <span class=\"title\">GetMemory</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">char</span> p[] = <span class=\"string\">&quot;hello world&quot;</span>;<span class=\"comment\">//局部变量</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> p;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">char</span>* str = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">\tstr = <span class=\"built_in\">GetMemory</span>();</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(str);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"内存模型\"><a href=\"#内存模型\" class=\"headerlink\" title=\"内存模型\"></a>内存模型</h2><p>堆：程序员自己申请和销毁的内存空间</p>\n<p>栈：编译器自动分配释放，参数，局部变量</p>\n<p>自由存储区：由malloc/free 申请或者销毁的内存分布在堆区，由new/delete申请的内存在自由存储区</p>\n<p>静态/全局存储区:全局变量和静态变量被分配到同一块内存中</p>\n<p>常量存储区：存放常量的区间，如字符串常量等，注意在常量区存放的数据一旦经初始化后就不能被修改</p>\n<h4 id=\"内存空间分配\"><a href=\"#内存空间分配\" class=\"headerlink\" title=\"内存空间分配\"></a>内存空间分配</h4><h5 id=\"new和malloc区别\"><a href=\"#new和malloc区别\" class=\"headerlink\" title=\"new和malloc区别\"></a>new和malloc区别</h5><p>由malloc/free 申请或者销毁的内存分布在堆区，由new/delete申请的内存在自由存储区。</p>\n<p>1.new、delete是C++中的操作符，而malloc和free是标准库函数。操作符可以在类的内部重载，malloc/free不行，唯一的关联只是在默认情况下new/delete调用malloc/free</p>\n<p>2.malloc/free(只是分配内存，不能执行构造函数，不能执行析构函数)，new/free。</p>\n<p>3.new返回的是指定类型的指针，并且可以自动计算所申请内存的大小。而 malloc需要我们计算申请内存的大小，并且在返回时强行转换为实际类型的指针。</p>\n<h2 id=\"关键字\"><a href=\"#关键字\" class=\"headerlink\" title=\"关键字\"></a>关键字</h2><h3 id=\"using\"><a href=\"#using\" class=\"headerlink\" title=\"using\"></a>using</h3><ol>\n<li>定义别名： 类型别名和类型名字等价，typedef和using定义的别名在语义上等效。using的可读性更好。//建议使用using</li>\n<li>定义模版别名：使用using给模版指定别名更灵活。</li>\n</ol>\n<h3 id=\"final和override\"><a href=\"#final和override\" class=\"headerlink\" title=\"final和override\"></a>final和override</h3><p>final 限制某个类不能被继承或某个函数不能被重写   如果使用final关键字修饰函数，<strong>只能修饰虚函数</strong>    并且要把final关键字写在<strong>类或者函数的后面</strong>。</p>\n<p>override       确保派生类中声明的重写函数与基类中的虚函数有相同的名字,位置与final一样。</p>\n<h3 id=\"静态断言static-assert\"><a href=\"#静态断言static-assert\" class=\"headerlink\" title=\"静态断言static_assert\"></a>静态断言static_assert</h3><h3 id=\"空指针类型nullptr\"><a href=\"#空指针类型nullptr\" class=\"headerlink\" title=\"空指针类型nullptr\"></a>空指针类型nullptr</h3><p>NULL字面意思为0，与0一样，会产生二义性。</p>\n<p>nullptr专门用于初始化空类型指针，nullptr可以隐式转化为不同类型的指针，(通用指针void*) </p>\n<h3 id=\"常量表达式修饰符：constexpr\"><a href=\"#常量表达式修饰符：constexpr\" class=\"headerlink\" title=\"常量表达式修饰符：constexpr\"></a>常量表达式修饰符：constexpr</h3><p>通常建议将<code>const</code>和<code>constexpr</code>的功能区分，<code>表达“只读”语义用const， 表达“常量”语义用constexpr</code>。在表达常量语义时，const和constexpr等价，都在程序的编译阶段得到运算结果。</p>\n<h3 id=\"const（引用）\"><a href=\"#const（引用）\" class=\"headerlink\" title=\"const（引用）\"></a>const（引用）</h3><p>将参数定义为指针或引用，就不用构造临时对象了</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">func</span>(<span class=\"type\">const</span> <span class=\"type\">int</span>&amp; a)<span class=\"comment\">//该地址的值不可变，地址可变</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"number\">10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span>* a    <span class=\"comment\">//a的地址的值不可改变，a的地址可以改变</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> a*    </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>引用与指针的区别：</p>\n<p>指针可以为空，引用不能而且引用必须被初始化，</p>\n<p>指针初始化之后可以改变，引用不能，</p>\n<p>指针大小32位下为4，引用为对象的大小</p>\n<p>作为参数，指针传入实参地址，引用传入实参本身</p>\n<h2 id=\"运算符重载\"><a href=\"#运算符重载\" class=\"headerlink\" title=\"运算符重载\"></a>运算符重载</h2><h4 id=\"重载规则\"><a href=\"#重载规则\" class=\"headerlink\" title=\"重载规则\"></a>重载规则</h4><p>重载运算符必须符合语言语法<br>不能重载对内部c++数据类型进行操作的运算符（例如不能重载二元浮点减法运算符）<br>不能创建新的运算符<br>不能重载下面的运算符：<br>. 类成员选择运算符<br>.*成员指针运算符<br>:: 作用域运算符<br>?:条件表达式运算符<br>除此之外的运算符都可以被重载，并且只有“=”的重载函数不能被继承<br>重载运算符要保持原有的基本语义不变</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*  单目运算符  */</span></span><br><span class=\"line\"><span class=\"comment\">//++</span></span><br><span class=\"line\">Clock&amp; <span class=\"keyword\">operator</span>++()<span class=\"comment\">//前置++  返回的是一个左值</span></span><br><span class=\"line\">Clock <span class=\"keyword\">operator</span> ++ (<span class=\"type\">int</span>);<span class=\"comment\">//后置++    返回的是一个右值</span></span><br><span class=\"line\"><span class=\"comment\">/*  双目运算符  */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// +：重载为成员函数时：只有一个形参</span></span><br><span class=\"line\">  Complex <span class=\"keyword\">operator</span> + (<span class=\"type\">const</span> Complex &amp;c2) <span class=\"type\">const</span>;</span><br><span class=\"line\"><span class=\"comment\">// +：重载为非成员函数时：两个参数，且函数设为友元函数</span></span><br><span class=\"line\">  <span class=\"keyword\">friend</span> Complex <span class=\"keyword\">operator</span>+(<span class=\"type\">const</span> Complex &amp;c1, <span class=\"type\">const</span> Complex &amp;c2);</span><br></pre></td></tr></table></figure>\n<h2 id=\"C-泛型算法\"><a href=\"#C-泛型算法\" class=\"headerlink\" title=\"C++泛型算法\"></a>C++泛型算法</h2><p>泛型算法一般定义在头文件<code>algorithm</code>中</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*\tfind\t*/</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">auto</span> it1 = <span class=\"built_in\">find</span>(nums.<span class=\"built_in\">begin</span>(), nums.<span class=\"built_in\">end</span>(), val1);<span class=\"comment\">//找与val1相等的元素</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(it1 != nums.<span class=\"built_in\">end</span>())</span><br><span class=\"line\">        cout&lt;&lt;*it1&lt;&lt;endl;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        cout&lt;&lt;<span class=\"string\">&quot;can not find&quot;</span>&lt;&lt;endl;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*\tcopy\t*/</span></span><br><span class=\"line\"><span class=\"comment\">/**将nums1[1]-nums[6]范围内的内容复制给nums2[2]</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*nums1 = &#123;1,2,3,4,5,6,7,8&#125;</span></span><br><span class=\"line\"><span class=\"comment\">*nums2 = &#123;0,0,0,0,0,0,0,0&#125;</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*after nums2 = &#123;0,0,2,3,4,5,6,7,0&#125;;</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">auto</span> res = <span class=\"built_in\">copy</span>(nums1.<span class=\"built_in\">begin</span>() + <span class=\"number\">1</span>, nums1.<span class=\"built_in\">begin</span>() + <span class=\"number\">6</span>, nums2.<span class=\"built_in\">begin</span>() + <span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*\tsort\t*/</span></span><br><span class=\"line\"><span class=\"built_in\">sort</span>(num.<span class=\"built_in\">begine</span>(),num.<span class=\"built_in\">end</span>());<span class=\"comment\">//默认从小到大排序//num = 1,2,3,4,5,6</span></span><br><span class=\"line\"><span class=\"built_in\">sort</span>(nums.<span class=\"built_in\">begin</span>(), nums.<span class=\"built_in\">end</span>(), [](<span class=\"type\">int</span>&amp; a, <span class=\"type\">int</span>&amp; b) &#123; <span class=\"keyword\">return</span> a &gt; b; &#125;);<span class=\"comment\">//第三个参数自定义规则，传入一个lambdad表达方便一些,num=6,5,4,3,2,1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*\tcount\t*/</span></span><br><span class=\"line\"><span class=\"comment\">//计数</span></span><br><span class=\"line\"><span class=\"keyword\">auto</span> it = <span class=\"built_in\">count</span>(nums.<span class=\"built_in\">begin</span>(),nums.<span class=\"built_in\">end</span>(), val);<span class=\"comment\">//查找val,返回找到的个数</span></span><br><span class=\"line\"><span class=\"comment\">/*\treplace\t*/</span></span><br><span class=\"line\"><span class=\"comment\">//替换</span></span><br><span class=\"line\"><span class=\"built_in\">replace</span>(nums.<span class=\"built_in\">begin</span>(), nums.<span class=\"built_in\">end</span>(),initval, reval);<span class=\"comment\">//在范围内将initval替换成reval</span></span><br><span class=\"line\"><span class=\"comment\">/*\treverse\t*/</span></span><br><span class=\"line\"><span class=\"built_in\">reverse</span>(nums.<span class=\"built_in\">begin</span>(), nums.<span class=\"built_in\">end</span>());<span class=\"comment\">//范围内的元素反转</span></span><br><span class=\"line\"><span class=\"comment\">/*\tunique\t*/</span></span><br><span class=\"line\"><span class=\"comment\">//清楚相邻重复的元素，想要清楚全部需要排序</span></span><br><span class=\"line\"><span class=\"comment\">//重复的元素被替换到最后，返回这些元素之前的迭代器，使用erase删除这些元素</span></span><br><span class=\"line\">    <span class=\"keyword\">auto</span> new_end = <span class=\"built_in\">unique</span>(nums.<span class=\"built_in\">begin</span>(),nums.<span class=\"built_in\">end</span>()); <span class=\"comment\">//注意unique的返回值</span></span><br><span class=\"line\">    a.<span class=\"built_in\">erase</span>(new_end,nums.<span class=\"built_in\">end</span>());<span class=\"comment\">//使用erase删除重复的元素</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"C-容器\"><a href=\"#C-容器\" class=\"headerlink\" title=\"C++容器\"></a>C++容器</h2><h3 id=\"顺序容器\"><a href=\"#顺序容器\" class=\"headerlink\" title=\"顺序容器\"></a>顺序容器</h3><h4 id=\"vector\"><a href=\"#vector\" class=\"headerlink\" title=\"vector\"></a>vector</h4><h5 id=\"deque\"><a href=\"#deque\" class=\"headerlink\" title=\"deque\"></a>deque</h5><h5 id=\"list\"><a href=\"#list\" class=\"headerlink\" title=\"list\"></a>list</h5><h3 id=\"关联容器\"><a href=\"#关联容器\" class=\"headerlink\" title=\"关联容器\"></a>关联容器</h3><h4 id=\"set\"><a href=\"#set\" class=\"headerlink\" title=\"set\"></a>set</h4><h4 id=\"map\"><a href=\"#map\" class=\"headerlink\" title=\"map\"></a>map</h4><p>map容器的<a href=\"https://so.csdn.net/so/search?q=数据结构&amp;spm=1001.2101.3001.7020\">数据结构</a>也采用红黑树来实现的，插入元素的键值不允许重复</p>\n<h4 id=\"vector容器扩容过程：\"><a href=\"#vector容器扩容过程：\" class=\"headerlink\" title=\"vector容器扩容过程：\"></a>vector容器扩容过程：</h4><p>vector是一个动态数组，每次插入是按照1，2，4，8，16，二倍扩容。扩容后是一片新的内存，需要把旧内存空间中的所有元素都拷贝进新内存空间中去，之后再在新内存空间中的原数据的后面继续进行插入构造新元素，并且同时释放旧内存空间，并且，由于vector 空间的重新配置，导致旧vector的所有迭代器都失效了。</p>\n<p><strong>注意:</strong> GCC编译器二倍扩容，G++编译器1.5倍扩容</p>\n<p>1.5倍优于2倍：二倍扩容释放的内存连接起来都小于将要申请的内存</p>\n<h4 id=\"vectory容器的使用\"><a href=\"#vectory容器的使用\" class=\"headerlink\" title=\"vectory容器的使用\"></a>vectory容器的使用</h4><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"number\">1</span> <span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"> <span class=\"number\">2</span> <span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"> <span class=\"number\">3</span> <span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"> <span class=\"number\">4</span> <span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"> <span class=\"number\">5</span> </span><br><span class=\"line\"> <span class=\"number\">6</span> <span class=\"comment\">// unique_ptr::get vs unique_ptr::release</span></span><br><span class=\"line\"> <span class=\"number\">7</span> <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\"> 8 </span>&#123;</span><br><span class=\"line\"> <span class=\"number\">9</span>     <span class=\"comment\">//初始化</span></span><br><span class=\"line\"><span class=\"number\">10</span>     vector&lt;<span class=\"type\">int</span>&gt; vec;<span class=\"comment\">//声明，未初始化</span></span><br><span class=\"line\"><span class=\"number\">11</span>     <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">vec1</span><span class=\"params\">(<span class=\"number\">2</span>, <span class=\"number\">5</span>)</span></span>;<span class=\"comment\">//2个5 </span></span><br><span class=\"line\"><span class=\"number\">12</span>     vector&lt;<span class=\"type\">int</span>&gt; vec2 = &#123; <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span> &#125;;<span class=\"comment\">//直接初始化</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">13</span>     <span class=\"comment\">//读取元素</span></span><br><span class=\"line\"><span class=\"number\">14</span>     cout &lt;&lt; <span class=\"string\">&quot;第2个元素: &quot;</span> &lt;&lt; vec2[<span class=\"number\">1</span>] &lt;&lt; endl;</span><br><span class=\"line\"><span class=\"number\">15</span>     cout &lt;&lt; <span class=\"string\">&quot;首元素: &quot;</span> &lt;&lt; vec2.<span class=\"built_in\">front</span>() &lt;&lt; endl;</span><br><span class=\"line\"><span class=\"number\">16</span>     cout &lt;&lt; <span class=\"string\">&quot;尾元素: &quot;</span> &lt;&lt; vec2.<span class=\"built_in\">back</span>() &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">17</span>     <span class=\"comment\">//插入元素</span></span><br><span class=\"line\"><span class=\"number\">18</span>     vec1.<span class=\"built_in\">insert</span>(vec1.<span class=\"built_in\">begin</span>(), <span class=\"number\">999</span>);<span class=\"comment\">//para1-插入位置，要迭代器即指针，para2-插入内容</span></span><br><span class=\"line\"><span class=\"number\">19</span>     vec2.<span class=\"built_in\">push_back</span>(<span class=\"number\">888</span>);<span class=\"comment\">//尾部插入</span></span><br><span class=\"line\"><span class=\"number\">20</span>     vec2.<span class=\"built_in\">pop_back</span>();<span class=\"comment\">//删除尾部，类似于stack，所以有时候也可以把vector当stack用</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">21</span>     <span class=\"comment\">//删除元素</span></span><br><span class=\"line\"><span class=\"number\">22</span>     vec2.<span class=\"built_in\">erase</span>(vec2.<span class=\"built_in\">end</span>()<span class=\"number\">-1</span>);<span class=\"comment\">//参数也是迭代器类型，所以使用insert和erase时，最好用iterator来遍历</span></span><br><span class=\"line\">\t\tvec2.<span class=\"built_in\">remove</span>(<span class=\"number\">5</span>);\t</span><br><span class=\"line\">     </span><br><span class=\"line\"><span class=\"number\">23</span>     <span class=\"comment\">//排序</span></span><br><span class=\"line\"><span class=\"number\">24</span>     <span class=\"built_in\">sort</span>(vec2.<span class=\"built_in\">begin</span>(), vec2.<span class=\"built_in\">end</span>());<span class=\"comment\">//给出首位指针</span></span><br><span class=\"line\"><span class=\"number\">25</span>     <span class=\"built_in\">sort</span>(vec2.<span class=\"built_in\">begin</span>(), vec2.<span class=\"built_in\">begin</span>()+<span class=\"number\">3</span>);<span class=\"comment\">//甚至这样也可以，因为iterator本身就是类型指针</span></span><br><span class=\"line\"><span class=\"number\">26</span> </span><br><span class=\"line\"><span class=\"number\">27</span>     <span class=\"comment\">//遍历--下标索引访问</span></span><br><span class=\"line\"><span class=\"number\">28</span>     cout &lt;&lt; <span class=\"string\">&quot;vec1 : &quot;</span> ;</span><br><span class=\"line\"><span class=\"number\">29</span>     <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; vec1.<span class=\"built_in\">size</span>(); ++i)</span><br><span class=\"line\"><span class=\"number\">30</span>     &#123;</span><br><span class=\"line\"><span class=\"number\">31</span>         cout &lt;&lt; vec1[i] &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\"><span class=\"number\">32</span>     &#125;</span><br><span class=\"line\"><span class=\"number\">33</span> </span><br><span class=\"line\"><span class=\"number\">34</span>     <span class=\"comment\">//遍历--迭代器指针访问</span></span><br><span class=\"line\"><span class=\"number\">35</span>     cout &lt;&lt; <span class=\"string\">&quot;\\nvec2 : &quot;</span>;</span><br><span class=\"line\"><span class=\"number\">36</span>     vector&lt;<span class=\"type\">int</span>&gt;::iterator it;</span><br><span class=\"line\"><span class=\"number\">37</span>     <span class=\"keyword\">for</span> (it=vec2.<span class=\"built_in\">begin</span>(); it != vec2.<span class=\"built_in\">end</span>(); ++it)</span><br><span class=\"line\"><span class=\"number\">38</span>     &#123;</span><br><span class=\"line\"><span class=\"number\">39</span>         cout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\"><span class=\"number\">40</span>     &#125;</span><br><span class=\"line\"><span class=\"number\">41</span>　　　<span class=\"comment\">//使用指针遍历vector</span></span><br><span class=\"line\">　　　　<span class=\"keyword\">auto</span> vec = <span class=\"keyword\">new</span> <span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;(<span class=\"number\">10</span>, <span class=\"number\">8</span>);</span><br><span class=\"line\">　　　　<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>; i&lt;vec-&gt;<span class=\"built_in\">size</span>(); i++)</span><br><span class=\"line\">　　　　　　cout &lt;&lt; (*vec)[i] &lt;&lt; <span class=\"string\">&quot;  &quot;</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//for循环遍历</span></span><br><span class=\"line\">     <span class=\"keyword\">for</span>(<span class=\"keyword\">auto</span> i:vec)<span class=\"comment\">//需要被循环的数组有begine和end</span></span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         cout &lt;&lt; i &lt;&lt; endl;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\">     <span class=\"comment\">//查找容器中的元素</span></span><br><span class=\"line\">     <span class=\"keyword\">auto</span> it =<span class=\"built_in\">find</span>(vec.begin,vec.end,temp);<span class=\"comment\">//vector&lt;int&gt;::iterator it =find(vec.begin,vec.end,temp);</span></span><br><span class=\"line\">     <span class=\"keyword\">if</span>(it != vec.<span class=\"built_in\">end</span>())</span><br><span class=\"line\">\t\tcout&lt;&lt;*it&lt;&lt;endl;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\tcout&lt;&lt;<span class=\"string\">&quot;can not find&quot;</span>&lt;&lt;endl;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">41</span>     <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"number\">42</span> &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"STL的迭代器\"><a href=\"#STL的迭代器\" class=\"headerlink\" title=\"STL的迭代器\"></a>STL的迭代器</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">std::vector&lt;<span class=\"type\">int</span>&gt; ::iterator it;     <span class=\"comment\">//it能读写vector&lt;int&gt;的元素</span></span><br><span class=\"line\">std::vector&lt;<span class=\"type\">int</span>&gt;::const_iterator it;<span class=\"comment\">//it只能读vector&lt;int&gt;的元素，不可以修改vector&lt;int&gt;中的元素</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"构造函数和析构函数\"><a href=\"#构造函数和析构函数\" class=\"headerlink\" title=\"构造函数和析构函数\"></a>构造函数和析构函数</h2><h3 id=\"同作用域下。多个对象构造顺序和析构\"><a href=\"#同作用域下。多个对象构造顺序和析构\" class=\"headerlink\" title=\"同作用域下。多个对象构造顺序和析构\"></a>同作用域下。多个对象构造顺序和析构</h3><p>先构造后析构</p>\n<h3 id=\"全局对象什么时候构造与析构\"><a href=\"#全局对象什么时候构造与析构\" class=\"headerlink\" title=\"全局对象什么时候构造与析构\"></a>全局对象什么时候构造与析构</h3><h3 id=\"静态对象什么时候构造\"><a href=\"#静态对象什么时候构造\" class=\"headerlink\" title=\"静态对象什么时候构造\"></a>静态对象什么时候构造</h3><p>全局：</p>\n<p>局部：</p>\n<h2 id=\"构造函数初始化列表\"><a href=\"#构造函数初始化列表\" class=\"headerlink\" title=\"构造函数初始化列表\"></a>构造函数初始化列表</h2><p>成员变量是引用</p>\n<p>成员变量是常量</p>\n<p>成员对象没有默认构造函数</p>\n<p>基类没有默认构造函数</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class A</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tA():b(x),a(b)&#123;&#125;</span><br><span class=\"line\">    a</span><br><span class=\"line\">    b</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">A test(100,101);</span><br><span class=\"line\">a----&gt;???</span><br><span class=\"line\">    b----------&gt;100</span><br></pre></td></tr></table></figure>\n<h2 id=\"拷贝构造函数\"><a href=\"#拷贝构造函数\" class=\"headerlink\" title=\"拷贝构造函数\"></a>拷贝构造函数</h2><h3 id=\"调用时机\"><a href=\"#调用时机\" class=\"headerlink\" title=\"调用时机\"></a><strong>调用时机</strong></h3><p>const和&amp;的作用</p>\n<h3 id=\"深拷贝和浅拷贝\"><a href=\"#深拷贝和浅拷贝\" class=\"headerlink\" title=\"深拷贝和浅拷贝\"></a>深拷贝和浅拷贝</h3><p><strong>浅拷贝：</strong>简单的赋值拷贝操作。</p>\n<p><strong>深拷贝：</strong>在堆区重新申请空间，进行拷贝操作。</p>\n<h2 id=\"移动构造函数（右值引用）\"><a href=\"#移动构造函数（右值引用）\" class=\"headerlink\" title=\"移动构造函数（右值引用）\"></a>移动构造函数（右值引用）</h2><p>把临时对象的资源转移到将要构造的对象中去</p>\n<h2 id=\"继承中的构造函数和析构函数\"><a href=\"#继承中的构造函数和析构函数\" class=\"headerlink\" title=\"继承中的构造函数和析构函数\"></a>继承中的构造函数和析构函数</h2><p>构造函数和析构函数不能被继承</p>\n<p>不能处理派生类新增的成员</p>\n<p>派生类名(参数):基类名{参数}</p>\n<p>{</p>\n<p>}</p>\n<h2 id=\"虚函数和构造函数和析构函数\"><a href=\"#虚函数和构造函数和析构函数\" class=\"headerlink\" title=\"虚函数和构造函数和析构函数\"></a>虚函数和构造函数和析构函数</h2><p>构造函数不可以是虚函数</p>\n<p>虚函数—-动态绑定</p>\n<p>调用虚函数——&gt;找到指针实际指向的对象———&gt;虚函数表指针——&gt;虚函数表———-&gt;虚函数</p>\n<p>析构函数建议设置为虚函数</p>\n<h1 id=\"右值引用\"><a href=\"#右值引用\" class=\"headerlink\" title=\"右值引用\"></a>右值引用</h1><p>右值：保存在内存的常量存储区中的值</p>\n<p>左值：局部变量保存在栈区，全局变量保存在静态全局变量区</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*  引用  */</span></span><br><span class=\"line\"><span class=\"type\">int</span> num = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> &amp;b = num; <span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"type\">int</span> &amp;c = <span class=\"number\">10</span>; <span class=\"comment\">//错误  因为该地址在常量存储区中</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> num = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> &amp;b = num;<span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> &amp;c = <span class=\"number\">10</span>;<span class=\"comment\">//正确 添加const保证了不会修改该地址的值</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*   右值引用(C++11)   */</span> </span><br><span class=\"line\"><span class=\"comment\">//使用  &amp;&amp;  表示，常用于移动构造函数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> num = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"comment\">//int &amp;&amp; a = num; //右值引用不能初始化为左值，只能使用右值进行初始化</span></span><br><span class=\"line\"><span class=\"type\">int</span> &amp;&amp; a = <span class=\"number\">10</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"type\">int</span> &amp;&amp; a = <span class=\"number\">10</span>;<span class=\"comment\">//右值引用可对右值进行修改</span></span><br><span class=\"line\">a = <span class=\"number\">100</span>;</span><br><span class=\"line\">cout &lt;&lt; a &lt;&lt; endl;</span><br><span class=\"line\"><span class=\"comment\">//程序输出结果为 100。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span>&amp;&amp; a = <span class=\"number\">10</span>;<span class=\"comment\">//编译器不会报错，右值不能修改将变得毫无意义 </span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"多态\"><a href=\"#多态\" class=\"headerlink\" title=\"多态\"></a>多态</h2><h4 id=\"实现多态的条件：\"><a href=\"#实现多态的条件：\" class=\"headerlink\" title=\"实现多态的条件：\"></a>实现多态的条件：</h4><p>有继承关系；</p>\n<p>子类重写父类的方法；</p>\n<p>父类指针指向子类对象；</p>\n<p>​                                                函数重载</p>\n<p>​                    静态多态———-&gt;</p>\n<p>多态——-&gt;                                泛型编程（模板编程）            </p>\n<p>​                    动态多态————&gt; 虚函数</p>\n<h5 id=\"静态绑定\"><a href=\"#静态绑定\" class=\"headerlink\" title=\"静态绑定\"></a>静态绑定</h5><p>该绑定发生在<strong>编译期</strong></p>\n<h5 id=\"动态绑定（虚函数）\"><a href=\"#动态绑定（虚函数）\" class=\"headerlink\" title=\"动态绑定（虚函数）\"></a>动态绑定（虚函数）</h5><p>该绑定发生在<strong>运行期</strong>，虽然降低了运行效率，但是实现了多态</p>\n<p>父类中的函数没有virtual声明，则调用父类的方法，即静态绑定</p>\n<p>父类中的函数有virtual声明，则绑定子类的方法，子类同名函数默认为virtual虚函数，不管声明与否</p>\n<h4 id=\"指针问题\"><a href=\"#指针问题\" class=\"headerlink\" title=\"指针问题\"></a>指针问题</h4><h5 id=\"一、父指针指向子类对象\"><a href=\"#一、父指针指向子类对象\" class=\"headerlink\" title=\"一、父指针指向子类对象\"></a>一、父指针指向子类对象</h5><h5 id=\"二、子类指针指向父类对象\"><a href=\"#二、子类指针指向父类对象\" class=\"headerlink\" title=\"二、子类指针指向父类对象\"></a>二、子类指针指向父类对象</h5><h2 id=\"类型强制转换\"><a href=\"#类型强制转换\" class=\"headerlink\" title=\"类型强制转换\"></a>类型强制转换</h2><p>C++11四种强制转换</p>\n<p>static_cast</p>\n<p>const_cast</p>\n<h2 id=\"智能指针\"><a href=\"#智能指针\" class=\"headerlink\" title=\"智能指针\"></a>智能指针</h2><p>从比较简单的层面来看，智能指针是RAII(Resource Acquisition Is Initialization，资源获取即初始化)机制对普通指针进行的一层封装。这样使得智能指针的行为动作像一个指针，本质上却是一个对象，这样可以方便管理一个对象的<a href=\"https://so.csdn.net/so/search?q=生命周期&amp;spm=1001.2101.3001.7020\">生命周期</a></p>\n<h4 id=\"强指针，弱指针\"><a href=\"#强指针，弱指针\" class=\"headerlink\" title=\"强指针，弱指针\"></a>强指针，弱指针</h4><ul>\n<li><strong>强智能指针</strong>：资源每被强智能指针引用一次，引用计数+1，释放引用计数-1，如shared_ptr;</li>\n<li><strong>弱智能指针</strong>：仅仅起到观察作用，观察对象释放还存在，不改变资源的引用计数，也就是说对象的引用计数是否等于0,如weak_ptr.</li>\n</ul>\n<p>C++项目指针的初始化上</p>\n<ol>\n<li><p>原则上只使用智能指针，不用普通指针，风格更加统一</p>\n</li>\n<li><p>强指针的使用范围：局部变量、子对象指针、可影响其生命周期的对象指针</p>\n<p>该条即是利用强指针进行资源回收，不需要再人工计算new和delete，一个对象在何处（父类中或函数中）创建，就在何处（父类析构或函数结束）回收。</p>\n</li>\n<li><p>弱指针的使用范围：父对象指针、某些不能影响其生命周期的对象指针</p>\n<p>该条一是避免强指针循环依赖，二是保障线程安全。其他对象成员不是在该类中创建，则不需要该类负责回收，因此使用弱指针。</p>\n</li>\n</ol>\n<h2 id=\"虚函数\"><a href=\"#虚函数\" class=\"headerlink\" title=\"虚函数\"></a>虚函数</h2><h2 id=\"大端格式和小端格式\"><a href=\"#大端格式和小端格式\" class=\"headerlink\" title=\"大端格式和小端格式\"></a>大端格式和小端格式</h2><p>大端格式：高地址存在低字节，低地址存在高字节</p>\n<p>小端格式：低地址存在低字节，高地址存在高字节</p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h4 id=\"字符串赋值\"><a href=\"#字符串赋值\" class=\"headerlink\" title=\"字符串赋值\"></a>字符串赋值</h4><h5 id=\"char-赋值\"><a href=\"#char-赋值\" class=\"headerlink\" title=\"char* 赋值\"></a>char* 赋值</h5><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">char</span>* temp1;</span><br><span class=\"line\"><span class=\"type\">char</span> temp2[<span class=\"number\">24</span>]=<span class=\"string\">&quot;hello world&quot;</span>;</span><br><span class=\"line\">temp1 = temp2;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">char</span>* temp3=<span class=\"string\">&quot;hello world&quot;</span>; <span class=\"comment\">//error  C++禁止该赋值方式</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"打印\"><a href=\"#打印\" class=\"headerlink\" title=\"打印\"></a>打印</h4><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,temp); <span class=\"comment\">//打印十进制的整数类型</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> temp1=<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">char</span>* temp2=<span class=\"string\">&quot;hello world&quot;</span>;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(temp1);<span class=\"comment\">//error printf支持const char* 类型，不支持int类型</span></span><br><span class=\"line\"><span class=\"built_in\">printf</span>(temp2);<span class=\"comment\">//success 与printf(&quot;%s&quot;,temp2);一样</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h4 id=\"strcpy\"><a href=\"#strcpy\" class=\"headerlink\" title=\"strcpy\"></a>strcpy</h4><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">strcpy</span>(str1,str2)<span class=\"comment\">//将str2复制给str1   前提：sizeof(str1)&gt;sizeof(str2);</span></span><br><span class=\"line\">    </span><br></pre></td></tr></table></figure>\n<h4 id=\"局部变量\"><a href=\"#局部变量\" class=\"headerlink\" title=\"局部变量\"></a>局部变量</h4><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">char</span>* <span class=\"title\">GetMemory</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">char</span> p[] = <span class=\"string\">&quot;hello world&quot;</span>;<span class=\"comment\">//局部变量</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> p;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">char</span>* str = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">\tstr = <span class=\"built_in\">GetMemory</span>();</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(str);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"内存模型\"><a href=\"#内存模型\" class=\"headerlink\" title=\"内存模型\"></a>内存模型</h2><p>堆：程序员自己申请和销毁的内存空间</p>\n<p>栈：编译器自动分配释放，参数，局部变量</p>\n<p>自由存储区：由malloc/free 申请或者销毁的内存分布在堆区，由new/delete申请的内存在自由存储区</p>\n<p>静态/全局存储区:全局变量和静态变量被分配到同一块内存中</p>\n<p>常量存储区：存放常量的区间，如字符串常量等，注意在常量区存放的数据一旦经初始化后就不能被修改</p>\n<h4 id=\"内存空间分配\"><a href=\"#内存空间分配\" class=\"headerlink\" title=\"内存空间分配\"></a>内存空间分配</h4><h5 id=\"new和malloc区别\"><a href=\"#new和malloc区别\" class=\"headerlink\" title=\"new和malloc区别\"></a>new和malloc区别</h5><p>由malloc/free 申请或者销毁的内存分布在堆区，由new/delete申请的内存在自由存储区。</p>\n<p>1.new、delete是C++中的操作符，而malloc和free是标准库函数。操作符可以在类的内部重载，malloc/free不行，唯一的关联只是在默认情况下new/delete调用malloc/free</p>\n<p>2.malloc/free(只是分配内存，不能执行构造函数，不能执行析构函数)，new/free。</p>\n<p>3.new返回的是指定类型的指针，并且可以自动计算所申请内存的大小。而 malloc需要我们计算申请内存的大小，并且在返回时强行转换为实际类型的指针。</p>\n<h2 id=\"关键字\"><a href=\"#关键字\" class=\"headerlink\" title=\"关键字\"></a>关键字</h2><h3 id=\"using\"><a href=\"#using\" class=\"headerlink\" title=\"using\"></a>using</h3><ol>\n<li>定义别名： 类型别名和类型名字等价，typedef和using定义的别名在语义上等效。using的可读性更好。//建议使用using</li>\n<li>定义模版别名：使用using给模版指定别名更灵活。</li>\n</ol>\n<h3 id=\"final和override\"><a href=\"#final和override\" class=\"headerlink\" title=\"final和override\"></a>final和override</h3><p>final 限制某个类不能被继承或某个函数不能被重写   如果使用final关键字修饰函数，<strong>只能修饰虚函数</strong>    并且要把final关键字写在<strong>类或者函数的后面</strong>。</p>\n<p>override       确保派生类中声明的重写函数与基类中的虚函数有相同的名字,位置与final一样。</p>\n<h3 id=\"静态断言static-assert\"><a href=\"#静态断言static-assert\" class=\"headerlink\" title=\"静态断言static_assert\"></a>静态断言static_assert</h3><h3 id=\"空指针类型nullptr\"><a href=\"#空指针类型nullptr\" class=\"headerlink\" title=\"空指针类型nullptr\"></a>空指针类型nullptr</h3><p>NULL字面意思为0，与0一样，会产生二义性。</p>\n<p>nullptr专门用于初始化空类型指针，nullptr可以隐式转化为不同类型的指针，(通用指针void*) </p>\n<h3 id=\"常量表达式修饰符：constexpr\"><a href=\"#常量表达式修饰符：constexpr\" class=\"headerlink\" title=\"常量表达式修饰符：constexpr\"></a>常量表达式修饰符：constexpr</h3><p>通常建议将<code>const</code>和<code>constexpr</code>的功能区分，<code>表达“只读”语义用const， 表达“常量”语义用constexpr</code>。在表达常量语义时，const和constexpr等价，都在程序的编译阶段得到运算结果。</p>\n<h3 id=\"const（引用）\"><a href=\"#const（引用）\" class=\"headerlink\" title=\"const（引用）\"></a>const（引用）</h3><p>将参数定义为指针或引用，就不用构造临时对象了</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">func</span>(<span class=\"type\">const</span> <span class=\"type\">int</span>&amp; a)<span class=\"comment\">//该地址的值不可变，地址可变</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"number\">10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span>* a    <span class=\"comment\">//a的地址的值不可改变，a的地址可以改变</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> a*    </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>引用与指针的区别：</p>\n<p>指针可以为空，引用不能而且引用必须被初始化，</p>\n<p>指针初始化之后可以改变，引用不能，</p>\n<p>指针大小32位下为4，引用为对象的大小</p>\n<p>作为参数，指针传入实参地址，引用传入实参本身</p>\n<h2 id=\"运算符重载\"><a href=\"#运算符重载\" class=\"headerlink\" title=\"运算符重载\"></a>运算符重载</h2><h4 id=\"重载规则\"><a href=\"#重载规则\" class=\"headerlink\" title=\"重载规则\"></a>重载规则</h4><p>重载运算符必须符合语言语法<br>不能重载对内部c++数据类型进行操作的运算符（例如不能重载二元浮点减法运算符）<br>不能创建新的运算符<br>不能重载下面的运算符：<br>. 类成员选择运算符<br>.*成员指针运算符<br>:: 作用域运算符<br>?:条件表达式运算符<br>除此之外的运算符都可以被重载，并且只有“=”的重载函数不能被继承<br>重载运算符要保持原有的基本语义不变</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*  单目运算符  */</span></span><br><span class=\"line\"><span class=\"comment\">//++</span></span><br><span class=\"line\">Clock&amp; <span class=\"keyword\">operator</span>++()<span class=\"comment\">//前置++  返回的是一个左值</span></span><br><span class=\"line\">Clock <span class=\"keyword\">operator</span> ++ (<span class=\"type\">int</span>);<span class=\"comment\">//后置++    返回的是一个右值</span></span><br><span class=\"line\"><span class=\"comment\">/*  双目运算符  */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// +：重载为成员函数时：只有一个形参</span></span><br><span class=\"line\">  Complex <span class=\"keyword\">operator</span> + (<span class=\"type\">const</span> Complex &amp;c2) <span class=\"type\">const</span>;</span><br><span class=\"line\"><span class=\"comment\">// +：重载为非成员函数时：两个参数，且函数设为友元函数</span></span><br><span class=\"line\">  <span class=\"keyword\">friend</span> Complex <span class=\"keyword\">operator</span>+(<span class=\"type\">const</span> Complex &amp;c1, <span class=\"type\">const</span> Complex &amp;c2);</span><br></pre></td></tr></table></figure>\n<h2 id=\"C-泛型算法\"><a href=\"#C-泛型算法\" class=\"headerlink\" title=\"C++泛型算法\"></a>C++泛型算法</h2><p>泛型算法一般定义在头文件<code>algorithm</code>中</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*\tfind\t*/</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">auto</span> it1 = <span class=\"built_in\">find</span>(nums.<span class=\"built_in\">begin</span>(), nums.<span class=\"built_in\">end</span>(), val1);<span class=\"comment\">//找与val1相等的元素</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(it1 != nums.<span class=\"built_in\">end</span>())</span><br><span class=\"line\">        cout&lt;&lt;*it1&lt;&lt;endl;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        cout&lt;&lt;<span class=\"string\">&quot;can not find&quot;</span>&lt;&lt;endl;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*\tcopy\t*/</span></span><br><span class=\"line\"><span class=\"comment\">/**将nums1[1]-nums[6]范围内的内容复制给nums2[2]</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*nums1 = &#123;1,2,3,4,5,6,7,8&#125;</span></span><br><span class=\"line\"><span class=\"comment\">*nums2 = &#123;0,0,0,0,0,0,0,0&#125;</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*after nums2 = &#123;0,0,2,3,4,5,6,7,0&#125;;</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">auto</span> res = <span class=\"built_in\">copy</span>(nums1.<span class=\"built_in\">begin</span>() + <span class=\"number\">1</span>, nums1.<span class=\"built_in\">begin</span>() + <span class=\"number\">6</span>, nums2.<span class=\"built_in\">begin</span>() + <span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*\tsort\t*/</span></span><br><span class=\"line\"><span class=\"built_in\">sort</span>(num.<span class=\"built_in\">begine</span>(),num.<span class=\"built_in\">end</span>());<span class=\"comment\">//默认从小到大排序//num = 1,2,3,4,5,6</span></span><br><span class=\"line\"><span class=\"built_in\">sort</span>(nums.<span class=\"built_in\">begin</span>(), nums.<span class=\"built_in\">end</span>(), [](<span class=\"type\">int</span>&amp; a, <span class=\"type\">int</span>&amp; b) &#123; <span class=\"keyword\">return</span> a &gt; b; &#125;);<span class=\"comment\">//第三个参数自定义规则，传入一个lambdad表达方便一些,num=6,5,4,3,2,1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*\tcount\t*/</span></span><br><span class=\"line\"><span class=\"comment\">//计数</span></span><br><span class=\"line\"><span class=\"keyword\">auto</span> it = <span class=\"built_in\">count</span>(nums.<span class=\"built_in\">begin</span>(),nums.<span class=\"built_in\">end</span>(), val);<span class=\"comment\">//查找val,返回找到的个数</span></span><br><span class=\"line\"><span class=\"comment\">/*\treplace\t*/</span></span><br><span class=\"line\"><span class=\"comment\">//替换</span></span><br><span class=\"line\"><span class=\"built_in\">replace</span>(nums.<span class=\"built_in\">begin</span>(), nums.<span class=\"built_in\">end</span>(),initval, reval);<span class=\"comment\">//在范围内将initval替换成reval</span></span><br><span class=\"line\"><span class=\"comment\">/*\treverse\t*/</span></span><br><span class=\"line\"><span class=\"built_in\">reverse</span>(nums.<span class=\"built_in\">begin</span>(), nums.<span class=\"built_in\">end</span>());<span class=\"comment\">//范围内的元素反转</span></span><br><span class=\"line\"><span class=\"comment\">/*\tunique\t*/</span></span><br><span class=\"line\"><span class=\"comment\">//清楚相邻重复的元素，想要清楚全部需要排序</span></span><br><span class=\"line\"><span class=\"comment\">//重复的元素被替换到最后，返回这些元素之前的迭代器，使用erase删除这些元素</span></span><br><span class=\"line\">    <span class=\"keyword\">auto</span> new_end = <span class=\"built_in\">unique</span>(nums.<span class=\"built_in\">begin</span>(),nums.<span class=\"built_in\">end</span>()); <span class=\"comment\">//注意unique的返回值</span></span><br><span class=\"line\">    a.<span class=\"built_in\">erase</span>(new_end,nums.<span class=\"built_in\">end</span>());<span class=\"comment\">//使用erase删除重复的元素</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"C-容器\"><a href=\"#C-容器\" class=\"headerlink\" title=\"C++容器\"></a>C++容器</h2><h3 id=\"顺序容器\"><a href=\"#顺序容器\" class=\"headerlink\" title=\"顺序容器\"></a>顺序容器</h3><h4 id=\"vector\"><a href=\"#vector\" class=\"headerlink\" title=\"vector\"></a>vector</h4><h5 id=\"deque\"><a href=\"#deque\" class=\"headerlink\" title=\"deque\"></a>deque</h5><h5 id=\"list\"><a href=\"#list\" class=\"headerlink\" title=\"list\"></a>list</h5><h3 id=\"关联容器\"><a href=\"#关联容器\" class=\"headerlink\" title=\"关联容器\"></a>关联容器</h3><h4 id=\"set\"><a href=\"#set\" class=\"headerlink\" title=\"set\"></a>set</h4><h4 id=\"map\"><a href=\"#map\" class=\"headerlink\" title=\"map\"></a>map</h4><p>map容器的<a href=\"https://so.csdn.net/so/search?q=数据结构&amp;spm=1001.2101.3001.7020\">数据结构</a>也采用红黑树来实现的，插入元素的键值不允许重复</p>\n<h4 id=\"vector容器扩容过程：\"><a href=\"#vector容器扩容过程：\" class=\"headerlink\" title=\"vector容器扩容过程：\"></a>vector容器扩容过程：</h4><p>vector是一个动态数组，每次插入是按照1，2，4，8，16，二倍扩容。扩容后是一片新的内存，需要把旧内存空间中的所有元素都拷贝进新内存空间中去，之后再在新内存空间中的原数据的后面继续进行插入构造新元素，并且同时释放旧内存空间，并且，由于vector 空间的重新配置，导致旧vector的所有迭代器都失效了。</p>\n<p><strong>注意:</strong> GCC编译器二倍扩容，G++编译器1.5倍扩容</p>\n<p>1.5倍优于2倍：二倍扩容释放的内存连接起来都小于将要申请的内存</p>\n<h4 id=\"vectory容器的使用\"><a href=\"#vectory容器的使用\" class=\"headerlink\" title=\"vectory容器的使用\"></a>vectory容器的使用</h4><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"number\">1</span> <span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"> <span class=\"number\">2</span> <span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"> <span class=\"number\">3</span> <span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"> <span class=\"number\">4</span> <span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"> <span class=\"number\">5</span> </span><br><span class=\"line\"> <span class=\"number\">6</span> <span class=\"comment\">// unique_ptr::get vs unique_ptr::release</span></span><br><span class=\"line\"> <span class=\"number\">7</span> <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\"> 8 </span>&#123;</span><br><span class=\"line\"> <span class=\"number\">9</span>     <span class=\"comment\">//初始化</span></span><br><span class=\"line\"><span class=\"number\">10</span>     vector&lt;<span class=\"type\">int</span>&gt; vec;<span class=\"comment\">//声明，未初始化</span></span><br><span class=\"line\"><span class=\"number\">11</span>     <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">vec1</span><span class=\"params\">(<span class=\"number\">2</span>, <span class=\"number\">5</span>)</span></span>;<span class=\"comment\">//2个5 </span></span><br><span class=\"line\"><span class=\"number\">12</span>     vector&lt;<span class=\"type\">int</span>&gt; vec2 = &#123; <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span> &#125;;<span class=\"comment\">//直接初始化</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">13</span>     <span class=\"comment\">//读取元素</span></span><br><span class=\"line\"><span class=\"number\">14</span>     cout &lt;&lt; <span class=\"string\">&quot;第2个元素: &quot;</span> &lt;&lt; vec2[<span class=\"number\">1</span>] &lt;&lt; endl;</span><br><span class=\"line\"><span class=\"number\">15</span>     cout &lt;&lt; <span class=\"string\">&quot;首元素: &quot;</span> &lt;&lt; vec2.<span class=\"built_in\">front</span>() &lt;&lt; endl;</span><br><span class=\"line\"><span class=\"number\">16</span>     cout &lt;&lt; <span class=\"string\">&quot;尾元素: &quot;</span> &lt;&lt; vec2.<span class=\"built_in\">back</span>() &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">17</span>     <span class=\"comment\">//插入元素</span></span><br><span class=\"line\"><span class=\"number\">18</span>     vec1.<span class=\"built_in\">insert</span>(vec1.<span class=\"built_in\">begin</span>(), <span class=\"number\">999</span>);<span class=\"comment\">//para1-插入位置，要迭代器即指针，para2-插入内容</span></span><br><span class=\"line\"><span class=\"number\">19</span>     vec2.<span class=\"built_in\">push_back</span>(<span class=\"number\">888</span>);<span class=\"comment\">//尾部插入</span></span><br><span class=\"line\"><span class=\"number\">20</span>     vec2.<span class=\"built_in\">pop_back</span>();<span class=\"comment\">//删除尾部，类似于stack，所以有时候也可以把vector当stack用</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">21</span>     <span class=\"comment\">//删除元素</span></span><br><span class=\"line\"><span class=\"number\">22</span>     vec2.<span class=\"built_in\">erase</span>(vec2.<span class=\"built_in\">end</span>()<span class=\"number\">-1</span>);<span class=\"comment\">//参数也是迭代器类型，所以使用insert和erase时，最好用iterator来遍历</span></span><br><span class=\"line\">\t\tvec2.<span class=\"built_in\">remove</span>(<span class=\"number\">5</span>);\t</span><br><span class=\"line\">     </span><br><span class=\"line\"><span class=\"number\">23</span>     <span class=\"comment\">//排序</span></span><br><span class=\"line\"><span class=\"number\">24</span>     <span class=\"built_in\">sort</span>(vec2.<span class=\"built_in\">begin</span>(), vec2.<span class=\"built_in\">end</span>());<span class=\"comment\">//给出首位指针</span></span><br><span class=\"line\"><span class=\"number\">25</span>     <span class=\"built_in\">sort</span>(vec2.<span class=\"built_in\">begin</span>(), vec2.<span class=\"built_in\">begin</span>()+<span class=\"number\">3</span>);<span class=\"comment\">//甚至这样也可以，因为iterator本身就是类型指针</span></span><br><span class=\"line\"><span class=\"number\">26</span> </span><br><span class=\"line\"><span class=\"number\">27</span>     <span class=\"comment\">//遍历--下标索引访问</span></span><br><span class=\"line\"><span class=\"number\">28</span>     cout &lt;&lt; <span class=\"string\">&quot;vec1 : &quot;</span> ;</span><br><span class=\"line\"><span class=\"number\">29</span>     <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; vec1.<span class=\"built_in\">size</span>(); ++i)</span><br><span class=\"line\"><span class=\"number\">30</span>     &#123;</span><br><span class=\"line\"><span class=\"number\">31</span>         cout &lt;&lt; vec1[i] &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\"><span class=\"number\">32</span>     &#125;</span><br><span class=\"line\"><span class=\"number\">33</span> </span><br><span class=\"line\"><span class=\"number\">34</span>     <span class=\"comment\">//遍历--迭代器指针访问</span></span><br><span class=\"line\"><span class=\"number\">35</span>     cout &lt;&lt; <span class=\"string\">&quot;\\nvec2 : &quot;</span>;</span><br><span class=\"line\"><span class=\"number\">36</span>     vector&lt;<span class=\"type\">int</span>&gt;::iterator it;</span><br><span class=\"line\"><span class=\"number\">37</span>     <span class=\"keyword\">for</span> (it=vec2.<span class=\"built_in\">begin</span>(); it != vec2.<span class=\"built_in\">end</span>(); ++it)</span><br><span class=\"line\"><span class=\"number\">38</span>     &#123;</span><br><span class=\"line\"><span class=\"number\">39</span>         cout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\"><span class=\"number\">40</span>     &#125;</span><br><span class=\"line\"><span class=\"number\">41</span>　　　<span class=\"comment\">//使用指针遍历vector</span></span><br><span class=\"line\">　　　　<span class=\"keyword\">auto</span> vec = <span class=\"keyword\">new</span> <span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;(<span class=\"number\">10</span>, <span class=\"number\">8</span>);</span><br><span class=\"line\">　　　　<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>; i&lt;vec-&gt;<span class=\"built_in\">size</span>(); i++)</span><br><span class=\"line\">　　　　　　cout &lt;&lt; (*vec)[i] &lt;&lt; <span class=\"string\">&quot;  &quot;</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//for循环遍历</span></span><br><span class=\"line\">     <span class=\"keyword\">for</span>(<span class=\"keyword\">auto</span> i:vec)<span class=\"comment\">//需要被循环的数组有begine和end</span></span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         cout &lt;&lt; i &lt;&lt; endl;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\">     <span class=\"comment\">//查找容器中的元素</span></span><br><span class=\"line\">     <span class=\"keyword\">auto</span> it =<span class=\"built_in\">find</span>(vec.begin,vec.end,temp);<span class=\"comment\">//vector&lt;int&gt;::iterator it =find(vec.begin,vec.end,temp);</span></span><br><span class=\"line\">     <span class=\"keyword\">if</span>(it != vec.<span class=\"built_in\">end</span>())</span><br><span class=\"line\">\t\tcout&lt;&lt;*it&lt;&lt;endl;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\tcout&lt;&lt;<span class=\"string\">&quot;can not find&quot;</span>&lt;&lt;endl;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">41</span>     <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"number\">42</span> &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"STL的迭代器\"><a href=\"#STL的迭代器\" class=\"headerlink\" title=\"STL的迭代器\"></a>STL的迭代器</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">std::vector&lt;<span class=\"type\">int</span>&gt; ::iterator it;     <span class=\"comment\">//it能读写vector&lt;int&gt;的元素</span></span><br><span class=\"line\">std::vector&lt;<span class=\"type\">int</span>&gt;::const_iterator it;<span class=\"comment\">//it只能读vector&lt;int&gt;的元素，不可以修改vector&lt;int&gt;中的元素</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"构造函数和析构函数\"><a href=\"#构造函数和析构函数\" class=\"headerlink\" title=\"构造函数和析构函数\"></a>构造函数和析构函数</h2><h3 id=\"同作用域下。多个对象构造顺序和析构\"><a href=\"#同作用域下。多个对象构造顺序和析构\" class=\"headerlink\" title=\"同作用域下。多个对象构造顺序和析构\"></a>同作用域下。多个对象构造顺序和析构</h3><p>先构造后析构</p>\n<h3 id=\"全局对象什么时候构造与析构\"><a href=\"#全局对象什么时候构造与析构\" class=\"headerlink\" title=\"全局对象什么时候构造与析构\"></a>全局对象什么时候构造与析构</h3><h3 id=\"静态对象什么时候构造\"><a href=\"#静态对象什么时候构造\" class=\"headerlink\" title=\"静态对象什么时候构造\"></a>静态对象什么时候构造</h3><p>全局：</p>\n<p>局部：</p>\n<h2 id=\"构造函数初始化列表\"><a href=\"#构造函数初始化列表\" class=\"headerlink\" title=\"构造函数初始化列表\"></a>构造函数初始化列表</h2><p>成员变量是引用</p>\n<p>成员变量是常量</p>\n<p>成员对象没有默认构造函数</p>\n<p>基类没有默认构造函数</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class A</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tA():b(x),a(b)&#123;&#125;</span><br><span class=\"line\">    a</span><br><span class=\"line\">    b</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">A test(100,101);</span><br><span class=\"line\">a----&gt;???</span><br><span class=\"line\">    b----------&gt;100</span><br></pre></td></tr></table></figure>\n<h2 id=\"拷贝构造函数\"><a href=\"#拷贝构造函数\" class=\"headerlink\" title=\"拷贝构造函数\"></a>拷贝构造函数</h2><h3 id=\"调用时机\"><a href=\"#调用时机\" class=\"headerlink\" title=\"调用时机\"></a><strong>调用时机</strong></h3><p>const和&amp;的作用</p>\n<h3 id=\"深拷贝和浅拷贝\"><a href=\"#深拷贝和浅拷贝\" class=\"headerlink\" title=\"深拷贝和浅拷贝\"></a>深拷贝和浅拷贝</h3><p><strong>浅拷贝：</strong>简单的赋值拷贝操作。</p>\n<p><strong>深拷贝：</strong>在堆区重新申请空间，进行拷贝操作。</p>\n<h2 id=\"移动构造函数（右值引用）\"><a href=\"#移动构造函数（右值引用）\" class=\"headerlink\" title=\"移动构造函数（右值引用）\"></a>移动构造函数（右值引用）</h2><p>把临时对象的资源转移到将要构造的对象中去</p>\n<h2 id=\"继承中的构造函数和析构函数\"><a href=\"#继承中的构造函数和析构函数\" class=\"headerlink\" title=\"继承中的构造函数和析构函数\"></a>继承中的构造函数和析构函数</h2><p>构造函数和析构函数不能被继承</p>\n<p>不能处理派生类新增的成员</p>\n<p>派生类名(参数):基类名{参数}</p>\n<p>{</p>\n<p>}</p>\n<h2 id=\"虚函数和构造函数和析构函数\"><a href=\"#虚函数和构造函数和析构函数\" class=\"headerlink\" title=\"虚函数和构造函数和析构函数\"></a>虚函数和构造函数和析构函数</h2><p>构造函数不可以是虚函数</p>\n<p>虚函数—-动态绑定</p>\n<p>调用虚函数——&gt;找到指针实际指向的对象———&gt;虚函数表指针——&gt;虚函数表———-&gt;虚函数</p>\n<p>析构函数建议设置为虚函数</p>\n<h1 id=\"右值引用\"><a href=\"#右值引用\" class=\"headerlink\" title=\"右值引用\"></a>右值引用</h1><p>右值：保存在内存的常量存储区中的值</p>\n<p>左值：局部变量保存在栈区，全局变量保存在静态全局变量区</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*  引用  */</span></span><br><span class=\"line\"><span class=\"type\">int</span> num = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> &amp;b = num; <span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"type\">int</span> &amp;c = <span class=\"number\">10</span>; <span class=\"comment\">//错误  因为该地址在常量存储区中</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> num = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> &amp;b = num;<span class=\"comment\">//正确</span></span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> &amp;c = <span class=\"number\">10</span>;<span class=\"comment\">//正确 添加const保证了不会修改该地址的值</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*   右值引用(C++11)   */</span> </span><br><span class=\"line\"><span class=\"comment\">//使用  &amp;&amp;  表示，常用于移动构造函数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> num = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"comment\">//int &amp;&amp; a = num; //右值引用不能初始化为左值，只能使用右值进行初始化</span></span><br><span class=\"line\"><span class=\"type\">int</span> &amp;&amp; a = <span class=\"number\">10</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"type\">int</span> &amp;&amp; a = <span class=\"number\">10</span>;<span class=\"comment\">//右值引用可对右值进行修改</span></span><br><span class=\"line\">a = <span class=\"number\">100</span>;</span><br><span class=\"line\">cout &lt;&lt; a &lt;&lt; endl;</span><br><span class=\"line\"><span class=\"comment\">//程序输出结果为 100。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span>&amp;&amp; a = <span class=\"number\">10</span>;<span class=\"comment\">//编译器不会报错，右值不能修改将变得毫无意义 </span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"多态\"><a href=\"#多态\" class=\"headerlink\" title=\"多态\"></a>多态</h2><h4 id=\"实现多态的条件：\"><a href=\"#实现多态的条件：\" class=\"headerlink\" title=\"实现多态的条件：\"></a>实现多态的条件：</h4><p>有继承关系；</p>\n<p>子类重写父类的方法；</p>\n<p>父类指针指向子类对象；</p>\n<p>​                                                函数重载</p>\n<p>​                    静态多态———-&gt;</p>\n<p>多态——-&gt;                                泛型编程（模板编程）            </p>\n<p>​                    动态多态————&gt; 虚函数</p>\n<h5 id=\"静态绑定\"><a href=\"#静态绑定\" class=\"headerlink\" title=\"静态绑定\"></a>静态绑定</h5><p>该绑定发生在<strong>编译期</strong></p>\n<h5 id=\"动态绑定（虚函数）\"><a href=\"#动态绑定（虚函数）\" class=\"headerlink\" title=\"动态绑定（虚函数）\"></a>动态绑定（虚函数）</h5><p>该绑定发生在<strong>运行期</strong>，虽然降低了运行效率，但是实现了多态</p>\n<p>父类中的函数没有virtual声明，则调用父类的方法，即静态绑定</p>\n<p>父类中的函数有virtual声明，则绑定子类的方法，子类同名函数默认为virtual虚函数，不管声明与否</p>\n<h4 id=\"指针问题\"><a href=\"#指针问题\" class=\"headerlink\" title=\"指针问题\"></a>指针问题</h4><h5 id=\"一、父指针指向子类对象\"><a href=\"#一、父指针指向子类对象\" class=\"headerlink\" title=\"一、父指针指向子类对象\"></a>一、父指针指向子类对象</h5><h5 id=\"二、子类指针指向父类对象\"><a href=\"#二、子类指针指向父类对象\" class=\"headerlink\" title=\"二、子类指针指向父类对象\"></a>二、子类指针指向父类对象</h5><h2 id=\"类型强制转换\"><a href=\"#类型强制转换\" class=\"headerlink\" title=\"类型强制转换\"></a>类型强制转换</h2><p>C++11四种强制转换</p>\n<p>static_cast</p>\n<p>const_cast</p>\n<h2 id=\"智能指针\"><a href=\"#智能指针\" class=\"headerlink\" title=\"智能指针\"></a>智能指针</h2><p>从比较简单的层面来看，智能指针是RAII(Resource Acquisition Is Initialization，资源获取即初始化)机制对普通指针进行的一层封装。这样使得智能指针的行为动作像一个指针，本质上却是一个对象，这样可以方便管理一个对象的<a href=\"https://so.csdn.net/so/search?q=生命周期&amp;spm=1001.2101.3001.7020\">生命周期</a></p>\n<h4 id=\"强指针，弱指针\"><a href=\"#强指针，弱指针\" class=\"headerlink\" title=\"强指针，弱指针\"></a>强指针，弱指针</h4><ul>\n<li><strong>强智能指针</strong>：资源每被强智能指针引用一次，引用计数+1，释放引用计数-1，如shared_ptr;</li>\n<li><strong>弱智能指针</strong>：仅仅起到观察作用，观察对象释放还存在，不改变资源的引用计数，也就是说对象的引用计数是否等于0,如weak_ptr.</li>\n</ul>\n<p>C++项目指针的初始化上</p>\n<ol>\n<li><p>原则上只使用智能指针，不用普通指针，风格更加统一</p>\n</li>\n<li><p>强指针的使用范围：局部变量、子对象指针、可影响其生命周期的对象指针</p>\n<p>该条即是利用强指针进行资源回收，不需要再人工计算new和delete，一个对象在何处（父类中或函数中）创建，就在何处（父类析构或函数结束）回收。</p>\n</li>\n<li><p>弱指针的使用范围：父对象指针、某些不能影响其生命周期的对象指针</p>\n<p>该条一是避免强指针循环依赖，二是保障线程安全。其他对象成员不是在该类中创建，则不需要该类负责回收，因此使用弱指针。</p>\n</li>\n</ol>\n<h2 id=\"虚函数\"><a href=\"#虚函数\" class=\"headerlink\" title=\"虚函数\"></a>虚函数</h2><h2 id=\"大端格式和小端格式\"><a href=\"#大端格式和小端格式\" class=\"headerlink\" title=\"大端格式和小端格式\"></a>大端格式和小端格式</h2><p>大端格式：高地址存在低字节，低地址存在高字节</p>\n<p>小端格式：低地址存在低字节，高地址存在高字节</p>\n"},{"_content":"```\nEMS（云服务器）\n```\n\n\n\n第一步 安装git\n\n目的：使用git 初始化用户和邮箱\n\n\n\n安装命令顺序\n\n```\ncd /usr/local/src/\n\n#在https://www.kernel.org/pub/software/scm/git/中找到最新的安装包##以xz结尾\n[root@localhost test1]#  wget https://www.kernel.org/pub/software/scm/git/git-2.15.1.tar.xz\n\n[root@localhost test1]#  tar -vxf git-2.15.1.tar.xz\n\n[root@localhost test1]#  cd git-2.15.1\n\n[root@localhost test1]#  make prefix=/usr/local/git all\n\n[root@localhost test1]#  make prefix=/usr/local/git install\n\n[root@localhost test1]#  echo \"export PATH=$PATH:/usr/local/git/bin\" >> /etc/profile\n\n[root@localhost test1]#  source /etc/profile\n\n[root@localhost test1]#  git --version\n```\n\n问题一:安装最新的git时缺少依赖库\n\n解决方法\n\n安装对应的安装包\n\n命令行输入：yum install curl-devel expat-devel gettext-devel  openssl-devel zlib-devel\n\n第二步 生成公钥\n\n在windows终端上可以快速登录云服务器\n\n第三步 创建hexo博客框架\n\n1.下载node\n\n进入nodejs的GitHub存储库 选择对应版本的命令下载\n\nnode存储库[nodesource/distributions：NodeSource Node.js Binary Distributions (github.com)](https://github.com/nodesource/distributions)\n\n因为\n\n```\nsudo yum install https://rpm.nodesource.com/pub_16.x/nodistro/repo/nodesource-release-nodistro-1.noarch.rpm -y\nsudo yum install nodejs -y --setopt=nodesource-nodejs.module_hotfixes=1\n```\n\n使用 node -v 和npm -v 输出版本信息 即成功\n\n2.使用npm命令安装hexo框架\n\n```\nnpm install hexo-cli -g\n```\n\n问题一：显示npm版本过低\n\n3.初始化hexo\n\n```\nhexo init [博客文件名] \n```\n\n第四步 安装screen\n\n让hexo能在后台运行\n\n```\nyum install screen\n#which screen  --查看是否安装成功\n--screen 基本命令\n```\n\n","source":"_posts/EMS.md","raw":"```\nEMS（云服务器）\n```\n\n\n\n第一步 安装git\n\n目的：使用git 初始化用户和邮箱\n\n\n\n安装命令顺序\n\n```\ncd /usr/local/src/\n\n#在https://www.kernel.org/pub/software/scm/git/中找到最新的安装包##以xz结尾\n[root@localhost test1]#  wget https://www.kernel.org/pub/software/scm/git/git-2.15.1.tar.xz\n\n[root@localhost test1]#  tar -vxf git-2.15.1.tar.xz\n\n[root@localhost test1]#  cd git-2.15.1\n\n[root@localhost test1]#  make prefix=/usr/local/git all\n\n[root@localhost test1]#  make prefix=/usr/local/git install\n\n[root@localhost test1]#  echo \"export PATH=$PATH:/usr/local/git/bin\" >> /etc/profile\n\n[root@localhost test1]#  source /etc/profile\n\n[root@localhost test1]#  git --version\n```\n\n问题一:安装最新的git时缺少依赖库\n\n解决方法\n\n安装对应的安装包\n\n命令行输入：yum install curl-devel expat-devel gettext-devel  openssl-devel zlib-devel\n\n第二步 生成公钥\n\n在windows终端上可以快速登录云服务器\n\n第三步 创建hexo博客框架\n\n1.下载node\n\n进入nodejs的GitHub存储库 选择对应版本的命令下载\n\nnode存储库[nodesource/distributions：NodeSource Node.js Binary Distributions (github.com)](https://github.com/nodesource/distributions)\n\n因为\n\n```\nsudo yum install https://rpm.nodesource.com/pub_16.x/nodistro/repo/nodesource-release-nodistro-1.noarch.rpm -y\nsudo yum install nodejs -y --setopt=nodesource-nodejs.module_hotfixes=1\n```\n\n使用 node -v 和npm -v 输出版本信息 即成功\n\n2.使用npm命令安装hexo框架\n\n```\nnpm install hexo-cli -g\n```\n\n问题一：显示npm版本过低\n\n3.初始化hexo\n\n```\nhexo init [博客文件名] \n```\n\n第四步 安装screen\n\n让hexo能在后台运行\n\n```\nyum install screen\n#which screen  --查看是否安装成功\n--screen 基本命令\n```\n\n","slug":"EMS","published":1,"date":"2024-02-05T01:18:02.052Z","updated":"2024-02-05T01:18:02.052Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cltxxetaf00096cds3en8brkb","content":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">EMS（云服务器）</span><br></pre></td></tr></table></figure>\n<p>第一步 安装git</p>\n<p>目的：使用git 初始化用户和邮箱</p>\n<p>安装命令顺序</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/src/</span><br><span class=\"line\"></span><br><span class=\"line\">#在https://www.kernel.org/pub/software/scm/git/中找到最新的安装包##以xz结尾</span><br><span class=\"line\">[root@localhost test1]#  wget https://www.kernel.org/pub/software/scm/git/git-2.15.1.tar.xz</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost test1]#  tar -vxf git-2.15.1.tar.xz</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost test1]#  cd git-2.15.1</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost test1]#  make prefix=/usr/local/git all</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost test1]#  make prefix=/usr/local/git install</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost test1]#  echo &quot;export PATH=$PATH:/usr/local/git/bin&quot; &gt;&gt; /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost test1]#  source /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost test1]#  git --version</span><br></pre></td></tr></table></figure>\n<p>问题一:安装最新的git时缺少依赖库</p>\n<p>解决方法</p>\n<p>安装对应的安装包</p>\n<p>命令行输入：yum install curl-devel expat-devel gettext-devel  openssl-devel zlib-devel</p>\n<p>第二步 生成公钥</p>\n<p>在windows终端上可以快速登录云服务器</p>\n<p>第三步 创建hexo博客框架</p>\n<p>1.下载node</p>\n<p>进入nodejs的GitHub存储库 选择对应版本的命令下载</p>\n<p>node存储库<a href=\"https://github.com/nodesource/distributions\">nodesource/distributions：NodeSource Node.js Binary Distributions (github.com)</a></p>\n<p>因为</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install https://rpm.nodesource.com/pub_16.x/nodistro/repo/nodesource-release-nodistro-1.noarch.rpm -y</span><br><span class=\"line\">sudo yum install nodejs -y --setopt=nodesource-nodejs.module_hotfixes=1</span><br></pre></td></tr></table></figure>\n<p>使用 node -v 和npm -v 输出版本信息 即成功</p>\n<p>2.使用npm命令安装hexo框架</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>\n<p>问题一：显示npm版本过低</p>\n<p>3.初始化hexo</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init [博客文件名] </span><br></pre></td></tr></table></figure>\n<p>第四步 安装screen</p>\n<p>让hexo能在后台运行</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install screen</span><br><span class=\"line\">#which screen  --查看是否安装成功</span><br><span class=\"line\">--screen 基本命令</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">EMS（云服务器）</span><br></pre></td></tr></table></figure>\n<p>第一步 安装git</p>\n<p>目的：使用git 初始化用户和邮箱</p>\n<p>安装命令顺序</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/src/</span><br><span class=\"line\"></span><br><span class=\"line\">#在https://www.kernel.org/pub/software/scm/git/中找到最新的安装包##以xz结尾</span><br><span class=\"line\">[root@localhost test1]#  wget https://www.kernel.org/pub/software/scm/git/git-2.15.1.tar.xz</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost test1]#  tar -vxf git-2.15.1.tar.xz</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost test1]#  cd git-2.15.1</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost test1]#  make prefix=/usr/local/git all</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost test1]#  make prefix=/usr/local/git install</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost test1]#  echo &quot;export PATH=$PATH:/usr/local/git/bin&quot; &gt;&gt; /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost test1]#  source /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost test1]#  git --version</span><br></pre></td></tr></table></figure>\n<p>问题一:安装最新的git时缺少依赖库</p>\n<p>解决方法</p>\n<p>安装对应的安装包</p>\n<p>命令行输入：yum install curl-devel expat-devel gettext-devel  openssl-devel zlib-devel</p>\n<p>第二步 生成公钥</p>\n<p>在windows终端上可以快速登录云服务器</p>\n<p>第三步 创建hexo博客框架</p>\n<p>1.下载node</p>\n<p>进入nodejs的GitHub存储库 选择对应版本的命令下载</p>\n<p>node存储库<a href=\"https://github.com/nodesource/distributions\">nodesource/distributions：NodeSource Node.js Binary Distributions (github.com)</a></p>\n<p>因为</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install https://rpm.nodesource.com/pub_16.x/nodistro/repo/nodesource-release-nodistro-1.noarch.rpm -y</span><br><span class=\"line\">sudo yum install nodejs -y --setopt=nodesource-nodejs.module_hotfixes=1</span><br></pre></td></tr></table></figure>\n<p>使用 node -v 和npm -v 输出版本信息 即成功</p>\n<p>2.使用npm命令安装hexo框架</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>\n<p>问题一：显示npm版本过低</p>\n<p>3.初始化hexo</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init [博客文件名] </span><br></pre></td></tr></table></figure>\n<p>第四步 安装screen</p>\n<p>让hexo能在后台运行</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install screen</span><br><span class=\"line\">#which screen  --查看是否安装成功</span><br><span class=\"line\">--screen 基本命令</span><br></pre></td></tr></table></figure>\n"},{"title":"GDB","_content":"\n \n\n基本命令\n\n```c++\n\n\n```\n\n","source":"_posts/GDB.md","raw":"---\ntitle: GDB\n---\n\n \n\n基本命令\n\n```c++\n\n\n```\n\n","slug":"GDB","published":1,"date":"2024-02-05T01:18:02.291Z","updated":"2024-02-05T01:18:02.291Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cltxxetai000b6cdsa2kgg32d","content":"<p>基本命令</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<p>基本命令</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n"},{"_content":"\n\nhexo clean && hexo g && hexo s -p 80\n\n不能使用jpg图片","source":"_posts/butterfly主题搭建.md","raw":"\n\nhexo clean && hexo g && hexo s -p 80\n\n不能使用jpg图片","slug":"butterfly主题搭建","published":1,"date":"2024-02-05T01:18:00.765Z","updated":"2024-02-05T01:18:00.765Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cltxxetal000d6cds5fpocc8m","content":"<p>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s -p 80</p>\n<p>不能使用jpg图片</p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<p>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s -p 80</p>\n<p>不能使用jpg图片</p>\n"},{"title":"git","_content":"\n\n\n\n\n\n\n参考pro git简体中文版\n\nhttp://iissnan.com/progit/ \n\n# 1.git的基本使用方式\n\n## 1.1git 安装\n\nlinux\n\nyum -y install git\n\n输入 git --version查看Git是否安装完成以及查看其版本号\n\nwindows \n\nhttps://git-scm.com/\n\n进入git官网，选择windows版本进行下载\n\n下载完后，点击exe文件执行，根据提示进行安装，\n\n安装完成之后在桌面点击右键出现git bash 即成功\n\n\n\n### 1.2 本地建立git标识\n\ngit config --global user.name \"YOUR NAME\"\n\ngit config --global user.email \"YOUR EMAIL\"\n\n该两行命令表示一个标识，\n\n### 1.3初始化git仓库\n\ngit init\n\n在哪个目录下执行的，那这个目录就变成git可以管理的目录\n\n### 1.4 添加文件到暂存区\n\ngit add [文件名] \n\n#将文件添加到暂存区\n\n### 1.5  用命令 git commit告诉Git，把文件提交到仓库\n\ngit commit -m \"注释\"   ##给本次提交提供注释\n\n### 1.6 **连接远程仓库**\n\n在github(或其他接受git命令的仓库)\n\n点开github页面，在设置里找到ssh连接，将本地的公钥内容复制到ssh框中，重新输入密码，提示成功即可。\n\n```\ngit remote add origin https://github.com/xuyujie2020/Hello-World.git\n```\n\n使用该命令连接到远程仓库\n\n### 1.7上传代码\n\ngit push -u origin master\n\n第一次提交代码需要加上-u\n\n### 1.8克隆代码\n\n使用git clone + [url]   ##url : 路径\n\ngithub支持git和http两种克隆模式\n\n### 1.9 查看当前分支\n\ngit status\n\n可以查看clone下来的代码所属的分支\n\n使用git checkout 可以切换分支\n\ngit branch 也可以查看分支\n\n### 1.10 创建分支\n\ngit branch + [名字] 创建一个新的分支，不切换分支\n\ngit checkout -b 创建一个分支并切换过去\n\n### 1.11 查看代码的修改\n\n每次代码修改会在该目录下形成一个.git文件，修改的内容保存在这\n\ngit status 可以查看被修改过的文件\n\ngit diff 查看修改的内容\n\n### 1.12 删除分支\n\ngit branch -d + [名字]\n\n### 1.13 删除仓库\n\n在github网页中，进入仓库，在设置中的最下面选择delete，输入要删除的仓库的路径即可\n\n\n\n问题解决\n\nvisual studio 上传代码出现错误\n\n使用git add .时出现\n\nerror: open(\"贪吃蛇/.vs/贪吃蛇/v17/Browse.VC.opendb\"): Permission denied\nerror: unable to index file '贪吃蛇/.vs/贪吃蛇/v17/Browse.VC.opendb'\nfatal: adding files failed\n\n解决方法\n\ntouch .gitignore    \n\n在文件中添加 .vs/保存即可\n\n##忽略.vs/文件\n\n\n\n\n\n##### git 基本命令\n\n```\ngit init                                                  # 初始化本地git仓库（创建新仓库）\ngit config --global user.name \"xxx\"                       # 配置用户名\ngit config --global user.email \"xxx@xxx.com\"              # 配置邮件\ngit config --global color.ui true                         # git status等命令自动着色\ngit config --global color.status auto\ngit config --global color.diff auto\ngit config --global color.branch auto\ngit config --global color.interactive auto\ngit config --global --unset http.proxy                    # remove  proxy configuration on git\ngit clone git+ssh://git@192.168.53.168/VT.git             # clone远程仓库\ngit status                                                # 查看当前版本状态（是否修改）\ngit add xyz                                               # 添加xyz文件至index\ngit add .                                                 # 增加当前子目录下所有更改过的文件至index\ngit commit -m 'xxx'                                       # 提交\ngit commit --amend -m 'xxx'                               # 合并上一次提交（用于反复修改）\ngit commit -am 'xxx'                                      # 将add和commit合为一步\ngit rm xxx                                                # 删除index中的文件\ngit rm -r *                                               # 递归删除\ngit log                                                   # 显示提交日志\ngit log -1                                                # 显示1行日志 -n为n行\ngit log -5\ngit log --stat                                            # 显示提交日志及相关变动文件\ngit log -p -m\ngit show dfb02e6e4f2f7b573337763e5c0013802e392818         # 显示某个提交的详细内容\ngit show dfb02                                            # 可只用commitid的前几位\ngit show HEAD                                             # 显示HEAD提交日志\ngit show HEAD^                                            # 显示HEAD的父（上一个版本）的提交日志 ^^为上两个版本 ^5为上5个版本\ngit tag                                                   # 显示已存在的tag\ngit tag -a v2.0 -m 'xxx'                                  # 增加v2.0的tag\ngit show v2.0                                             # 显示v2.0的日志及详细内容\ngit log v2.0                                              # 显示v2.0的日志\ngit diff                                                  # 显示所有未添加至index的变更\ngit diff --cached                                         # 显示所有已添加index但还未commit的变更\ngit diff HEAD^                                            # 比较与上一个版本的差异\ngit diff HEAD -- ./lib                                    # 比较与HEAD版本lib目录的差异\ngit diff origin/master..master                            # 比较远程分支master上有本地分支master上没有的\ngit diff origin/master..master --stat                     # 只显示差异的文件，不显示具体内容\ngit remote add origin git+ssh://git@192.168.53.168/VT.git # 增加远程定义（用于push/pull/fetch）\ngit branch                                                # 显示本地分支\ngit branch --contains 50089                               # 显示包含提交50089的分支\ngit branch -a                                             # 显示所有分支\ngit branch -r                                             # 显示所有原创分支\ngit branch --merged                                       # 显示所有已合并到当前分支的分支\ngit branch --no-merged                                    # 显示所有未合并到当前分支的分支\ngit branch -m master master_copy                          # 本地分支改名\ngit checkout -b master_copy                               # 从当前分支创建新分支master_copy并检出\ngit checkout -b master master_copy                        # 上面的完整版\ngit checkout features/performance                         # 检出已存在的features/performance分支\ngit checkout --track hotfixes/BJVEP933                    # 检出远程分支hotfixes/BJVEP933并创建本地跟踪分支\ngit checkout v2.0                                         # 检出版本v2.0\ngit checkout -b devel origin/develop                      # 从远程分支develop创建新本地分支devel并检出\ngit checkout -- README                                    # 检出head版本的README文件（可用于修改错误回退）\ngit merge origin/master                                   # 合并远程master分支至当前分支\ngit cherry-pick ff44785404a8e                             # 合并提交ff44785404a8e的修改\ngit push origin master                                    # 将当前分支push到远程master分支\ngit push origin :hotfixes/BJVEP933                        # 删除远程仓库的hotfixes/BJVEP933分支\ngit push --tags                                           # 把所有tag推送到远程仓库\ngit fetch                                                 # 获取所有远程分支（不更新本地分支，另需merge）\ngit fetch --prune                                         # 获取所有原创分支并清除服务器上已删掉的分支\ngit pull origin master                                    # 获取远程分支master并merge到当前分支\ngit mv README README2                                     # 重命名文件README为README2\ngit reset --hard HEAD                                     # 将当前版本重置为HEAD（通常用于merge失败回退）\ngit rebase\ngit branch -d hotfixes/BJVEP933                           # 删除分支hotfixes/BJVEP933（本分支修改已合并到其他分支）\ngit branch -D hotfixes/BJVEP933                           # 强制删除分支hotfixes/BJVEP933\ngit ls-files                                              # 列出git index包含的文件\ngit show-branch                                           # 图示当前分支历史\ngit show-branch --all                                     # 图示所有分支历史\ngit whatchanged                                           # 显示提交历史对应的文件修改\ngit revert dfb02e6e4f2f7b573337763e5c0013802e392818       # 撤销提交dfb02e6e4f2f7b573337763e5c0013802e392818\ngit ls-tree HEAD                                          # 内部命令：显示某个git对象\ngit rev-parse v2.0                                        # 内部命令：显示某个ref对于的SHA1 HASH\ngit reflog                                                # 显示所有提交，包括孤立节点\ngit show HEAD@{5}\ngit show master@{yesterday}                               # 显示master分支昨天的状态\ngit log --pretty=format:'%h %s' --graph                   # 图示提交日志\ngit show HEAD~3\ngit show -s --pretty=raw 2be7fcb476\ngit stash                                                 # 暂存当前修改，将所有至为HEAD状态\ngit stash list                                            # 查看所有暂存\ngit stash show -p stash@{0}                               # 参考第一次暂存\ngit stash apply stash@{0}                                 # 应用第一次暂存\ngit grep \"delete from\"                                    # 文件中搜索文本“delete from”\ngit grep -e '#define' --and -e SORT_DIRENT\ngit gc\ngit fsck\n```\n\n\n\n##### 冲突合并\n\n```\ngit branch 分支 # 创建分支\ngit branch -v # 查看分支版本\ngit bachch hot-fix # 创建hot-fix分支\ngit checkout hot-fix # 切换分支\n\ngit merge hot-fix # 将hot-fix分支合并到当前分支上 \n\n冲突合并\n\n两个分支在同一个文件的同一个位置 有两套完全不一样的内容 git无法决定\n\n此时我们在不同的分支上都提交了本地库 然后切换到Master分支 开始进行合并\n\ngit merge hot-fix\n\n然后我们会得到如下报错信息\n\nAuto-merging hello.c\n\nCONFICT(content): Merge conflict in hello.c\n\nAutomatic merge failed; fix conflicts and then commit the result.\n\n同时右边的分支状态会显示为 master | MERGING\n\n再执行\n\ngit status\n\n就会告诉我们\n\nboth modified: hello.c\n\n在这个文件里面\n\n会使用 \n\n<<<<<<HEAD\n\n======\n\n#\n\n>>>>>> hot-fix 进行分隔\n\ngit status\ngit add hello.c\n\n当我们执行这条语句后\n\ngit commit -m \"merge test\" hello.c\n\nfatal: cannot do a partial commit during a merge\n\n在合并过程中不能只进行部分的修改\n\ngit commit -m \"merge test\"\n\n底层都是看得指针 主要是HEAD指针\n\nhead(指针) 指向分支指针 \n\nmaster(指针) 指向具体版本\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/git.md","raw":"---\ntitle: git\n---\n\n\n\n\n\n\n\n参考pro git简体中文版\n\nhttp://iissnan.com/progit/ \n\n# 1.git的基本使用方式\n\n## 1.1git 安装\n\nlinux\n\nyum -y install git\n\n输入 git --version查看Git是否安装完成以及查看其版本号\n\nwindows \n\nhttps://git-scm.com/\n\n进入git官网，选择windows版本进行下载\n\n下载完后，点击exe文件执行，根据提示进行安装，\n\n安装完成之后在桌面点击右键出现git bash 即成功\n\n\n\n### 1.2 本地建立git标识\n\ngit config --global user.name \"YOUR NAME\"\n\ngit config --global user.email \"YOUR EMAIL\"\n\n该两行命令表示一个标识，\n\n### 1.3初始化git仓库\n\ngit init\n\n在哪个目录下执行的，那这个目录就变成git可以管理的目录\n\n### 1.4 添加文件到暂存区\n\ngit add [文件名] \n\n#将文件添加到暂存区\n\n### 1.5  用命令 git commit告诉Git，把文件提交到仓库\n\ngit commit -m \"注释\"   ##给本次提交提供注释\n\n### 1.6 **连接远程仓库**\n\n在github(或其他接受git命令的仓库)\n\n点开github页面，在设置里找到ssh连接，将本地的公钥内容复制到ssh框中，重新输入密码，提示成功即可。\n\n```\ngit remote add origin https://github.com/xuyujie2020/Hello-World.git\n```\n\n使用该命令连接到远程仓库\n\n### 1.7上传代码\n\ngit push -u origin master\n\n第一次提交代码需要加上-u\n\n### 1.8克隆代码\n\n使用git clone + [url]   ##url : 路径\n\ngithub支持git和http两种克隆模式\n\n### 1.9 查看当前分支\n\ngit status\n\n可以查看clone下来的代码所属的分支\n\n使用git checkout 可以切换分支\n\ngit branch 也可以查看分支\n\n### 1.10 创建分支\n\ngit branch + [名字] 创建一个新的分支，不切换分支\n\ngit checkout -b 创建一个分支并切换过去\n\n### 1.11 查看代码的修改\n\n每次代码修改会在该目录下形成一个.git文件，修改的内容保存在这\n\ngit status 可以查看被修改过的文件\n\ngit diff 查看修改的内容\n\n### 1.12 删除分支\n\ngit branch -d + [名字]\n\n### 1.13 删除仓库\n\n在github网页中，进入仓库，在设置中的最下面选择delete，输入要删除的仓库的路径即可\n\n\n\n问题解决\n\nvisual studio 上传代码出现错误\n\n使用git add .时出现\n\nerror: open(\"贪吃蛇/.vs/贪吃蛇/v17/Browse.VC.opendb\"): Permission denied\nerror: unable to index file '贪吃蛇/.vs/贪吃蛇/v17/Browse.VC.opendb'\nfatal: adding files failed\n\n解决方法\n\ntouch .gitignore    \n\n在文件中添加 .vs/保存即可\n\n##忽略.vs/文件\n\n\n\n\n\n##### git 基本命令\n\n```\ngit init                                                  # 初始化本地git仓库（创建新仓库）\ngit config --global user.name \"xxx\"                       # 配置用户名\ngit config --global user.email \"xxx@xxx.com\"              # 配置邮件\ngit config --global color.ui true                         # git status等命令自动着色\ngit config --global color.status auto\ngit config --global color.diff auto\ngit config --global color.branch auto\ngit config --global color.interactive auto\ngit config --global --unset http.proxy                    # remove  proxy configuration on git\ngit clone git+ssh://git@192.168.53.168/VT.git             # clone远程仓库\ngit status                                                # 查看当前版本状态（是否修改）\ngit add xyz                                               # 添加xyz文件至index\ngit add .                                                 # 增加当前子目录下所有更改过的文件至index\ngit commit -m 'xxx'                                       # 提交\ngit commit --amend -m 'xxx'                               # 合并上一次提交（用于反复修改）\ngit commit -am 'xxx'                                      # 将add和commit合为一步\ngit rm xxx                                                # 删除index中的文件\ngit rm -r *                                               # 递归删除\ngit log                                                   # 显示提交日志\ngit log -1                                                # 显示1行日志 -n为n行\ngit log -5\ngit log --stat                                            # 显示提交日志及相关变动文件\ngit log -p -m\ngit show dfb02e6e4f2f7b573337763e5c0013802e392818         # 显示某个提交的详细内容\ngit show dfb02                                            # 可只用commitid的前几位\ngit show HEAD                                             # 显示HEAD提交日志\ngit show HEAD^                                            # 显示HEAD的父（上一个版本）的提交日志 ^^为上两个版本 ^5为上5个版本\ngit tag                                                   # 显示已存在的tag\ngit tag -a v2.0 -m 'xxx'                                  # 增加v2.0的tag\ngit show v2.0                                             # 显示v2.0的日志及详细内容\ngit log v2.0                                              # 显示v2.0的日志\ngit diff                                                  # 显示所有未添加至index的变更\ngit diff --cached                                         # 显示所有已添加index但还未commit的变更\ngit diff HEAD^                                            # 比较与上一个版本的差异\ngit diff HEAD -- ./lib                                    # 比较与HEAD版本lib目录的差异\ngit diff origin/master..master                            # 比较远程分支master上有本地分支master上没有的\ngit diff origin/master..master --stat                     # 只显示差异的文件，不显示具体内容\ngit remote add origin git+ssh://git@192.168.53.168/VT.git # 增加远程定义（用于push/pull/fetch）\ngit branch                                                # 显示本地分支\ngit branch --contains 50089                               # 显示包含提交50089的分支\ngit branch -a                                             # 显示所有分支\ngit branch -r                                             # 显示所有原创分支\ngit branch --merged                                       # 显示所有已合并到当前分支的分支\ngit branch --no-merged                                    # 显示所有未合并到当前分支的分支\ngit branch -m master master_copy                          # 本地分支改名\ngit checkout -b master_copy                               # 从当前分支创建新分支master_copy并检出\ngit checkout -b master master_copy                        # 上面的完整版\ngit checkout features/performance                         # 检出已存在的features/performance分支\ngit checkout --track hotfixes/BJVEP933                    # 检出远程分支hotfixes/BJVEP933并创建本地跟踪分支\ngit checkout v2.0                                         # 检出版本v2.0\ngit checkout -b devel origin/develop                      # 从远程分支develop创建新本地分支devel并检出\ngit checkout -- README                                    # 检出head版本的README文件（可用于修改错误回退）\ngit merge origin/master                                   # 合并远程master分支至当前分支\ngit cherry-pick ff44785404a8e                             # 合并提交ff44785404a8e的修改\ngit push origin master                                    # 将当前分支push到远程master分支\ngit push origin :hotfixes/BJVEP933                        # 删除远程仓库的hotfixes/BJVEP933分支\ngit push --tags                                           # 把所有tag推送到远程仓库\ngit fetch                                                 # 获取所有远程分支（不更新本地分支，另需merge）\ngit fetch --prune                                         # 获取所有原创分支并清除服务器上已删掉的分支\ngit pull origin master                                    # 获取远程分支master并merge到当前分支\ngit mv README README2                                     # 重命名文件README为README2\ngit reset --hard HEAD                                     # 将当前版本重置为HEAD（通常用于merge失败回退）\ngit rebase\ngit branch -d hotfixes/BJVEP933                           # 删除分支hotfixes/BJVEP933（本分支修改已合并到其他分支）\ngit branch -D hotfixes/BJVEP933                           # 强制删除分支hotfixes/BJVEP933\ngit ls-files                                              # 列出git index包含的文件\ngit show-branch                                           # 图示当前分支历史\ngit show-branch --all                                     # 图示所有分支历史\ngit whatchanged                                           # 显示提交历史对应的文件修改\ngit revert dfb02e6e4f2f7b573337763e5c0013802e392818       # 撤销提交dfb02e6e4f2f7b573337763e5c0013802e392818\ngit ls-tree HEAD                                          # 内部命令：显示某个git对象\ngit rev-parse v2.0                                        # 内部命令：显示某个ref对于的SHA1 HASH\ngit reflog                                                # 显示所有提交，包括孤立节点\ngit show HEAD@{5}\ngit show master@{yesterday}                               # 显示master分支昨天的状态\ngit log --pretty=format:'%h %s' --graph                   # 图示提交日志\ngit show HEAD~3\ngit show -s --pretty=raw 2be7fcb476\ngit stash                                                 # 暂存当前修改，将所有至为HEAD状态\ngit stash list                                            # 查看所有暂存\ngit stash show -p stash@{0}                               # 参考第一次暂存\ngit stash apply stash@{0}                                 # 应用第一次暂存\ngit grep \"delete from\"                                    # 文件中搜索文本“delete from”\ngit grep -e '#define' --and -e SORT_DIRENT\ngit gc\ngit fsck\n```\n\n\n\n##### 冲突合并\n\n```\ngit branch 分支 # 创建分支\ngit branch -v # 查看分支版本\ngit bachch hot-fix # 创建hot-fix分支\ngit checkout hot-fix # 切换分支\n\ngit merge hot-fix # 将hot-fix分支合并到当前分支上 \n\n冲突合并\n\n两个分支在同一个文件的同一个位置 有两套完全不一样的内容 git无法决定\n\n此时我们在不同的分支上都提交了本地库 然后切换到Master分支 开始进行合并\n\ngit merge hot-fix\n\n然后我们会得到如下报错信息\n\nAuto-merging hello.c\n\nCONFICT(content): Merge conflict in hello.c\n\nAutomatic merge failed; fix conflicts and then commit the result.\n\n同时右边的分支状态会显示为 master | MERGING\n\n再执行\n\ngit status\n\n就会告诉我们\n\nboth modified: hello.c\n\n在这个文件里面\n\n会使用 \n\n<<<<<<HEAD\n\n======\n\n#\n\n>>>>>> hot-fix 进行分隔\n\ngit status\ngit add hello.c\n\n当我们执行这条语句后\n\ngit commit -m \"merge test\" hello.c\n\nfatal: cannot do a partial commit during a merge\n\n在合并过程中不能只进行部分的修改\n\ngit commit -m \"merge test\"\n\n底层都是看得指针 主要是HEAD指针\n\nhead(指针) 指向分支指针 \n\nmaster(指针) 指向具体版本\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"git","published":1,"date":"2024-02-05T01:18:02.552Z","updated":"2024-02-05T01:18:02.552Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cltxxetan000e6cds2ff4hppr","content":"<p>参考pro git简体中文版</p>\n<p><a href=\"http://iissnan.com/progit/\">http://iissnan.com/progit/</a> </p>\n<h1 id=\"1-git的基本使用方式\"><a href=\"#1-git的基本使用方式\" class=\"headerlink\" title=\"1.git的基本使用方式\"></a>1.git的基本使用方式</h1><h2 id=\"1-1git-安装\"><a href=\"#1-1git-安装\" class=\"headerlink\" title=\"1.1git 安装\"></a>1.1git 安装</h2><p>linux</p>\n<p>yum -y install git</p>\n<p>输入 git —version查看Git是否安装完成以及查看其版本号</p>\n<p>windows </p>\n<p><a href=\"https://git-scm.com/\">https://git-scm.com/</a></p>\n<p>进入git官网，选择windows版本进行下载</p>\n<p>下载完后，点击exe文件执行，根据提示进行安装，</p>\n<p>安装完成之后在桌面点击右键出现git bash 即成功</p>\n<h3 id=\"1-2-本地建立git标识\"><a href=\"#1-2-本地建立git标识\" class=\"headerlink\" title=\"1.2 本地建立git标识\"></a>1.2 本地建立git标识</h3><p>git config —global user.name “YOUR NAME”</p>\n<p>git config —global user.email “YOUR EMAIL”</p>\n<p>该两行命令表示一个标识，</p>\n<h3 id=\"1-3初始化git仓库\"><a href=\"#1-3初始化git仓库\" class=\"headerlink\" title=\"1.3初始化git仓库\"></a>1.3初始化git仓库</h3><p>git init</p>\n<p>在哪个目录下执行的，那这个目录就变成git可以管理的目录</p>\n<h3 id=\"1-4-添加文件到暂存区\"><a href=\"#1-4-添加文件到暂存区\" class=\"headerlink\" title=\"1.4 添加文件到暂存区\"></a>1.4 添加文件到暂存区</h3><p>git add [文件名] </p>\n<h1 id=\"将文件添加到暂存区\"><a href=\"#将文件添加到暂存区\" class=\"headerlink\" title=\"将文件添加到暂存区\"></a>将文件添加到暂存区</h1><h3 id=\"1-5-用命令-git-commit告诉Git，把文件提交到仓库\"><a href=\"#1-5-用命令-git-commit告诉Git，把文件提交到仓库\" class=\"headerlink\" title=\"1.5  用命令 git commit告诉Git，把文件提交到仓库\"></a>1.5  用命令 git commit告诉Git，把文件提交到仓库</h3><p>git commit -m “注释”   ##给本次提交提供注释</p>\n<h3 id=\"1-6-连接远程仓库\"><a href=\"#1-6-连接远程仓库\" class=\"headerlink\" title=\"1.6 连接远程仓库\"></a>1.6 <strong>连接远程仓库</strong></h3><p>在github(或其他接受git命令的仓库)</p>\n<p>点开github页面，在设置里找到ssh连接，将本地的公钥内容复制到ssh框中，重新输入密码，提示成功即可。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add origin https://github.com/xuyujie2020/Hello-World.git</span><br></pre></td></tr></table></figure>\n<p>使用该命令连接到远程仓库</p>\n<h3 id=\"1-7上传代码\"><a href=\"#1-7上传代码\" class=\"headerlink\" title=\"1.7上传代码\"></a>1.7上传代码</h3><p>git push -u origin master</p>\n<p>第一次提交代码需要加上-u</p>\n<h3 id=\"1-8克隆代码\"><a href=\"#1-8克隆代码\" class=\"headerlink\" title=\"1.8克隆代码\"></a>1.8克隆代码</h3><p>使用git clone + [url]   ##url : 路径</p>\n<p>github支持git和http两种克隆模式</p>\n<h3 id=\"1-9-查看当前分支\"><a href=\"#1-9-查看当前分支\" class=\"headerlink\" title=\"1.9 查看当前分支\"></a>1.9 查看当前分支</h3><p>git status</p>\n<p>可以查看clone下来的代码所属的分支</p>\n<p>使用git checkout 可以切换分支</p>\n<p>git branch 也可以查看分支</p>\n<h3 id=\"1-10-创建分支\"><a href=\"#1-10-创建分支\" class=\"headerlink\" title=\"1.10 创建分支\"></a>1.10 创建分支</h3><p>git branch + [名字] 创建一个新的分支，不切换分支</p>\n<p>git checkout -b 创建一个分支并切换过去</p>\n<h3 id=\"1-11-查看代码的修改\"><a href=\"#1-11-查看代码的修改\" class=\"headerlink\" title=\"1.11 查看代码的修改\"></a>1.11 查看代码的修改</h3><p>每次代码修改会在该目录下形成一个.git文件，修改的内容保存在这</p>\n<p>git status 可以查看被修改过的文件</p>\n<p>git diff 查看修改的内容</p>\n<h3 id=\"1-12-删除分支\"><a href=\"#1-12-删除分支\" class=\"headerlink\" title=\"1.12 删除分支\"></a>1.12 删除分支</h3><p>git branch -d + [名字]</p>\n<h3 id=\"1-13-删除仓库\"><a href=\"#1-13-删除仓库\" class=\"headerlink\" title=\"1.13 删除仓库\"></a>1.13 删除仓库</h3><p>在github网页中，进入仓库，在设置中的最下面选择delete，输入要删除的仓库的路径即可</p>\n<p>问题解决</p>\n<p>visual studio 上传代码出现错误</p>\n<p>使用git add .时出现</p>\n<p>error: open(“贪吃蛇/.vs/贪吃蛇/v17/Browse.VC.opendb”): Permission denied<br>error: unable to index file ‘贪吃蛇/.vs/贪吃蛇/v17/Browse.VC.opendb’<br>fatal: adding files failed</p>\n<p>解决方法</p>\n<p>touch .gitignore    </p>\n<p>在文件中添加 .vs/保存即可</p>\n<h2 id=\"忽略-vs-文件\"><a href=\"#忽略-vs-文件\" class=\"headerlink\" title=\"忽略.vs/文件\"></a>忽略.vs/文件</h2><h5 id=\"git-基本命令\"><a href=\"#git-基本命令\" class=\"headerlink\" title=\"git 基本命令\"></a>git 基本命令</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init                                                  # 初始化本地git仓库（创建新仓库）</span><br><span class=\"line\">git config --global user.name &quot;xxx&quot;                       # 配置用户名</span><br><span class=\"line\">git config --global user.email &quot;xxx@xxx.com&quot;              # 配置邮件</span><br><span class=\"line\">git config --global color.ui true                         # git status等命令自动着色</span><br><span class=\"line\">git config --global color.status auto</span><br><span class=\"line\">git config --global color.diff auto</span><br><span class=\"line\">git config --global color.branch auto</span><br><span class=\"line\">git config --global color.interactive auto</span><br><span class=\"line\">git config --global --unset http.proxy                    # remove  proxy configuration on git</span><br><span class=\"line\">git clone git+ssh://git@192.168.53.168/VT.git             # clone远程仓库</span><br><span class=\"line\">git status                                                # 查看当前版本状态（是否修改）</span><br><span class=\"line\">git add xyz                                               # 添加xyz文件至index</span><br><span class=\"line\">git add .                                                 # 增加当前子目录下所有更改过的文件至index</span><br><span class=\"line\">git commit -m &#x27;xxx&#x27;                                       # 提交</span><br><span class=\"line\">git commit --amend -m &#x27;xxx&#x27;                               # 合并上一次提交（用于反复修改）</span><br><span class=\"line\">git commit -am &#x27;xxx&#x27;                                      # 将add和commit合为一步</span><br><span class=\"line\">git rm xxx                                                # 删除index中的文件</span><br><span class=\"line\">git rm -r *                                               # 递归删除</span><br><span class=\"line\">git log                                                   # 显示提交日志</span><br><span class=\"line\">git log -1                                                # 显示1行日志 -n为n行</span><br><span class=\"line\">git log -5</span><br><span class=\"line\">git log --stat                                            # 显示提交日志及相关变动文件</span><br><span class=\"line\">git log -p -m</span><br><span class=\"line\">git show dfb02e6e4f2f7b573337763e5c0013802e392818         # 显示某个提交的详细内容</span><br><span class=\"line\">git show dfb02                                            # 可只用commitid的前几位</span><br><span class=\"line\">git show HEAD                                             # 显示HEAD提交日志</span><br><span class=\"line\">git show HEAD^                                            # 显示HEAD的父（上一个版本）的提交日志 ^^为上两个版本 ^5为上5个版本</span><br><span class=\"line\">git tag                                                   # 显示已存在的tag</span><br><span class=\"line\">git tag -a v2.0 -m &#x27;xxx&#x27;                                  # 增加v2.0的tag</span><br><span class=\"line\">git show v2.0                                             # 显示v2.0的日志及详细内容</span><br><span class=\"line\">git log v2.0                                              # 显示v2.0的日志</span><br><span class=\"line\">git diff                                                  # 显示所有未添加至index的变更</span><br><span class=\"line\">git diff --cached                                         # 显示所有已添加index但还未commit的变更</span><br><span class=\"line\">git diff HEAD^                                            # 比较与上一个版本的差异</span><br><span class=\"line\">git diff HEAD -- ./lib                                    # 比较与HEAD版本lib目录的差异</span><br><span class=\"line\">git diff origin/master..master                            # 比较远程分支master上有本地分支master上没有的</span><br><span class=\"line\">git diff origin/master..master --stat                     # 只显示差异的文件，不显示具体内容</span><br><span class=\"line\">git remote add origin git+ssh://git@192.168.53.168/VT.git # 增加远程定义（用于push/pull/fetch）</span><br><span class=\"line\">git branch                                                # 显示本地分支</span><br><span class=\"line\">git branch --contains 50089                               # 显示包含提交50089的分支</span><br><span class=\"line\">git branch -a                                             # 显示所有分支</span><br><span class=\"line\">git branch -r                                             # 显示所有原创分支</span><br><span class=\"line\">git branch --merged                                       # 显示所有已合并到当前分支的分支</span><br><span class=\"line\">git branch --no-merged                                    # 显示所有未合并到当前分支的分支</span><br><span class=\"line\">git branch -m master master_copy                          # 本地分支改名</span><br><span class=\"line\">git checkout -b master_copy                               # 从当前分支创建新分支master_copy并检出</span><br><span class=\"line\">git checkout -b master master_copy                        # 上面的完整版</span><br><span class=\"line\">git checkout features/performance                         # 检出已存在的features/performance分支</span><br><span class=\"line\">git checkout --track hotfixes/BJVEP933                    # 检出远程分支hotfixes/BJVEP933并创建本地跟踪分支</span><br><span class=\"line\">git checkout v2.0                                         # 检出版本v2.0</span><br><span class=\"line\">git checkout -b devel origin/develop                      # 从远程分支develop创建新本地分支devel并检出</span><br><span class=\"line\">git checkout -- README                                    # 检出head版本的README文件（可用于修改错误回退）</span><br><span class=\"line\">git merge origin/master                                   # 合并远程master分支至当前分支</span><br><span class=\"line\">git cherry-pick ff44785404a8e                             # 合并提交ff44785404a8e的修改</span><br><span class=\"line\">git push origin master                                    # 将当前分支push到远程master分支</span><br><span class=\"line\">git push origin :hotfixes/BJVEP933                        # 删除远程仓库的hotfixes/BJVEP933分支</span><br><span class=\"line\">git push --tags                                           # 把所有tag推送到远程仓库</span><br><span class=\"line\">git fetch                                                 # 获取所有远程分支（不更新本地分支，另需merge）</span><br><span class=\"line\">git fetch --prune                                         # 获取所有原创分支并清除服务器上已删掉的分支</span><br><span class=\"line\">git pull origin master                                    # 获取远程分支master并merge到当前分支</span><br><span class=\"line\">git mv README README2                                     # 重命名文件README为README2</span><br><span class=\"line\">git reset --hard HEAD                                     # 将当前版本重置为HEAD（通常用于merge失败回退）</span><br><span class=\"line\">git rebase</span><br><span class=\"line\">git branch -d hotfixes/BJVEP933                           # 删除分支hotfixes/BJVEP933（本分支修改已合并到其他分支）</span><br><span class=\"line\">git branch -D hotfixes/BJVEP933                           # 强制删除分支hotfixes/BJVEP933</span><br><span class=\"line\">git ls-files                                              # 列出git index包含的文件</span><br><span class=\"line\">git show-branch                                           # 图示当前分支历史</span><br><span class=\"line\">git show-branch --all                                     # 图示所有分支历史</span><br><span class=\"line\">git whatchanged                                           # 显示提交历史对应的文件修改</span><br><span class=\"line\">git revert dfb02e6e4f2f7b573337763e5c0013802e392818       # 撤销提交dfb02e6e4f2f7b573337763e5c0013802e392818</span><br><span class=\"line\">git ls-tree HEAD                                          # 内部命令：显示某个git对象</span><br><span class=\"line\">git rev-parse v2.0                                        # 内部命令：显示某个ref对于的SHA1 HASH</span><br><span class=\"line\">git reflog                                                # 显示所有提交，包括孤立节点</span><br><span class=\"line\">git show HEAD@&#123;5&#125;</span><br><span class=\"line\">git show master@&#123;yesterday&#125;                               # 显示master分支昨天的状态</span><br><span class=\"line\">git log --pretty=format:&#x27;%h %s&#x27; --graph                   # 图示提交日志</span><br><span class=\"line\">git show HEAD~3</span><br><span class=\"line\">git show -s --pretty=raw 2be7fcb476</span><br><span class=\"line\">git stash                                                 # 暂存当前修改，将所有至为HEAD状态</span><br><span class=\"line\">git stash list                                            # 查看所有暂存</span><br><span class=\"line\">git stash show -p stash@&#123;0&#125;                               # 参考第一次暂存</span><br><span class=\"line\">git stash apply stash@&#123;0&#125;                                 # 应用第一次暂存</span><br><span class=\"line\">git grep &quot;delete from&quot;                                    # 文件中搜索文本“delete from”</span><br><span class=\"line\">git grep -e &#x27;#define&#x27; --and -e SORT_DIRENT</span><br><span class=\"line\">git gc</span><br><span class=\"line\">git fsck</span><br></pre></td></tr></table></figure>\n<h5 id=\"冲突合并\"><a href=\"#冲突合并\" class=\"headerlink\" title=\"冲突合并\"></a>冲突合并</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch 分支 # 创建分支</span><br><span class=\"line\">git branch -v # 查看分支版本</span><br><span class=\"line\">git bachch hot-fix # 创建hot-fix分支</span><br><span class=\"line\">git checkout hot-fix # 切换分支</span><br><span class=\"line\"></span><br><span class=\"line\">git merge hot-fix # 将hot-fix分支合并到当前分支上 </span><br><span class=\"line\"></span><br><span class=\"line\">冲突合并</span><br><span class=\"line\"></span><br><span class=\"line\">两个分支在同一个文件的同一个位置 有两套完全不一样的内容 git无法决定</span><br><span class=\"line\"></span><br><span class=\"line\">此时我们在不同的分支上都提交了本地库 然后切换到Master分支 开始进行合并</span><br><span class=\"line\"></span><br><span class=\"line\">git merge hot-fix</span><br><span class=\"line\"></span><br><span class=\"line\">然后我们会得到如下报错信息</span><br><span class=\"line\"></span><br><span class=\"line\">Auto-merging hello.c</span><br><span class=\"line\"></span><br><span class=\"line\">CONFICT(content): Merge conflict in hello.c</span><br><span class=\"line\"></span><br><span class=\"line\">Automatic merge failed; fix conflicts and then commit the result.</span><br><span class=\"line\"></span><br><span class=\"line\">同时右边的分支状态会显示为 master | MERGING</span><br><span class=\"line\"></span><br><span class=\"line\">再执行</span><br><span class=\"line\"></span><br><span class=\"line\">git status</span><br><span class=\"line\"></span><br><span class=\"line\">就会告诉我们</span><br><span class=\"line\"></span><br><span class=\"line\">both modified: hello.c</span><br><span class=\"line\"></span><br><span class=\"line\">在这个文件里面</span><br><span class=\"line\"></span><br><span class=\"line\">会使用 </span><br><span class=\"line\"></span><br><span class=\"line\">&lt;&lt;&lt;&lt;&lt;&lt;HEAD</span><br><span class=\"line\"></span><br><span class=\"line\">======</span><br><span class=\"line\"></span><br><span class=\"line\">#</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;&gt;&gt;&gt;&gt;&gt; hot-fix 进行分隔</span><br><span class=\"line\"></span><br><span class=\"line\">git status</span><br><span class=\"line\">git add hello.c</span><br><span class=\"line\"></span><br><span class=\"line\">当我们执行这条语句后</span><br><span class=\"line\"></span><br><span class=\"line\">git commit -m &quot;merge test&quot; hello.c</span><br><span class=\"line\"></span><br><span class=\"line\">fatal: cannot do a partial commit during a merge</span><br><span class=\"line\"></span><br><span class=\"line\">在合并过程中不能只进行部分的修改</span><br><span class=\"line\"></span><br><span class=\"line\">git commit -m &quot;merge test&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">底层都是看得指针 主要是HEAD指针</span><br><span class=\"line\"></span><br><span class=\"line\">head(指针) 指向分支指针 </span><br><span class=\"line\"></span><br><span class=\"line\">master(指针) 指向具体版本</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<p>参考pro git简体中文版</p>\n<p><a href=\"http://iissnan.com/progit/\">http://iissnan.com/progit/</a> </p>\n<h1 id=\"1-git的基本使用方式\"><a href=\"#1-git的基本使用方式\" class=\"headerlink\" title=\"1.git的基本使用方式\"></a>1.git的基本使用方式</h1><h2 id=\"1-1git-安装\"><a href=\"#1-1git-安装\" class=\"headerlink\" title=\"1.1git 安装\"></a>1.1git 安装</h2><p>linux</p>\n<p>yum -y install git</p>\n<p>输入 git —version查看Git是否安装完成以及查看其版本号</p>\n<p>windows </p>\n<p><a href=\"https://git-scm.com/\">https://git-scm.com/</a></p>\n<p>进入git官网，选择windows版本进行下载</p>\n<p>下载完后，点击exe文件执行，根据提示进行安装，</p>\n<p>安装完成之后在桌面点击右键出现git bash 即成功</p>\n<h3 id=\"1-2-本地建立git标识\"><a href=\"#1-2-本地建立git标识\" class=\"headerlink\" title=\"1.2 本地建立git标识\"></a>1.2 本地建立git标识</h3><p>git config —global user.name “YOUR NAME”</p>\n<p>git config —global user.email “YOUR EMAIL”</p>\n<p>该两行命令表示一个标识，</p>\n<h3 id=\"1-3初始化git仓库\"><a href=\"#1-3初始化git仓库\" class=\"headerlink\" title=\"1.3初始化git仓库\"></a>1.3初始化git仓库</h3><p>git init</p>\n<p>在哪个目录下执行的，那这个目录就变成git可以管理的目录</p>\n<h3 id=\"1-4-添加文件到暂存区\"><a href=\"#1-4-添加文件到暂存区\" class=\"headerlink\" title=\"1.4 添加文件到暂存区\"></a>1.4 添加文件到暂存区</h3><p>git add [文件名] </p>\n<h1 id=\"将文件添加到暂存区\"><a href=\"#将文件添加到暂存区\" class=\"headerlink\" title=\"将文件添加到暂存区\"></a>将文件添加到暂存区</h1><h3 id=\"1-5-用命令-git-commit告诉Git，把文件提交到仓库\"><a href=\"#1-5-用命令-git-commit告诉Git，把文件提交到仓库\" class=\"headerlink\" title=\"1.5  用命令 git commit告诉Git，把文件提交到仓库\"></a>1.5  用命令 git commit告诉Git，把文件提交到仓库</h3><p>git commit -m “注释”   ##给本次提交提供注释</p>\n<h3 id=\"1-6-连接远程仓库\"><a href=\"#1-6-连接远程仓库\" class=\"headerlink\" title=\"1.6 连接远程仓库\"></a>1.6 <strong>连接远程仓库</strong></h3><p>在github(或其他接受git命令的仓库)</p>\n<p>点开github页面，在设置里找到ssh连接，将本地的公钥内容复制到ssh框中，重新输入密码，提示成功即可。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add origin https://github.com/xuyujie2020/Hello-World.git</span><br></pre></td></tr></table></figure>\n<p>使用该命令连接到远程仓库</p>\n<h3 id=\"1-7上传代码\"><a href=\"#1-7上传代码\" class=\"headerlink\" title=\"1.7上传代码\"></a>1.7上传代码</h3><p>git push -u origin master</p>\n<p>第一次提交代码需要加上-u</p>\n<h3 id=\"1-8克隆代码\"><a href=\"#1-8克隆代码\" class=\"headerlink\" title=\"1.8克隆代码\"></a>1.8克隆代码</h3><p>使用git clone + [url]   ##url : 路径</p>\n<p>github支持git和http两种克隆模式</p>\n<h3 id=\"1-9-查看当前分支\"><a href=\"#1-9-查看当前分支\" class=\"headerlink\" title=\"1.9 查看当前分支\"></a>1.9 查看当前分支</h3><p>git status</p>\n<p>可以查看clone下来的代码所属的分支</p>\n<p>使用git checkout 可以切换分支</p>\n<p>git branch 也可以查看分支</p>\n<h3 id=\"1-10-创建分支\"><a href=\"#1-10-创建分支\" class=\"headerlink\" title=\"1.10 创建分支\"></a>1.10 创建分支</h3><p>git branch + [名字] 创建一个新的分支，不切换分支</p>\n<p>git checkout -b 创建一个分支并切换过去</p>\n<h3 id=\"1-11-查看代码的修改\"><a href=\"#1-11-查看代码的修改\" class=\"headerlink\" title=\"1.11 查看代码的修改\"></a>1.11 查看代码的修改</h3><p>每次代码修改会在该目录下形成一个.git文件，修改的内容保存在这</p>\n<p>git status 可以查看被修改过的文件</p>\n<p>git diff 查看修改的内容</p>\n<h3 id=\"1-12-删除分支\"><a href=\"#1-12-删除分支\" class=\"headerlink\" title=\"1.12 删除分支\"></a>1.12 删除分支</h3><p>git branch -d + [名字]</p>\n<h3 id=\"1-13-删除仓库\"><a href=\"#1-13-删除仓库\" class=\"headerlink\" title=\"1.13 删除仓库\"></a>1.13 删除仓库</h3><p>在github网页中，进入仓库，在设置中的最下面选择delete，输入要删除的仓库的路径即可</p>\n<p>问题解决</p>\n<p>visual studio 上传代码出现错误</p>\n<p>使用git add .时出现</p>\n<p>error: open(“贪吃蛇/.vs/贪吃蛇/v17/Browse.VC.opendb”): Permission denied<br>error: unable to index file ‘贪吃蛇/.vs/贪吃蛇/v17/Browse.VC.opendb’<br>fatal: adding files failed</p>\n<p>解决方法</p>\n<p>touch .gitignore    </p>\n<p>在文件中添加 .vs/保存即可</p>\n<h2 id=\"忽略-vs-文件\"><a href=\"#忽略-vs-文件\" class=\"headerlink\" title=\"忽略.vs/文件\"></a>忽略.vs/文件</h2><h5 id=\"git-基本命令\"><a href=\"#git-基本命令\" class=\"headerlink\" title=\"git 基本命令\"></a>git 基本命令</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init                                                  # 初始化本地git仓库（创建新仓库）</span><br><span class=\"line\">git config --global user.name &quot;xxx&quot;                       # 配置用户名</span><br><span class=\"line\">git config --global user.email &quot;xxx@xxx.com&quot;              # 配置邮件</span><br><span class=\"line\">git config --global color.ui true                         # git status等命令自动着色</span><br><span class=\"line\">git config --global color.status auto</span><br><span class=\"line\">git config --global color.diff auto</span><br><span class=\"line\">git config --global color.branch auto</span><br><span class=\"line\">git config --global color.interactive auto</span><br><span class=\"line\">git config --global --unset http.proxy                    # remove  proxy configuration on git</span><br><span class=\"line\">git clone git+ssh://git@192.168.53.168/VT.git             # clone远程仓库</span><br><span class=\"line\">git status                                                # 查看当前版本状态（是否修改）</span><br><span class=\"line\">git add xyz                                               # 添加xyz文件至index</span><br><span class=\"line\">git add .                                                 # 增加当前子目录下所有更改过的文件至index</span><br><span class=\"line\">git commit -m &#x27;xxx&#x27;                                       # 提交</span><br><span class=\"line\">git commit --amend -m &#x27;xxx&#x27;                               # 合并上一次提交（用于反复修改）</span><br><span class=\"line\">git commit -am &#x27;xxx&#x27;                                      # 将add和commit合为一步</span><br><span class=\"line\">git rm xxx                                                # 删除index中的文件</span><br><span class=\"line\">git rm -r *                                               # 递归删除</span><br><span class=\"line\">git log                                                   # 显示提交日志</span><br><span class=\"line\">git log -1                                                # 显示1行日志 -n为n行</span><br><span class=\"line\">git log -5</span><br><span class=\"line\">git log --stat                                            # 显示提交日志及相关变动文件</span><br><span class=\"line\">git log -p -m</span><br><span class=\"line\">git show dfb02e6e4f2f7b573337763e5c0013802e392818         # 显示某个提交的详细内容</span><br><span class=\"line\">git show dfb02                                            # 可只用commitid的前几位</span><br><span class=\"line\">git show HEAD                                             # 显示HEAD提交日志</span><br><span class=\"line\">git show HEAD^                                            # 显示HEAD的父（上一个版本）的提交日志 ^^为上两个版本 ^5为上5个版本</span><br><span class=\"line\">git tag                                                   # 显示已存在的tag</span><br><span class=\"line\">git tag -a v2.0 -m &#x27;xxx&#x27;                                  # 增加v2.0的tag</span><br><span class=\"line\">git show v2.0                                             # 显示v2.0的日志及详细内容</span><br><span class=\"line\">git log v2.0                                              # 显示v2.0的日志</span><br><span class=\"line\">git diff                                                  # 显示所有未添加至index的变更</span><br><span class=\"line\">git diff --cached                                         # 显示所有已添加index但还未commit的变更</span><br><span class=\"line\">git diff HEAD^                                            # 比较与上一个版本的差异</span><br><span class=\"line\">git diff HEAD -- ./lib                                    # 比较与HEAD版本lib目录的差异</span><br><span class=\"line\">git diff origin/master..master                            # 比较远程分支master上有本地分支master上没有的</span><br><span class=\"line\">git diff origin/master..master --stat                     # 只显示差异的文件，不显示具体内容</span><br><span class=\"line\">git remote add origin git+ssh://git@192.168.53.168/VT.git # 增加远程定义（用于push/pull/fetch）</span><br><span class=\"line\">git branch                                                # 显示本地分支</span><br><span class=\"line\">git branch --contains 50089                               # 显示包含提交50089的分支</span><br><span class=\"line\">git branch -a                                             # 显示所有分支</span><br><span class=\"line\">git branch -r                                             # 显示所有原创分支</span><br><span class=\"line\">git branch --merged                                       # 显示所有已合并到当前分支的分支</span><br><span class=\"line\">git branch --no-merged                                    # 显示所有未合并到当前分支的分支</span><br><span class=\"line\">git branch -m master master_copy                          # 本地分支改名</span><br><span class=\"line\">git checkout -b master_copy                               # 从当前分支创建新分支master_copy并检出</span><br><span class=\"line\">git checkout -b master master_copy                        # 上面的完整版</span><br><span class=\"line\">git checkout features/performance                         # 检出已存在的features/performance分支</span><br><span class=\"line\">git checkout --track hotfixes/BJVEP933                    # 检出远程分支hotfixes/BJVEP933并创建本地跟踪分支</span><br><span class=\"line\">git checkout v2.0                                         # 检出版本v2.0</span><br><span class=\"line\">git checkout -b devel origin/develop                      # 从远程分支develop创建新本地分支devel并检出</span><br><span class=\"line\">git checkout -- README                                    # 检出head版本的README文件（可用于修改错误回退）</span><br><span class=\"line\">git merge origin/master                                   # 合并远程master分支至当前分支</span><br><span class=\"line\">git cherry-pick ff44785404a8e                             # 合并提交ff44785404a8e的修改</span><br><span class=\"line\">git push origin master                                    # 将当前分支push到远程master分支</span><br><span class=\"line\">git push origin :hotfixes/BJVEP933                        # 删除远程仓库的hotfixes/BJVEP933分支</span><br><span class=\"line\">git push --tags                                           # 把所有tag推送到远程仓库</span><br><span class=\"line\">git fetch                                                 # 获取所有远程分支（不更新本地分支，另需merge）</span><br><span class=\"line\">git fetch --prune                                         # 获取所有原创分支并清除服务器上已删掉的分支</span><br><span class=\"line\">git pull origin master                                    # 获取远程分支master并merge到当前分支</span><br><span class=\"line\">git mv README README2                                     # 重命名文件README为README2</span><br><span class=\"line\">git reset --hard HEAD                                     # 将当前版本重置为HEAD（通常用于merge失败回退）</span><br><span class=\"line\">git rebase</span><br><span class=\"line\">git branch -d hotfixes/BJVEP933                           # 删除分支hotfixes/BJVEP933（本分支修改已合并到其他分支）</span><br><span class=\"line\">git branch -D hotfixes/BJVEP933                           # 强制删除分支hotfixes/BJVEP933</span><br><span class=\"line\">git ls-files                                              # 列出git index包含的文件</span><br><span class=\"line\">git show-branch                                           # 图示当前分支历史</span><br><span class=\"line\">git show-branch --all                                     # 图示所有分支历史</span><br><span class=\"line\">git whatchanged                                           # 显示提交历史对应的文件修改</span><br><span class=\"line\">git revert dfb02e6e4f2f7b573337763e5c0013802e392818       # 撤销提交dfb02e6e4f2f7b573337763e5c0013802e392818</span><br><span class=\"line\">git ls-tree HEAD                                          # 内部命令：显示某个git对象</span><br><span class=\"line\">git rev-parse v2.0                                        # 内部命令：显示某个ref对于的SHA1 HASH</span><br><span class=\"line\">git reflog                                                # 显示所有提交，包括孤立节点</span><br><span class=\"line\">git show HEAD@&#123;5&#125;</span><br><span class=\"line\">git show master@&#123;yesterday&#125;                               # 显示master分支昨天的状态</span><br><span class=\"line\">git log --pretty=format:&#x27;%h %s&#x27; --graph                   # 图示提交日志</span><br><span class=\"line\">git show HEAD~3</span><br><span class=\"line\">git show -s --pretty=raw 2be7fcb476</span><br><span class=\"line\">git stash                                                 # 暂存当前修改，将所有至为HEAD状态</span><br><span class=\"line\">git stash list                                            # 查看所有暂存</span><br><span class=\"line\">git stash show -p stash@&#123;0&#125;                               # 参考第一次暂存</span><br><span class=\"line\">git stash apply stash@&#123;0&#125;                                 # 应用第一次暂存</span><br><span class=\"line\">git grep &quot;delete from&quot;                                    # 文件中搜索文本“delete from”</span><br><span class=\"line\">git grep -e &#x27;#define&#x27; --and -e SORT_DIRENT</span><br><span class=\"line\">git gc</span><br><span class=\"line\">git fsck</span><br></pre></td></tr></table></figure>\n<h5 id=\"冲突合并\"><a href=\"#冲突合并\" class=\"headerlink\" title=\"冲突合并\"></a>冲突合并</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch 分支 # 创建分支</span><br><span class=\"line\">git branch -v # 查看分支版本</span><br><span class=\"line\">git bachch hot-fix # 创建hot-fix分支</span><br><span class=\"line\">git checkout hot-fix # 切换分支</span><br><span class=\"line\"></span><br><span class=\"line\">git merge hot-fix # 将hot-fix分支合并到当前分支上 </span><br><span class=\"line\"></span><br><span class=\"line\">冲突合并</span><br><span class=\"line\"></span><br><span class=\"line\">两个分支在同一个文件的同一个位置 有两套完全不一样的内容 git无法决定</span><br><span class=\"line\"></span><br><span class=\"line\">此时我们在不同的分支上都提交了本地库 然后切换到Master分支 开始进行合并</span><br><span class=\"line\"></span><br><span class=\"line\">git merge hot-fix</span><br><span class=\"line\"></span><br><span class=\"line\">然后我们会得到如下报错信息</span><br><span class=\"line\"></span><br><span class=\"line\">Auto-merging hello.c</span><br><span class=\"line\"></span><br><span class=\"line\">CONFICT(content): Merge conflict in hello.c</span><br><span class=\"line\"></span><br><span class=\"line\">Automatic merge failed; fix conflicts and then commit the result.</span><br><span class=\"line\"></span><br><span class=\"line\">同时右边的分支状态会显示为 master | MERGING</span><br><span class=\"line\"></span><br><span class=\"line\">再执行</span><br><span class=\"line\"></span><br><span class=\"line\">git status</span><br><span class=\"line\"></span><br><span class=\"line\">就会告诉我们</span><br><span class=\"line\"></span><br><span class=\"line\">both modified: hello.c</span><br><span class=\"line\"></span><br><span class=\"line\">在这个文件里面</span><br><span class=\"line\"></span><br><span class=\"line\">会使用 </span><br><span class=\"line\"></span><br><span class=\"line\">&lt;&lt;&lt;&lt;&lt;&lt;HEAD</span><br><span class=\"line\"></span><br><span class=\"line\">======</span><br><span class=\"line\"></span><br><span class=\"line\">#</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;&gt;&gt;&gt;&gt;&gt; hot-fix 进行分隔</span><br><span class=\"line\"></span><br><span class=\"line\">git status</span><br><span class=\"line\">git add hello.c</span><br><span class=\"line\"></span><br><span class=\"line\">当我们执行这条语句后</span><br><span class=\"line\"></span><br><span class=\"line\">git commit -m &quot;merge test&quot; hello.c</span><br><span class=\"line\"></span><br><span class=\"line\">fatal: cannot do a partial commit during a merge</span><br><span class=\"line\"></span><br><span class=\"line\">在合并过程中不能只进行部分的修改</span><br><span class=\"line\"></span><br><span class=\"line\">git commit -m &quot;merge test&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">底层都是看得指针 主要是HEAD指针</span><br><span class=\"line\"></span><br><span class=\"line\">head(指针) 指向分支指针 </span><br><span class=\"line\"></span><br><span class=\"line\">master(指针) 指向具体版本</span><br></pre></td></tr></table></figure>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2024-02-05T01:18:02.791Z","updated":"2024-02-05T01:18:02.791Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cltxxetao000f6cds3ndh0f0w","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"小吟师姐带你三天上元婴~","swiper_index":1,"cover":"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202310191310489.jpg","description":"哈喽！各位道宝们~这里是小吟师姐的修仙补习班，在本章中师姐就带着道宝们~一起三天上元婴~","_content":"\n\n\n# 前言\n\n1. 修仙过程中遇到的问题，优先在本页面搜索，检查是否有配置相应的教程。\n2. 遇到问题可以优先在评论区留言，道宝们~留言时，注意请填写正确的邮箱以确保能收到小吟学姐的回复哦。\n\n# 适用的道宝们~\n\n对于新来的道宝，需要了解城镇的天机阁，宝藏阁，坊市，用来交易材料的界面，洞府的丹房，器室，药园，用来制作材料的界面，才能容易理解提升的目的，获得更高的游戏体验。\n\n一些了解过游戏，但是不太会玩的道宝，参加完学姐的补习班后，就是与大部分玩家拉开差距的时候，这便是精氪玩家的自我成长了。\n\n如果道宝们~的储物袋满满的，也可以看看这篇文章，检查一下是否哪里还有遗漏任务没做，或者缺少一些方法提升战力，争取所有资源都用在刀刃上。\n\n# 开服第一天\n\n## 创建角色\n\n相信大多数道宝们~，进入游戏的时候，发现为什么其他道友比自己的战力高出这么多？而且自己不论怎么追赶，都追不上第一梯队的修为。\n\n这是因为游戏的开服机制，让道宝们~没能在第一时间进入游戏，从而使自己比别人的修为速度慢半天甚至一天的时间。\n\n一般游戏开服会有两个位面，周末可能有四个，基本上每天都会有新的位面开启，但是开启的具体时间不确定，能肯定的是，开服时间都是整点，所以道宝们~创建角色的时候，尽可能注意些时间，不要距离开服时间太久。\n\n## 快速提升境界\n\n### 主线任务\n\n完成主线任务自不必多说，在完成主线任务后，注意提升修为的关键因素，保证自己最快时间进入结丹期。\n\n### 丹药\n\n尽可能吃**高级丹药**（金丹>紫丹>蓝丹（尽可能不吃蓝丹）），在修为达到通脉/炼气9层时，解锁天机阁，此时不要使用天机令刷新天机阁（这个时期修炼速度快，只需要几分钟便可达到渡劫阶段），每次提升一个大境界（通脉->筑基/炼气->锻骨)天机阁自动刷新一次，\n\n#### 天机阁购买细节\n\n修为福袋每日必买（主修福袋必买）\n\n修为秘药（适当，低于百分之百的适合就不用买了）\n\n引魔香（必买）阴冥决需要使用一百个才能解锁\n\n升星石（3折购买）\n\n灵尘（3/6折购买）\n\n灵兽花（3折购买）\n\n灵石宝箱（不推荐购买，因为没有灵石卡住了，不得已才买，化身出来之前，一般不缺灵石）\n\n劫盾（不推荐购买，正常的修炼到渡劫阶段，根本劈不死）\n\n#### 宝藏阁购买细节\n\n探宝尽量不要用机缘去抽（机缘留着买修为福袋和开田）\n\n宝藏里（上古至宝开出离阳灵玉、修为秘药低于100%再囤，玄光宝匣和流云宝盒可以开，其他的到化神后期再囤）\n\n商店（修为秘药100%药效可以买，紫微、摇光、荧惑、太白九剑四件套碎片可以买、天火印（体修买）、火莲（法修买））\n\n#### 坊市购买细节\n\n第一天的坊市不要着急刷新（每天8点刷新10次，3小时刷新1次）\n\n刷新次数留到【筑基/锻骨】再刷新（2阶物品）\n\n修为丹药不论品质，全部买（白绿丹人不吃，留着给宠物）\n\n坊市刷新出紫色以上品质的全部都要买\n\n种子买（风行丹、灵动丹材料种子，化神前的装备种子不要买）\n\n炼丹图纸只买修为图纸和突破图纸、风行丹、灵动丹图纸，炼器图纸只买虚空石即可（前期境界突破比较快，装备更新快）\n\n### 每日特惠（精氪推荐）\n\n购买小技巧：先买1块和3块和6块的，然后再购买98领10天的。（比普通多拿3个修为福袋和1个修为秘药）\n\n### 限时礼包\n\n限时礼包有修为福袋的建议拿下（限时礼包是拉开差距的主要来源）\n\n### 洞府灵气\n\n【洞府】-【聚灵阵】每个小境界提升灵气量扩充，着重拉满\n\n### 秘药\n\n古修商店的天机石可兑换修为秘药，100药效以下可不换，每日爬塔至极限，拿妖元丹快速提升修为（秘药不与修为丹服用次数共享）（每次境界要氪丹药之前，先看下自己的功法能否提升再吃，以免吃完再点功法时出现了丹药/吐纳效果加成就浪费了）\n\n### 宗门\n\n选择一个合适的宗门，尽量的多做贡献，可以获得玄晶石和宗门贡献，玄晶石用来升级神通，宗门贡献用来买图纸。\n\n对于大部分道宝们~来说，第一天结丹可谓是轻轻松松的，适当的更新下装备，找个合适的宗门，结交一些新朋友，一起共度美好的修仙时光。同时结丹时期，还有地图探索等支线任务，道宝们~可以第一时间完成这些任务，然后挂机猿啼谷，准备元婴突破材料，如果运气不好，导致突破丹不够的话，卡在猿啼谷的道宝们~可就和小吟师姐一样成为猿啼谷的常驻了，\n\n# 第二天\n\n此时，应该处于结丹/锻骨期，进度快的，第二天就能上元婴/元武。\n\n#### 注意事项\n\n1. 次数留着吃高阶丹药【金丹】紫丹也不着急吃，开福袋和炼丹会有金丹，紫丹留着最后吃\n2. 没高阶丹药吃的时候，开始练副修（副修突破境界，天机阁刷新次数，每突破一次刷新一次，机缘买修为福袋）\n3. 限时礼包（修为的限时礼包建议拿下，拉开差距）\n4. 每日特惠（修为福袋，跟修为进度）\n\n# 第三天\n\n此时，应该处于结丹中后期\n\n#### 注意事项\n\n1. 次数留着吃高阶丹药【金丹】紫丹也不着急吃，开福袋和炼丹会有金丹，紫丹留着最后吃\n2. 没高阶丹药吃的时候，开始练副修（副修突破境界，天机阁刷新次数，每突破一次刷新一次，机缘买修为福袋）\n3. 限时礼包（修为的限时礼包建议拿下，拉开差距）\n4. 每日特惠（修为福袋，跟修为进度）\n5. 分身系统出现，尽可能跟上主境界，获取更多资源提升自己\n\n# 总结\n\n道宝们~是不是觉得修仙其实没有那么困难，只要我们注意好自己的修为提升的机会，人人都可以三天元婴。在人界，修为最为重要，功法，古宝，洞府灵气，都能帮助我们提高修炼速度，以上就是小吟师姐修为冲刺补习班的一些玩法和注意事项啦，如有需要，道宝们~请多多关注小吟师姐的修仙日记！\n\n|   境界    |    起步     |    圆满     |      时长       |\n| :-------: | :---------: | :---------: | :-------------: |\n| 结丹/炼腑 |  200W-300W  |  500W-800W  |   1天/96道年    |\n| 元婴/元武 | 2000W-3000W | 6000W-8000W |   3天/288道年   |\n| 化神/神力 |   2.2E-3E   |   8E-10E    |  41天/3936道年  |\n| 返虚/破虚 |   30E-38E   |  100E-120E  | 66天/10272道年  |\n| 合体/混元 |  200E-260E  |  450E-530E  | 90天/18912道年  |\n| 大乘/大成 | 900E-1100E  | 1600E-1800E | 90天/27552道年  |\n| 渡劫/涅槃 | 2800E-3400E | 4500E-5200E | 127天/39744道年 |\n","source":"_posts/三天上元婴！！.md","raw":"---\ntitle: 小吟师姐带你三天上元婴~\nswiper_index: 1\ncover: https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202310191310489.jpg\ndescription: 哈喽！各位道宝们~这里是小吟师姐的修仙补习班，在本章中师姐就带着道宝们~一起三天上元婴~\n---\n\n\n\n# 前言\n\n1. 修仙过程中遇到的问题，优先在本页面搜索，检查是否有配置相应的教程。\n2. 遇到问题可以优先在评论区留言，道宝们~留言时，注意请填写正确的邮箱以确保能收到小吟学姐的回复哦。\n\n# 适用的道宝们~\n\n对于新来的道宝，需要了解城镇的天机阁，宝藏阁，坊市，用来交易材料的界面，洞府的丹房，器室，药园，用来制作材料的界面，才能容易理解提升的目的，获得更高的游戏体验。\n\n一些了解过游戏，但是不太会玩的道宝，参加完学姐的补习班后，就是与大部分玩家拉开差距的时候，这便是精氪玩家的自我成长了。\n\n如果道宝们~的储物袋满满的，也可以看看这篇文章，检查一下是否哪里还有遗漏任务没做，或者缺少一些方法提升战力，争取所有资源都用在刀刃上。\n\n# 开服第一天\n\n## 创建角色\n\n相信大多数道宝们~，进入游戏的时候，发现为什么其他道友比自己的战力高出这么多？而且自己不论怎么追赶，都追不上第一梯队的修为。\n\n这是因为游戏的开服机制，让道宝们~没能在第一时间进入游戏，从而使自己比别人的修为速度慢半天甚至一天的时间。\n\n一般游戏开服会有两个位面，周末可能有四个，基本上每天都会有新的位面开启，但是开启的具体时间不确定，能肯定的是，开服时间都是整点，所以道宝们~创建角色的时候，尽可能注意些时间，不要距离开服时间太久。\n\n## 快速提升境界\n\n### 主线任务\n\n完成主线任务自不必多说，在完成主线任务后，注意提升修为的关键因素，保证自己最快时间进入结丹期。\n\n### 丹药\n\n尽可能吃**高级丹药**（金丹>紫丹>蓝丹（尽可能不吃蓝丹）），在修为达到通脉/炼气9层时，解锁天机阁，此时不要使用天机令刷新天机阁（这个时期修炼速度快，只需要几分钟便可达到渡劫阶段），每次提升一个大境界（通脉->筑基/炼气->锻骨)天机阁自动刷新一次，\n\n#### 天机阁购买细节\n\n修为福袋每日必买（主修福袋必买）\n\n修为秘药（适当，低于百分之百的适合就不用买了）\n\n引魔香（必买）阴冥决需要使用一百个才能解锁\n\n升星石（3折购买）\n\n灵尘（3/6折购买）\n\n灵兽花（3折购买）\n\n灵石宝箱（不推荐购买，因为没有灵石卡住了，不得已才买，化身出来之前，一般不缺灵石）\n\n劫盾（不推荐购买，正常的修炼到渡劫阶段，根本劈不死）\n\n#### 宝藏阁购买细节\n\n探宝尽量不要用机缘去抽（机缘留着买修为福袋和开田）\n\n宝藏里（上古至宝开出离阳灵玉、修为秘药低于100%再囤，玄光宝匣和流云宝盒可以开，其他的到化神后期再囤）\n\n商店（修为秘药100%药效可以买，紫微、摇光、荧惑、太白九剑四件套碎片可以买、天火印（体修买）、火莲（法修买））\n\n#### 坊市购买细节\n\n第一天的坊市不要着急刷新（每天8点刷新10次，3小时刷新1次）\n\n刷新次数留到【筑基/锻骨】再刷新（2阶物品）\n\n修为丹药不论品质，全部买（白绿丹人不吃，留着给宠物）\n\n坊市刷新出紫色以上品质的全部都要买\n\n种子买（风行丹、灵动丹材料种子，化神前的装备种子不要买）\n\n炼丹图纸只买修为图纸和突破图纸、风行丹、灵动丹图纸，炼器图纸只买虚空石即可（前期境界突破比较快，装备更新快）\n\n### 每日特惠（精氪推荐）\n\n购买小技巧：先买1块和3块和6块的，然后再购买98领10天的。（比普通多拿3个修为福袋和1个修为秘药）\n\n### 限时礼包\n\n限时礼包有修为福袋的建议拿下（限时礼包是拉开差距的主要来源）\n\n### 洞府灵气\n\n【洞府】-【聚灵阵】每个小境界提升灵气量扩充，着重拉满\n\n### 秘药\n\n古修商店的天机石可兑换修为秘药，100药效以下可不换，每日爬塔至极限，拿妖元丹快速提升修为（秘药不与修为丹服用次数共享）（每次境界要氪丹药之前，先看下自己的功法能否提升再吃，以免吃完再点功法时出现了丹药/吐纳效果加成就浪费了）\n\n### 宗门\n\n选择一个合适的宗门，尽量的多做贡献，可以获得玄晶石和宗门贡献，玄晶石用来升级神通，宗门贡献用来买图纸。\n\n对于大部分道宝们~来说，第一天结丹可谓是轻轻松松的，适当的更新下装备，找个合适的宗门，结交一些新朋友，一起共度美好的修仙时光。同时结丹时期，还有地图探索等支线任务，道宝们~可以第一时间完成这些任务，然后挂机猿啼谷，准备元婴突破材料，如果运气不好，导致突破丹不够的话，卡在猿啼谷的道宝们~可就和小吟师姐一样成为猿啼谷的常驻了，\n\n# 第二天\n\n此时，应该处于结丹/锻骨期，进度快的，第二天就能上元婴/元武。\n\n#### 注意事项\n\n1. 次数留着吃高阶丹药【金丹】紫丹也不着急吃，开福袋和炼丹会有金丹，紫丹留着最后吃\n2. 没高阶丹药吃的时候，开始练副修（副修突破境界，天机阁刷新次数，每突破一次刷新一次，机缘买修为福袋）\n3. 限时礼包（修为的限时礼包建议拿下，拉开差距）\n4. 每日特惠（修为福袋，跟修为进度）\n\n# 第三天\n\n此时，应该处于结丹中后期\n\n#### 注意事项\n\n1. 次数留着吃高阶丹药【金丹】紫丹也不着急吃，开福袋和炼丹会有金丹，紫丹留着最后吃\n2. 没高阶丹药吃的时候，开始练副修（副修突破境界，天机阁刷新次数，每突破一次刷新一次，机缘买修为福袋）\n3. 限时礼包（修为的限时礼包建议拿下，拉开差距）\n4. 每日特惠（修为福袋，跟修为进度）\n5. 分身系统出现，尽可能跟上主境界，获取更多资源提升自己\n\n# 总结\n\n道宝们~是不是觉得修仙其实没有那么困难，只要我们注意好自己的修为提升的机会，人人都可以三天元婴。在人界，修为最为重要，功法，古宝，洞府灵气，都能帮助我们提高修炼速度，以上就是小吟师姐修为冲刺补习班的一些玩法和注意事项啦，如有需要，道宝们~请多多关注小吟师姐的修仙日记！\n\n|   境界    |    起步     |    圆满     |      时长       |\n| :-------: | :---------: | :---------: | :-------------: |\n| 结丹/炼腑 |  200W-300W  |  500W-800W  |   1天/96道年    |\n| 元婴/元武 | 2000W-3000W | 6000W-8000W |   3天/288道年   |\n| 化神/神力 |   2.2E-3E   |   8E-10E    |  41天/3936道年  |\n| 返虚/破虚 |   30E-38E   |  100E-120E  | 66天/10272道年  |\n| 合体/混元 |  200E-260E  |  450E-530E  | 90天/18912道年  |\n| 大乘/大成 | 900E-1100E  | 1600E-1800E | 90天/27552道年  |\n| 渡劫/涅槃 | 2800E-3400E | 4500E-5200E | 127天/39744道年 |\n","slug":"三天上元婴！！","published":1,"date":"2024-02-06T19:08:00.476Z","updated":"2024-02-04T21:06:28.087Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cltxxetaq000g6cdscy08awsf","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><ol>\n<li>修仙过程中遇到的问题，优先在本页面搜索，检查是否有配置相应的教程。</li>\n<li>遇到问题可以优先在评论区留言，道宝们~留言时，注意请填写正确的邮箱以确保能收到小吟学姐的回复哦。</li>\n</ol>\n<h1 id=\"适用的道宝们\"><a href=\"#适用的道宝们\" class=\"headerlink\" title=\"适用的道宝们~\"></a>适用的道宝们~</h1><p>对于新来的道宝，需要了解城镇的天机阁，宝藏阁，坊市，用来交易材料的界面，洞府的丹房，器室，药园，用来制作材料的界面，才能容易理解提升的目的，获得更高的游戏体验。</p>\n<p>一些了解过游戏，但是不太会玩的道宝，参加完学姐的补习班后，就是与大部分玩家拉开差距的时候，这便是精氪玩家的自我成长了。</p>\n<p>如果道宝们~的储物袋满满的，也可以看看这篇文章，检查一下是否哪里还有遗漏任务没做，或者缺少一些方法提升战力，争取所有资源都用在刀刃上。</p>\n<h1 id=\"开服第一天\"><a href=\"#开服第一天\" class=\"headerlink\" title=\"开服第一天\"></a>开服第一天</h1><h2 id=\"创建角色\"><a href=\"#创建角色\" class=\"headerlink\" title=\"创建角色\"></a>创建角色</h2><p>相信大多数道宝们~，进入游戏的时候，发现为什么其他道友比自己的战力高出这么多？而且自己不论怎么追赶，都追不上第一梯队的修为。</p>\n<p>这是因为游戏的开服机制，让道宝们~没能在第一时间进入游戏，从而使自己比别人的修为速度慢半天甚至一天的时间。</p>\n<p>一般游戏开服会有两个位面，周末可能有四个，基本上每天都会有新的位面开启，但是开启的具体时间不确定，能肯定的是，开服时间都是整点，所以道宝们~创建角色的时候，尽可能注意些时间，不要距离开服时间太久。</p>\n<h2 id=\"快速提升境界\"><a href=\"#快速提升境界\" class=\"headerlink\" title=\"快速提升境界\"></a>快速提升境界</h2><h3 id=\"主线任务\"><a href=\"#主线任务\" class=\"headerlink\" title=\"主线任务\"></a>主线任务</h3><p>完成主线任务自不必多说，在完成主线任务后，注意提升修为的关键因素，保证自己最快时间进入结丹期。</p>\n<h3 id=\"丹药\"><a href=\"#丹药\" class=\"headerlink\" title=\"丹药\"></a>丹药</h3><p>尽可能吃<strong>高级丹药</strong>（金丹&gt;紫丹&gt;蓝丹（尽可能不吃蓝丹）），在修为达到通脉/炼气9层时，解锁天机阁，此时不要使用天机令刷新天机阁（这个时期修炼速度快，只需要几分钟便可达到渡劫阶段），每次提升一个大境界（通脉-&gt;筑基/炼气-&gt;锻骨)天机阁自动刷新一次，</p>\n<h4 id=\"天机阁购买细节\"><a href=\"#天机阁购买细节\" class=\"headerlink\" title=\"天机阁购买细节\"></a>天机阁购买细节</h4><p>修为福袋每日必买（主修福袋必买）</p>\n<p>修为秘药（适当，低于百分之百的适合就不用买了）</p>\n<p>引魔香（必买）阴冥决需要使用一百个才能解锁</p>\n<p>升星石（3折购买）</p>\n<p>灵尘（3/6折购买）</p>\n<p>灵兽花（3折购买）</p>\n<p>灵石宝箱（不推荐购买，因为没有灵石卡住了，不得已才买，化身出来之前，一般不缺灵石）</p>\n<p>劫盾（不推荐购买，正常的修炼到渡劫阶段，根本劈不死）</p>\n<h4 id=\"宝藏阁购买细节\"><a href=\"#宝藏阁购买细节\" class=\"headerlink\" title=\"宝藏阁购买细节\"></a>宝藏阁购买细节</h4><p>探宝尽量不要用机缘去抽（机缘留着买修为福袋和开田）</p>\n<p>宝藏里（上古至宝开出离阳灵玉、修为秘药低于100%再囤，玄光宝匣和流云宝盒可以开，其他的到化神后期再囤）</p>\n<p>商店（修为秘药100%药效可以买，紫微、摇光、荧惑、太白九剑四件套碎片可以买、天火印（体修买）、火莲（法修买））</p>\n<h4 id=\"坊市购买细节\"><a href=\"#坊市购买细节\" class=\"headerlink\" title=\"坊市购买细节\"></a>坊市购买细节</h4><p>第一天的坊市不要着急刷新（每天8点刷新10次，3小时刷新1次）</p>\n<p>刷新次数留到【筑基/锻骨】再刷新（2阶物品）</p>\n<p>修为丹药不论品质，全部买（白绿丹人不吃，留着给宠物）</p>\n<p>坊市刷新出紫色以上品质的全部都要买</p>\n<p>种子买（风行丹、灵动丹材料种子，化神前的装备种子不要买）</p>\n<p>炼丹图纸只买修为图纸和突破图纸、风行丹、灵动丹图纸，炼器图纸只买虚空石即可（前期境界突破比较快，装备更新快）</p>\n<h3 id=\"每日特惠（精氪推荐）\"><a href=\"#每日特惠（精氪推荐）\" class=\"headerlink\" title=\"每日特惠（精氪推荐）\"></a>每日特惠（精氪推荐）</h3><p>购买小技巧：先买1块和3块和6块的，然后再购买98领10天的。（比普通多拿3个修为福袋和1个修为秘药）</p>\n<h3 id=\"限时礼包\"><a href=\"#限时礼包\" class=\"headerlink\" title=\"限时礼包\"></a>限时礼包</h3><p>限时礼包有修为福袋的建议拿下（限时礼包是拉开差距的主要来源）</p>\n<h3 id=\"洞府灵气\"><a href=\"#洞府灵气\" class=\"headerlink\" title=\"洞府灵气\"></a>洞府灵气</h3><p>【洞府】-【聚灵阵】每个小境界提升灵气量扩充，着重拉满</p>\n<h3 id=\"秘药\"><a href=\"#秘药\" class=\"headerlink\" title=\"秘药\"></a>秘药</h3><p>古修商店的天机石可兑换修为秘药，100药效以下可不换，每日爬塔至极限，拿妖元丹快速提升修为（秘药不与修为丹服用次数共享）（每次境界要氪丹药之前，先看下自己的功法能否提升再吃，以免吃完再点功法时出现了丹药/吐纳效果加成就浪费了）</p>\n<h3 id=\"宗门\"><a href=\"#宗门\" class=\"headerlink\" title=\"宗门\"></a>宗门</h3><p>选择一个合适的宗门，尽量的多做贡献，可以获得玄晶石和宗门贡献，玄晶石用来升级神通，宗门贡献用来买图纸。</p>\n<p>对于大部分道宝们~来说，第一天结丹可谓是轻轻松松的，适当的更新下装备，找个合适的宗门，结交一些新朋友，一起共度美好的修仙时光。同时结丹时期，还有地图探索等支线任务，道宝们~可以第一时间完成这些任务，然后挂机猿啼谷，准备元婴突破材料，如果运气不好，导致突破丹不够的话，卡在猿啼谷的道宝们~可就和小吟师姐一样成为猿啼谷的常驻了，</p>\n<h1 id=\"第二天\"><a href=\"#第二天\" class=\"headerlink\" title=\"第二天\"></a>第二天</h1><p>此时，应该处于结丹/锻骨期，进度快的，第二天就能上元婴/元武。</p>\n<h4 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h4><ol>\n<li>次数留着吃高阶丹药【金丹】紫丹也不着急吃，开福袋和炼丹会有金丹，紫丹留着最后吃</li>\n<li>没高阶丹药吃的时候，开始练副修（副修突破境界，天机阁刷新次数，每突破一次刷新一次，机缘买修为福袋）</li>\n<li>限时礼包（修为的限时礼包建议拿下，拉开差距）</li>\n<li>每日特惠（修为福袋，跟修为进度）</li>\n</ol>\n<h1 id=\"第三天\"><a href=\"#第三天\" class=\"headerlink\" title=\"第三天\"></a>第三天</h1><p>此时，应该处于结丹中后期</p>\n<h4 id=\"注意事项-1\"><a href=\"#注意事项-1\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h4><ol>\n<li>次数留着吃高阶丹药【金丹】紫丹也不着急吃，开福袋和炼丹会有金丹，紫丹留着最后吃</li>\n<li>没高阶丹药吃的时候，开始练副修（副修突破境界，天机阁刷新次数，每突破一次刷新一次，机缘买修为福袋）</li>\n<li>限时礼包（修为的限时礼包建议拿下，拉开差距）</li>\n<li>每日特惠（修为福袋，跟修为进度）</li>\n<li>分身系统出现，尽可能跟上主境界，获取更多资源提升自己</li>\n</ol>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>道宝们~是不是觉得修仙其实没有那么困难，只要我们注意好自己的修为提升的机会，人人都可以三天元婴。在人界，修为最为重要，功法，古宝，洞府灵气，都能帮助我们提高修炼速度，以上就是小吟师姐修为冲刺补习班的一些玩法和注意事项啦，如有需要，道宝们~请多多关注小吟师姐的修仙日记！</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">境界</th>\n<th style=\"text-align:center\">起步</th>\n<th style=\"text-align:center\">圆满</th>\n<th style=\"text-align:center\">时长</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">结丹/炼腑</td>\n<td style=\"text-align:center\">200W-300W</td>\n<td style=\"text-align:center\">500W-800W</td>\n<td style=\"text-align:center\">1天/96道年</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">元婴/元武</td>\n<td style=\"text-align:center\">2000W-3000W</td>\n<td style=\"text-align:center\">6000W-8000W</td>\n<td style=\"text-align:center\">3天/288道年</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">化神/神力</td>\n<td style=\"text-align:center\">2.2E-3E</td>\n<td style=\"text-align:center\">8E-10E</td>\n<td style=\"text-align:center\">41天/3936道年</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">返虚/破虚</td>\n<td style=\"text-align:center\">30E-38E</td>\n<td style=\"text-align:center\">100E-120E</td>\n<td style=\"text-align:center\">66天/10272道年</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">合体/混元</td>\n<td style=\"text-align:center\">200E-260E</td>\n<td style=\"text-align:center\">450E-530E</td>\n<td style=\"text-align:center\">90天/18912道年</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">大乘/大成</td>\n<td style=\"text-align:center\">900E-1100E</td>\n<td style=\"text-align:center\">1600E-1800E</td>\n<td style=\"text-align:center\">90天/27552道年</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">渡劫/涅槃</td>\n<td style=\"text-align:center\">2800E-3400E</td>\n<td style=\"text-align:center\">4500E-5200E</td>\n<td style=\"text-align:center\">127天/39744道年</td>\n</tr>\n</tbody>\n</table>\n</div>\n","site":{"data":{}},"cover_type":"img","excerpt":"","more":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><ol>\n<li>修仙过程中遇到的问题，优先在本页面搜索，检查是否有配置相应的教程。</li>\n<li>遇到问题可以优先在评论区留言，道宝们~留言时，注意请填写正确的邮箱以确保能收到小吟学姐的回复哦。</li>\n</ol>\n<h1 id=\"适用的道宝们\"><a href=\"#适用的道宝们\" class=\"headerlink\" title=\"适用的道宝们~\"></a>适用的道宝们~</h1><p>对于新来的道宝，需要了解城镇的天机阁，宝藏阁，坊市，用来交易材料的界面，洞府的丹房，器室，药园，用来制作材料的界面，才能容易理解提升的目的，获得更高的游戏体验。</p>\n<p>一些了解过游戏，但是不太会玩的道宝，参加完学姐的补习班后，就是与大部分玩家拉开差距的时候，这便是精氪玩家的自我成长了。</p>\n<p>如果道宝们~的储物袋满满的，也可以看看这篇文章，检查一下是否哪里还有遗漏任务没做，或者缺少一些方法提升战力，争取所有资源都用在刀刃上。</p>\n<h1 id=\"开服第一天\"><a href=\"#开服第一天\" class=\"headerlink\" title=\"开服第一天\"></a>开服第一天</h1><h2 id=\"创建角色\"><a href=\"#创建角色\" class=\"headerlink\" title=\"创建角色\"></a>创建角色</h2><p>相信大多数道宝们~，进入游戏的时候，发现为什么其他道友比自己的战力高出这么多？而且自己不论怎么追赶，都追不上第一梯队的修为。</p>\n<p>这是因为游戏的开服机制，让道宝们~没能在第一时间进入游戏，从而使自己比别人的修为速度慢半天甚至一天的时间。</p>\n<p>一般游戏开服会有两个位面，周末可能有四个，基本上每天都会有新的位面开启，但是开启的具体时间不确定，能肯定的是，开服时间都是整点，所以道宝们~创建角色的时候，尽可能注意些时间，不要距离开服时间太久。</p>\n<h2 id=\"快速提升境界\"><a href=\"#快速提升境界\" class=\"headerlink\" title=\"快速提升境界\"></a>快速提升境界</h2><h3 id=\"主线任务\"><a href=\"#主线任务\" class=\"headerlink\" title=\"主线任务\"></a>主线任务</h3><p>完成主线任务自不必多说，在完成主线任务后，注意提升修为的关键因素，保证自己最快时间进入结丹期。</p>\n<h3 id=\"丹药\"><a href=\"#丹药\" class=\"headerlink\" title=\"丹药\"></a>丹药</h3><p>尽可能吃<strong>高级丹药</strong>（金丹&gt;紫丹&gt;蓝丹（尽可能不吃蓝丹）），在修为达到通脉/炼气9层时，解锁天机阁，此时不要使用天机令刷新天机阁（这个时期修炼速度快，只需要几分钟便可达到渡劫阶段），每次提升一个大境界（通脉-&gt;筑基/炼气-&gt;锻骨)天机阁自动刷新一次，</p>\n<h4 id=\"天机阁购买细节\"><a href=\"#天机阁购买细节\" class=\"headerlink\" title=\"天机阁购买细节\"></a>天机阁购买细节</h4><p>修为福袋每日必买（主修福袋必买）</p>\n<p>修为秘药（适当，低于百分之百的适合就不用买了）</p>\n<p>引魔香（必买）阴冥决需要使用一百个才能解锁</p>\n<p>升星石（3折购买）</p>\n<p>灵尘（3/6折购买）</p>\n<p>灵兽花（3折购买）</p>\n<p>灵石宝箱（不推荐购买，因为没有灵石卡住了，不得已才买，化身出来之前，一般不缺灵石）</p>\n<p>劫盾（不推荐购买，正常的修炼到渡劫阶段，根本劈不死）</p>\n<h4 id=\"宝藏阁购买细节\"><a href=\"#宝藏阁购买细节\" class=\"headerlink\" title=\"宝藏阁购买细节\"></a>宝藏阁购买细节</h4><p>探宝尽量不要用机缘去抽（机缘留着买修为福袋和开田）</p>\n<p>宝藏里（上古至宝开出离阳灵玉、修为秘药低于100%再囤，玄光宝匣和流云宝盒可以开，其他的到化神后期再囤）</p>\n<p>商店（修为秘药100%药效可以买，紫微、摇光、荧惑、太白九剑四件套碎片可以买、天火印（体修买）、火莲（法修买））</p>\n<h4 id=\"坊市购买细节\"><a href=\"#坊市购买细节\" class=\"headerlink\" title=\"坊市购买细节\"></a>坊市购买细节</h4><p>第一天的坊市不要着急刷新（每天8点刷新10次，3小时刷新1次）</p>\n<p>刷新次数留到【筑基/锻骨】再刷新（2阶物品）</p>\n<p>修为丹药不论品质，全部买（白绿丹人不吃，留着给宠物）</p>\n<p>坊市刷新出紫色以上品质的全部都要买</p>\n<p>种子买（风行丹、灵动丹材料种子，化神前的装备种子不要买）</p>\n<p>炼丹图纸只买修为图纸和突破图纸、风行丹、灵动丹图纸，炼器图纸只买虚空石即可（前期境界突破比较快，装备更新快）</p>\n<h3 id=\"每日特惠（精氪推荐）\"><a href=\"#每日特惠（精氪推荐）\" class=\"headerlink\" title=\"每日特惠（精氪推荐）\"></a>每日特惠（精氪推荐）</h3><p>购买小技巧：先买1块和3块和6块的，然后再购买98领10天的。（比普通多拿3个修为福袋和1个修为秘药）</p>\n<h3 id=\"限时礼包\"><a href=\"#限时礼包\" class=\"headerlink\" title=\"限时礼包\"></a>限时礼包</h3><p>限时礼包有修为福袋的建议拿下（限时礼包是拉开差距的主要来源）</p>\n<h3 id=\"洞府灵气\"><a href=\"#洞府灵气\" class=\"headerlink\" title=\"洞府灵气\"></a>洞府灵气</h3><p>【洞府】-【聚灵阵】每个小境界提升灵气量扩充，着重拉满</p>\n<h3 id=\"秘药\"><a href=\"#秘药\" class=\"headerlink\" title=\"秘药\"></a>秘药</h3><p>古修商店的天机石可兑换修为秘药，100药效以下可不换，每日爬塔至极限，拿妖元丹快速提升修为（秘药不与修为丹服用次数共享）（每次境界要氪丹药之前，先看下自己的功法能否提升再吃，以免吃完再点功法时出现了丹药/吐纳效果加成就浪费了）</p>\n<h3 id=\"宗门\"><a href=\"#宗门\" class=\"headerlink\" title=\"宗门\"></a>宗门</h3><p>选择一个合适的宗门，尽量的多做贡献，可以获得玄晶石和宗门贡献，玄晶石用来升级神通，宗门贡献用来买图纸。</p>\n<p>对于大部分道宝们~来说，第一天结丹可谓是轻轻松松的，适当的更新下装备，找个合适的宗门，结交一些新朋友，一起共度美好的修仙时光。同时结丹时期，还有地图探索等支线任务，道宝们~可以第一时间完成这些任务，然后挂机猿啼谷，准备元婴突破材料，如果运气不好，导致突破丹不够的话，卡在猿啼谷的道宝们~可就和小吟师姐一样成为猿啼谷的常驻了，</p>\n<h1 id=\"第二天\"><a href=\"#第二天\" class=\"headerlink\" title=\"第二天\"></a>第二天</h1><p>此时，应该处于结丹/锻骨期，进度快的，第二天就能上元婴/元武。</p>\n<h4 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h4><ol>\n<li>次数留着吃高阶丹药【金丹】紫丹也不着急吃，开福袋和炼丹会有金丹，紫丹留着最后吃</li>\n<li>没高阶丹药吃的时候，开始练副修（副修突破境界，天机阁刷新次数，每突破一次刷新一次，机缘买修为福袋）</li>\n<li>限时礼包（修为的限时礼包建议拿下，拉开差距）</li>\n<li>每日特惠（修为福袋，跟修为进度）</li>\n</ol>\n<h1 id=\"第三天\"><a href=\"#第三天\" class=\"headerlink\" title=\"第三天\"></a>第三天</h1><p>此时，应该处于结丹中后期</p>\n<h4 id=\"注意事项-1\"><a href=\"#注意事项-1\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h4><ol>\n<li>次数留着吃高阶丹药【金丹】紫丹也不着急吃，开福袋和炼丹会有金丹，紫丹留着最后吃</li>\n<li>没高阶丹药吃的时候，开始练副修（副修突破境界，天机阁刷新次数，每突破一次刷新一次，机缘买修为福袋）</li>\n<li>限时礼包（修为的限时礼包建议拿下，拉开差距）</li>\n<li>每日特惠（修为福袋，跟修为进度）</li>\n<li>分身系统出现，尽可能跟上主境界，获取更多资源提升自己</li>\n</ol>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>道宝们~是不是觉得修仙其实没有那么困难，只要我们注意好自己的修为提升的机会，人人都可以三天元婴。在人界，修为最为重要，功法，古宝，洞府灵气，都能帮助我们提高修炼速度，以上就是小吟师姐修为冲刺补习班的一些玩法和注意事项啦，如有需要，道宝们~请多多关注小吟师姐的修仙日记！</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">境界</th>\n<th style=\"text-align:center\">起步</th>\n<th style=\"text-align:center\">圆满</th>\n<th style=\"text-align:center\">时长</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">结丹/炼腑</td>\n<td style=\"text-align:center\">200W-300W</td>\n<td style=\"text-align:center\">500W-800W</td>\n<td style=\"text-align:center\">1天/96道年</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">元婴/元武</td>\n<td style=\"text-align:center\">2000W-3000W</td>\n<td style=\"text-align:center\">6000W-8000W</td>\n<td style=\"text-align:center\">3天/288道年</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">化神/神力</td>\n<td style=\"text-align:center\">2.2E-3E</td>\n<td style=\"text-align:center\">8E-10E</td>\n<td style=\"text-align:center\">41天/3936道年</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">返虚/破虚</td>\n<td style=\"text-align:center\">30E-38E</td>\n<td style=\"text-align:center\">100E-120E</td>\n<td style=\"text-align:center\">66天/10272道年</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">合体/混元</td>\n<td style=\"text-align:center\">200E-260E</td>\n<td style=\"text-align:center\">450E-530E</td>\n<td style=\"text-align:center\">90天/18912道年</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">大乘/大成</td>\n<td style=\"text-align:center\">900E-1100E</td>\n<td style=\"text-align:center\">1600E-1800E</td>\n<td style=\"text-align:center\">90天/27552道年</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">渡劫/涅槃</td>\n<td style=\"text-align:center\">2800E-3400E</td>\n<td style=\"text-align:center\">4500E-5200E</td>\n<td style=\"text-align:center\">127天/39744道年</td>\n</tr>\n</tbody>\n</table>\n</div>\n"},{"title":"人界功法学习顺序","swiper_index":2,"description":"道宝们~快来和师姐一起学习功法吧！","cover":"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040351984.jpg","_content":"\n# 前言\n\n1. 修仙过程中遇到的问题，优先在本页面搜索，检查是否有配置相应的教程。\n2. 遇到问题可以优先在评论区留言，道宝们~留言时，注意请填写正确的邮箱以确保能收到小吟学姐的回复哦。\n\n# 功法系统\n\n## 功法类型\n\n辅助修为类\n\n1. 洞府灵气：洞府基础灵气**（非常重要）**\n2. 丹药效果：增加服药次数和服药效果（长期收益较高）\n3. 吐纳：每天吐纳效果**（人界效果一般）**\n4. 秘境灵石：挂机获取灵石的效率\n\n自身属性类\n\n1. 控制效果：控制/被控制修士的概率和时间增加和减少\n2. 会心：也称为暴击，本来暴击是两倍伤害，然后变成三倍伤害，会心出现几率上升\n3. 怪物伤害减免\n\n神通法宝类\n\n1. 神通效果：攻击/受到修士的神通伤害增加/减免\n2. 法宝效果：攻击/受到修士的法宝伤害增加/减免\n\n# 功法加点顺序\n\n 人界功法为1~10阶，人界最重要的是修为进度，所以道宝们~在选择功法加点上倾向于洞府灵气和丹药效果，功法不推荐圆满，圆满的效果是增加功法属性也就是气血和真元的自身属性，对于修炼速度来说并没有什么作用。\n\n从上到下为修炼功法顺序\n\n| 功法阶层 |                           功法名称                           |  层数  |                             备注                             |\n| :------: | :----------------------------------------------------------: | :----: | :----------------------------------------------------------: |\n|   一阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040355109.png\" alt=\"image-20231104022541698\" style=\"zoom:50%;\" /> |  圆满  |           前面三阶功法可以选择圆满，帮助通过镇妖塔           |\n|   二阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356012.png\" alt=\"image-20231104022307210\" style=\"zoom:50%;\" /> |  圆满  |                                                              |\n|   二阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356014.png\" alt=\"image-20231104022423511\" style=\"zoom:50%;\" /> |  圆满  |                                                              |\n|   三阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356015.png\" alt=\"image-20231104022634303\" style=\"zoom:50%;\" /> |  圆满  |                                                              |\n|   三阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356016.png\" alt=\"image-20231104022837833\" style=\"zoom:50%;\" /> |  圆满  |                                                              |\n|   三阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356017.png\" alt=\"image-20231104022521133\" style=\"zoom:50%;\" /> |        |                     主要是为了通关镇妖塔                     |\n|   四阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356018.png\" alt=\"image-20231104023158693\" style=\"zoom:50%;\" /> |  一层  |                                                              |\n|   四阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356019.png\" alt=\"image-20231104023627979\" style=\"zoom:50%;\" /> |  一层  |                                                              |\n|   四阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356020.png\" alt=\"image-20231104023303020\" style=\"zoom:50%;\" /> |  六层  |                                                              |\n|   四阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356021.png\" alt=\"image-20231104023746689\" style=\"zoom:50%;\" /> |  六层  |                                                              |\n|   五阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356022.png\" alt=\"image-20231104024204496\" style=\"zoom:50%;\" /> |  六层  |                                                              |\n|   五阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356023.png\" alt=\"image-20231104024243433\" style=\"zoom:50%;\" /> |  六层  |                                                              |\n|   五阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356024.png\" alt=\"image-20231104024312694\" style=\"zoom:50%;\" /> |  三层  |                                                              |\n|   六阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356025.png\" alt=\"image-20231104030849480\" style=\"zoom:50%;\" /> |  六层  |   分身需要到达后期，关于分身建议所有绿白材料卖出去换取灵石   |\n|   六阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356026.png\" alt=\"image-20231104030831080\" style=\"zoom:50%;\" /> |  九层  | 引魔香使用100个，每次天机阁刷新的时候，一定购买引魔香，后期会缺少炼丹材料 |\n|   六阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356027.png\" alt=\"image-20231104031228944\" style=\"zoom:50%;\" /><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356028.png\" alt=\"image-20231104031242321\" style=\"zoom:50%;\" /> |  九层  |           尽量前期多挖矿，缺少玄晶石可以作宗门贡献           |\n|   七阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356029.png\" alt=\"image-20231104031743386\" style=\"zoom:50%;\" /> |  一层  |                                                              |\n|   七阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356030.png\" alt=\"image-20231104031832972\" style=\"zoom:50%;\" /> |  九层  |            先激活一层，将大首阳学到九层后回头再学            |\n|   七阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356031.png\" alt=\"image-20231104031941964\" style=\"zoom:50%;\" /> |  九层  |                                                              |\n|   八阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356032.png\" alt=\"image-20231104032142724\" style=\"zoom:50%;\" /> | 十二层 |                                                              |\n|   八阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356033.png\" alt=\"image-20231104032447171\" style=\"zoom:50%;\" /> | 十二层 |                                                              |\n|   八阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356034.png\" alt=\"image-20231104032626679\" style=\"zoom:50%;\" /> |  三层  |                        四星的紫薇古戒                        |\n|   八阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356035.png\" alt=\"image-20231104032729502\" style=\"zoom:50%;\" /> | 十二层 |                        四星的摇光灵玉                        |\n|   九阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356036.png\" alt=\"image-20231104033102970\" style=\"zoom:50%;\" /> |  一层  |                                                              |\n|   九阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356037.png\" alt=\"image-20231104033529676\" style=\"zoom:50%;\" /> |  一层  |                                                              |\n|   九阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356038.png\" alt=\"image-20231104033236997\" style=\"zoom:50%;\" /> | 十二层 |                         开二十二块地                         |\n|   九阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356039.png\" alt=\"image-20231104033708462\" style=\"zoom:50%;\" /> |  九层  |                          四星祈仙鼎                          |\n|   限定   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356040.png\" alt=\"image-20231104033904413\" style=\"zoom:50%;\" /> |  圆满  |                     主要是为了通关镇妖塔                     |\n\n","source":"_posts/人界功法学习顺序.md","raw":"---\ntitle: 人界功法学习顺序\nswiper_index: 2\ndescription: 道宝们~快来和师姐一起学习功法吧！\ncover: https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040351984.jpg\n---\n\n# 前言\n\n1. 修仙过程中遇到的问题，优先在本页面搜索，检查是否有配置相应的教程。\n2. 遇到问题可以优先在评论区留言，道宝们~留言时，注意请填写正确的邮箱以确保能收到小吟学姐的回复哦。\n\n# 功法系统\n\n## 功法类型\n\n辅助修为类\n\n1. 洞府灵气：洞府基础灵气**（非常重要）**\n2. 丹药效果：增加服药次数和服药效果（长期收益较高）\n3. 吐纳：每天吐纳效果**（人界效果一般）**\n4. 秘境灵石：挂机获取灵石的效率\n\n自身属性类\n\n1. 控制效果：控制/被控制修士的概率和时间增加和减少\n2. 会心：也称为暴击，本来暴击是两倍伤害，然后变成三倍伤害，会心出现几率上升\n3. 怪物伤害减免\n\n神通法宝类\n\n1. 神通效果：攻击/受到修士的神通伤害增加/减免\n2. 法宝效果：攻击/受到修士的法宝伤害增加/减免\n\n# 功法加点顺序\n\n 人界功法为1~10阶，人界最重要的是修为进度，所以道宝们~在选择功法加点上倾向于洞府灵气和丹药效果，功法不推荐圆满，圆满的效果是增加功法属性也就是气血和真元的自身属性，对于修炼速度来说并没有什么作用。\n\n从上到下为修炼功法顺序\n\n| 功法阶层 |                           功法名称                           |  层数  |                             备注                             |\n| :------: | :----------------------------------------------------------: | :----: | :----------------------------------------------------------: |\n|   一阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040355109.png\" alt=\"image-20231104022541698\" style=\"zoom:50%;\" /> |  圆满  |           前面三阶功法可以选择圆满，帮助通过镇妖塔           |\n|   二阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356012.png\" alt=\"image-20231104022307210\" style=\"zoom:50%;\" /> |  圆满  |                                                              |\n|   二阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356014.png\" alt=\"image-20231104022423511\" style=\"zoom:50%;\" /> |  圆满  |                                                              |\n|   三阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356015.png\" alt=\"image-20231104022634303\" style=\"zoom:50%;\" /> |  圆满  |                                                              |\n|   三阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356016.png\" alt=\"image-20231104022837833\" style=\"zoom:50%;\" /> |  圆满  |                                                              |\n|   三阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356017.png\" alt=\"image-20231104022521133\" style=\"zoom:50%;\" /> |        |                     主要是为了通关镇妖塔                     |\n|   四阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356018.png\" alt=\"image-20231104023158693\" style=\"zoom:50%;\" /> |  一层  |                                                              |\n|   四阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356019.png\" alt=\"image-20231104023627979\" style=\"zoom:50%;\" /> |  一层  |                                                              |\n|   四阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356020.png\" alt=\"image-20231104023303020\" style=\"zoom:50%;\" /> |  六层  |                                                              |\n|   四阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356021.png\" alt=\"image-20231104023746689\" style=\"zoom:50%;\" /> |  六层  |                                                              |\n|   五阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356022.png\" alt=\"image-20231104024204496\" style=\"zoom:50%;\" /> |  六层  |                                                              |\n|   五阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356023.png\" alt=\"image-20231104024243433\" style=\"zoom:50%;\" /> |  六层  |                                                              |\n|   五阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356024.png\" alt=\"image-20231104024312694\" style=\"zoom:50%;\" /> |  三层  |                                                              |\n|   六阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356025.png\" alt=\"image-20231104030849480\" style=\"zoom:50%;\" /> |  六层  |   分身需要到达后期，关于分身建议所有绿白材料卖出去换取灵石   |\n|   六阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356026.png\" alt=\"image-20231104030831080\" style=\"zoom:50%;\" /> |  九层  | 引魔香使用100个，每次天机阁刷新的时候，一定购买引魔香，后期会缺少炼丹材料 |\n|   六阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356027.png\" alt=\"image-20231104031228944\" style=\"zoom:50%;\" /><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356028.png\" alt=\"image-20231104031242321\" style=\"zoom:50%;\" /> |  九层  |           尽量前期多挖矿，缺少玄晶石可以作宗门贡献           |\n|   七阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356029.png\" alt=\"image-20231104031743386\" style=\"zoom:50%;\" /> |  一层  |                                                              |\n|   七阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356030.png\" alt=\"image-20231104031832972\" style=\"zoom:50%;\" /> |  九层  |            先激活一层，将大首阳学到九层后回头再学            |\n|   七阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356031.png\" alt=\"image-20231104031941964\" style=\"zoom:50%;\" /> |  九层  |                                                              |\n|   八阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356032.png\" alt=\"image-20231104032142724\" style=\"zoom:50%;\" /> | 十二层 |                                                              |\n|   八阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356033.png\" alt=\"image-20231104032447171\" style=\"zoom:50%;\" /> | 十二层 |                                                              |\n|   八阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356034.png\" alt=\"image-20231104032626679\" style=\"zoom:50%;\" /> |  三层  |                        四星的紫薇古戒                        |\n|   八阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356035.png\" alt=\"image-20231104032729502\" style=\"zoom:50%;\" /> | 十二层 |                        四星的摇光灵玉                        |\n|   九阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356036.png\" alt=\"image-20231104033102970\" style=\"zoom:50%;\" /> |  一层  |                                                              |\n|   九阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356037.png\" alt=\"image-20231104033529676\" style=\"zoom:50%;\" /> |  一层  |                                                              |\n|   九阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356038.png\" alt=\"image-20231104033236997\" style=\"zoom:50%;\" /> | 十二层 |                         开二十二块地                         |\n|   九阶   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356039.png\" alt=\"image-20231104033708462\" style=\"zoom:50%;\" /> |  九层  |                          四星祈仙鼎                          |\n|   限定   | <img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356040.png\" alt=\"image-20231104033904413\" style=\"zoom:50%;\" /> |  圆满  |                     主要是为了通关镇妖塔                     |\n\n","slug":"人界功法学习顺序","published":1,"date":"2024-02-06T19:08:00.308Z","updated":"2024-02-04T21:06:28.088Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cltxxetas000h6cdsatqv8ovm","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><ol>\n<li>修仙过程中遇到的问题，优先在本页面搜索，检查是否有配置相应的教程。</li>\n<li>遇到问题可以优先在评论区留言，道宝们~留言时，注意请填写正确的邮箱以确保能收到小吟学姐的回复哦。</li>\n</ol>\n<h1 id=\"功法系统\"><a href=\"#功法系统\" class=\"headerlink\" title=\"功法系统\"></a>功法系统</h1><h2 id=\"功法类型\"><a href=\"#功法类型\" class=\"headerlink\" title=\"功法类型\"></a>功法类型</h2><p>辅助修为类</p>\n<ol>\n<li>洞府灵气：洞府基础灵气<strong>（非常重要）</strong></li>\n<li>丹药效果：增加服药次数和服药效果（长期收益较高）</li>\n<li>吐纳：每天吐纳效果<strong>（人界效果一般）</strong></li>\n<li>秘境灵石：挂机获取灵石的效率</li>\n</ol>\n<p>自身属性类</p>\n<ol>\n<li>控制效果：控制/被控制修士的概率和时间增加和减少</li>\n<li>会心：也称为暴击，本来暴击是两倍伤害，然后变成三倍伤害，会心出现几率上升</li>\n<li>怪物伤害减免</li>\n</ol>\n<p>神通法宝类</p>\n<ol>\n<li>神通效果：攻击/受到修士的神通伤害增加/减免</li>\n<li>法宝效果：攻击/受到修士的法宝伤害增加/减免</li>\n</ol>\n<h1 id=\"功法加点顺序\"><a href=\"#功法加点顺序\" class=\"headerlink\" title=\"功法加点顺序\"></a>功法加点顺序</h1><p> 人界功法为1~10阶，人界最重要的是修为进度，所以道宝们~在选择功法加点上倾向于洞府灵气和丹药效果，功法不推荐圆满，圆满的效果是增加功法属性也就是气血和真元的自身属性，对于修炼速度来说并没有什么作用。</p>\n<p>从上到下为修炼功法顺序</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">功法阶层</th>\n<th style=\"text-align:center\">功法名称</th>\n<th style=\"text-align:center\">层数</th>\n<th style=\"text-align:center\">备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">一阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040355109.png\" alt=\"image-20231104022541698\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">圆满</td>\n<td style=\"text-align:center\">前面三阶功法可以选择圆满，帮助通过镇妖塔</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">二阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356012.png\" alt=\"image-20231104022307210\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">圆满</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">二阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356014.png\" alt=\"image-20231104022423511\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">圆满</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">三阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356015.png\" alt=\"image-20231104022634303\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">圆满</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">三阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356016.png\" alt=\"image-20231104022837833\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">圆满</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">三阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356017.png\" alt=\"image-20231104022521133\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">主要是为了通关镇妖塔</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">四阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356018.png\" alt=\"image-20231104023158693\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">一层</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">四阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356019.png\" alt=\"image-20231104023627979\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">一层</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">四阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356020.png\" alt=\"image-20231104023303020\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">六层</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">四阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356021.png\" alt=\"image-20231104023746689\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">六层</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">五阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356022.png\" alt=\"image-20231104024204496\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">六层</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">五阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356023.png\" alt=\"image-20231104024243433\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">六层</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">五阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356024.png\" alt=\"image-20231104024312694\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">三层</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">六阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356025.png\" alt=\"image-20231104030849480\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">六层</td>\n<td style=\"text-align:center\">分身需要到达后期，关于分身建议所有绿白材料卖出去换取灵石</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">六阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356026.png\" alt=\"image-20231104030831080\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">九层</td>\n<td style=\"text-align:center\">引魔香使用100个，每次天机阁刷新的时候，一定购买引魔香，后期会缺少炼丹材料</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">六阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356027.png\" alt=\"image-20231104031228944\" style=\"zoom:50%;\" /><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356028.png\" alt=\"image-20231104031242321\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">九层</td>\n<td style=\"text-align:center\">尽量前期多挖矿，缺少玄晶石可以作宗门贡献</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">七阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356029.png\" alt=\"image-20231104031743386\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">一层</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">七阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356030.png\" alt=\"image-20231104031832972\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">九层</td>\n<td style=\"text-align:center\">先激活一层，将大首阳学到九层后回头再学</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">七阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356031.png\" alt=\"image-20231104031941964\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">九层</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">八阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356032.png\" alt=\"image-20231104032142724\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">十二层</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">八阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356033.png\" alt=\"image-20231104032447171\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">十二层</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">八阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356034.png\" alt=\"image-20231104032626679\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">三层</td>\n<td style=\"text-align:center\">四星的紫薇古戒</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">八阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356035.png\" alt=\"image-20231104032729502\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">十二层</td>\n<td style=\"text-align:center\">四星的摇光灵玉</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">九阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356036.png\" alt=\"image-20231104033102970\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">一层</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">九阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356037.png\" alt=\"image-20231104033529676\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">一层</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">九阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356038.png\" alt=\"image-20231104033236997\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">十二层</td>\n<td style=\"text-align:center\">开二十二块地</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">九阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356039.png\" alt=\"image-20231104033708462\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">九层</td>\n<td style=\"text-align:center\">四星祈仙鼎</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">限定</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356040.png\" alt=\"image-20231104033904413\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">圆满</td>\n<td style=\"text-align:center\">主要是为了通关镇妖塔</td>\n</tr>\n</tbody>\n</table>\n</div>\n","site":{"data":{}},"cover_type":"img","excerpt":"","more":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><ol>\n<li>修仙过程中遇到的问题，优先在本页面搜索，检查是否有配置相应的教程。</li>\n<li>遇到问题可以优先在评论区留言，道宝们~留言时，注意请填写正确的邮箱以确保能收到小吟学姐的回复哦。</li>\n</ol>\n<h1 id=\"功法系统\"><a href=\"#功法系统\" class=\"headerlink\" title=\"功法系统\"></a>功法系统</h1><h2 id=\"功法类型\"><a href=\"#功法类型\" class=\"headerlink\" title=\"功法类型\"></a>功法类型</h2><p>辅助修为类</p>\n<ol>\n<li>洞府灵气：洞府基础灵气<strong>（非常重要）</strong></li>\n<li>丹药效果：增加服药次数和服药效果（长期收益较高）</li>\n<li>吐纳：每天吐纳效果<strong>（人界效果一般）</strong></li>\n<li>秘境灵石：挂机获取灵石的效率</li>\n</ol>\n<p>自身属性类</p>\n<ol>\n<li>控制效果：控制/被控制修士的概率和时间增加和减少</li>\n<li>会心：也称为暴击，本来暴击是两倍伤害，然后变成三倍伤害，会心出现几率上升</li>\n<li>怪物伤害减免</li>\n</ol>\n<p>神通法宝类</p>\n<ol>\n<li>神通效果：攻击/受到修士的神通伤害增加/减免</li>\n<li>法宝效果：攻击/受到修士的法宝伤害增加/减免</li>\n</ol>\n<h1 id=\"功法加点顺序\"><a href=\"#功法加点顺序\" class=\"headerlink\" title=\"功法加点顺序\"></a>功法加点顺序</h1><p> 人界功法为1~10阶，人界最重要的是修为进度，所以道宝们~在选择功法加点上倾向于洞府灵气和丹药效果，功法不推荐圆满，圆满的效果是增加功法属性也就是气血和真元的自身属性，对于修炼速度来说并没有什么作用。</p>\n<p>从上到下为修炼功法顺序</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">功法阶层</th>\n<th style=\"text-align:center\">功法名称</th>\n<th style=\"text-align:center\">层数</th>\n<th style=\"text-align:center\">备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">一阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040355109.png\" alt=\"image-20231104022541698\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">圆满</td>\n<td style=\"text-align:center\">前面三阶功法可以选择圆满，帮助通过镇妖塔</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">二阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356012.png\" alt=\"image-20231104022307210\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">圆满</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">二阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356014.png\" alt=\"image-20231104022423511\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">圆满</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">三阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356015.png\" alt=\"image-20231104022634303\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">圆满</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">三阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356016.png\" alt=\"image-20231104022837833\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">圆满</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">三阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356017.png\" alt=\"image-20231104022521133\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">主要是为了通关镇妖塔</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">四阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356018.png\" alt=\"image-20231104023158693\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">一层</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">四阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356019.png\" alt=\"image-20231104023627979\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">一层</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">四阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356020.png\" alt=\"image-20231104023303020\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">六层</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">四阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356021.png\" alt=\"image-20231104023746689\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">六层</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">五阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356022.png\" alt=\"image-20231104024204496\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">六层</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">五阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356023.png\" alt=\"image-20231104024243433\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">六层</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">五阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356024.png\" alt=\"image-20231104024312694\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">三层</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">六阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356025.png\" alt=\"image-20231104030849480\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">六层</td>\n<td style=\"text-align:center\">分身需要到达后期，关于分身建议所有绿白材料卖出去换取灵石</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">六阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356026.png\" alt=\"image-20231104030831080\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">九层</td>\n<td style=\"text-align:center\">引魔香使用100个，每次天机阁刷新的时候，一定购买引魔香，后期会缺少炼丹材料</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">六阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356027.png\" alt=\"image-20231104031228944\" style=\"zoom:50%;\" /><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356028.png\" alt=\"image-20231104031242321\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">九层</td>\n<td style=\"text-align:center\">尽量前期多挖矿，缺少玄晶石可以作宗门贡献</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">七阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356029.png\" alt=\"image-20231104031743386\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">一层</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">七阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356030.png\" alt=\"image-20231104031832972\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">九层</td>\n<td style=\"text-align:center\">先激活一层，将大首阳学到九层后回头再学</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">七阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356031.png\" alt=\"image-20231104031941964\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">九层</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">八阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356032.png\" alt=\"image-20231104032142724\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">十二层</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">八阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356033.png\" alt=\"image-20231104032447171\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">十二层</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">八阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356034.png\" alt=\"image-20231104032626679\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">三层</td>\n<td style=\"text-align:center\">四星的紫薇古戒</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">八阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356035.png\" alt=\"image-20231104032729502\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">十二层</td>\n<td style=\"text-align:center\">四星的摇光灵玉</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">九阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356036.png\" alt=\"image-20231104033102970\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">一层</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">九阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356037.png\" alt=\"image-20231104033529676\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">一层</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">九阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356038.png\" alt=\"image-20231104033236997\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">十二层</td>\n<td style=\"text-align:center\">开二十二块地</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">九阶</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356039.png\" alt=\"image-20231104033708462\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">九层</td>\n<td style=\"text-align:center\">四星祈仙鼎</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">限定</td>\n<td style=\"text-align:center\"><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202311040356040.png\" alt=\"image-20231104033904413\" style=\"zoom:50%;\" /></td>\n<td style=\"text-align:center\">圆满</td>\n<td style=\"text-align:center\">主要是为了通关镇妖塔</td>\n</tr>\n</tbody>\n</table>\n</div>\n"},{"title":"新手上路","swiper_index":2,"cover":"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202310191543444.jpg","_content":"## 法修和体修\n\n法修方向：法修远程且偏向群攻，因为有法修护盾的加持，在刷怪和爬塔（镇魔塔）上比较舒服，在前期的对抗上较体修有优势些。\n\n体修方向：体修近战爆发单体优势，在打boss和PVP的对抗上有一定的优势。\n\n道宝们~无论是修法还是炼体，各自有各自的有点，没有哪一个特别弱，主要看自己喜欢哪一种风格哦~\n\n{% note default simple %}default 提示块标签{% endnote %}\n\n{% note pink 'fas fa-car-crash' modern %}小心开车 安全至上{% endnote %}\n{% tip success %}success{% endtip %}\n\n{% checkbox red, 支持自定义颜色 %}\n{% checkbox green checked, 绿色 + 默认选中 %}\n{% checkbox yellow checked, 黄色 + 默认选中 %}\n\n{% radio 纯文本测试 %}\n{% radio checked, 支持简单的 [markdown](https://guides.github.com/features/mastering-markdown/) 语法 %}\n{% radio red, 支持自定义颜色 %}\n\n{% link 糖果屋教程贴, https://akilar.top/posts/615e2dec/, https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico %}\n\n{% btns circle grid5 %}\n{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}\n{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}\n{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}\n{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}\n{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}\n{% endbtns %}\n\n{% poem 水调歌头,苏轼 %}\n丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。\n明月几时有？把酒问青天。\n不知天上宫阙，今夕是何年？\n我欲乘风归去，又恐琼楼玉宇，高处不胜寒。\n起舞弄清影，何似在人间？\n\n转朱阁，低绮户，照无眠。\n不应有恨，何事长向别时圆？\n人有悲欢离合，月有阴晴圆缺，此事古难全。\n但愿人长久，千里共婵娟。\n{% endpoem %}\n\n\n\n\n{% note blue no-icon %}\n\n{% timeline 时间轴样式,blue %}\n\n<!-- timeline 2020-07-24 [2.6.6 -> 3.0](https://github.com/volantis-x/hexo-theme-volantis/releases) -->\n\n1. 如果有 `hexo-lazyload-image` 插件，需要删除并重新安装最新版本，设置 `lazyload.isSPA: true`。\n2. 2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 `use_cdn: true` 则需要删除。\n3. 2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。\n4. 2.x 版本的置顶 `top: true` 改为了 `pin: true`，并且同样适用于 `layout: page` 的页面。\n5. 如果使用了 `hexo-offline` 插件，建议卸载，3.0 版本默认开启了 pjax 服务。\n\n<!-- endtimeline -->\n\n<!-- timeline 2020-05-15 [2.6.3 -> 2.6.6](https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6) -->\n\n不需要额外处理。\n\n<!-- endtimeline -->\n\n<!-- timeline 2020-04-20 [2.6.2 -> 2.6.3](https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3) -->\n\n1. 全局搜索 `seotitle` 并替换为 `seo_title`。\n2. group 组件的索引规则有变，使用 group 组件的文章内，`group: group_name` 对应的组件名必须是 `group_name`。\n2. group 组件的列表名优先显示文章的 `short_title` 其次是 `title`。\n\n<!-- endtimeline -->\n\n<div class=\"gallery-group-main\">\n{% galleryGroup 宗门合影 2023-10-23 '/gallery/MC/' https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202310261501300.jpg %}\n</div>\n\n{% endtimeline %}\n\n{% endnote %}","source":"_posts/新手上路.md","raw":"---\ntitle: 新手上路\nswiper_index: 2\ncover: https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202310191543444.jpg\n---\n## 法修和体修\n\n法修方向：法修远程且偏向群攻，因为有法修护盾的加持，在刷怪和爬塔（镇魔塔）上比较舒服，在前期的对抗上较体修有优势些。\n\n体修方向：体修近战爆发单体优势，在打boss和PVP的对抗上有一定的优势。\n\n道宝们~无论是修法还是炼体，各自有各自的有点，没有哪一个特别弱，主要看自己喜欢哪一种风格哦~\n\n{% note default simple %}default 提示块标签{% endnote %}\n\n{% note pink 'fas fa-car-crash' modern %}小心开车 安全至上{% endnote %}\n{% tip success %}success{% endtip %}\n\n{% checkbox red, 支持自定义颜色 %}\n{% checkbox green checked, 绿色 + 默认选中 %}\n{% checkbox yellow checked, 黄色 + 默认选中 %}\n\n{% radio 纯文本测试 %}\n{% radio checked, 支持简单的 [markdown](https://guides.github.com/features/mastering-markdown/) 语法 %}\n{% radio red, 支持自定义颜色 %}\n\n{% link 糖果屋教程贴, https://akilar.top/posts/615e2dec/, https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico %}\n\n{% btns circle grid5 %}\n{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}\n{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}\n{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}\n{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}\n{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}\n{% endbtns %}\n\n{% poem 水调歌头,苏轼 %}\n丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。\n明月几时有？把酒问青天。\n不知天上宫阙，今夕是何年？\n我欲乘风归去，又恐琼楼玉宇，高处不胜寒。\n起舞弄清影，何似在人间？\n\n转朱阁，低绮户，照无眠。\n不应有恨，何事长向别时圆？\n人有悲欢离合，月有阴晴圆缺，此事古难全。\n但愿人长久，千里共婵娟。\n{% endpoem %}\n\n\n\n\n{% note blue no-icon %}\n\n{% timeline 时间轴样式,blue %}\n\n<!-- timeline 2020-07-24 [2.6.6 -> 3.0](https://github.com/volantis-x/hexo-theme-volantis/releases) -->\n\n1. 如果有 `hexo-lazyload-image` 插件，需要删除并重新安装最新版本，设置 `lazyload.isSPA: true`。\n2. 2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 `use_cdn: true` 则需要删除。\n3. 2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。\n4. 2.x 版本的置顶 `top: true` 改为了 `pin: true`，并且同样适用于 `layout: page` 的页面。\n5. 如果使用了 `hexo-offline` 插件，建议卸载，3.0 版本默认开启了 pjax 服务。\n\n<!-- endtimeline -->\n\n<!-- timeline 2020-05-15 [2.6.3 -> 2.6.6](https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6) -->\n\n不需要额外处理。\n\n<!-- endtimeline -->\n\n<!-- timeline 2020-04-20 [2.6.2 -> 2.6.3](https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3) -->\n\n1. 全局搜索 `seotitle` 并替换为 `seo_title`。\n2. group 组件的索引规则有变，使用 group 组件的文章内，`group: group_name` 对应的组件名必须是 `group_name`。\n2. group 组件的列表名优先显示文章的 `short_title` 其次是 `title`。\n\n<!-- endtimeline -->\n\n<div class=\"gallery-group-main\">\n{% galleryGroup 宗门合影 2023-10-23 '/gallery/MC/' https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202310261501300.jpg %}\n</div>\n\n{% endtimeline %}\n\n{% endnote %}","slug":"新手上路","published":1,"date":"2024-02-06T19:08:00.611Z","updated":"2024-02-04T21:06:28.088Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cltxxetat000i6cdsa1b9d46h","content":"<h2 id=\"法修和体修\"><a href=\"#法修和体修\" class=\"headerlink\" title=\"法修和体修\"></a>法修和体修</h2><p>法修方向：法修远程且偏向群攻，因为有法修护盾的加持，在刷怪和爬塔（镇魔塔）上比较舒服，在前期的对抗上较体修有优势些。</p>\n<p>体修方向：体修近战爆发单体优势，在打boss和PVP的对抗上有一定的优势。</p>\n<p>道宝们~无论是修法还是炼体，各自有各自的有点，没有哪一个特别弱，主要看自己喜欢哪一种风格哦~</p>\n<div class=\"note default simple\"><p>default 提示块标签</p>\n</div>\n<div class=\"note pink icon-padding modern\"><i class=\"note-icon fas fa-car-crash\"></i><p>小心开车 安全至上</p>\n</div>\n<div class=\"tip success\"><p>success</p>\n</div>\n<div class='checkbox red'><input type=\"checkbox\" />\n            <p>支持自定义颜色</p>\n            </div>\n<div class='checkbox green checked'><input type=\"checkbox\" checked=\"checked\"/>\n            <p>绿色 + 默认选中</p>\n            </div>\n<div class='checkbox yellow checked'><input type=\"checkbox\" checked=\"checked\"/>\n            <p>黄色 + 默认选中</p>\n            </div>\n<div class='checkbox'><input type=\"radio\" />\n            <p>纯文本测试</p>\n            </div>\n<div class='checkbox checked'><input type=\"radio\" checked=\"checked\"/>\n            <p>支持简单的 <a href=\"https://guides.github.com/features/mastering-markdown/\">markdown</a> 语法</p>\n            </div>\n<div class='checkbox red'><input type=\"radio\" />\n            <p>支持自定义颜色</p>\n            </div>\n<div class=\"tag link\"><a class=\"link-card\" title=\"糖果屋教程贴\" href=\"https://akilar.top/posts/615e2dec/\"><div class=\"left\"><img src=\"https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">糖果屋教程贴</p><p class=\"url\">https://akilar.top/posts/615e2dec/</p></div></a></div>\n<div class=\"btns circle grid5\">\n            <a class=\"button\" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a>\n<a class=\"button\" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a>\n<a class=\"button\" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a>\n<a class=\"button\" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a>\n<a class=\"button\" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a>\n          </div>\n<div class='poem'><div class='poem-title'>水调歌头</div><div class='poem-author'>苏轼</div><p>丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。<br>明月几时有？把酒问青天。<br>不知天上宫阙，今夕是何年？<br>我欲乘风归去，又恐琼楼玉宇，高处不胜寒。<br>起舞弄清影，何似在人间？</p>\n<p>转朱阁，低绮户，照无眠。<br>不应有恨，何事长向别时圆？<br>人有悲欢离合，月有阴晴圆缺，此事古难全。<br>但愿人长久，千里共婵娟。</p>\n</div>\n<div class=\"note blue no-icon flat\"><div class=\"timeline blue\"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>时间轴样式</p>\n</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-07-24 <a href=\"https://github.com/volantis-x/hexo-theme-volantis/releases\">2.6.6 -&gt; 3.0</a></p>\n</div></div><div class='timeline-item-content'><ol>\n<li>如果有 <code>hexo-lazyload-image</code> 插件，需要删除并重新安装最新版本，设置 <code>lazyload.isSPA: true</code>。</li>\n<li>2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <code>use_cdn: true</code> 则需要删除。</li>\n<li>2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</li>\n<li>2.x 版本的置顶 <code>top: true</code> 改为了 <code>pin: true</code>，并且同样适用于 <code>layout: page</code> 的页面。</li>\n<li>如果使用了 <code>hexo-offline</code> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</li>\n</ol>\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-05-15 <a href=\"https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6\">2.6.3 -&gt; 2.6.6</a></p>\n</div></div><div class='timeline-item-content'><p>不需要额外处理。</p>\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-04-20 <a href=\"https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3\">2.6.2 -&gt; 2.6.3</a></p>\n</div></div><div class='timeline-item-content'><ol>\n<li>全局搜索 <code>seotitle</code> 并替换为 <code>seo_title</code>。</li>\n<li>group 组件的索引规则有变，使用 group 组件的文章内，<code>group: group_name</code> 对应的组件名必须是 <code>group_name</code>。</li>\n<li>group 组件的列表名优先显示文章的 <code>short_title</code> 其次是 <code>title</code>。</li>\n</ol>\n</div></div></div>\n</div>","site":{"data":{}},"cover_type":"img","excerpt":"","more":"<h2 id=\"法修和体修\"><a href=\"#法修和体修\" class=\"headerlink\" title=\"法修和体修\"></a>法修和体修</h2><p>法修方向：法修远程且偏向群攻，因为有法修护盾的加持，在刷怪和爬塔（镇魔塔）上比较舒服，在前期的对抗上较体修有优势些。</p>\n<p>体修方向：体修近战爆发单体优势，在打boss和PVP的对抗上有一定的优势。</p>\n<p>道宝们~无论是修法还是炼体，各自有各自的有点，没有哪一个特别弱，主要看自己喜欢哪一种风格哦~</p>\n<div class=\"note default simple\"><p>default 提示块标签</p>\n</div>\n<div class=\"note pink icon-padding modern\"><i class=\"note-icon fas fa-car-crash\"></i><p>小心开车 安全至上</p>\n</div>\n<div class=\"tip success\"><p>success</p>\n</div>\n<div class='checkbox red'><input type=\"checkbox\" />\n            <p>支持自定义颜色</p>\n            </div>\n<div class='checkbox green checked'><input type=\"checkbox\" checked=\"checked\"/>\n            <p>绿色 + 默认选中</p>\n            </div>\n<div class='checkbox yellow checked'><input type=\"checkbox\" checked=\"checked\"/>\n            <p>黄色 + 默认选中</p>\n            </div>\n<div class='checkbox'><input type=\"radio\" />\n            <p>纯文本测试</p>\n            </div>\n<div class='checkbox checked'><input type=\"radio\" checked=\"checked\"/>\n            <p>支持简单的 <a href=\"https://guides.github.com/features/mastering-markdown/\">markdown</a> 语法</p>\n            </div>\n<div class='checkbox red'><input type=\"radio\" />\n            <p>支持自定义颜色</p>\n            </div>\n<div class=\"tag link\"><a class=\"link-card\" title=\"糖果屋教程贴\" href=\"https://akilar.top/posts/615e2dec/\"><div class=\"left\"><img src=\"https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">糖果屋教程贴</p><p class=\"url\">https://akilar.top/posts/615e2dec/</p></div></a></div>\n<div class=\"btns circle grid5\">\n            <a class=\"button\" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a>\n<a class=\"button\" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a>\n<a class=\"button\" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a>\n<a class=\"button\" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a>\n<a class=\"button\" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a>\n          </div>\n<div class='poem'><div class='poem-title'>水调歌头</div><div class='poem-author'>苏轼</div><p>丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。<br>明月几时有？把酒问青天。<br>不知天上宫阙，今夕是何年？<br>我欲乘风归去，又恐琼楼玉宇，高处不胜寒。<br>起舞弄清影，何似在人间？</p>\n<p>转朱阁，低绮户，照无眠。<br>不应有恨，何事长向别时圆？<br>人有悲欢离合，月有阴晴圆缺，此事古难全。<br>但愿人长久，千里共婵娟。</p>\n</div>\n<div class=\"note blue no-icon flat\"><div class=\"timeline blue\"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>时间轴样式</p>\n</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-07-24 <a href=\"https://github.com/volantis-x/hexo-theme-volantis/releases\">2.6.6 -&gt; 3.0</a></p>\n</div></div><div class='timeline-item-content'><ol>\n<li>如果有 <code>hexo-lazyload-image</code> 插件，需要删除并重新安装最新版本，设置 <code>lazyload.isSPA: true</code>。</li>\n<li>2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <code>use_cdn: true</code> 则需要删除。</li>\n<li>2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</li>\n<li>2.x 版本的置顶 <code>top: true</code> 改为了 <code>pin: true</code>，并且同样适用于 <code>layout: page</code> 的页面。</li>\n<li>如果使用了 <code>hexo-offline</code> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</li>\n</ol>\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-05-15 <a href=\"https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6\">2.6.3 -&gt; 2.6.6</a></p>\n</div></div><div class='timeline-item-content'><p>不需要额外处理。</p>\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-04-20 <a href=\"https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3\">2.6.2 -&gt; 2.6.3</a></p>\n</div></div><div class='timeline-item-content'><ol>\n<li>全局搜索 <code>seotitle</code> 并替换为 <code>seo_title</code>。</li>\n<li>group 组件的索引规则有变，使用 group 组件的文章内，<code>group: group_name</code> 对应的组件名必须是 <code>group_name</code>。</li>\n<li>group 组件的列表名优先显示文章的 <code>short_title</code> 其次是 <code>title</code>。</li>\n</ol>\n</div></div></div>\n</div>"},{"title":"模板","_content":"\n# 模板\n\n## MarkDown模板\n\n### Front Matter模板\n\n[基于Hexo和Butterfly创建个人技术博客，(10) 使用Butterfly的Tags Plugin插件增强博客文章内容和视觉表现力_hexo+butterfly创建分类目录-CSDN博客](https://blog.csdn.net/liudonglovehemin/article/details/131095922)\n\n```\ntitle: \nauthor: \ndata: 2024-03-18\ntags: \ncategories: \ndescription:\ncover: \ntop_img:\ncomments: \nkeywords: \naside: \ntoc: \nswiper_index: 2\n\n\ntitle: 文章标题\nauthor: 作者名\ndata: 2024-03-18\nupdated: 更新日期\ntags: 标签\ncategories: 分类\nreward: 打赏（true/false）\ndescription: 描述\ncover: 封面\ntop_img: 顶部图片\ncomments: 评论（true/flase）\nkeywords: 关键字\naside: 侧边栏显示\ntoc: 文章目录\nswiper_index: 优先顺序\n\ntype : 页面类型\n\n\n```\n\n### MarkDown语法\n\n#### Markdown基本语法\n\n#### butterfly专用标签外挂\n\n##### 分栏\n\n{% tabs test %}\n<!-- tab 1-->\nThis is Tab 1\n<!-- endtab -->\n\n<!-- tab 2-->\n**This is Tab 2.**\n<!-- endtab -->\n\n<!-- tab -->\n**This is Tab 3.**\n<!-- endtab -->\n{% endtabs %}\n\n##### 提示块标签\n\n```\n{% note default simple %}default 提示块标签{% endnote %}\n```\n\n{% note default simple %}default 提示块标签{% endnote %}\n\n\n\n```\n{% note pink 'fas fa-car-crash' modern %}小心开车 安全至上{% endnote %}\n```\n\n{% note pink 'fas fa-car-crash' modern %}小心开车 安全至上{% endnote %}\n\n\n\n\n\n\n\n\n\n\n\n```\n{% note default simple %}default 提示块标签{% endnote %}\n\n{% note pink 'fas fa-car-crash' modern %}小心开车 安全至上{% endnote %}\n{% tip success %}success{% endtip %}\n\n{% checkbox red, 支持自定义颜色 %}\n{% checkbox green checked, 绿色 + 默认选中 %}\n{% checkbox yellow checked, 黄色 + 默认选中 %}\n\n{% radio 纯文本测试 %}\n{% radio checked, 支持简单的 [markdown](https://guides.github.com/features/mastering-markdown/) 语法 %}\n{% radio red, 支持自定义颜色 %}\n\n{% link 糖果屋教程贴, https://akilar.top/posts/615e2dec/, https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico %}\n\n{% btns circle grid5 %}\n{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}\n{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}\n{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}\n{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}\n{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}\n{% endbtns %}\n\n{% poem 水调歌头,苏轼 %}\n丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。\n明月几时有？把酒问青天。\n{% endpoem %}\n\n{% note blue no-icon %}\n\n{% timeline 时间轴样式,blue %}\n\n<!-- timeline 2020-07-24 [2.6.6 -> 3.0](https://github.com/volantis-x/hexo-theme-volantis/releases) -->\n\n1. 如果有 `hexo-lazyload-image` 插件，需要删除并重新安装最新版本，设置 `lazyload.isSPA: true`。\n2. 2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 `use_cdn: true` 则需要删除。\n3. 2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。\n4. 2.x 版本的置顶 `top: true` 改为了 `pin: true`，并且同样适用于 `layout: page` 的页面。\n5. 如果使用了 `hexo-offline` 插件，建议卸载，3.0 版本默认开启了 pjax 服务。\n\n<!-- endtimeline -->\n\n<!-- timeline 2020-05-15 [2.6.3 -> 2.6.6](https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6) -->\n\n不需要额外处理。\n\n<!-- endtimeline -->\n\n<!-- timeline 2020-04-20 [2.6.2 -> 2.6.3](https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3) -->\n\n1. 全局搜索 `seotitle` 并替换为 `seo_title`。\n2. group 组件的索引规则有变，使用 group 组件的文章内，`group: group_name` 对应的组件名必须是 `group_name`。\n3. group 组件的列表名优先显示文章的 `short_title` 其次是 `title`。\n\n<!-- endtimeline -->\n\n<div class=\"gallery-group-main\">\n{% galleryGroup 宗门合影 2023-10-23 '/gallery/MC/' https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202310261501300.jpg %}\n</div>\n\n\n{% endtimeline %}\n\n{% endnote %}\n```\n\n","source":"_posts/模板.md","raw":"---\ntitle: 模板\n---\n\n# 模板\n\n## MarkDown模板\n\n### Front Matter模板\n\n[基于Hexo和Butterfly创建个人技术博客，(10) 使用Butterfly的Tags Plugin插件增强博客文章内容和视觉表现力_hexo+butterfly创建分类目录-CSDN博客](https://blog.csdn.net/liudonglovehemin/article/details/131095922)\n\n```\ntitle: \nauthor: \ndata: 2024-03-18\ntags: \ncategories: \ndescription:\ncover: \ntop_img:\ncomments: \nkeywords: \naside: \ntoc: \nswiper_index: 2\n\n\ntitle: 文章标题\nauthor: 作者名\ndata: 2024-03-18\nupdated: 更新日期\ntags: 标签\ncategories: 分类\nreward: 打赏（true/false）\ndescription: 描述\ncover: 封面\ntop_img: 顶部图片\ncomments: 评论（true/flase）\nkeywords: 关键字\naside: 侧边栏显示\ntoc: 文章目录\nswiper_index: 优先顺序\n\ntype : 页面类型\n\n\n```\n\n### MarkDown语法\n\n#### Markdown基本语法\n\n#### butterfly专用标签外挂\n\n##### 分栏\n\n{% tabs test %}\n<!-- tab 1-->\nThis is Tab 1\n<!-- endtab -->\n\n<!-- tab 2-->\n**This is Tab 2.**\n<!-- endtab -->\n\n<!-- tab -->\n**This is Tab 3.**\n<!-- endtab -->\n{% endtabs %}\n\n##### 提示块标签\n\n```\n{% note default simple %}default 提示块标签{% endnote %}\n```\n\n{% note default simple %}default 提示块标签{% endnote %}\n\n\n\n```\n{% note pink 'fas fa-car-crash' modern %}小心开车 安全至上{% endnote %}\n```\n\n{% note pink 'fas fa-car-crash' modern %}小心开车 安全至上{% endnote %}\n\n\n\n\n\n\n\n\n\n\n\n```\n{% note default simple %}default 提示块标签{% endnote %}\n\n{% note pink 'fas fa-car-crash' modern %}小心开车 安全至上{% endnote %}\n{% tip success %}success{% endtip %}\n\n{% checkbox red, 支持自定义颜色 %}\n{% checkbox green checked, 绿色 + 默认选中 %}\n{% checkbox yellow checked, 黄色 + 默认选中 %}\n\n{% radio 纯文本测试 %}\n{% radio checked, 支持简单的 [markdown](https://guides.github.com/features/mastering-markdown/) 语法 %}\n{% radio red, 支持自定义颜色 %}\n\n{% link 糖果屋教程贴, https://akilar.top/posts/615e2dec/, https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico %}\n\n{% btns circle grid5 %}\n{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}\n{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}\n{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}\n{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}\n{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}\n{% endbtns %}\n\n{% poem 水调歌头,苏轼 %}\n丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。\n明月几时有？把酒问青天。\n{% endpoem %}\n\n{% note blue no-icon %}\n\n{% timeline 时间轴样式,blue %}\n\n<!-- timeline 2020-07-24 [2.6.6 -> 3.0](https://github.com/volantis-x/hexo-theme-volantis/releases) -->\n\n1. 如果有 `hexo-lazyload-image` 插件，需要删除并重新安装最新版本，设置 `lazyload.isSPA: true`。\n2. 2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 `use_cdn: true` 则需要删除。\n3. 2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。\n4. 2.x 版本的置顶 `top: true` 改为了 `pin: true`，并且同样适用于 `layout: page` 的页面。\n5. 如果使用了 `hexo-offline` 插件，建议卸载，3.0 版本默认开启了 pjax 服务。\n\n<!-- endtimeline -->\n\n<!-- timeline 2020-05-15 [2.6.3 -> 2.6.6](https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6) -->\n\n不需要额外处理。\n\n<!-- endtimeline -->\n\n<!-- timeline 2020-04-20 [2.6.2 -> 2.6.3](https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3) -->\n\n1. 全局搜索 `seotitle` 并替换为 `seo_title`。\n2. group 组件的索引规则有变，使用 group 组件的文章内，`group: group_name` 对应的组件名必须是 `group_name`。\n3. group 组件的列表名优先显示文章的 `short_title` 其次是 `title`。\n\n<!-- endtimeline -->\n\n<div class=\"gallery-group-main\">\n{% galleryGroup 宗门合影 2023-10-23 '/gallery/MC/' https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202310261501300.jpg %}\n</div>\n\n\n{% endtimeline %}\n\n{% endnote %}\n```\n\n","slug":"模板","published":1,"date":"2024-03-19T02:05:38.168Z","updated":"2024-03-19T02:05:38.168Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cltxxetav000j6cdsevj42a59","content":"<h1 id=\"模板\"><a href=\"#模板\" class=\"headerlink\" title=\"模板\"></a>模板</h1><h2 id=\"MarkDown模板\"><a href=\"#MarkDown模板\" class=\"headerlink\" title=\"MarkDown模板\"></a>MarkDown模板</h2><h3 id=\"Front-Matter模板\"><a href=\"#Front-Matter模板\" class=\"headerlink\" title=\"Front Matter模板\"></a>Front Matter模板</h3><p><a href=\"https://blog.csdn.net/liudonglovehemin/article/details/131095922\">基于Hexo和Butterfly创建个人技术博客，(10) 使用Butterfly的Tags Plugin插件增强博客文章内容和视觉表现力_hexo+butterfly创建分类目录-CSDN博客</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: </span><br><span class=\"line\">author: </span><br><span class=\"line\">data: 2024-03-18</span><br><span class=\"line\">tags: </span><br><span class=\"line\">categories: </span><br><span class=\"line\">description:</span><br><span class=\"line\">cover: </span><br><span class=\"line\">top_img:</span><br><span class=\"line\">comments: </span><br><span class=\"line\">keywords: </span><br><span class=\"line\">aside: </span><br><span class=\"line\">toc: </span><br><span class=\"line\">swiper_index: 2</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">title: 文章标题</span><br><span class=\"line\">author: 作者名</span><br><span class=\"line\">data: 2024-03-18</span><br><span class=\"line\">updated: 更新日期</span><br><span class=\"line\">tags: 标签</span><br><span class=\"line\">categories: 分类</span><br><span class=\"line\">reward: 打赏（true/false）</span><br><span class=\"line\">description: 描述</span><br><span class=\"line\">cover: 封面</span><br><span class=\"line\">top_img: 顶部图片</span><br><span class=\"line\">comments: 评论（true/flase）</span><br><span class=\"line\">keywords: 关键字</span><br><span class=\"line\">aside: 侧边栏显示</span><br><span class=\"line\">toc: 文章目录</span><br><span class=\"line\">swiper_index: 优先顺序</span><br><span class=\"line\"></span><br><span class=\"line\">type : 页面类型</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"MarkDown语法\"><a href=\"#MarkDown语法\" class=\"headerlink\" title=\"MarkDown语法\"></a>MarkDown语法</h3><h4 id=\"Markdown基本语法\"><a href=\"#Markdown基本语法\" class=\"headerlink\" title=\"Markdown基本语法\"></a>Markdown基本语法</h4><h4 id=\"butterfly专用标签外挂\"><a href=\"#butterfly专用标签外挂\" class=\"headerlink\" title=\"butterfly专用标签外挂\"></a>butterfly专用标签外挂</h4><h5 id=\"分栏\"><a href=\"#分栏\" class=\"headerlink\" title=\"分栏\"></a>分栏</h5><div class=\"tabs\" id=\"test\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"test-1\">1</button><button type=\"button\" class=\"tab \" data-href=\"test-2\">2</button><button type=\"button\" class=\"tab \" data-href=\"test-3\">test 3</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"test-1\"><p>This is Tab 1</p></div><div class=\"tab-item-content\" id=\"test-2\"><p><strong>This is Tab 2.</strong></p></div><div class=\"tab-item-content\" id=\"test-3\"><p><strong>This is Tab 3.</strong></p></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h5 id=\"提示块标签\"><a href=\"#提示块标签\" class=\"headerlink\" title=\"提示块标签\"></a>提示块标签</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% note default simple %&#125;default 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>\n<div class=\"note default simple\"><p>default 提示块标签</p>\n</div>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% note pink &#x27;fas fa-car-crash&#x27; modern %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>\n<div class=\"note pink icon-padding modern\"><i class=\"note-icon fas fa-car-crash\"></i><p>小心开车 安全至上</p>\n</div>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% note default simple %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% note pink &#x27;fas fa-car-crash&#x27; modern %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class=\"line\">&#123;% tip success %&#125;success&#123;% endtip %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% checkbox red, 支持自定义颜色 %&#125;</span><br><span class=\"line\">&#123;% checkbox green checked, 绿色 + 默认选中 %&#125;</span><br><span class=\"line\">&#123;% checkbox yellow checked, 黄色 + 默认选中 %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% radio 纯文本测试 %&#125;</span><br><span class=\"line\">&#123;% radio checked, 支持简单的 [markdown](https://guides.github.com/features/mastering-markdown/) 语法 %&#125;</span><br><span class=\"line\">&#123;% radio red, 支持自定义颜色 %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% link 糖果屋教程贴, https://akilar.top/posts/615e2dec/, https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% btns circle grid5 %&#125;</span><br><span class=\"line\">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class=\"line\">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class=\"line\">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class=\"line\">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class=\"line\">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class=\"line\">&#123;% endbtns %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% poem 水调歌头,苏轼 %&#125;</span><br><span class=\"line\">丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。</span><br><span class=\"line\">明月几时有？把酒问青天。</span><br><span class=\"line\">&#123;% endpoem %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% note blue no-icon %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% timeline 时间轴样式,blue %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- timeline 2020-07-24 [2.6.6 -&gt; 3.0](https://github.com/volantis-x/hexo-theme-volantis/releases) --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">1. 如果有 `hexo-lazyload-image` 插件，需要删除并重新安装最新版本，设置 `lazyload.isSPA: true`。</span><br><span class=\"line\">2. 2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 `use_cdn: true` 则需要删除。</span><br><span class=\"line\">3. 2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</span><br><span class=\"line\">4. 2.x 版本的置顶 `top: true` 改为了 `pin: true`，并且同样适用于 `layout: page` 的页面。</span><br><span class=\"line\">5. 如果使用了 `hexo-offline` 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- endtimeline --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- timeline 2020-05-15 [2.6.3 -&gt; 2.6.6](https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6) --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">不需要额外处理。</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- endtimeline --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- timeline 2020-04-20 [2.6.2 -&gt; 2.6.3](https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3) --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">1. 全局搜索 `seotitle` 并替换为 `seo_title`。</span><br><span class=\"line\">2. group 组件的索引规则有变，使用 group 组件的文章内，`group: group_name` 对应的组件名必须是 `group_name`。</span><br><span class=\"line\">3. group 组件的列表名优先显示文章的 `short_title` 其次是 `title`。</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- endtimeline --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;div class=&quot;gallery-group-main&quot;&gt;</span><br><span class=\"line\">&#123;% galleryGroup 宗门合影 2023-10-23 &#x27;/gallery/MC/&#x27; https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202310261501300.jpg %&#125;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% endtimeline %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"模板\"><a href=\"#模板\" class=\"headerlink\" title=\"模板\"></a>模板</h1><h2 id=\"MarkDown模板\"><a href=\"#MarkDown模板\" class=\"headerlink\" title=\"MarkDown模板\"></a>MarkDown模板</h2><h3 id=\"Front-Matter模板\"><a href=\"#Front-Matter模板\" class=\"headerlink\" title=\"Front Matter模板\"></a>Front Matter模板</h3><p><a href=\"https://blog.csdn.net/liudonglovehemin/article/details/131095922\">基于Hexo和Butterfly创建个人技术博客，(10) 使用Butterfly的Tags Plugin插件增强博客文章内容和视觉表现力_hexo+butterfly创建分类目录-CSDN博客</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: </span><br><span class=\"line\">author: </span><br><span class=\"line\">data: 2024-03-18</span><br><span class=\"line\">tags: </span><br><span class=\"line\">categories: </span><br><span class=\"line\">description:</span><br><span class=\"line\">cover: </span><br><span class=\"line\">top_img:</span><br><span class=\"line\">comments: </span><br><span class=\"line\">keywords: </span><br><span class=\"line\">aside: </span><br><span class=\"line\">toc: </span><br><span class=\"line\">swiper_index: 2</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">title: 文章标题</span><br><span class=\"line\">author: 作者名</span><br><span class=\"line\">data: 2024-03-18</span><br><span class=\"line\">updated: 更新日期</span><br><span class=\"line\">tags: 标签</span><br><span class=\"line\">categories: 分类</span><br><span class=\"line\">reward: 打赏（true/false）</span><br><span class=\"line\">description: 描述</span><br><span class=\"line\">cover: 封面</span><br><span class=\"line\">top_img: 顶部图片</span><br><span class=\"line\">comments: 评论（true/flase）</span><br><span class=\"line\">keywords: 关键字</span><br><span class=\"line\">aside: 侧边栏显示</span><br><span class=\"line\">toc: 文章目录</span><br><span class=\"line\">swiper_index: 优先顺序</span><br><span class=\"line\"></span><br><span class=\"line\">type : 页面类型</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"MarkDown语法\"><a href=\"#MarkDown语法\" class=\"headerlink\" title=\"MarkDown语法\"></a>MarkDown语法</h3><h4 id=\"Markdown基本语法\"><a href=\"#Markdown基本语法\" class=\"headerlink\" title=\"Markdown基本语法\"></a>Markdown基本语法</h4><h4 id=\"butterfly专用标签外挂\"><a href=\"#butterfly专用标签外挂\" class=\"headerlink\" title=\"butterfly专用标签外挂\"></a>butterfly专用标签外挂</h4><h5 id=\"分栏\"><a href=\"#分栏\" class=\"headerlink\" title=\"分栏\"></a>分栏</h5><div class=\"tabs\" id=\"test\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"test-1\">1</button><button type=\"button\" class=\"tab \" data-href=\"test-2\">2</button><button type=\"button\" class=\"tab \" data-href=\"test-3\">test 3</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"test-1\"><p>This is Tab 1</p></div><div class=\"tab-item-content\" id=\"test-2\"><p><strong>This is Tab 2.</strong></p></div><div class=\"tab-item-content\" id=\"test-3\"><p><strong>This is Tab 3.</strong></p></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h5 id=\"提示块标签\"><a href=\"#提示块标签\" class=\"headerlink\" title=\"提示块标签\"></a>提示块标签</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% note default simple %&#125;default 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>\n<div class=\"note default simple\"><p>default 提示块标签</p>\n</div>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% note pink &#x27;fas fa-car-crash&#x27; modern %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>\n<div class=\"note pink icon-padding modern\"><i class=\"note-icon fas fa-car-crash\"></i><p>小心开车 安全至上</p>\n</div>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% note default simple %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% note pink &#x27;fas fa-car-crash&#x27; modern %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class=\"line\">&#123;% tip success %&#125;success&#123;% endtip %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% checkbox red, 支持自定义颜色 %&#125;</span><br><span class=\"line\">&#123;% checkbox green checked, 绿色 + 默认选中 %&#125;</span><br><span class=\"line\">&#123;% checkbox yellow checked, 黄色 + 默认选中 %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% radio 纯文本测试 %&#125;</span><br><span class=\"line\">&#123;% radio checked, 支持简单的 [markdown](https://guides.github.com/features/mastering-markdown/) 语法 %&#125;</span><br><span class=\"line\">&#123;% radio red, 支持自定义颜色 %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% link 糖果屋教程贴, https://akilar.top/posts/615e2dec/, https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% btns circle grid5 %&#125;</span><br><span class=\"line\">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class=\"line\">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class=\"line\">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class=\"line\">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class=\"line\">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class=\"line\">&#123;% endbtns %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% poem 水调歌头,苏轼 %&#125;</span><br><span class=\"line\">丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。</span><br><span class=\"line\">明月几时有？把酒问青天。</span><br><span class=\"line\">&#123;% endpoem %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% note blue no-icon %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% timeline 时间轴样式,blue %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- timeline 2020-07-24 [2.6.6 -&gt; 3.0](https://github.com/volantis-x/hexo-theme-volantis/releases) --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">1. 如果有 `hexo-lazyload-image` 插件，需要删除并重新安装最新版本，设置 `lazyload.isSPA: true`。</span><br><span class=\"line\">2. 2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 `use_cdn: true` 则需要删除。</span><br><span class=\"line\">3. 2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</span><br><span class=\"line\">4. 2.x 版本的置顶 `top: true` 改为了 `pin: true`，并且同样适用于 `layout: page` 的页面。</span><br><span class=\"line\">5. 如果使用了 `hexo-offline` 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- endtimeline --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- timeline 2020-05-15 [2.6.3 -&gt; 2.6.6](https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6) --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">不需要额外处理。</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- endtimeline --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- timeline 2020-04-20 [2.6.2 -&gt; 2.6.3](https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3) --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">1. 全局搜索 `seotitle` 并替换为 `seo_title`。</span><br><span class=\"line\">2. group 组件的索引规则有变，使用 group 组件的文章内，`group: group_name` 对应的组件名必须是 `group_name`。</span><br><span class=\"line\">3. group 组件的列表名优先显示文章的 `short_title` 其次是 `title`。</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- endtimeline --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;div class=&quot;gallery-group-main&quot;&gt;</span><br><span class=\"line\">&#123;% galleryGroup 宗门合影 2023-10-23 &#x27;/gallery/MC/&#x27; https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202310261501300.jpg %&#125;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% endtimeline %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}