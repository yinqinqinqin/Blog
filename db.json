{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/butterfly/source/css/center-simple.css","path":"css/center-simple.css","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/progress_bar.css","path":"css/progress_bar.css","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/1.jpg","path":"img/1.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/Head_Photo.png","path":"img/Head_Photo.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/background.jpg","path":"img/background.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.png.bak","path":"img/favicon.png.bak","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/_data/creativity.yml","hash":"85e1e25a3dcc6a21743f415494be9fda55b71c53","modified":1720686523586},{"_id":"source/_data/reward.yml","hash":"ae4e7556dd50a130c0a0c94a6ed58a596319e9d8","modified":1720686516555},{"_id":"source/_posts/ASE.md","hash":"6098077bbc0861589e104a01fd9000552a5e8585","modified":1720677847408},{"_id":"source/_posts/C++++.md","hash":"45ce6bdbea7c2134d68df653745341e7618f06fe","modified":1720677846586},{"_id":"source/_posts/CGshaderlab.md","hash":"41958e47d515c775ab0e73b25f827532979a37c6","modified":1720677846491},{"_id":"source/_posts/HLSL.md","hash":"51cd109799e01ce7ca866dd7919212318d37bd54","modified":1720677846618},{"_id":"source/_posts/MarkDown.md","hash":"ad738c48f6899c598624b50d3f6b0e1ebeb4a185","modified":1720677846721},{"_id":"source/_posts/Trick.md","hash":"2b0b6ba89f191bad902835e4658f98cda149464b","modified":1720677846751},{"_id":"source/_posts/UE.md","hash":"a7ada2c4cfafcc572d4713978cf14e4a919dfa5a","modified":1720677846852},{"_id":"source/_posts/Unity.md","hash":"77b360ac1b3a78dc07559c8c30246332449f0d27","modified":1720677846881},{"_id":"source/_posts/Unity—HDRP--1：Process（HDRP project setting）.md","hash":"df87075f6b921e70ad5e9a6fa7bc11f28a567d2d","modified":1720686662928},{"_id":"source/_posts/Unity—HDRP--2：HDRP配置文件和Volume框架.md","hash":"1aa580eb13d917a3e93ca49ab9164785b9949645","modified":1720677847013},{"_id":"source/_posts/Unity—HDRP--3：HDRP Lighting System.md","hash":"8483e02a0ae189158aa05a5a3c03e6be193efb23","modified":1720677847115},{"_id":"source/_posts/Unity—HDRP--4：LightMapping（光照烘培）.md","hash":"8df433f91556a007798d1c8f9d9bdd132ef344fd","modified":1720677847143},{"_id":"source/_posts/制作博客.md","hash":"465952a4b084228739e091497cb83f83df8ad97d","modified":1720677847274},{"_id":"source/_posts/问题汇总.md","hash":"2042ac5a67663de5d978a17e3ce75e2c0e5876ef","modified":1720677847245},{"_id":"source/about/index.md","hash":"dd548ec4236cb083de0d38dcb32a73b2934322d5","modified":1720683976456},{"_id":"source/categories/index.md","hash":"53058204aa79593c13d35a59914f6be1c6b65666","modified":1720676852453},{"_id":"source/css/custom.css","hash":"954898c429b9b3844803b2bb8ed2c7a73ad280f0","modified":1710822106369},{"_id":"source/css/progress_bar.css","hash":"86700cfffe5df3be83db0b4bd5f50fe44ef96988","modified":1720689514460},{"_id":"source/css/runtime.css","hash":"19eb1c401d9a18832e93612eb7af286710562695","modified":1720687324599},{"_id":"source/js/cat.js","hash":"17a5a59aeb7283c3efabe84fe97338af53ef6e7e","modified":1707087933256},{"_id":"source/js/countup.js","hash":"89388b8b14405b13257da96356312a5f37f94841","modified":1720684742340},{"_id":"source/js/f12.js","hash":"6fb36778455582614dc8375c9b2ad5cb6567e0ef","modified":1707088522032},{"_id":"source/js/light.js","hash":"0db401affe68d00d3db818669bbb83a981538c7e","modified":1707082939909},{"_id":"source/js/readPercent.js","hash":"fe71a3426b6650058c0660925fcddfff8bc21a16","modified":1707087641465},{"_id":"source/js/runtime.js","hash":"c1cd96621c1018499d723655eee630e049081595","modified":1710880694245},{"_id":"source/js/share.js","hash":"1b51e8d570bed15c3cdfe52ba1f6ef345ba37e22","modified":1707088192789},{"_id":"source/js/txmap.js","hash":"ee975b38a26478eb7b5425a2487a32f8d6ad2d2b","modified":1710837825093},{"_id":"source/tags/index.md","hash":"92204b4bd3e613b2d36c5595b1d1ecd11aacf2a8","modified":1720677309678},{"_id":"source/_posts/作品集.md","hash":"ea894b764684135411d1fd156b606348d1f638e2","modified":1720677847408},{"_id":"themes/butterfly/LICENSE","hash":"1128f8f91104ba9ef98d37eea6523a888dcfa5de","modified":1707080788238},{"_id":"themes/butterfly/README.md","hash":"4e01b47448d9f3a02afc04eef644e2321253f6f4","modified":1707080788238},{"_id":"themes/butterfly/README_CN.md","hash":"262fba7e30cc966b66e6b7aee99f295b15eba724","modified":1707080788239},{"_id":"themes/butterfly/_config.yml","hash":"a01656dbb0078d8f019b3fc02980dd8c20460383","modified":1710924694796},{"_id":"themes/butterfly/package.json","hash":"2807775d1b79a380b510530faf0735eeacd7a59f","modified":1707080788288},{"_id":"themes/butterfly/plugins.yml","hash":"9b7647f0abda10287f86f66ef81eedbb417459b7","modified":1707080788288},{"_id":"themes/butterfly/languages/default.yml","hash":"90a6dc361de67532437d819a55ec64945ca5404b","modified":1707080788241},{"_id":"themes/butterfly/languages/en.yml","hash":"af5603b1a888f167dc80be6d53a19437b5cf6bef","modified":1707080788241},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"589be31e55e5011ee556ebbcb9c8073b673b7ce4","modified":1710924996805},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"03629d1d13a7be09d4933aa5dc0dcbe45e79140c","modified":1707080788243},{"_id":"themes/butterfly/layout/archive.pug","hash":"bb32c9c476372de747dfa563b83f77d7a917a77d","modified":1707080788244},{"_id":"themes/butterfly/layout/category.pug","hash":"710708cfdb436bc875602abf096c919ccdf544db","modified":1707080788244},{"_id":"themes/butterfly/layout/index.pug","hash":"e1c3146834c16e6077406180858add0a8183875a","modified":1707080788285},{"_id":"themes/butterfly/layout/page.pug","hash":"30ed0c5da772c9ab5030c6ea49a03d5b1c748a4c","modified":1720684796057},{"_id":"themes/butterfly/layout/post.pug","hash":"fc9f45252d78fcd15e4a82bfd144401cba5b169a","modified":1707080788286},{"_id":"themes/butterfly/layout/tag.pug","hash":"0440f42569df2676273c026a92384fa7729bc4e9","modified":1707080788287},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"fc468a93a64c7a3e408fbac921c9f5a5a8f32027","modified":1707080788233},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/config.yml","hash":"7dfe7189ffeaebb6db13842237f8e124649bea3d","modified":1707080788234},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"996640605ed1e8e35182f0fd9a60a88783b24b03","modified":1707080788235},{"_id":"themes/butterfly/.github/workflows/publish.yml","hash":"05857c2f265246d8de00e31037f2720709540c09","modified":1707080788236},{"_id":"themes/butterfly/.github/workflows/stale.yml","hash":"ac62b989b5550c756e1986fcc68f243170705383","modified":1707080788237},{"_id":"themes/butterfly/layout/includes/404.pug","hash":"cb49f737aca272ccfeb62880bd651eccee72a129","modified":1707080788246},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"aca0ec7ef69b21d1f242c62fed389468a0f0e1a2","modified":1707080788246},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"d4bb282c3d150f2992aaaf892cbdb1112d5b1520","modified":1707080788247},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"6bffbfea80a79fa22b85f5694910e5bbd0ab3cf1","modified":1707086968494},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"91c71f7f04373ce6fb17dbfba798d717d90dff78","modified":1707088484690},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"4c85de4dea4dca4e5088097a79bd6d7009cbf8ef","modified":1707080788256},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"342b99267f23b3b690ca062cf7104fe54ad37a09","modified":1707088279681},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"9f0e9e039f304439007460fa0a7c8ac18e0ffd37","modified":1707080788259},{"_id":"themes/butterfly/scripts/events/404.js","hash":"83cd7f73225ccad123afbd526ce1834eb1eb6a6d","modified":1707080788290},{"_id":"themes/butterfly/scripts/events/cdn.js","hash":"21fb5aabe043486d095c4c8cce361ed85ba88a26","modified":1707080788291},{"_id":"themes/butterfly/scripts/events/comment.js","hash":"5351e0bc09e6b5b3f6d30f333a2520626a28ca3a","modified":1707080788292},{"_id":"themes/butterfly/scripts/events/init.js","hash":"428b94c7b9e83f7ea36227dee66bfe3c23aee4a8","modified":1707080788292},{"_id":"themes/butterfly/scripts/events/stylus.js","hash":"022b870ee8ad7ac05d1569268b61899d2f706221","modified":1707080788293},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"8ad9911b755cba13dde2cc055c3f857a6b0dd20e","modified":1707080788294},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"860f967ecf3c6a6ea785b560a7aae4d0757cd18a","modified":1707080788295},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"a8eef3f37428436554f58a2b6bac7c255fbdf38d","modified":1707080788296},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"2ec66513d5322f185d2071acc052978ba9415a8e","modified":1707080788297},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"96f861151e3b889ef0ffe78821d489ad2625ee43","modified":1707080788298},{"_id":"themes/butterfly/scripts/helpers/findArchiveLength.js","hash":"7caf549810f971c34196fb9deac2d992545bdff9","modified":1707080788299},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"d5c7e61257b08a9648404f6f48ce4d471cd5fa55","modified":1707080788300},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"e2a8a09bfe47da26eab242a36f516e6c452c799a","modified":1707080788300},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"4677be4175da6800c0b3b8c1614e593f73df8831","modified":1707080788301},{"_id":"themes/butterfly/scripts/helpers/series.js","hash":"821e973d41f7b3b64cde91e0e836ea49c43e3c06","modified":1707080788301},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"93229d44b35b9da92e647b89d6d3087085974a29","modified":1707080788301},{"_id":"themes/butterfly/scripts/tag/flink.js","hash":"ab62919fa567b95fbe14889517abda649991b1ee","modified":1707080788302},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"418684993a3a3a2ac534257a2d9ecbcead6808c1","modified":1707080788302},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"365db87ddfc582bf8c15cb440c48bed95106e4b1","modified":1707080788302},{"_id":"themes/butterfly/scripts/tag/inlineImg.js","hash":"512c68a22ae4a58d6a6b24b368a0c00c2ccb4fcb","modified":1707080788303},{"_id":"themes/butterfly/scripts/tag/label.js","hash":"19773218877281ccffed921431e87148413a7c20","modified":1707080788304},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"5c2a07df5874b5377540884e4da14dd21489378f","modified":1707080788304},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"1acefc59ead75ebd8cafee36efc7da4fa426d088","modified":1707080788305},{"_id":"themes/butterfly/scripts/tag/score.js","hash":"5cb273e95846874e3a58074074c501df23c5e912","modified":1707080788305},{"_id":"themes/butterfly/scripts/tag/series.js","hash":"830b1d592278b9f676df0cf9a91b1eeda2456aec","modified":1707080788305},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"ffc62222f8d7b4d44c1c0726c8a08824a2201039","modified":1707080788305},{"_id":"themes/butterfly/scripts/tag/timeline.js","hash":"4526c75e5bf84609d67e92b6af3524bcb278e852","modified":1707080788306},{"_id":"themes/butterfly/source/css/center-simple.css","hash":"42f3ecce9cb5248e509a49521f69012b021c4791","modified":1707080788319},{"_id":"themes/butterfly/source/css/index.styl","hash":"c05336731cac2486b8cf1744536b93992663c9cf","modified":1720685245004},{"_id":"themes/butterfly/source/css/progress_bar.css","hash":"896c0db47cbd2a77999c10573d258f9fb9876455","modified":1720688214826},{"_id":"themes/butterfly/source/css/var.styl","hash":"152b6bd4b6285165541a71f5a1c913f8ee6a602b","modified":1707087424237},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1707080788321},{"_id":"themes/butterfly/source/img/favicon.png","hash":"51bcd70efd9dff6c640ea1fe8f62360c9c503fe2","modified":1707080788323},{"_id":"themes/butterfly/source/img/favicon.png.bak","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1707080788324},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1707080788325},{"_id":"themes/butterfly/source/js/main.js","hash":"4b4f882a393cbf5b3dfc2b218608a09905f3e3db","modified":1707080788326},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"f8d2e3f31468991a7f5171cbfdb157dfb86d3372","modified":1707080788329},{"_id":"themes/butterfly/source/js/utils.js","hash":"8e6b48d294e7aeaba8ff6348c43b2271cf865547","modified":1707080788329},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"8aa8d799aedbfd811195b84a451bc4b6e2647c12","modified":1707080788247},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"67e1c3b48e4ca7ee0b2c76d3ca7476b9883cf105","modified":1707080788248},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"ffb13539d343498b7d7093c546831a8bde90b6a2","modified":1707080788248},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"7df90c8e432e33716517ab918b0a125bc284041b","modified":1707080788249},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"95a37e92b39c44bcbea4be7e29ddb3921c5b8220","modified":1707080788250},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"5208fe1e75d97a05fd9bdd6cc53c59d8b741b94b","modified":1707080788251},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"3d492cfe645d37c94d30512e0b230b0a09913148","modified":1707080788251},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"e2e8d681f183f00ce5ee239c42d2e36b3744daad","modified":1707080788251},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"944d6e9dd50df3395f3a2c7ad9db667d50dea4ed","modified":1707080788252},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"31346a210f4f9912c5b29f51d8f659913492f388","modified":1707080788252},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"f61659aa457d1a2d1baa3a13157996cfac4d6609","modified":1707080788252},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"a5c7d362ae63474c1a4e3eb5cd09804b3684e984","modified":1707080788252},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"5de9a82032cdad1db3b868b797460921cd775fc2","modified":1707080788253},{"_id":"themes/butterfly/layout/includes/loading/fullpage-loading.pug","hash":"013d856118a40dacf657776896f731445df9f1c5","modified":1720687001295},{"_id":"themes/butterfly/layout/includes/loading/index.pug","hash":"f86b0c45874ae1335ab575c29d4f9c8ea09ab92a","modified":1720687011453},{"_id":"themes/butterfly/layout/includes/loading/pace.pug","hash":"6ab4e301c92586505d6cddce1b3ad23b7c79010d","modified":1707080788254},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"90554c2ca5ba946f4c02e1bc5fe2859cef1b1594","modified":1707080788254},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"50d1b08367f709e5416140043933e79cd8d77559","modified":1707080788254},{"_id":"themes/butterfly/layout/includes/page/about.pug","hash":"26f38f386ece708bfaefccb809d01429d1545b40","modified":1720685648012},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1707080788255},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"12c65c174d26a41821df9bad26cdf1087ec5b0ca","modified":1707080788255},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"f9ce83978b217a71a2eb8761dc14b09866faa3f4","modified":1707080788255},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"9621991359e22b14049346f1cf87bdedc94edf5a","modified":1707080788255},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"5574804fdea5edf7fd52aad2caf030614d5e7f2f","modified":1707080788257},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"a096ff8eb6b2a22395be881f827ff2a686ba5596","modified":1707080788258},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"c7cfade2b160380432c47eef4cd62273b6508c58","modified":1707080788260},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"1d39670ee6225f85f5c53bf5c84f3fd6e19290e8","modified":1707080788276},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"0f024e36b8116118233e10118714bde304e01e12","modified":1707080788279},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"12e57491e94fa00d953bbda9db0b6d6169e2358c","modified":1707080788279},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"ffb9ea15a2b54423cd4cd441e2d061b8233e9b58","modified":1707080788279},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"8044b9c18b34b019ffe26b7383e7e80356b5e4b5","modified":1707080788281},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"60dc48a7b5d89c2a49123c3fc5893ab9c57dd225","modified":1707080788281},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"8e02e01ff7f7c6354041a6848d2d4c64150e8608","modified":1710965352671},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"86897010fe71503e239887fd8f6a4f5851737be9","modified":1707080788282},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"0a198d9615552d747cfc23ec89723b9d030f2367","modified":1707117586140},{"_id":"themes/butterfly/layout/includes/widget/card_bottom_self.pug","hash":"13dc8ce922e2e2332fe6ad5856ebb5dbf9ea4444","modified":1707080788282},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"d1a416d0a8a7916d0b1a41d73adc66f8c811e493","modified":1707080788282},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"7834bf7c711e739fd33cfcd0b53d151013b3d449","modified":1707080788282},{"_id":"themes/butterfly/layout/includes/widget/card_post_series.pug","hash":"3ec354778f6a4ac97fb64d5629c83b293ccceb5e","modified":1707080788283},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"3057a2f6f051355e35d3b205121af8735100eacf","modified":1707089913785},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"e5aac7b28ed4123d75797263c64e74ac547945bc","modified":1707080788283},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"eceb4420a64c720f0d2741e89d6229bbb3d87353","modified":1707080788283},{"_id":"themes/butterfly/layout/includes/widget/card_top_self.pug","hash":"ae67c6d4130a6c075058a9c1faea1648bcc6f83e","modified":1707080788284},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"35ce167c5a275211bfc1fa3d49adfde5b404d98f","modified":1707080788284},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"66f7a8b0cebc05c575ec3cb70b08d6854029d87a","modified":1707080788284},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"f19694a42dbe28eda4b39a1696e8fbcd277bc76c","modified":1707080788306},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"c8ff6ddd5bfe1190b7b8056b68ce41114fd79dcb","modified":1707080788307},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"4dcd468e4d11a0ac75406162678feffcd89fee00","modified":1707080788308},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"bcd384c8b2aa0390c9eb69ac1abbfd1240ce1da4","modified":1707080788309},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"fad650f88778b33a6358e38cf50dfafc0974d28f","modified":1707080788310},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"f9a5d3f1fc5ed0ed2ee4c1eaa58ed650d11ddebd","modified":1707080788310},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"134811b2d696f9ed2c0cd578f3886f1c60770c0a","modified":1707080788310},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"83a7a70eb0532ea9c4267939fe484af915fca01e","modified":1707080788310},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"029eebbdcb3c682780d1de629fa06858cbe9782b","modified":1707080788311},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"c8108b3d6550aa620faf3e00d13339acf920ac70","modified":1720689331743},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"fb9f78bfbb79579f1d752cb73fb6d25c8418e0fd","modified":1707080788311},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"f853075c1399be950107247b1fe79cdd086120e4","modified":1707080788311},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"d53de408cb27a2e704aba7f7402b7caebe0410d8","modified":1707080788312},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"d6cf26ffb8a0343eda1cde65b6b73b0ddbe8fcfc","modified":1707080788312},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"f845b9b4efdee750f70c023aab27432611f83059","modified":1707080788312},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"1ca53ee8c4a2dee23acba46c67e5a9f01c5d2eb5","modified":1707080788312},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"5556c9bf4f53a90cb9b4945cd76a8849bd67f3f3","modified":1707080788312},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"0db591a1f4ed5adcb8668a549bbee5c9d62682cf","modified":1707080788313},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"e549d24ad81a7d93326a509ff8dcfcc58c80729e","modified":1707080788313},{"_id":"themes/butterfly/source/css/_page/404.styl","hash":"50dbb9e6d98c71ffe16741b8c1b0c1b9771efd2b","modified":1707080788314},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"c9e98027f2dd730ce389c2047f62ebb748955fcf","modified":1707080788314},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"f01ee74948cedb44e53cd3bb1ef36b7d2778ede7","modified":1707080788314},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"4e320e16d49bc18085045937681f7331a1e243ca","modified":1707080788314},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"98d755b686ee833e9da10afaa40c4ec2bd66c19a","modified":1707080788315},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"d4ebc41b5c855dd75f47de7345d62f85ce7cf073","modified":1707080788315},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"580feb7e8b0822a1be48ac380f8c5c53b1523321","modified":1707080788315},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"649a054e73278b6724bd4dd9b94724791ec5c928","modified":1707080788315},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"20a3134e1302b62bfc881f4ec43f398267111f22","modified":1707080788316},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"a9bf2e1153a8486acd1ea8e0e528a07059ade17b","modified":1707080788316},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"45f0c32bdea117540f6b14ebac6450d7142bd710","modified":1707080788316},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"5cddbb5f4eae695a26685e415d821b523e0f17bf","modified":1707080788317},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"d76c38adf1d9c1279ef4241835667789f5b736e0","modified":1707080788317},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"ce489ca2e249e2a3cf71584e20d84bdb022e3475","modified":1707080788317},{"_id":"themes/butterfly/source/css/_tags/inlineImg.styl","hash":"df9d405c33a9a68946b530410f64096bcb72560c","modified":1707080788317},{"_id":"themes/butterfly/source/css/_tags/label.styl","hash":"66c59e193d794cdb02cca7bd1dc4aea5a19d7e84","modified":1707080788318},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"909bb5079b26b6ee68177919f522566503654058","modified":1707080788318},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"2d02e52b360f6e6cae47c293ae57ed78e2554663","modified":1707080788318},{"_id":"themes/butterfly/source/css/_tags/timeline.styl","hash":"f071156d439556e7463ed4bc61ceee87170d5d08","modified":1707080788318},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"2c18a1c9604af475b4749def8f1959df88d8b276","modified":1707080788319},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"108988d046da9a4716148df43b3975217c8ceaae","modified":1707080788327},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"e1f60ebac53a3f596fd0a4769b4f9275c48c6542","modified":1707080788328},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/abcjs.pug","hash":"f7299f9fef5bf94bb58c8cd3be8ee660ad2f9cd4","modified":1707080788260},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/index.pug","hash":"f58f1648d2d71311bafca4833f20b605bb5f18c8","modified":1707080788260},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/artalk.pug","hash":"5f86add36eeffbed61d11f08972a13697b4d9437","modified":1707080788262},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"c5f7081ca29db8cc80f808dfc29e36d5fa22fd7e","modified":1707080788263},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"0344477a2cf38698318ead2681c63ac12f01586e","modified":1707080788264},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"b2d274db84ef22fbd6d5ea8f4404821898934209","modified":1707080788265},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/remark42.pug","hash":"001e8be47854b891efe04013c240c38fed4185eb","modified":1707080788266},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"56c028ba0ea8fac19f0125114d765dfc56ce2b48","modified":1707080788267},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"39427e107230a10790972349c9dd4c4f31d55eb7","modified":1707080788268},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"3a5ccfc69bd8ccb4b8f3ce3502023f7914f2a022","modified":1707080788269},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"ddce8352b371a1fb426bdb6c33f587eb37a69647","modified":1707080788269},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"2fb098a7aa45010a8cd212dc0bd5308c6e7c63e3","modified":1707080788269},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"9b57a8e13de8fc51a5f550854e47164fd8ac1be8","modified":1707080788270},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"618e1b7f9204049b07beb9e1363c844a78a9ace3","modified":1707080788270},{"_id":"themes/butterfly/layout/includes/third-party/chat/messenger.pug","hash":"e39a9c37adf4cb15a2ba3b2cc65542ffea88650d","modified":1707080788270},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"dd61eca6e9a45f63e09bdefba89fe285a81ba096","modified":1707080788270},{"_id":"themes/butterfly/layout/includes/third-party/comments/artalk.pug","hash":"5d5b73920843ce858df6e3b03325d5d1f43cdab3","modified":1707080788271},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"62f16a602e57e5f7f7c5249dd37b42d436dc032a","modified":1707080788271},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"3bc4c1b91568561f0491bdac65b75aa0bfd01f27","modified":1707080788271},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"46aec6466959baec1c3d71a5dbc510fbeb00c91d","modified":1707080788272},{"_id":"themes/butterfly/layout/includes/third-party/comments/giscus.pug","hash":"2d7b0b09678adba09481e3152e0b32962677f650","modified":1707080788273},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"0d378ee8a671982a46213a4bfb223b4f3409aea9","modified":1707080788274},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"a9709905593d960954e2dd572f09f48a6c2b1ef7","modified":1707080788274},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"00ed91c52939b9675b316137f854d13684c895a6","modified":1707080788274},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"63cea2b5c8f7b59f5919379d61a2bb2ce8ed7623","modified":1707080788274},{"_id":"themes/butterfly/layout/includes/third-party/comments/remark42.pug","hash":"f15699abb8c7a255aabad0222ae53eee387c66a3","modified":1707080788275},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"894bf60ff5170cf1e4f276a8cedaf8301bceb824","modified":1707080788275},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"1995a654ba7ad62775a0a6e2922209cd1a85f2e3","modified":1707080788275},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"46865e3f52096acb07d0212174b4e8751b123aea","modified":1707080788275},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"ad7f1ee2e67deee0706e0838b5724dd37fc30a34","modified":1707080788275},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"b8ae5fd7d74e1edcef21f5004fc96147e064d219","modified":1707080788276},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"dfcbd9881be569ea420eff1a6b00e4f4dbe2138e","modified":1707080788276},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"fc072ac839401174b5d3cf9acd3b694246c23a55","modified":1707080788276},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"6b67982bb7a3713b5bffd6a23ba2810425c504d0","modified":1707080788277},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/artalk.pug","hash":"8c0d9a45bd2d83cc6d0e7bbfe172a09ff33c0178","modified":1707080788277},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"4fe8faf77b8420fc031ae1b54f78b2ece9fcc07e","modified":1707080788277},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"0330e3063ccf0ce40e4828b8d4fbef62362e8195","modified":1707080788277},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"4ec0642f2d5444acfab570a6f8c7868e7ff43fde","modified":1707080788278},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/remark42.pug","hash":"aa6061183a32472cd1882fce445a5049108a984b","modified":1707080788278},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"44991d67abb81784c5cdb4337b2b9798fc4361e1","modified":1707080788278},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"b7b2aa5be4112065d5066c0f066f5f58721153bf","modified":1707080788278},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"42496c6a32406604178d24685408b77a40adc993","modified":1707080788278},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"9c3c109a12d2b6916e8b4965cca12f521510ead9","modified":1707080788279},{"_id":"themes/butterfly/layout/includes/third-party/search/docsearch.pug","hash":"b928be14d1b47a9fadb1bcc5f5072a7328752d4b","modified":1707080788280},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"a99a41334387ee9a46c6f8e8212331a29a10d159","modified":1707080788280},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"3335024ba91f55ccf3858571b7898f46881c455c","modified":1707080788280},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"85c92f8a7e44d7cd1c86f089a05be438535e5362","modified":1707080788280},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"3ba49cfe186e9ca05faf9f0d0113611ec47e9b38","modified":1707080788281},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"c7dd2b2ae9b23aa0a60fffd7df9e9f76ef52033e","modified":1707080788281},{"_id":"themes/butterfly/source/css/_custom/about/about.css","hash":"5b541319f9a4cc0c525a6ed7f5f616ef107b8506","modified":1720684932353},{"_id":"themes/butterfly/source/css/_custom/about/site.css","hash":"4089fb7143719dc4087a3d60ce9970ac42246bc2","modified":1720684999733},{"_id":"themes/butterfly/source/css/_custom/about/skills.css","hash":"a0e0c7f658d32c91de041463f939ff50799c3436","modified":1720684983571},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"cf1fae641c927621a4df1be5ca4a853b9b526e23","modified":1707080788307},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"18804c58239d95798fa86d0597f32d7f7dd30051","modified":1707080788308},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"5972c61f5125068cbe0af279a0c93a54847fdc3b","modified":1707080788309},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"25914321762e30aacc610bc4dfb9de3e1cb556a3","modified":1707080788309},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"5dc2e0bcae9a54bfb9bdcc82d02ae5a3cf1ca97d","modified":1707080788309},{"_id":"themes/butterfly/source/css/_custom/about/hello-about.css","hash":"bc4f8ceeab50864e6c343b5399bd0462bfa780a2","modified":1720684972293},{"_id":"themes/butterfly/source/css/_custom/about/genshinimpact.css","hash":"28308bff27df6549c7639c609e7e76cf666acad2","modified":1720684958120},{"_id":"themes/butterfly/source/css/_custom/about/careers.css","hash":"9016549b1a8b6e5dd9bcb0fce0ce8a5345ef869b","modified":1720684947182},{"_id":"themes/butterfly/source/img/Head_Photo.png","hash":"8b4ecd3c491636d2f2ba67e445f5c3a77da50a58","modified":1707080788322},{"_id":"themes/butterfly/source/img/1.jpg","hash":"c6f722181ab4ebc16575563517c3dbb714ee6ecd","modified":1707080788320},{"_id":"themes/butterfly/source/img/background.jpg","hash":"26615e069c80113be017438251def87f8daeed29","modified":1707080788323},{"_id":"public/css/progress_bar.css","hash":"86700cfffe5df3be83db0b4bd5f50fe44ef96988","modified":1720690470147},{"_id":"public/css/custom.css","hash":"954898c429b9b3844803b2bb8ed2c7a73ad280f0","modified":1720690470147},{"_id":"public/css/runtime.css","hash":"19eb1c401d9a18832e93612eb7af286710562695","modified":1720690470147},{"_id":"public/js/cat.js","hash":"17a5a59aeb7283c3efabe84fe97338af53ef6e7e","modified":1720690470147},{"_id":"public/js/countup.js","hash":"89388b8b14405b13257da96356312a5f37f94841","modified":1720690470147},{"_id":"public/js/f12.js","hash":"6fb36778455582614dc8375c9b2ad5cb6567e0ef","modified":1720690470147},{"_id":"public/js/light.js","hash":"0db401affe68d00d3db818669bbb83a981538c7e","modified":1720690470147},{"_id":"public/js/readPercent.js","hash":"fe71a3426b6650058c0660925fcddfff8bc21a16","modified":1720690470147},{"_id":"public/js/runtime.js","hash":"c1cd96621c1018499d723655eee630e049081595","modified":1720690470147},{"_id":"public/js/share.js","hash":"1b51e8d570bed15c3cdfe52ba1f6ef345ba37e22","modified":1720690470147},{"_id":"public/js/txmap.js","hash":"ee975b38a26478eb7b5425a2487a32f8d6ad2d2b","modified":1720690470147},{"_id":"public/search.xml","hash":"d9ddee535df01879df6abd562dd1a32eeb533910","modified":1720690470147},{"_id":"public/about/index.html","hash":"24853e7c2a88dcafa8f915ef5a9f2863bb449abd","modified":1720690470147},{"_id":"public/categories/index.html","hash":"17f7c35be8fb8ec53c0d51d0ee85906f81ed48bb","modified":1720690470147},{"_id":"public/tags/index.html","hash":"86bfae1db4123b6e3f8c69bd0d00305cefd230be","modified":1720690470147},{"_id":"public/2024/07/11/Unity—HDRP--1：Process（HDRP project setting）/index.html","hash":"b255d81941297fe5e10318a866226717d656a413","modified":1720690470147},{"_id":"public/2024/07/11/ASE/index.html","hash":"e55c292719b79a0c1593ae72e93822eceb142c73","modified":1720690470147},{"_id":"public/2024/07/11/作品集/index.html","hash":"94b78d5c06cc6a9de37287642657318e603a3bf2","modified":1720690470147},{"_id":"public/2024/07/11/制作博客/index.html","hash":"a682e2e929f01b45bd2ca9b8d2e7e1fb5a2f5cff","modified":1720690470147},{"_id":"public/2024/07/11/问题汇总/index.html","hash":"db7b8724ca64da4834cedf85b546fe4e201c0030","modified":1720690470147},{"_id":"public/2024/07/11/Unity—HDRP--4：LightMapping（光照烘培）/index.html","hash":"50f436e1b1e93c66ffb677de6f9b8648febc2452","modified":1720690470147},{"_id":"public/2024/07/11/Unity—HDRP--3：HDRP Lighting System/index.html","hash":"3e542de974238df09a7a1c22ea953cb12f7e76ac","modified":1720690470147},{"_id":"public/2024/07/11/Unity—HDRP--2：HDRP配置文件和Volume框架/index.html","hash":"472f8452699e6b78337ce51d412266bfffa31ebc","modified":1720690470147},{"_id":"public/2024/07/11/Unity/index.html","hash":"db0c280dca1ce09bda8504baeb5d9ec24d936844","modified":1720690470147},{"_id":"public/2024/07/11/UE/index.html","hash":"f69234b296b8958a15b2afc57b38dbce5436c7a0","modified":1720690470147},{"_id":"public/2024/07/11/Trick/index.html","hash":"427fe9b1c4ce458375c21bb36d7de8bc849aec50","modified":1720690470147},{"_id":"public/2024/07/11/MarkDown/index.html","hash":"36a526ce2eb24ebf5efcf263daa90415513ede29","modified":1720690470147},{"_id":"public/2024/07/11/HLSL/index.html","hash":"41dabc632a0e10211c5d9049e941e2f8f7946a83","modified":1720690470147},{"_id":"public/2024/07/11/C++++/index.html","hash":"15837b7725bebf5ea71d61290b42e06450875d09","modified":1720690470147},{"_id":"public/2024/07/11/CGshaderlab/index.html","hash":"16b1bfac215e286286a775a1fabf593b01f0b4e5","modified":1720690470147},{"_id":"public/comments/index.html","hash":"25874f060c29580b44f15628d4a63e3265290f10","modified":1720690470147},{"_id":"public/archives/index.html","hash":"11d347fb37db2d3cbbfa063a694d822a56c9a2de","modified":1720690470147},{"_id":"public/archives/page/2/index.html","hash":"dc9c80a177828a232a41d7b048369b9e50535ce4","modified":1720690470147},{"_id":"public/archives/2024/index.html","hash":"8058a8f65234300e11d1115f72f3c562923aa3f1","modified":1720690470147},{"_id":"public/archives/2024/page/2/index.html","hash":"89f207ecbd940f47b1395ee90faf943fa1f54044","modified":1720690470147},{"_id":"public/archives/2024/07/index.html","hash":"ef7e0f40c4309a11456ef51046bca860e184e11b","modified":1720690470147},{"_id":"public/archives/2024/07/page/2/index.html","hash":"c506f07bac88ead2b1adc6cee3461392e238602d","modified":1720690470147},{"_id":"public/categories/Program/index.html","hash":"9eb7247cd2711ec9540dedbe1092d68098b3e26f","modified":1720690470147},{"_id":"public/categories/Comment/index.html","hash":"de69800429ce649ff43e2b7e079f23818a3e78e3","modified":1720690470147},{"_id":"public/categories/Technology/index.html","hash":"705ec4c6de58a513e206fb465dab5728a50ac38d","modified":1720690470147},{"_id":"public/categories/Unreal-Engine/index.html","hash":"6ceeb9acea5f1439e07375c0831647b1c97b78cf","modified":1720690470147},{"_id":"public/categories/Unity/index.html","hash":"2d6a8723950bebea7438076db18a3836d6ae6103","modified":1720690470147},{"_id":"public/categories/Creation/index.html","hash":"553302f8285699bfeb4ae4e8c83c6ad683a24fde","modified":1720690470147},{"_id":"public/categories/Process/index.html","hash":"69e7efd12c38f58240f23972db40f7f6e7493db1","modified":1720690470147},{"_id":"public/categories/BUG/index.html","hash":"ca0cdba1d4a330745dcc165fd0b4a27e445664de","modified":1720690470147},{"_id":"public/index.html","hash":"37ae8bbe2bb10c2d9981243c980aa87aa6261928","modified":1720690470147},{"_id":"public/page/2/index.html","hash":"68c5223f14fc78450c7a7c9425e9d10d9cf9704d","modified":1720690470147},{"_id":"public/tags/TA/index.html","hash":"f6f7bc8e0fc2916edb783c2260da09a5b70513a4","modified":1720690470147},{"_id":"public/tags/TA/page/2/index.html","hash":"16bd8056a78c669b0805e7e808c46504833cd7fb","modified":1720690470147},{"_id":"public/tags/Program/index.html","hash":"6c91b777dc5ec41e35df62c769bbb82b5b79457c","modified":1720690470147},{"_id":"public/tags/ASE/index.html","hash":"ea8ec61280cff945c8787ee220dc9e6b280636db","modified":1720690470147},{"_id":"public/tags/C/index.html","hash":"30c03d273754762e2867d69a9c12844d1d0c7bdc","modified":1720690470147},{"_id":"public/tags/CG/index.html","hash":"9a8f0e11511c3ed0a49d8251be5539fe1c119670","modified":1720690470147},{"_id":"public/tags/HLSL/index.html","hash":"1964baba5cebdd573ee1d50856566fb27ee29fd5","modified":1720690470147},{"_id":"public/tags/MarkDown/index.html","hash":"9c93a20f01b7610a3f7d1a2fa13c455b4a67cb2b","modified":1720690470147},{"_id":"public/tags/Templatet/index.html","hash":"dd63dc33b928474deb2ced3ff05cb05eca0b3211","modified":1720690470147},{"_id":"public/tags/Technology/index.html","hash":"b388b82337dafd7cfe07b29d92806ea9d32c6749","modified":1720690470147},{"_id":"public/tags/Unreal-Engine/index.html","hash":"f70bd886475f6cd76b0a8864234fd049dc6c776c","modified":1720690470147},{"_id":"public/tags/Unity/index.html","hash":"1deaabca2db5217a808158547bc80cdb0e95fa0d","modified":1720690470147},{"_id":"public/tags/Process/index.html","hash":"a96a759257ec85a4f8c0661bace18f4dd067d71e","modified":1720690470147},{"_id":"public/tags/High-Definition-Render-Pipline/index.html","hash":"a0708c9c57eaf570eed7f20d1ded7d44456298a6","modified":1720690470147},{"_id":"public/tags/Creation/index.html","hash":"f9f356f01fda8b12de8b1613c04e6f03becd640d","modified":1720690470147},{"_id":"public/tags/ECS云服务器/index.html","hash":"3440900a8fde9c8134b18dbcd7b0b055848d9aeb","modified":1720690470147},{"_id":"public/tags/Blog/index.html","hash":"8c687a9d9ffba86a751311d2f6035c72d2ddd190","modified":1720690470147},{"_id":"public/tags/BUG/index.html","hash":"15ea91d59bbb710120f7edb4dc39c77fec16ea1e","modified":1720690470147},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1720690470147},{"_id":"public/img/favicon.png","hash":"51bcd70efd9dff6c640ea1fe8f62360c9c503fe2","modified":1720690470147},{"_id":"public/img/favicon.png.bak","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1720690470147},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1720690470147},{"_id":"public/css/center-simple.css","hash":"42f3ecce9cb5248e509a49521f69012b021c4791","modified":1720690470147},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1720690470147},{"_id":"public/js/utils.js","hash":"8e6b48d294e7aeaba8ff6348c43b2271cf865547","modified":1720690470147},{"_id":"public/js/search/algolia.js","hash":"108988d046da9a4716148df43b3975217c8ceaae","modified":1720690470147},{"_id":"public/js/search/local-search.js","hash":"e1f60ebac53a3f596fd0a4769b4f9275c48c6542","modified":1720690470147},{"_id":"public/css/index.css","hash":"699e35b001e1801c8574319af64bd36deeb28082","modified":1720690470147},{"_id":"public/js/main.js","hash":"4b4f882a393cbf5b3dfc2b218608a09905f3e3db","modified":1720690470147},{"_id":"public/js/tw_cn.js","hash":"f8d2e3f31468991a7f5171cbfdb157dfb86d3372","modified":1720690470147},{"_id":"public/img/Head_Photo.png","hash":"8b4ecd3c491636d2f2ba67e445f5c3a77da50a58","modified":1720690470147},{"_id":"public/img/1.jpg","hash":"c6f722181ab4ebc16575563517c3dbb714ee6ecd","modified":1720690470147},{"_id":"public/img/background.jpg","hash":"26615e069c80113be017438251def87f8daeed29","modified":1720690470147}],"Category":[{"name":"Program","_id":"clyh2ogmr0004e0ds6aphdxig"},{"name":"Comment","_id":"clyh2ognm000qe0ds9sa9gc6p"},{"name":"Technology","_id":"clyh2ognq000ze0dsdzld7lmt"},{"name":"Unreal Engine","_id":"clyh2ognu0018e0ds8xy69bil"},{"name":"Unity","_id":"clyh2ognw001ee0ds7znlcc0o"},{"name":"Creation","_id":"clyh2ogo2001ye0dsc7ot6cna"},{"name":"Process","_id":"clyh2ogo30024e0ds5rig98hb"},{"name":"BUG","_id":"clyh2ogo40028e0dsgobke20y"}],"Data":[{"_id":"creativity","data":[{"class_name":"开启创造力","creativity_list":[{"name":"Vue","color":"#b8f0ae","icon":"https://img02.anheyu.com/adminuploads/1/2022/09/25/633001374747b.png"}]}]},{"_id":"reward","data":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"}]}]}],"Page":[{"title":"关于","date":"2021-03-30T07:57:51.000Z","aside":false,"top_img":false,"background":"#f8f9fe","comments":0,"type":"about","_content":"","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2021-03-30 15:57:51\naside: false\ntop_img: false\nbackground: \"#f8f9fe\"\ncomments: false\ntype: \"about\"\n---","updated":"2021-03-30T07:57:51.000Z","path":"about/index.html","layout":"page","_id":"clyh2ogkv0000e0ds87vy3awk","content":"","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"Vue","color":"#b8f0ae","icon":"https://img02.anheyu.com/adminuploads/1/2022/09/25/633001374747b.png"}]}],"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"}]}]}},"cover":false,"excerpt":"","more":""},{"title":"分类","date":"2024-07-11T05:45:48.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类  \ndate: 2024-07-11 13:45:48\ntype: categories \n---\n","updated":"2024-07-11T05:45:48.000Z","path":"categories/index.html","comments":1,"layout":"page","_id":"clyh2ogmp0002e0dsajdy7w7t","content":"","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"Vue","color":"#b8f0ae","icon":"https://img02.anheyu.com/adminuploads/1/2022/09/25/633001374747b.png"}]}],"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"}]}]}},"cover":false,"excerpt":"","more":""},{"_content":"\n\n\n/* 一图流 */\n/* 页脚与头图透明 */\n#footer {\n    background: transparent !important;\n  }\n  #page-header {\n    background: transparent !important;\n  }\n  \n  /* 白天模式遮罩透明 */\n  #footer::before {\n    background: transparent !important;\n  }\n  #page-header::before {\n    background: transparent !important;\n  }\n  \n  /* 夜间模式遮罩透明 */\n  [data-theme=\"dark\"] #footer::before {\n    background: transparent !important;\n  }\n  [data-theme=\"dark\"] #page-header::before {\n    background: transparent !important;\n  }\n\n\n  /* 小冰分类分类磁铁黑夜模式适配 */\n/* 一般状态 */\n[data-theme=\"dark\"] .magnet_link_context {\n    background: #1e1e1e;\n    color: antiquewhite;\n  }\n  /* 鼠标悬浮状态 */\n  [data-theme=\"dark\"] .magnet_link_context:hover {\n    background: #3ecdf1;\n    color: #f2f2f2;\n  }\n\n  /* 一级菜单居中 */\n#nav .menus_items {\n    position: absolute !important;\n    width: fit-content !important;\n    left: 50% !important;\n    transform: translateX(-50%) !important;\n  }\n  /* 子菜单横向展示 */\n  #nav .menus_items .menus_item:hover .menus_item_child {\n    display: flex !important;\n  }\n  /* 这里的2是代表导航栏的第2个元素，即有子菜单的元素，可以按自己需求修改 */\n  .menus_items .menus_item:nth-child(3) .menus_item_child {\n    left: -125px;\n  }\n\n  /* 侧边栏个人信息卡片动态渐变色 */\n#aside-content > .card-widget.card-info {\n    background: linear-gradient(\n      -45deg,\n      #e8d8b9,\n      #eccec5,\n      #a3e9eb,\n      #bdbdf0,\n      #eec1ea\n    );\n    box-shadow: 0 0 5px rgb(66, 68, 68);\n    position: relative;\n    background-size: 400% 400%;\n    -webkit-animation: Gradient 10s ease infinite;\n    -moz-animation: Gradient 10s ease infinite;\n    animation: Gradient 10s ease infinite !important;\n  }\n  @-webkit-keyframes Gradient {\n    0% {\n      background-position: 0% 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0% 50%;\n    }\n  }\n  @-moz-keyframes Gradient {\n    0% {\n      background-position: 0% 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0% 50%;\n    }\n  }\n  @keyframes Gradient {\n    0% {\n      background-position: 0% 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0% 50%;\n    }\n  }\n  \n  /* 黑夜模式适配 */\n  [data-theme=\"dark\"] #aside-content > .card-widget.card-info {\n    background: #191919ee;\n  }\n  \n  /* 个人信息Follow me按钮 */\n  #aside-content > .card-widget.card-info > #card-info-btn {\n    background-color: #3eb8be;\n    border-radius: 8px;\n  }\n\n  :root {\n  --trans-light: rgba(255, 255, 255, 0.88);\n  --trans-dark: rgba(25, 25, 25, 0.88);\n  --border-style: 1px solid rgb(169, 169, 169);\n  --backdrop-filter: blur(5px) saturate(150%);\n}\n\n/* 首页文章卡片 */\n#recent-posts > .recent-post-item {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border-radius: 25px;\n  border: var(--border-style);\n}\n\n/* 首页侧栏卡片 */\n#aside-content .card-widget {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border-radius: 18px;\n  border: var(--border-style);\n}\n\n/* 文章页、归档页、普通页面 */\ndiv#post,\ndiv#page,\ndiv#archive {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border: var(--border-style);\n  border-radius: 20px;\n}\n\n/* 导航栏 */\n#page-header.nav-fixed #nav {\n  background: rgba(255, 255, 255, 0.75);\n  backdrop-filter: var(--backdrop-filter);\n}\n\n[data-theme=\"dark\"] #page-header.nav-fixed #nav {\n  background: rgba(0, 0, 0, 0.7) !important;\n}\n\n/* 夜间模式遮罩 */\n[data-theme=\"dark\"] #recent-posts > .recent-post-item,\n[data-theme=\"dark\"] #aside-content .card-widget,\n[data-theme=\"dark\"] div#post,\n[data-theme=\"dark\"] div#archive,\n[data-theme=\"dark\"] div#page {\n  background: var(--trans-dark);\n}\n\n\n/* 夜间模式页脚页头遮罩透明 */\n[data-theme=\"dark\"] #footer::before {\n  background: transparent !important;\n}\n[data-theme=\"dark\"] #page-header::before {\n  background: transparent !important;\n}\n\n/* 阅读模式 */\n.read-mode #aside-content .card-widget {\n  background: rgba(158, 204, 171, 0.5) !important;\n}\n.read-mode div#post {\n  background: rgba(158, 204, 171, 0.5) !important;\n}\n\n/* 夜间模式下的阅读模式 */\n[data-theme=\"dark\"] .read-mode #aside-content .card-widget {\n  background: rgba(25, 25, 25, 0.9) !important;\n  color: #ffffff;\n}\n[data-theme=\"dark\"] .read-mode div#post {\n  background: rgba(25, 25, 25, 0.9) !important;\n  color: #ffffff;\n}\n\n\n/* 页面调节 */\n:root {\n    --trans-light: rgba(255, 255, 255, 0.88);\n    --trans-dark: rgba(25, 25, 25, 0.88);\n    --border-style: 1px solid rgb(169, 169, 169);\n    --backdrop-filter: blur(5px) saturate(150%);\n  }\n  \n  /* 首页文章卡片 */\n  #recent-posts > .recent-post-item {\n    background: var(--trans-light);\n    backdrop-filter: var(--backdrop-filter);\n    border-radius: 25px;\n    border: var(--border-style);\n  }\n  \n  /* 首页侧栏卡片 */\n  #aside-content .card-widget {\n    background: var(--trans-light);\n    backdrop-filter: var(--backdrop-filter);\n    border-radius: 18px;\n    border: var(--border-style);\n  }\n  \n  /* 文章页、归档页、普通页面 */\n  div#post,\n  div#page,\n  div#archive {\n    background: var(--trans-light);\n    backdrop-filter: var(--backdrop-filter);\n    border: var(--border-style);\n    border-radius: 20px;\n  }\n  \n  /* 导航栏 */\n  #page-header.nav-fixed #nav {\n    background: rgba(255, 255, 255, 0.75);\n    backdrop-filter: var(--backdrop-filter);\n  }\n  \n  [data-theme=\"dark\"] #page-header.nav-fixed #nav {\n    background: rgba(0, 0, 0, 0.7) !important;\n  }\n  \n  /* 夜间模式遮罩 */\n  [data-theme=\"dark\"] #recent-posts > .recent-post-item,\n  [data-theme=\"dark\"] #aside-content .card-widget,\n  [data-theme=\"dark\"] div#post,\n  [data-theme=\"dark\"] div#archive,\n  [data-theme=\"dark\"] div#page {\n    background: var(--trans-dark);\n  }\n  \n  \n  /* 夜间模式页脚页头遮罩透明 */\n  [data-theme=\"dark\"] #footer::before {\n    background: transparent !important;\n  }\n  [data-theme=\"dark\"] #page-header::before {\n    background: transparent !important;\n  }\n  \n  /* 阅读模式 */\n  .read-mode #aside-content .card-widget {\n    background: rgba(158, 204, 171, 0.5) !important;\n  }\n  .read-mode div#post {\n    background: rgba(158, 204, 171, 0.5) !important;\n  }\n  \n  /* 夜间模式下的阅读模式 */\n  [data-theme=\"dark\"] .read-mode #aside-content .card-widget {\n    background: rgba(25, 25, 25, 0.9) !important;\n    color: #ffffff;\n  }\n  [data-theme=\"dark\"] .read-mode div#post {\n    background: rgba(25, 25, 25, 0.9) !important;\n    color: #ffffff;\n  }\n\n  /* 翻页按钮居中 */\n#pagination {\n  width: 100%;\n  margin: auto;\n}\n\n/* 自定义字体 */\n@font-face {\n  /* 为载入的字体取名字(随意) */\n  font-family: 'Zhi Mang Xing';\t\n  /* 字体文件地址(相对或者绝对路径都可以) */\n  src: url(https://fonts.googleapis.com/css);\n  /* 定义加粗样式(加粗多少) */\n  font-weight: normal;\n  /* 定义字体样式(斜体/非斜体) */\n  font-style: normal;\n  /* 定义显示样式 */\n  font-display: block;\n}\n\n@font-face {\n  font-family: 'Sacramento';\n  font-style: normal;\n  font-weight: 400;\n  src: url(https://fonts.googleapis.com/css?family);\n  unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n\n/* 黑夜霓虹灯 */\n/* 夜间模式菜单栏发光字 */\n[data-theme=\"dark\"] #nav .site-page,\n[data-theme=\"dark\"] #nav .menus_items .menus_item .menus_item_child li a {\n  text-shadow: 0 0 2px var(--theme-color) !important;\n}\n\n/* 手机端适配 */\n[data-theme=\"dark\"] #sidebar #sidebar-menus .menus_items .site-page {\n  text-shadow: 0 0 2px var(--theme-color) !important;\n}\n\n/* 闪烁变动颜色连续渐变 */\n#site-name,\n#site-title,\n#site-subtitle,\n#post-info,\n.author-info__name,\n.author-info__description {\n  transition: text-shadow 1s linear !important;\n}\n\n/* 黑夜霓虹灯2.0 */\n/* 日间模式不生效 */\n[data-theme=\"light\"] #site-name,\n[data-theme=\"light\"] #site-title,\n[data-theme=\"light\"] #site-subtitle,\n[data-theme=\"light\"] #post-info {\n  animation: none;\n}\n/* 夜间模式生效 */\n[data-theme=\"dark\"] #site-name,\n[data-theme=\"dark\"] #site-title {\n  animation: light_15px 10s linear infinite;\n}\n[data-theme=\"dark\"] #site-subtitle {\n  animation: light_10px 10s linear infinite;\n}\n[data-theme=\"dark\"] #post-info {\n  animation: light_5px 10s linear infinite;\n}\n/* 关键帧描述 */\n@keyframes light_15px {\n  0% {\n    text-shadow: #5636ed 0 0 15px;\n  }\n  12.5% {\n    text-shadow: #11ee5e 0 0 15px;\n  }\n  25% {\n    text-shadow: #f14747 0 0 15px;\n  }\n  37.5% {\n    text-shadow: #f1a247 0 0 15px;\n  }\n  50% {\n    text-shadow: #f1ee47 0 0 15px;\n  }\n  50% {\n    text-shadow: #b347f1 0 0 15px;\n  }\n  62.5% {\n    text-shadow: #002afa 0 0 15px;\n  }\n  75% {\n    text-shadow: #ed709b 0 0 15px;\n  }\n  87.5% {\n    text-shadow: #39c5bb 0 0 15px;\n  }\n  100% {\n    text-shadow: #5636ed 0 0 15px;\n  }\n}\n\n@keyframes light_10px {\n  0% {\n    text-shadow: #5636ed 0 0 10px;\n  }\n  12.5% {\n    text-shadow: #11ee5e 0 0 10px;\n  }\n  25% {\n    text-shadow: #f14747 0 0 10px;\n  }\n  37.5% {\n    text-shadow: #f1a247 0 0 10px;\n  }\n  50% {\n    text-shadow: #f1ee47 0 0 10px;\n  }\n  50% {\n    text-shadow: #b347f1 0 0 10px;\n  }\n  62.5% {\n    text-shadow: #002afa 0 0 10px;\n  }\n  75% {\n    text-shadow: #ed709b 0 0 10px;\n  }\n  87.5% {\n    text-shadow: #39c5bb 0 0 10px;\n  }\n  100% {\n    text-shadow: #5636ed 0 0 10px;\n  }\n}\n\n@keyframes light_5px {\n  0% {\n    text-shadow: #5636ed 0 0 5px;\n  }\n  12.5% {\n    text-shadow: #11ee5e 0 0 5px;\n  }\n  25% {\n    text-shadow: #f14747 0 0 5px;\n  }\n  37.5% {\n    text-shadow: #f1a247 0 0 15px;\n  }\n  50% {\n    text-shadow: #f1ee47 0 0 5px;\n  }\n  50% {\n    text-shadow: #b347f1 0 0 5px;\n  }\n  62.5% {\n    text-shadow: #002afa 0 0 5px;\n  }\n  75% {\n    text-shadow: #ed709b 0 0 5px;\n  }\n  87.5% {\n    text-shadow: #39c5bb 0 0 5px;\n  }\n  100% {\n    text-shadow: #5636ed 0 0 5px;\n  }\n}\n\n/* 页面样式调节 */\n:root {\n  --trans-light: rgba(255, 255, 255, 0.88);\n  --trans-dark: rgba(25, 25, 25, 0.88);\n  --border-style: 1px solid rgb(169, 169, 169);\n  --backdrop-filter: blur(5px) saturate(150%);\n}\n\n/* 首页文章卡片 */\n#recent-posts > .recent-post-item {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border-radius: 25px;\n  border: var(--border-style);\n}\n\n/* 首页侧栏卡片 */\n#aside-content .card-widget {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border-radius: 18px;\n  border: var(--border-style);\n}\n\n/* 文章页、归档页、普通页面 */\ndiv#post,\ndiv#page,\ndiv#archive {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border: var(--border-style);\n  border-radius: 20px;\n}\n\n/* 导航栏 */\n#page-header.nav-fixed #nav {\n  background: rgba(255, 255, 255, 0.75);\n  backdrop-filter: var(--backdrop-filter);\n}\n\n[data-theme=\"dark\"] #page-header.nav-fixed #nav {\n  background: rgba(0, 0, 0, 0.7) !important;\n}\n\n/* 夜间模式遮罩 */\n[data-theme=\"dark\"] #recent-posts > .recent-post-item,\n[data-theme=\"dark\"] #aside-content .card-widget,\n[data-theme=\"dark\"] div#post,\n[data-theme=\"dark\"] div#archive,\n[data-theme=\"dark\"] div#page {\n  background: var(--trans-dark);\n}\n\n\n/* 夜间模式页脚页头遮罩透明 */\n[data-theme=\"dark\"] #footer::before {\n  background: transparent !important;\n}\n[data-theme=\"dark\"] #page-header::before {\n  background: transparent !important;\n}\n\n/* 阅读模式 */\n.read-mode #aside-content .card-widget {\n  background: rgba(158, 204, 171, 0.5) !important;\n}\n.read-mode div#post {\n  background: rgba(158, 204, 171, 0.5) !important;\n}\n\n/* 夜间模式下的阅读模式 */\n[data-theme=\"dark\"] .read-mode #aside-content .card-widget {\n  background: rgba(25, 25, 25, 0.9) !important;\n  color: #ffffff;\n}\n[data-theme=\"dark\"] .read-mode div#post {\n  background: rgba(25, 25, 25, 0.9) !important;\n  color: #ffffff;\n}\n\n/*哔哩哔哩视频适配*/\n.aspect-ratio {\n  position: relative;\n  width: 90%;\n  height: auto;\n  padding-bottom: 75%;\n  margin: 3% auto;\n  text-align: center;\n}\n.aspect-ratio iframe {\n  position: absolute;\n  width: 100%;\n  height: 86%;\n  left: 0;\n  top: 0;\n}\n\n/* 挂绳小猫 */\n\nbody::-webkit-scrollbar {\n  width: 0;\n}\n\n.neko {\n  width: 64px;\n  height: 64px;\n  background-image: url(\"https://bu.dusays.com/2022/07/20/62d812db74be9.png\");\n  position: absolute;\n  right: 32px;\n  background-repeat: no-repeat;\n  background-size: contain;\n  transform: translateX(50%);\n  cursor: pointer;\n  font-family: tzy;\n  font-weight: 600;\n  font-size: 16px;\n  color: #6f42c1;\n  display: none;\n}\n\n.neko::after {\n  display: none;\n  width: 100px;\n  height: 100px;\n  background-image: url(\"https://bu.dusays.com/2022/07/20/62d812d95e6f5.png\");\n  background-size: contain;\n  z-index: 9999;\n  position: absolute;\n  right: 50%;\n  text-align: center;\n  line-height: 100px;\n  top: -115%;\n\n}\n\n.neko.showMsg::after {\n  content: attr(data-msg);\n  display: block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.neko:hover::after {\n  content: attr(data-msg);\n  display: block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.neko.fontColor::after {\n  color: #333;\n}\n\n/**\n* @description: 滚动条样式  跟猫二选一\n*/\n@media screen and (max-width:992px) {\n  ::-webkit-scrollbar {\n      width: 8px !important;\n      height: 8px !important\n  }\n\n  ::-webkit-scrollbar-track {\n      border-radius: 2em;\n  }\n\n  ::-webkit-scrollbar-thumb {\n      background-color: rgb(255 255 255 / .3);\n      background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent);\n      border-radius: 2em\n  }\n\n  ::-webkit-scrollbar-corner {\n      background-color: transparent\n  }\n}\n\n/* 右边按钮阅读进度 */\n/* 返回顶部 */\n\nbutton#go-up #percent {\n  display: none;\n  font-weight: bold;\n  font-size: 15px !important;\n}\n\nbutton#go-up span {\n  font-size: 12px!important;\n  margin-right: -1px;\n}\n\n/* 鼠标滑动到按钮上时显示返回顶部图标 */\nbutton#go-up:hover i {\n  display: block !important;\n}\n\nbutton#go-up:hover #percent {\n  display: none !important;\n}\n\n/* 用户地理位置欢迎信息 */\n:root {\n  --ichika-color: #3c6ae7;\n}\n\n/* 公告&欢迎页 */\n.card-announcement {\n  line-height:30px;\n  font-size:16px;\n}\n\n.card-announcement .item-headline span{\n  margin-left:0!important;\n}\n\n.card-announcement span{\n  font-weight:bold;\n  font-size:20px!important;\n  color:var(--ichika-color);\n}\n\n","source":"css/custom.css","raw":"\n\n\n/* 一图流 */\n/* 页脚与头图透明 */\n#footer {\n    background: transparent !important;\n  }\n  #page-header {\n    background: transparent !important;\n  }\n  \n  /* 白天模式遮罩透明 */\n  #footer::before {\n    background: transparent !important;\n  }\n  #page-header::before {\n    background: transparent !important;\n  }\n  \n  /* 夜间模式遮罩透明 */\n  [data-theme=\"dark\"] #footer::before {\n    background: transparent !important;\n  }\n  [data-theme=\"dark\"] #page-header::before {\n    background: transparent !important;\n  }\n\n\n  /* 小冰分类分类磁铁黑夜模式适配 */\n/* 一般状态 */\n[data-theme=\"dark\"] .magnet_link_context {\n    background: #1e1e1e;\n    color: antiquewhite;\n  }\n  /* 鼠标悬浮状态 */\n  [data-theme=\"dark\"] .magnet_link_context:hover {\n    background: #3ecdf1;\n    color: #f2f2f2;\n  }\n\n  /* 一级菜单居中 */\n#nav .menus_items {\n    position: absolute !important;\n    width: fit-content !important;\n    left: 50% !important;\n    transform: translateX(-50%) !important;\n  }\n  /* 子菜单横向展示 */\n  #nav .menus_items .menus_item:hover .menus_item_child {\n    display: flex !important;\n  }\n  /* 这里的2是代表导航栏的第2个元素，即有子菜单的元素，可以按自己需求修改 */\n  .menus_items .menus_item:nth-child(3) .menus_item_child {\n    left: -125px;\n  }\n\n  /* 侧边栏个人信息卡片动态渐变色 */\n#aside-content > .card-widget.card-info {\n    background: linear-gradient(\n      -45deg,\n      #e8d8b9,\n      #eccec5,\n      #a3e9eb,\n      #bdbdf0,\n      #eec1ea\n    );\n    box-shadow: 0 0 5px rgb(66, 68, 68);\n    position: relative;\n    background-size: 400% 400%;\n    -webkit-animation: Gradient 10s ease infinite;\n    -moz-animation: Gradient 10s ease infinite;\n    animation: Gradient 10s ease infinite !important;\n  }\n  @-webkit-keyframes Gradient {\n    0% {\n      background-position: 0% 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0% 50%;\n    }\n  }\n  @-moz-keyframes Gradient {\n    0% {\n      background-position: 0% 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0% 50%;\n    }\n  }\n  @keyframes Gradient {\n    0% {\n      background-position: 0% 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0% 50%;\n    }\n  }\n  \n  /* 黑夜模式适配 */\n  [data-theme=\"dark\"] #aside-content > .card-widget.card-info {\n    background: #191919ee;\n  }\n  \n  /* 个人信息Follow me按钮 */\n  #aside-content > .card-widget.card-info > #card-info-btn {\n    background-color: #3eb8be;\n    border-radius: 8px;\n  }\n\n  :root {\n  --trans-light: rgba(255, 255, 255, 0.88);\n  --trans-dark: rgba(25, 25, 25, 0.88);\n  --border-style: 1px solid rgb(169, 169, 169);\n  --backdrop-filter: blur(5px) saturate(150%);\n}\n\n/* 首页文章卡片 */\n#recent-posts > .recent-post-item {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border-radius: 25px;\n  border: var(--border-style);\n}\n\n/* 首页侧栏卡片 */\n#aside-content .card-widget {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border-radius: 18px;\n  border: var(--border-style);\n}\n\n/* 文章页、归档页、普通页面 */\ndiv#post,\ndiv#page,\ndiv#archive {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border: var(--border-style);\n  border-radius: 20px;\n}\n\n/* 导航栏 */\n#page-header.nav-fixed #nav {\n  background: rgba(255, 255, 255, 0.75);\n  backdrop-filter: var(--backdrop-filter);\n}\n\n[data-theme=\"dark\"] #page-header.nav-fixed #nav {\n  background: rgba(0, 0, 0, 0.7) !important;\n}\n\n/* 夜间模式遮罩 */\n[data-theme=\"dark\"] #recent-posts > .recent-post-item,\n[data-theme=\"dark\"] #aside-content .card-widget,\n[data-theme=\"dark\"] div#post,\n[data-theme=\"dark\"] div#archive,\n[data-theme=\"dark\"] div#page {\n  background: var(--trans-dark);\n}\n\n\n/* 夜间模式页脚页头遮罩透明 */\n[data-theme=\"dark\"] #footer::before {\n  background: transparent !important;\n}\n[data-theme=\"dark\"] #page-header::before {\n  background: transparent !important;\n}\n\n/* 阅读模式 */\n.read-mode #aside-content .card-widget {\n  background: rgba(158, 204, 171, 0.5) !important;\n}\n.read-mode div#post {\n  background: rgba(158, 204, 171, 0.5) !important;\n}\n\n/* 夜间模式下的阅读模式 */\n[data-theme=\"dark\"] .read-mode #aside-content .card-widget {\n  background: rgba(25, 25, 25, 0.9) !important;\n  color: #ffffff;\n}\n[data-theme=\"dark\"] .read-mode div#post {\n  background: rgba(25, 25, 25, 0.9) !important;\n  color: #ffffff;\n}\n\n\n/* 页面调节 */\n:root {\n    --trans-light: rgba(255, 255, 255, 0.88);\n    --trans-dark: rgba(25, 25, 25, 0.88);\n    --border-style: 1px solid rgb(169, 169, 169);\n    --backdrop-filter: blur(5px) saturate(150%);\n  }\n  \n  /* 首页文章卡片 */\n  #recent-posts > .recent-post-item {\n    background: var(--trans-light);\n    backdrop-filter: var(--backdrop-filter);\n    border-radius: 25px;\n    border: var(--border-style);\n  }\n  \n  /* 首页侧栏卡片 */\n  #aside-content .card-widget {\n    background: var(--trans-light);\n    backdrop-filter: var(--backdrop-filter);\n    border-radius: 18px;\n    border: var(--border-style);\n  }\n  \n  /* 文章页、归档页、普通页面 */\n  div#post,\n  div#page,\n  div#archive {\n    background: var(--trans-light);\n    backdrop-filter: var(--backdrop-filter);\n    border: var(--border-style);\n    border-radius: 20px;\n  }\n  \n  /* 导航栏 */\n  #page-header.nav-fixed #nav {\n    background: rgba(255, 255, 255, 0.75);\n    backdrop-filter: var(--backdrop-filter);\n  }\n  \n  [data-theme=\"dark\"] #page-header.nav-fixed #nav {\n    background: rgba(0, 0, 0, 0.7) !important;\n  }\n  \n  /* 夜间模式遮罩 */\n  [data-theme=\"dark\"] #recent-posts > .recent-post-item,\n  [data-theme=\"dark\"] #aside-content .card-widget,\n  [data-theme=\"dark\"] div#post,\n  [data-theme=\"dark\"] div#archive,\n  [data-theme=\"dark\"] div#page {\n    background: var(--trans-dark);\n  }\n  \n  \n  /* 夜间模式页脚页头遮罩透明 */\n  [data-theme=\"dark\"] #footer::before {\n    background: transparent !important;\n  }\n  [data-theme=\"dark\"] #page-header::before {\n    background: transparent !important;\n  }\n  \n  /* 阅读模式 */\n  .read-mode #aside-content .card-widget {\n    background: rgba(158, 204, 171, 0.5) !important;\n  }\n  .read-mode div#post {\n    background: rgba(158, 204, 171, 0.5) !important;\n  }\n  \n  /* 夜间模式下的阅读模式 */\n  [data-theme=\"dark\"] .read-mode #aside-content .card-widget {\n    background: rgba(25, 25, 25, 0.9) !important;\n    color: #ffffff;\n  }\n  [data-theme=\"dark\"] .read-mode div#post {\n    background: rgba(25, 25, 25, 0.9) !important;\n    color: #ffffff;\n  }\n\n  /* 翻页按钮居中 */\n#pagination {\n  width: 100%;\n  margin: auto;\n}\n\n/* 自定义字体 */\n@font-face {\n  /* 为载入的字体取名字(随意) */\n  font-family: 'Zhi Mang Xing';\t\n  /* 字体文件地址(相对或者绝对路径都可以) */\n  src: url(https://fonts.googleapis.com/css);\n  /* 定义加粗样式(加粗多少) */\n  font-weight: normal;\n  /* 定义字体样式(斜体/非斜体) */\n  font-style: normal;\n  /* 定义显示样式 */\n  font-display: block;\n}\n\n@font-face {\n  font-family: 'Sacramento';\n  font-style: normal;\n  font-weight: 400;\n  src: url(https://fonts.googleapis.com/css?family);\n  unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n\n/* 黑夜霓虹灯 */\n/* 夜间模式菜单栏发光字 */\n[data-theme=\"dark\"] #nav .site-page,\n[data-theme=\"dark\"] #nav .menus_items .menus_item .menus_item_child li a {\n  text-shadow: 0 0 2px var(--theme-color) !important;\n}\n\n/* 手机端适配 */\n[data-theme=\"dark\"] #sidebar #sidebar-menus .menus_items .site-page {\n  text-shadow: 0 0 2px var(--theme-color) !important;\n}\n\n/* 闪烁变动颜色连续渐变 */\n#site-name,\n#site-title,\n#site-subtitle,\n#post-info,\n.author-info__name,\n.author-info__description {\n  transition: text-shadow 1s linear !important;\n}\n\n/* 黑夜霓虹灯2.0 */\n/* 日间模式不生效 */\n[data-theme=\"light\"] #site-name,\n[data-theme=\"light\"] #site-title,\n[data-theme=\"light\"] #site-subtitle,\n[data-theme=\"light\"] #post-info {\n  animation: none;\n}\n/* 夜间模式生效 */\n[data-theme=\"dark\"] #site-name,\n[data-theme=\"dark\"] #site-title {\n  animation: light_15px 10s linear infinite;\n}\n[data-theme=\"dark\"] #site-subtitle {\n  animation: light_10px 10s linear infinite;\n}\n[data-theme=\"dark\"] #post-info {\n  animation: light_5px 10s linear infinite;\n}\n/* 关键帧描述 */\n@keyframes light_15px {\n  0% {\n    text-shadow: #5636ed 0 0 15px;\n  }\n  12.5% {\n    text-shadow: #11ee5e 0 0 15px;\n  }\n  25% {\n    text-shadow: #f14747 0 0 15px;\n  }\n  37.5% {\n    text-shadow: #f1a247 0 0 15px;\n  }\n  50% {\n    text-shadow: #f1ee47 0 0 15px;\n  }\n  50% {\n    text-shadow: #b347f1 0 0 15px;\n  }\n  62.5% {\n    text-shadow: #002afa 0 0 15px;\n  }\n  75% {\n    text-shadow: #ed709b 0 0 15px;\n  }\n  87.5% {\n    text-shadow: #39c5bb 0 0 15px;\n  }\n  100% {\n    text-shadow: #5636ed 0 0 15px;\n  }\n}\n\n@keyframes light_10px {\n  0% {\n    text-shadow: #5636ed 0 0 10px;\n  }\n  12.5% {\n    text-shadow: #11ee5e 0 0 10px;\n  }\n  25% {\n    text-shadow: #f14747 0 0 10px;\n  }\n  37.5% {\n    text-shadow: #f1a247 0 0 10px;\n  }\n  50% {\n    text-shadow: #f1ee47 0 0 10px;\n  }\n  50% {\n    text-shadow: #b347f1 0 0 10px;\n  }\n  62.5% {\n    text-shadow: #002afa 0 0 10px;\n  }\n  75% {\n    text-shadow: #ed709b 0 0 10px;\n  }\n  87.5% {\n    text-shadow: #39c5bb 0 0 10px;\n  }\n  100% {\n    text-shadow: #5636ed 0 0 10px;\n  }\n}\n\n@keyframes light_5px {\n  0% {\n    text-shadow: #5636ed 0 0 5px;\n  }\n  12.5% {\n    text-shadow: #11ee5e 0 0 5px;\n  }\n  25% {\n    text-shadow: #f14747 0 0 5px;\n  }\n  37.5% {\n    text-shadow: #f1a247 0 0 15px;\n  }\n  50% {\n    text-shadow: #f1ee47 0 0 5px;\n  }\n  50% {\n    text-shadow: #b347f1 0 0 5px;\n  }\n  62.5% {\n    text-shadow: #002afa 0 0 5px;\n  }\n  75% {\n    text-shadow: #ed709b 0 0 5px;\n  }\n  87.5% {\n    text-shadow: #39c5bb 0 0 5px;\n  }\n  100% {\n    text-shadow: #5636ed 0 0 5px;\n  }\n}\n\n/* 页面样式调节 */\n:root {\n  --trans-light: rgba(255, 255, 255, 0.88);\n  --trans-dark: rgba(25, 25, 25, 0.88);\n  --border-style: 1px solid rgb(169, 169, 169);\n  --backdrop-filter: blur(5px) saturate(150%);\n}\n\n/* 首页文章卡片 */\n#recent-posts > .recent-post-item {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border-radius: 25px;\n  border: var(--border-style);\n}\n\n/* 首页侧栏卡片 */\n#aside-content .card-widget {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border-radius: 18px;\n  border: var(--border-style);\n}\n\n/* 文章页、归档页、普通页面 */\ndiv#post,\ndiv#page,\ndiv#archive {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border: var(--border-style);\n  border-radius: 20px;\n}\n\n/* 导航栏 */\n#page-header.nav-fixed #nav {\n  background: rgba(255, 255, 255, 0.75);\n  backdrop-filter: var(--backdrop-filter);\n}\n\n[data-theme=\"dark\"] #page-header.nav-fixed #nav {\n  background: rgba(0, 0, 0, 0.7) !important;\n}\n\n/* 夜间模式遮罩 */\n[data-theme=\"dark\"] #recent-posts > .recent-post-item,\n[data-theme=\"dark\"] #aside-content .card-widget,\n[data-theme=\"dark\"] div#post,\n[data-theme=\"dark\"] div#archive,\n[data-theme=\"dark\"] div#page {\n  background: var(--trans-dark);\n}\n\n\n/* 夜间模式页脚页头遮罩透明 */\n[data-theme=\"dark\"] #footer::before {\n  background: transparent !important;\n}\n[data-theme=\"dark\"] #page-header::before {\n  background: transparent !important;\n}\n\n/* 阅读模式 */\n.read-mode #aside-content .card-widget {\n  background: rgba(158, 204, 171, 0.5) !important;\n}\n.read-mode div#post {\n  background: rgba(158, 204, 171, 0.5) !important;\n}\n\n/* 夜间模式下的阅读模式 */\n[data-theme=\"dark\"] .read-mode #aside-content .card-widget {\n  background: rgba(25, 25, 25, 0.9) !important;\n  color: #ffffff;\n}\n[data-theme=\"dark\"] .read-mode div#post {\n  background: rgba(25, 25, 25, 0.9) !important;\n  color: #ffffff;\n}\n\n/*哔哩哔哩视频适配*/\n.aspect-ratio {\n  position: relative;\n  width: 90%;\n  height: auto;\n  padding-bottom: 75%;\n  margin: 3% auto;\n  text-align: center;\n}\n.aspect-ratio iframe {\n  position: absolute;\n  width: 100%;\n  height: 86%;\n  left: 0;\n  top: 0;\n}\n\n/* 挂绳小猫 */\n\nbody::-webkit-scrollbar {\n  width: 0;\n}\n\n.neko {\n  width: 64px;\n  height: 64px;\n  background-image: url(\"https://bu.dusays.com/2022/07/20/62d812db74be9.png\");\n  position: absolute;\n  right: 32px;\n  background-repeat: no-repeat;\n  background-size: contain;\n  transform: translateX(50%);\n  cursor: pointer;\n  font-family: tzy;\n  font-weight: 600;\n  font-size: 16px;\n  color: #6f42c1;\n  display: none;\n}\n\n.neko::after {\n  display: none;\n  width: 100px;\n  height: 100px;\n  background-image: url(\"https://bu.dusays.com/2022/07/20/62d812d95e6f5.png\");\n  background-size: contain;\n  z-index: 9999;\n  position: absolute;\n  right: 50%;\n  text-align: center;\n  line-height: 100px;\n  top: -115%;\n\n}\n\n.neko.showMsg::after {\n  content: attr(data-msg);\n  display: block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.neko:hover::after {\n  content: attr(data-msg);\n  display: block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.neko.fontColor::after {\n  color: #333;\n}\n\n/**\n* @description: 滚动条样式  跟猫二选一\n*/\n@media screen and (max-width:992px) {\n  ::-webkit-scrollbar {\n      width: 8px !important;\n      height: 8px !important\n  }\n\n  ::-webkit-scrollbar-track {\n      border-radius: 2em;\n  }\n\n  ::-webkit-scrollbar-thumb {\n      background-color: rgb(255 255 255 / .3);\n      background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent);\n      border-radius: 2em\n  }\n\n  ::-webkit-scrollbar-corner {\n      background-color: transparent\n  }\n}\n\n/* 右边按钮阅读进度 */\n/* 返回顶部 */\n\nbutton#go-up #percent {\n  display: none;\n  font-weight: bold;\n  font-size: 15px !important;\n}\n\nbutton#go-up span {\n  font-size: 12px!important;\n  margin-right: -1px;\n}\n\n/* 鼠标滑动到按钮上时显示返回顶部图标 */\nbutton#go-up:hover i {\n  display: block !important;\n}\n\nbutton#go-up:hover #percent {\n  display: none !important;\n}\n\n/* 用户地理位置欢迎信息 */\n:root {\n  --ichika-color: #3c6ae7;\n}\n\n/* 公告&欢迎页 */\n.card-announcement {\n  line-height:30px;\n  font-size:16px;\n}\n\n.card-announcement .item-headline span{\n  margin-left:0!important;\n}\n\n.card-announcement span{\n  font-weight:bold;\n  font-size:20px!important;\n  color:var(--ichika-color);\n}\n\n","date":"2024-03-19T04:21:46.369Z","updated":"2024-03-19T04:21:46.369Z","path":"css/custom.css","layout":"false","title":"","comments":1,"_id":"clyh2ogn40006e0dsdth5g253","content":"\n\n\n/* 一图流 */\n/* 页脚与头图透明 */\n#footer {\n    background: transparent !important;\n  }\n  #page-header {\n    background: transparent !important;\n  }\n  \n  /* 白天模式遮罩透明 */\n  #footer::before {\n    background: transparent !important;\n  }\n  #page-header::before {\n    background: transparent !important;\n  }\n  \n  /* 夜间模式遮罩透明 */\n  [data-theme=\"dark\"] #footer::before {\n    background: transparent !important;\n  }\n  [data-theme=\"dark\"] #page-header::before {\n    background: transparent !important;\n  }\n\n\n  /* 小冰分类分类磁铁黑夜模式适配 */\n/* 一般状态 */\n[data-theme=\"dark\"] .magnet_link_context {\n    background: #1e1e1e;\n    color: antiquewhite;\n  }\n  /* 鼠标悬浮状态 */\n  [data-theme=\"dark\"] .magnet_link_context:hover {\n    background: #3ecdf1;\n    color: #f2f2f2;\n  }\n\n  /* 一级菜单居中 */\n#nav .menus_items {\n    position: absolute !important;\n    width: fit-content !important;\n    left: 50% !important;\n    transform: translateX(-50%) !important;\n  }\n  /* 子菜单横向展示 */\n  #nav .menus_items .menus_item:hover .menus_item_child {\n    display: flex !important;\n  }\n  /* 这里的2是代表导航栏的第2个元素，即有子菜单的元素，可以按自己需求修改 */\n  .menus_items .menus_item:nth-child(3) .menus_item_child {\n    left: -125px;\n  }\n\n  /* 侧边栏个人信息卡片动态渐变色 */\n#aside-content > .card-widget.card-info {\n    background: linear-gradient(\n      -45deg,\n      #e8d8b9,\n      #eccec5,\n      #a3e9eb,\n      #bdbdf0,\n      #eec1ea\n    );\n    box-shadow: 0 0 5px rgb(66, 68, 68);\n    position: relative;\n    background-size: 400% 400%;\n    -webkit-animation: Gradient 10s ease infinite;\n    -moz-animation: Gradient 10s ease infinite;\n    animation: Gradient 10s ease infinite !important;\n  }\n  @-webkit-keyframes Gradient {\n    0% {\n      background-position: 0% 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0% 50%;\n    }\n  }\n  @-moz-keyframes Gradient {\n    0% {\n      background-position: 0% 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0% 50%;\n    }\n  }\n  @keyframes Gradient {\n    0% {\n      background-position: 0% 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0% 50%;\n    }\n  }\n  \n  /* 黑夜模式适配 */\n  [data-theme=\"dark\"] #aside-content > .card-widget.card-info {\n    background: #191919ee;\n  }\n  \n  /* 个人信息Follow me按钮 */\n  #aside-content > .card-widget.card-info > #card-info-btn {\n    background-color: #3eb8be;\n    border-radius: 8px;\n  }\n\n  :root {\n  --trans-light: rgba(255, 255, 255, 0.88);\n  --trans-dark: rgba(25, 25, 25, 0.88);\n  --border-style: 1px solid rgb(169, 169, 169);\n  --backdrop-filter: blur(5px) saturate(150%);\n}\n\n/* 首页文章卡片 */\n#recent-posts > .recent-post-item {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border-radius: 25px;\n  border: var(--border-style);\n}\n\n/* 首页侧栏卡片 */\n#aside-content .card-widget {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border-radius: 18px;\n  border: var(--border-style);\n}\n\n/* 文章页、归档页、普通页面 */\ndiv#post,\ndiv#page,\ndiv#archive {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border: var(--border-style);\n  border-radius: 20px;\n}\n\n/* 导航栏 */\n#page-header.nav-fixed #nav {\n  background: rgba(255, 255, 255, 0.75);\n  backdrop-filter: var(--backdrop-filter);\n}\n\n[data-theme=\"dark\"] #page-header.nav-fixed #nav {\n  background: rgba(0, 0, 0, 0.7) !important;\n}\n\n/* 夜间模式遮罩 */\n[data-theme=\"dark\"] #recent-posts > .recent-post-item,\n[data-theme=\"dark\"] #aside-content .card-widget,\n[data-theme=\"dark\"] div#post,\n[data-theme=\"dark\"] div#archive,\n[data-theme=\"dark\"] div#page {\n  background: var(--trans-dark);\n}\n\n\n/* 夜间模式页脚页头遮罩透明 */\n[data-theme=\"dark\"] #footer::before {\n  background: transparent !important;\n}\n[data-theme=\"dark\"] #page-header::before {\n  background: transparent !important;\n}\n\n/* 阅读模式 */\n.read-mode #aside-content .card-widget {\n  background: rgba(158, 204, 171, 0.5) !important;\n}\n.read-mode div#post {\n  background: rgba(158, 204, 171, 0.5) !important;\n}\n\n/* 夜间模式下的阅读模式 */\n[data-theme=\"dark\"] .read-mode #aside-content .card-widget {\n  background: rgba(25, 25, 25, 0.9) !important;\n  color: #ffffff;\n}\n[data-theme=\"dark\"] .read-mode div#post {\n  background: rgba(25, 25, 25, 0.9) !important;\n  color: #ffffff;\n}\n\n\n/* 页面调节 */\n:root {\n    --trans-light: rgba(255, 255, 255, 0.88);\n    --trans-dark: rgba(25, 25, 25, 0.88);\n    --border-style: 1px solid rgb(169, 169, 169);\n    --backdrop-filter: blur(5px) saturate(150%);\n  }\n  \n  /* 首页文章卡片 */\n  #recent-posts > .recent-post-item {\n    background: var(--trans-light);\n    backdrop-filter: var(--backdrop-filter);\n    border-radius: 25px;\n    border: var(--border-style);\n  }\n  \n  /* 首页侧栏卡片 */\n  #aside-content .card-widget {\n    background: var(--trans-light);\n    backdrop-filter: var(--backdrop-filter);\n    border-radius: 18px;\n    border: var(--border-style);\n  }\n  \n  /* 文章页、归档页、普通页面 */\n  div#post,\n  div#page,\n  div#archive {\n    background: var(--trans-light);\n    backdrop-filter: var(--backdrop-filter);\n    border: var(--border-style);\n    border-radius: 20px;\n  }\n  \n  /* 导航栏 */\n  #page-header.nav-fixed #nav {\n    background: rgba(255, 255, 255, 0.75);\n    backdrop-filter: var(--backdrop-filter);\n  }\n  \n  [data-theme=\"dark\"] #page-header.nav-fixed #nav {\n    background: rgba(0, 0, 0, 0.7) !important;\n  }\n  \n  /* 夜间模式遮罩 */\n  [data-theme=\"dark\"] #recent-posts > .recent-post-item,\n  [data-theme=\"dark\"] #aside-content .card-widget,\n  [data-theme=\"dark\"] div#post,\n  [data-theme=\"dark\"] div#archive,\n  [data-theme=\"dark\"] div#page {\n    background: var(--trans-dark);\n  }\n  \n  \n  /* 夜间模式页脚页头遮罩透明 */\n  [data-theme=\"dark\"] #footer::before {\n    background: transparent !important;\n  }\n  [data-theme=\"dark\"] #page-header::before {\n    background: transparent !important;\n  }\n  \n  /* 阅读模式 */\n  .read-mode #aside-content .card-widget {\n    background: rgba(158, 204, 171, 0.5) !important;\n  }\n  .read-mode div#post {\n    background: rgba(158, 204, 171, 0.5) !important;\n  }\n  \n  /* 夜间模式下的阅读模式 */\n  [data-theme=\"dark\"] .read-mode #aside-content .card-widget {\n    background: rgba(25, 25, 25, 0.9) !important;\n    color: #ffffff;\n  }\n  [data-theme=\"dark\"] .read-mode div#post {\n    background: rgba(25, 25, 25, 0.9) !important;\n    color: #ffffff;\n  }\n\n  /* 翻页按钮居中 */\n#pagination {\n  width: 100%;\n  margin: auto;\n}\n\n/* 自定义字体 */\n@font-face {\n  /* 为载入的字体取名字(随意) */\n  font-family: 'Zhi Mang Xing';\t\n  /* 字体文件地址(相对或者绝对路径都可以) */\n  src: url(https://fonts.googleapis.com/css);\n  /* 定义加粗样式(加粗多少) */\n  font-weight: normal;\n  /* 定义字体样式(斜体/非斜体) */\n  font-style: normal;\n  /* 定义显示样式 */\n  font-display: block;\n}\n\n@font-face {\n  font-family: 'Sacramento';\n  font-style: normal;\n  font-weight: 400;\n  src: url(https://fonts.googleapis.com/css?family);\n  unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n\n/* 黑夜霓虹灯 */\n/* 夜间模式菜单栏发光字 */\n[data-theme=\"dark\"] #nav .site-page,\n[data-theme=\"dark\"] #nav .menus_items .menus_item .menus_item_child li a {\n  text-shadow: 0 0 2px var(--theme-color) !important;\n}\n\n/* 手机端适配 */\n[data-theme=\"dark\"] #sidebar #sidebar-menus .menus_items .site-page {\n  text-shadow: 0 0 2px var(--theme-color) !important;\n}\n\n/* 闪烁变动颜色连续渐变 */\n#site-name,\n#site-title,\n#site-subtitle,\n#post-info,\n.author-info__name,\n.author-info__description {\n  transition: text-shadow 1s linear !important;\n}\n\n/* 黑夜霓虹灯2.0 */\n/* 日间模式不生效 */\n[data-theme=\"light\"] #site-name,\n[data-theme=\"light\"] #site-title,\n[data-theme=\"light\"] #site-subtitle,\n[data-theme=\"light\"] #post-info {\n  animation: none;\n}\n/* 夜间模式生效 */\n[data-theme=\"dark\"] #site-name,\n[data-theme=\"dark\"] #site-title {\n  animation: light_15px 10s linear infinite;\n}\n[data-theme=\"dark\"] #site-subtitle {\n  animation: light_10px 10s linear infinite;\n}\n[data-theme=\"dark\"] #post-info {\n  animation: light_5px 10s linear infinite;\n}\n/* 关键帧描述 */\n@keyframes light_15px {\n  0% {\n    text-shadow: #5636ed 0 0 15px;\n  }\n  12.5% {\n    text-shadow: #11ee5e 0 0 15px;\n  }\n  25% {\n    text-shadow: #f14747 0 0 15px;\n  }\n  37.5% {\n    text-shadow: #f1a247 0 0 15px;\n  }\n  50% {\n    text-shadow: #f1ee47 0 0 15px;\n  }\n  50% {\n    text-shadow: #b347f1 0 0 15px;\n  }\n  62.5% {\n    text-shadow: #002afa 0 0 15px;\n  }\n  75% {\n    text-shadow: #ed709b 0 0 15px;\n  }\n  87.5% {\n    text-shadow: #39c5bb 0 0 15px;\n  }\n  100% {\n    text-shadow: #5636ed 0 0 15px;\n  }\n}\n\n@keyframes light_10px {\n  0% {\n    text-shadow: #5636ed 0 0 10px;\n  }\n  12.5% {\n    text-shadow: #11ee5e 0 0 10px;\n  }\n  25% {\n    text-shadow: #f14747 0 0 10px;\n  }\n  37.5% {\n    text-shadow: #f1a247 0 0 10px;\n  }\n  50% {\n    text-shadow: #f1ee47 0 0 10px;\n  }\n  50% {\n    text-shadow: #b347f1 0 0 10px;\n  }\n  62.5% {\n    text-shadow: #002afa 0 0 10px;\n  }\n  75% {\n    text-shadow: #ed709b 0 0 10px;\n  }\n  87.5% {\n    text-shadow: #39c5bb 0 0 10px;\n  }\n  100% {\n    text-shadow: #5636ed 0 0 10px;\n  }\n}\n\n@keyframes light_5px {\n  0% {\n    text-shadow: #5636ed 0 0 5px;\n  }\n  12.5% {\n    text-shadow: #11ee5e 0 0 5px;\n  }\n  25% {\n    text-shadow: #f14747 0 0 5px;\n  }\n  37.5% {\n    text-shadow: #f1a247 0 0 15px;\n  }\n  50% {\n    text-shadow: #f1ee47 0 0 5px;\n  }\n  50% {\n    text-shadow: #b347f1 0 0 5px;\n  }\n  62.5% {\n    text-shadow: #002afa 0 0 5px;\n  }\n  75% {\n    text-shadow: #ed709b 0 0 5px;\n  }\n  87.5% {\n    text-shadow: #39c5bb 0 0 5px;\n  }\n  100% {\n    text-shadow: #5636ed 0 0 5px;\n  }\n}\n\n/* 页面样式调节 */\n:root {\n  --trans-light: rgba(255, 255, 255, 0.88);\n  --trans-dark: rgba(25, 25, 25, 0.88);\n  --border-style: 1px solid rgb(169, 169, 169);\n  --backdrop-filter: blur(5px) saturate(150%);\n}\n\n/* 首页文章卡片 */\n#recent-posts > .recent-post-item {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border-radius: 25px;\n  border: var(--border-style);\n}\n\n/* 首页侧栏卡片 */\n#aside-content .card-widget {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border-radius: 18px;\n  border: var(--border-style);\n}\n\n/* 文章页、归档页、普通页面 */\ndiv#post,\ndiv#page,\ndiv#archive {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border: var(--border-style);\n  border-radius: 20px;\n}\n\n/* 导航栏 */\n#page-header.nav-fixed #nav {\n  background: rgba(255, 255, 255, 0.75);\n  backdrop-filter: var(--backdrop-filter);\n}\n\n[data-theme=\"dark\"] #page-header.nav-fixed #nav {\n  background: rgba(0, 0, 0, 0.7) !important;\n}\n\n/* 夜间模式遮罩 */\n[data-theme=\"dark\"] #recent-posts > .recent-post-item,\n[data-theme=\"dark\"] #aside-content .card-widget,\n[data-theme=\"dark\"] div#post,\n[data-theme=\"dark\"] div#archive,\n[data-theme=\"dark\"] div#page {\n  background: var(--trans-dark);\n}\n\n\n/* 夜间模式页脚页头遮罩透明 */\n[data-theme=\"dark\"] #footer::before {\n  background: transparent !important;\n}\n[data-theme=\"dark\"] #page-header::before {\n  background: transparent !important;\n}\n\n/* 阅读模式 */\n.read-mode #aside-content .card-widget {\n  background: rgba(158, 204, 171, 0.5) !important;\n}\n.read-mode div#post {\n  background: rgba(158, 204, 171, 0.5) !important;\n}\n\n/* 夜间模式下的阅读模式 */\n[data-theme=\"dark\"] .read-mode #aside-content .card-widget {\n  background: rgba(25, 25, 25, 0.9) !important;\n  color: #ffffff;\n}\n[data-theme=\"dark\"] .read-mode div#post {\n  background: rgba(25, 25, 25, 0.9) !important;\n  color: #ffffff;\n}\n\n/*哔哩哔哩视频适配*/\n.aspect-ratio {\n  position: relative;\n  width: 90%;\n  height: auto;\n  padding-bottom: 75%;\n  margin: 3% auto;\n  text-align: center;\n}\n.aspect-ratio iframe {\n  position: absolute;\n  width: 100%;\n  height: 86%;\n  left: 0;\n  top: 0;\n}\n\n/* 挂绳小猫 */\n\nbody::-webkit-scrollbar {\n  width: 0;\n}\n\n.neko {\n  width: 64px;\n  height: 64px;\n  background-image: url(\"https://bu.dusays.com/2022/07/20/62d812db74be9.png\");\n  position: absolute;\n  right: 32px;\n  background-repeat: no-repeat;\n  background-size: contain;\n  transform: translateX(50%);\n  cursor: pointer;\n  font-family: tzy;\n  font-weight: 600;\n  font-size: 16px;\n  color: #6f42c1;\n  display: none;\n}\n\n.neko::after {\n  display: none;\n  width: 100px;\n  height: 100px;\n  background-image: url(\"https://bu.dusays.com/2022/07/20/62d812d95e6f5.png\");\n  background-size: contain;\n  z-index: 9999;\n  position: absolute;\n  right: 50%;\n  text-align: center;\n  line-height: 100px;\n  top: -115%;\n\n}\n\n.neko.showMsg::after {\n  content: attr(data-msg);\n  display: block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.neko:hover::after {\n  content: attr(data-msg);\n  display: block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.neko.fontColor::after {\n  color: #333;\n}\n\n/**\n* @description: 滚动条样式  跟猫二选一\n*/\n@media screen and (max-width:992px) {\n  ::-webkit-scrollbar {\n      width: 8px !important;\n      height: 8px !important\n  }\n\n  ::-webkit-scrollbar-track {\n      border-radius: 2em;\n  }\n\n  ::-webkit-scrollbar-thumb {\n      background-color: rgb(255 255 255 / .3);\n      background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent);\n      border-radius: 2em\n  }\n\n  ::-webkit-scrollbar-corner {\n      background-color: transparent\n  }\n}\n\n/* 右边按钮阅读进度 */\n/* 返回顶部 */\n\nbutton#go-up #percent {\n  display: none;\n  font-weight: bold;\n  font-size: 15px !important;\n}\n\nbutton#go-up span {\n  font-size: 12px!important;\n  margin-right: -1px;\n}\n\n/* 鼠标滑动到按钮上时显示返回顶部图标 */\nbutton#go-up:hover i {\n  display: block !important;\n}\n\nbutton#go-up:hover #percent {\n  display: none !important;\n}\n\n/* 用户地理位置欢迎信息 */\n:root {\n  --ichika-color: #3c6ae7;\n}\n\n/* 公告&欢迎页 */\n.card-announcement {\n  line-height:30px;\n  font-size:16px;\n}\n\n.card-announcement .item-headline span{\n  margin-left:0!important;\n}\n\n.card-announcement span{\n  font-weight:bold;\n  font-size:20px!important;\n  color:var(--ichika-color);\n}\n\n","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"Vue","color":"#b8f0ae","icon":"https://img02.anheyu.com/adminuploads/1/2022/09/25/633001374747b.png"}]}],"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"}]}]}},"cover":false,"excerpt":"","more":"\n\n\n/* 一图流 */\n/* 页脚与头图透明 */\n#footer {\n    background: transparent !important;\n  }\n  #page-header {\n    background: transparent !important;\n  }\n  \n  /* 白天模式遮罩透明 */\n  #footer::before {\n    background: transparent !important;\n  }\n  #page-header::before {\n    background: transparent !important;\n  }\n  \n  /* 夜间模式遮罩透明 */\n  [data-theme=\"dark\"] #footer::before {\n    background: transparent !important;\n  }\n  [data-theme=\"dark\"] #page-header::before {\n    background: transparent !important;\n  }\n\n\n  /* 小冰分类分类磁铁黑夜模式适配 */\n/* 一般状态 */\n[data-theme=\"dark\"] .magnet_link_context {\n    background: #1e1e1e;\n    color: antiquewhite;\n  }\n  /* 鼠标悬浮状态 */\n  [data-theme=\"dark\"] .magnet_link_context:hover {\n    background: #3ecdf1;\n    color: #f2f2f2;\n  }\n\n  /* 一级菜单居中 */\n#nav .menus_items {\n    position: absolute !important;\n    width: fit-content !important;\n    left: 50% !important;\n    transform: translateX(-50%) !important;\n  }\n  /* 子菜单横向展示 */\n  #nav .menus_items .menus_item:hover .menus_item_child {\n    display: flex !important;\n  }\n  /* 这里的2是代表导航栏的第2个元素，即有子菜单的元素，可以按自己需求修改 */\n  .menus_items .menus_item:nth-child(3) .menus_item_child {\n    left: -125px;\n  }\n\n  /* 侧边栏个人信息卡片动态渐变色 */\n#aside-content > .card-widget.card-info {\n    background: linear-gradient(\n      -45deg,\n      #e8d8b9,\n      #eccec5,\n      #a3e9eb,\n      #bdbdf0,\n      #eec1ea\n    );\n    box-shadow: 0 0 5px rgb(66, 68, 68);\n    position: relative;\n    background-size: 400% 400%;\n    -webkit-animation: Gradient 10s ease infinite;\n    -moz-animation: Gradient 10s ease infinite;\n    animation: Gradient 10s ease infinite !important;\n  }\n  @-webkit-keyframes Gradient {\n    0% {\n      background-position: 0% 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0% 50%;\n    }\n  }\n  @-moz-keyframes Gradient {\n    0% {\n      background-position: 0% 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0% 50%;\n    }\n  }\n  @keyframes Gradient {\n    0% {\n      background-position: 0% 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0% 50%;\n    }\n  }\n  \n  /* 黑夜模式适配 */\n  [data-theme=\"dark\"] #aside-content > .card-widget.card-info {\n    background: #191919ee;\n  }\n  \n  /* 个人信息Follow me按钮 */\n  #aside-content > .card-widget.card-info > #card-info-btn {\n    background-color: #3eb8be;\n    border-radius: 8px;\n  }\n\n  :root {\n  --trans-light: rgba(255, 255, 255, 0.88);\n  --trans-dark: rgba(25, 25, 25, 0.88);\n  --border-style: 1px solid rgb(169, 169, 169);\n  --backdrop-filter: blur(5px) saturate(150%);\n}\n\n/* 首页文章卡片 */\n#recent-posts > .recent-post-item {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border-radius: 25px;\n  border: var(--border-style);\n}\n\n/* 首页侧栏卡片 */\n#aside-content .card-widget {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border-radius: 18px;\n  border: var(--border-style);\n}\n\n/* 文章页、归档页、普通页面 */\ndiv#post,\ndiv#page,\ndiv#archive {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border: var(--border-style);\n  border-radius: 20px;\n}\n\n/* 导航栏 */\n#page-header.nav-fixed #nav {\n  background: rgba(255, 255, 255, 0.75);\n  backdrop-filter: var(--backdrop-filter);\n}\n\n[data-theme=\"dark\"] #page-header.nav-fixed #nav {\n  background: rgba(0, 0, 0, 0.7) !important;\n}\n\n/* 夜间模式遮罩 */\n[data-theme=\"dark\"] #recent-posts > .recent-post-item,\n[data-theme=\"dark\"] #aside-content .card-widget,\n[data-theme=\"dark\"] div#post,\n[data-theme=\"dark\"] div#archive,\n[data-theme=\"dark\"] div#page {\n  background: var(--trans-dark);\n}\n\n\n/* 夜间模式页脚页头遮罩透明 */\n[data-theme=\"dark\"] #footer::before {\n  background: transparent !important;\n}\n[data-theme=\"dark\"] #page-header::before {\n  background: transparent !important;\n}\n\n/* 阅读模式 */\n.read-mode #aside-content .card-widget {\n  background: rgba(158, 204, 171, 0.5) !important;\n}\n.read-mode div#post {\n  background: rgba(158, 204, 171, 0.5) !important;\n}\n\n/* 夜间模式下的阅读模式 */\n[data-theme=\"dark\"] .read-mode #aside-content .card-widget {\n  background: rgba(25, 25, 25, 0.9) !important;\n  color: #ffffff;\n}\n[data-theme=\"dark\"] .read-mode div#post {\n  background: rgba(25, 25, 25, 0.9) !important;\n  color: #ffffff;\n}\n\n\n/* 页面调节 */\n:root {\n    --trans-light: rgba(255, 255, 255, 0.88);\n    --trans-dark: rgba(25, 25, 25, 0.88);\n    --border-style: 1px solid rgb(169, 169, 169);\n    --backdrop-filter: blur(5px) saturate(150%);\n  }\n  \n  /* 首页文章卡片 */\n  #recent-posts > .recent-post-item {\n    background: var(--trans-light);\n    backdrop-filter: var(--backdrop-filter);\n    border-radius: 25px;\n    border: var(--border-style);\n  }\n  \n  /* 首页侧栏卡片 */\n  #aside-content .card-widget {\n    background: var(--trans-light);\n    backdrop-filter: var(--backdrop-filter);\n    border-radius: 18px;\n    border: var(--border-style);\n  }\n  \n  /* 文章页、归档页、普通页面 */\n  div#post,\n  div#page,\n  div#archive {\n    background: var(--trans-light);\n    backdrop-filter: var(--backdrop-filter);\n    border: var(--border-style);\n    border-radius: 20px;\n  }\n  \n  /* 导航栏 */\n  #page-header.nav-fixed #nav {\n    background: rgba(255, 255, 255, 0.75);\n    backdrop-filter: var(--backdrop-filter);\n  }\n  \n  [data-theme=\"dark\"] #page-header.nav-fixed #nav {\n    background: rgba(0, 0, 0, 0.7) !important;\n  }\n  \n  /* 夜间模式遮罩 */\n  [data-theme=\"dark\"] #recent-posts > .recent-post-item,\n  [data-theme=\"dark\"] #aside-content .card-widget,\n  [data-theme=\"dark\"] div#post,\n  [data-theme=\"dark\"] div#archive,\n  [data-theme=\"dark\"] div#page {\n    background: var(--trans-dark);\n  }\n  \n  \n  /* 夜间模式页脚页头遮罩透明 */\n  [data-theme=\"dark\"] #footer::before {\n    background: transparent !important;\n  }\n  [data-theme=\"dark\"] #page-header::before {\n    background: transparent !important;\n  }\n  \n  /* 阅读模式 */\n  .read-mode #aside-content .card-widget {\n    background: rgba(158, 204, 171, 0.5) !important;\n  }\n  .read-mode div#post {\n    background: rgba(158, 204, 171, 0.5) !important;\n  }\n  \n  /* 夜间模式下的阅读模式 */\n  [data-theme=\"dark\"] .read-mode #aside-content .card-widget {\n    background: rgba(25, 25, 25, 0.9) !important;\n    color: #ffffff;\n  }\n  [data-theme=\"dark\"] .read-mode div#post {\n    background: rgba(25, 25, 25, 0.9) !important;\n    color: #ffffff;\n  }\n\n  /* 翻页按钮居中 */\n#pagination {\n  width: 100%;\n  margin: auto;\n}\n\n/* 自定义字体 */\n@font-face {\n  /* 为载入的字体取名字(随意) */\n  font-family: 'Zhi Mang Xing';\t\n  /* 字体文件地址(相对或者绝对路径都可以) */\n  src: url(https://fonts.googleapis.com/css);\n  /* 定义加粗样式(加粗多少) */\n  font-weight: normal;\n  /* 定义字体样式(斜体/非斜体) */\n  font-style: normal;\n  /* 定义显示样式 */\n  font-display: block;\n}\n\n@font-face {\n  font-family: 'Sacramento';\n  font-style: normal;\n  font-weight: 400;\n  src: url(https://fonts.googleapis.com/css?family);\n  unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n\n/* 黑夜霓虹灯 */\n/* 夜间模式菜单栏发光字 */\n[data-theme=\"dark\"] #nav .site-page,\n[data-theme=\"dark\"] #nav .menus_items .menus_item .menus_item_child li a {\n  text-shadow: 0 0 2px var(--theme-color) !important;\n}\n\n/* 手机端适配 */\n[data-theme=\"dark\"] #sidebar #sidebar-menus .menus_items .site-page {\n  text-shadow: 0 0 2px var(--theme-color) !important;\n}\n\n/* 闪烁变动颜色连续渐变 */\n#site-name,\n#site-title,\n#site-subtitle,\n#post-info,\n.author-info__name,\n.author-info__description {\n  transition: text-shadow 1s linear !important;\n}\n\n/* 黑夜霓虹灯2.0 */\n/* 日间模式不生效 */\n[data-theme=\"light\"] #site-name,\n[data-theme=\"light\"] #site-title,\n[data-theme=\"light\"] #site-subtitle,\n[data-theme=\"light\"] #post-info {\n  animation: none;\n}\n/* 夜间模式生效 */\n[data-theme=\"dark\"] #site-name,\n[data-theme=\"dark\"] #site-title {\n  animation: light_15px 10s linear infinite;\n}\n[data-theme=\"dark\"] #site-subtitle {\n  animation: light_10px 10s linear infinite;\n}\n[data-theme=\"dark\"] #post-info {\n  animation: light_5px 10s linear infinite;\n}\n/* 关键帧描述 */\n@keyframes light_15px {\n  0% {\n    text-shadow: #5636ed 0 0 15px;\n  }\n  12.5% {\n    text-shadow: #11ee5e 0 0 15px;\n  }\n  25% {\n    text-shadow: #f14747 0 0 15px;\n  }\n  37.5% {\n    text-shadow: #f1a247 0 0 15px;\n  }\n  50% {\n    text-shadow: #f1ee47 0 0 15px;\n  }\n  50% {\n    text-shadow: #b347f1 0 0 15px;\n  }\n  62.5% {\n    text-shadow: #002afa 0 0 15px;\n  }\n  75% {\n    text-shadow: #ed709b 0 0 15px;\n  }\n  87.5% {\n    text-shadow: #39c5bb 0 0 15px;\n  }\n  100% {\n    text-shadow: #5636ed 0 0 15px;\n  }\n}\n\n@keyframes light_10px {\n  0% {\n    text-shadow: #5636ed 0 0 10px;\n  }\n  12.5% {\n    text-shadow: #11ee5e 0 0 10px;\n  }\n  25% {\n    text-shadow: #f14747 0 0 10px;\n  }\n  37.5% {\n    text-shadow: #f1a247 0 0 10px;\n  }\n  50% {\n    text-shadow: #f1ee47 0 0 10px;\n  }\n  50% {\n    text-shadow: #b347f1 0 0 10px;\n  }\n  62.5% {\n    text-shadow: #002afa 0 0 10px;\n  }\n  75% {\n    text-shadow: #ed709b 0 0 10px;\n  }\n  87.5% {\n    text-shadow: #39c5bb 0 0 10px;\n  }\n  100% {\n    text-shadow: #5636ed 0 0 10px;\n  }\n}\n\n@keyframes light_5px {\n  0% {\n    text-shadow: #5636ed 0 0 5px;\n  }\n  12.5% {\n    text-shadow: #11ee5e 0 0 5px;\n  }\n  25% {\n    text-shadow: #f14747 0 0 5px;\n  }\n  37.5% {\n    text-shadow: #f1a247 0 0 15px;\n  }\n  50% {\n    text-shadow: #f1ee47 0 0 5px;\n  }\n  50% {\n    text-shadow: #b347f1 0 0 5px;\n  }\n  62.5% {\n    text-shadow: #002afa 0 0 5px;\n  }\n  75% {\n    text-shadow: #ed709b 0 0 5px;\n  }\n  87.5% {\n    text-shadow: #39c5bb 0 0 5px;\n  }\n  100% {\n    text-shadow: #5636ed 0 0 5px;\n  }\n}\n\n/* 页面样式调节 */\n:root {\n  --trans-light: rgba(255, 255, 255, 0.88);\n  --trans-dark: rgba(25, 25, 25, 0.88);\n  --border-style: 1px solid rgb(169, 169, 169);\n  --backdrop-filter: blur(5px) saturate(150%);\n}\n\n/* 首页文章卡片 */\n#recent-posts > .recent-post-item {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border-radius: 25px;\n  border: var(--border-style);\n}\n\n/* 首页侧栏卡片 */\n#aside-content .card-widget {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border-radius: 18px;\n  border: var(--border-style);\n}\n\n/* 文章页、归档页、普通页面 */\ndiv#post,\ndiv#page,\ndiv#archive {\n  background: var(--trans-light);\n  backdrop-filter: var(--backdrop-filter);\n  border: var(--border-style);\n  border-radius: 20px;\n}\n\n/* 导航栏 */\n#page-header.nav-fixed #nav {\n  background: rgba(255, 255, 255, 0.75);\n  backdrop-filter: var(--backdrop-filter);\n}\n\n[data-theme=\"dark\"] #page-header.nav-fixed #nav {\n  background: rgba(0, 0, 0, 0.7) !important;\n}\n\n/* 夜间模式遮罩 */\n[data-theme=\"dark\"] #recent-posts > .recent-post-item,\n[data-theme=\"dark\"] #aside-content .card-widget,\n[data-theme=\"dark\"] div#post,\n[data-theme=\"dark\"] div#archive,\n[data-theme=\"dark\"] div#page {\n  background: var(--trans-dark);\n}\n\n\n/* 夜间模式页脚页头遮罩透明 */\n[data-theme=\"dark\"] #footer::before {\n  background: transparent !important;\n}\n[data-theme=\"dark\"] #page-header::before {\n  background: transparent !important;\n}\n\n/* 阅读模式 */\n.read-mode #aside-content .card-widget {\n  background: rgba(158, 204, 171, 0.5) !important;\n}\n.read-mode div#post {\n  background: rgba(158, 204, 171, 0.5) !important;\n}\n\n/* 夜间模式下的阅读模式 */\n[data-theme=\"dark\"] .read-mode #aside-content .card-widget {\n  background: rgba(25, 25, 25, 0.9) !important;\n  color: #ffffff;\n}\n[data-theme=\"dark\"] .read-mode div#post {\n  background: rgba(25, 25, 25, 0.9) !important;\n  color: #ffffff;\n}\n\n/*哔哩哔哩视频适配*/\n.aspect-ratio {\n  position: relative;\n  width: 90%;\n  height: auto;\n  padding-bottom: 75%;\n  margin: 3% auto;\n  text-align: center;\n}\n.aspect-ratio iframe {\n  position: absolute;\n  width: 100%;\n  height: 86%;\n  left: 0;\n  top: 0;\n}\n\n/* 挂绳小猫 */\n\nbody::-webkit-scrollbar {\n  width: 0;\n}\n\n.neko {\n  width: 64px;\n  height: 64px;\n  background-image: url(\"https://bu.dusays.com/2022/07/20/62d812db74be9.png\");\n  position: absolute;\n  right: 32px;\n  background-repeat: no-repeat;\n  background-size: contain;\n  transform: translateX(50%);\n  cursor: pointer;\n  font-family: tzy;\n  font-weight: 600;\n  font-size: 16px;\n  color: #6f42c1;\n  display: none;\n}\n\n.neko::after {\n  display: none;\n  width: 100px;\n  height: 100px;\n  background-image: url(\"https://bu.dusays.com/2022/07/20/62d812d95e6f5.png\");\n  background-size: contain;\n  z-index: 9999;\n  position: absolute;\n  right: 50%;\n  text-align: center;\n  line-height: 100px;\n  top: -115%;\n\n}\n\n.neko.showMsg::after {\n  content: attr(data-msg);\n  display: block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.neko:hover::after {\n  content: attr(data-msg);\n  display: block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.neko.fontColor::after {\n  color: #333;\n}\n\n/**\n* @description: 滚动条样式  跟猫二选一\n*/\n@media screen and (max-width:992px) {\n  ::-webkit-scrollbar {\n      width: 8px !important;\n      height: 8px !important\n  }\n\n  ::-webkit-scrollbar-track {\n      border-radius: 2em;\n  }\n\n  ::-webkit-scrollbar-thumb {\n      background-color: rgb(255 255 255 / .3);\n      background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent);\n      border-radius: 2em\n  }\n\n  ::-webkit-scrollbar-corner {\n      background-color: transparent\n  }\n}\n\n/* 右边按钮阅读进度 */\n/* 返回顶部 */\n\nbutton#go-up #percent {\n  display: none;\n  font-weight: bold;\n  font-size: 15px !important;\n}\n\nbutton#go-up span {\n  font-size: 12px!important;\n  margin-right: -1px;\n}\n\n/* 鼠标滑动到按钮上时显示返回顶部图标 */\nbutton#go-up:hover i {\n  display: block !important;\n}\n\nbutton#go-up:hover #percent {\n  display: none !important;\n}\n\n/* 用户地理位置欢迎信息 */\n:root {\n  --ichika-color: #3c6ae7;\n}\n\n/* 公告&欢迎页 */\n.card-announcement {\n  line-height:30px;\n  font-size:16px;\n}\n\n.card-announcement .item-headline span{\n  margin-left:0!important;\n}\n\n.card-announcement span{\n  font-weight:bold;\n  font-size:20px!important;\n  color:var(--ichika-color);\n}\n\n"},{"_content":".pace {\n    -webkit-pointer-events: none;\n    pointer-events: none;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n    z-index: 2000;\n    position: fixed;\n    margin: auto;\n    top: 10px;\n    left: 0;\n    right: 0;\n    height: 8px;\n    border-radius: 8px;\n    width: 4rem;\n    background: #eaecf2;\n    border: 1px #e3e8f7;\n    overflow: hidden;\n  }\n  \n  .pace-inactive .pace-progress {\n    opacity: 0;\n    transition: 0.3s ease-in;\n  }\n  \n  .pace .pace-progress {\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -ms-box-sizing: border-box;\n    -o-box-sizing: border-box;\n    box-sizing: border-box;\n    -webkit-transform: translate3d(0, 0, 0);\n    -moz-transform: translate3d(0, 0, 0);\n    -ms-transform: translate3d(0, 0, 0);\n    -o-transform: translate3d(0, 0, 0);\n    transform: translate3d(0, 0, 0);\n    max-width: 200px;\n    position: absolute;\n    z-index: 2000;\n    display: block;\n    top: 0;\n    right: 100%;\n    height: 100%;\n    width: 100%;\n    background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);\n    animation: gradient 1.5s ease infinite;\n    background-size: 200%;\n  }\n  \n  .pace.pace-inactive {\n    opacity: 0;\n    transition: 0.3s;\n    top: -8px;\n  }\n  @keyframes gradient {\n    0% {\n      background-position: 0% 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0% 50%;\n    }\n  }\n\n.loading-img {\n    background: url(https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202402040904729.webp) no-repeat center center;\n    background-size: cover;\n  }","source":"css/progress_bar.css","raw":".pace {\n    -webkit-pointer-events: none;\n    pointer-events: none;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n    z-index: 2000;\n    position: fixed;\n    margin: auto;\n    top: 10px;\n    left: 0;\n    right: 0;\n    height: 8px;\n    border-radius: 8px;\n    width: 4rem;\n    background: #eaecf2;\n    border: 1px #e3e8f7;\n    overflow: hidden;\n  }\n  \n  .pace-inactive .pace-progress {\n    opacity: 0;\n    transition: 0.3s ease-in;\n  }\n  \n  .pace .pace-progress {\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -ms-box-sizing: border-box;\n    -o-box-sizing: border-box;\n    box-sizing: border-box;\n    -webkit-transform: translate3d(0, 0, 0);\n    -moz-transform: translate3d(0, 0, 0);\n    -ms-transform: translate3d(0, 0, 0);\n    -o-transform: translate3d(0, 0, 0);\n    transform: translate3d(0, 0, 0);\n    max-width: 200px;\n    position: absolute;\n    z-index: 2000;\n    display: block;\n    top: 0;\n    right: 100%;\n    height: 100%;\n    width: 100%;\n    background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);\n    animation: gradient 1.5s ease infinite;\n    background-size: 200%;\n  }\n  \n  .pace.pace-inactive {\n    opacity: 0;\n    transition: 0.3s;\n    top: -8px;\n  }\n  @keyframes gradient {\n    0% {\n      background-position: 0% 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0% 50%;\n    }\n  }\n\n.loading-img {\n    background: url(https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202402040904729.webp) no-repeat center center;\n    background-size: cover;\n  }","date":"2024-07-11T09:18:34.460Z","updated":"2024-07-11T09:18:34.460Z","path":"css/progress_bar.css","layout":"false","title":"","comments":1,"_id":"clyh2ogn60008e0dsfn1i2a2i","content":".pace {\n    -webkit-pointer-events: none;\n    pointer-events: none;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n    z-index: 2000;\n    position: fixed;\n    margin: auto;\n    top: 10px;\n    left: 0;\n    right: 0;\n    height: 8px;\n    border-radius: 8px;\n    width: 4rem;\n    background: #eaecf2;\n    border: 1px #e3e8f7;\n    overflow: hidden;\n  }\n  \n  .pace-inactive .pace-progress {\n    opacity: 0;\n    transition: 0.3s ease-in;\n  }\n  \n  .pace .pace-progress {\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -ms-box-sizing: border-box;\n    -o-box-sizing: border-box;\n    box-sizing: border-box;\n    -webkit-transform: translate3d(0, 0, 0);\n    -moz-transform: translate3d(0, 0, 0);\n    -ms-transform: translate3d(0, 0, 0);\n    -o-transform: translate3d(0, 0, 0);\n    transform: translate3d(0, 0, 0);\n    max-width: 200px;\n    position: absolute;\n    z-index: 2000;\n    display: block;\n    top: 0;\n    right: 100%;\n    height: 100%;\n    width: 100%;\n    background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);\n    animation: gradient 1.5s ease infinite;\n    background-size: 200%;\n  }\n  \n  .pace.pace-inactive {\n    opacity: 0;\n    transition: 0.3s;\n    top: -8px;\n  }\n  @keyframes gradient {\n    0% {\n      background-position: 0% 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0% 50%;\n    }\n  }\n\n.loading-img {\n    background: url(https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202402040904729.webp) no-repeat center center;\n    background-size: cover;\n  }","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"Vue","color":"#b8f0ae","icon":"https://img02.anheyu.com/adminuploads/1/2022/09/25/633001374747b.png"}]}],"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"}]}]}},"cover":false,"excerpt":"","more":".pace {\n    -webkit-pointer-events: none;\n    pointer-events: none;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n    z-index: 2000;\n    position: fixed;\n    margin: auto;\n    top: 10px;\n    left: 0;\n    right: 0;\n    height: 8px;\n    border-radius: 8px;\n    width: 4rem;\n    background: #eaecf2;\n    border: 1px #e3e8f7;\n    overflow: hidden;\n  }\n  \n  .pace-inactive .pace-progress {\n    opacity: 0;\n    transition: 0.3s ease-in;\n  }\n  \n  .pace .pace-progress {\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -ms-box-sizing: border-box;\n    -o-box-sizing: border-box;\n    box-sizing: border-box;\n    -webkit-transform: translate3d(0, 0, 0);\n    -moz-transform: translate3d(0, 0, 0);\n    -ms-transform: translate3d(0, 0, 0);\n    -o-transform: translate3d(0, 0, 0);\n    transform: translate3d(0, 0, 0);\n    max-width: 200px;\n    position: absolute;\n    z-index: 2000;\n    display: block;\n    top: 0;\n    right: 100%;\n    height: 100%;\n    width: 100%;\n    background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);\n    animation: gradient 1.5s ease infinite;\n    background-size: 200%;\n  }\n  \n  .pace.pace-inactive {\n    opacity: 0;\n    transition: 0.3s;\n    top: -8px;\n  }\n  @keyframes gradient {\n    0% {\n      background-position: 0% 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0% 50%;\n    }\n  }\n\n.loading-img {\n    background: url(https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202402040904729.webp) no-repeat center center;\n    background-size: cover;\n  }"},{"_content":"/*电子钟字体*/\n@font-face {\n    font-family: 'UnidreamLED';\n    src: url(\"https://cdn.jsdelivr.net/npm/akilar-candyassets/fonts/UnidreamLED.ttf\");\n    font-display: swap;\n  }\n  div#runtime {\n    width: 180px;\n    margin: auto;\n    color: #fff;\n    padding-inline: 5px;\n    border-radius: 10px;\n    background-color: rgba(0,0,0,0.7);\n    font-family: 'UnidreamLED';\n  }\n  [data-theme=\"dark\"] div#runtime {\n    color: #28b4c8;\n    box-shadow: 0 0 5px rgba(28,69,218,0.71);\n    animation: flashlight 1s linear infinite alternate;\n  }\n  /*悬停显示徽标提示语*/\n  a.github-badge:hover:before {\n    position: fixed;\n    width: fit-content;\n    margin: auto;\n    left: 0;\n    right: 0;\n    top: 10%;\n    border-radius: 10px;\n    text-align: center;\n    z-index: 100;\n    content: attr(data-title);\n    font-size: 20px;\n    color: #fff;\n    padding: 10px;\n    background-color: var(--text-bg-hover);\n  }\n  [data-theme=dark] a.github-badge:hover:before {\n    background-color: rgba(18,18,18,0.8);\n  }\n  @-moz-keyframes flashlight {\n    from {\n      box-shadow: 0 0 5px #1478d2;\n    }\n    to {\n      box-shadow: 0 0 2px #1478d2;\n    }\n  }\n  @-webkit-keyframes flashlight {\n    from {\n      box-shadow: 0 0 5px #1478d2;\n    }\n    to {\n      box-shadow: 0 0 2px #1478d2;\n    }\n  }\n  @-o-keyframes flashlight {\n    from {\n      box-shadow: 0 0 5px #1478d2;\n    }\n    to {\n      box-shadow: 0 0 2px #1478d2;\n    }\n  }\n  @keyframes flashlight {\n    from {\n      box-shadow: 0 0 5px #1478d2;\n    }\n    to {\n      box-shadow: 0 0 2px #1478d2;\n    }\n  }\n\n  ","source":"css/runtime.css","raw":"/*电子钟字体*/\n@font-face {\n    font-family: 'UnidreamLED';\n    src: url(\"https://cdn.jsdelivr.net/npm/akilar-candyassets/fonts/UnidreamLED.ttf\");\n    font-display: swap;\n  }\n  div#runtime {\n    width: 180px;\n    margin: auto;\n    color: #fff;\n    padding-inline: 5px;\n    border-radius: 10px;\n    background-color: rgba(0,0,0,0.7);\n    font-family: 'UnidreamLED';\n  }\n  [data-theme=\"dark\"] div#runtime {\n    color: #28b4c8;\n    box-shadow: 0 0 5px rgba(28,69,218,0.71);\n    animation: flashlight 1s linear infinite alternate;\n  }\n  /*悬停显示徽标提示语*/\n  a.github-badge:hover:before {\n    position: fixed;\n    width: fit-content;\n    margin: auto;\n    left: 0;\n    right: 0;\n    top: 10%;\n    border-radius: 10px;\n    text-align: center;\n    z-index: 100;\n    content: attr(data-title);\n    font-size: 20px;\n    color: #fff;\n    padding: 10px;\n    background-color: var(--text-bg-hover);\n  }\n  [data-theme=dark] a.github-badge:hover:before {\n    background-color: rgba(18,18,18,0.8);\n  }\n  @-moz-keyframes flashlight {\n    from {\n      box-shadow: 0 0 5px #1478d2;\n    }\n    to {\n      box-shadow: 0 0 2px #1478d2;\n    }\n  }\n  @-webkit-keyframes flashlight {\n    from {\n      box-shadow: 0 0 5px #1478d2;\n    }\n    to {\n      box-shadow: 0 0 2px #1478d2;\n    }\n  }\n  @-o-keyframes flashlight {\n    from {\n      box-shadow: 0 0 5px #1478d2;\n    }\n    to {\n      box-shadow: 0 0 2px #1478d2;\n    }\n  }\n  @keyframes flashlight {\n    from {\n      box-shadow: 0 0 5px #1478d2;\n    }\n    to {\n      box-shadow: 0 0 2px #1478d2;\n    }\n  }\n\n  ","date":"2024-07-11T08:42:04.599Z","updated":"2024-07-11T08:42:04.599Z","path":"css/runtime.css","layout":"false","title":"","comments":1,"_id":"clyh2ogn7000ae0ds56hr6un9","content":"/*电子钟字体*/\n@font-face {\n    font-family: 'UnidreamLED';\n    src: url(\"https://cdn.jsdelivr.net/npm/akilar-candyassets/fonts/UnidreamLED.ttf\");\n    font-display: swap;\n  }\n  div#runtime {\n    width: 180px;\n    margin: auto;\n    color: #fff;\n    padding-inline: 5px;\n    border-radius: 10px;\n    background-color: rgba(0,0,0,0.7);\n    font-family: 'UnidreamLED';\n  }\n  [data-theme=\"dark\"] div#runtime {\n    color: #28b4c8;\n    box-shadow: 0 0 5px rgba(28,69,218,0.71);\n    animation: flashlight 1s linear infinite alternate;\n  }\n  /*悬停显示徽标提示语*/\n  a.github-badge:hover:before {\n    position: fixed;\n    width: fit-content;\n    margin: auto;\n    left: 0;\n    right: 0;\n    top: 10%;\n    border-radius: 10px;\n    text-align: center;\n    z-index: 100;\n    content: attr(data-title);\n    font-size: 20px;\n    color: #fff;\n    padding: 10px;\n    background-color: var(--text-bg-hover);\n  }\n  [data-theme=dark] a.github-badge:hover:before {\n    background-color: rgba(18,18,18,0.8);\n  }\n  @-moz-keyframes flashlight {\n    from {\n      box-shadow: 0 0 5px #1478d2;\n    }\n    to {\n      box-shadow: 0 0 2px #1478d2;\n    }\n  }\n  @-webkit-keyframes flashlight {\n    from {\n      box-shadow: 0 0 5px #1478d2;\n    }\n    to {\n      box-shadow: 0 0 2px #1478d2;\n    }\n  }\n  @-o-keyframes flashlight {\n    from {\n      box-shadow: 0 0 5px #1478d2;\n    }\n    to {\n      box-shadow: 0 0 2px #1478d2;\n    }\n  }\n  @keyframes flashlight {\n    from {\n      box-shadow: 0 0 5px #1478d2;\n    }\n    to {\n      box-shadow: 0 0 2px #1478d2;\n    }\n  }\n\n  ","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"Vue","color":"#b8f0ae","icon":"https://img02.anheyu.com/adminuploads/1/2022/09/25/633001374747b.png"}]}],"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"}]}]}},"cover":false,"excerpt":"","more":"/*电子钟字体*/\n@font-face {\n    font-family: 'UnidreamLED';\n    src: url(\"https://cdn.jsdelivr.net/npm/akilar-candyassets/fonts/UnidreamLED.ttf\");\n    font-display: swap;\n  }\n  div#runtime {\n    width: 180px;\n    margin: auto;\n    color: #fff;\n    padding-inline: 5px;\n    border-radius: 10px;\n    background-color: rgba(0,0,0,0.7);\n    font-family: 'UnidreamLED';\n  }\n  [data-theme=\"dark\"] div#runtime {\n    color: #28b4c8;\n    box-shadow: 0 0 5px rgba(28,69,218,0.71);\n    animation: flashlight 1s linear infinite alternate;\n  }\n  /*悬停显示徽标提示语*/\n  a.github-badge:hover:before {\n    position: fixed;\n    width: fit-content;\n    margin: auto;\n    left: 0;\n    right: 0;\n    top: 10%;\n    border-radius: 10px;\n    text-align: center;\n    z-index: 100;\n    content: attr(data-title);\n    font-size: 20px;\n    color: #fff;\n    padding: 10px;\n    background-color: var(--text-bg-hover);\n  }\n  [data-theme=dark] a.github-badge:hover:before {\n    background-color: rgba(18,18,18,0.8);\n  }\n  @-moz-keyframes flashlight {\n    from {\n      box-shadow: 0 0 5px #1478d2;\n    }\n    to {\n      box-shadow: 0 0 2px #1478d2;\n    }\n  }\n  @-webkit-keyframes flashlight {\n    from {\n      box-shadow: 0 0 5px #1478d2;\n    }\n    to {\n      box-shadow: 0 0 2px #1478d2;\n    }\n  }\n  @-o-keyframes flashlight {\n    from {\n      box-shadow: 0 0 5px #1478d2;\n    }\n    to {\n      box-shadow: 0 0 2px #1478d2;\n    }\n  }\n  @keyframes flashlight {\n    from {\n      box-shadow: 0 0 5px #1478d2;\n    }\n    to {\n      box-shadow: 0 0 2px #1478d2;\n    }\n  }\n\n  "},{"_content":"// 防抖全局计时器\nlet TT = null;    //time用来控制事件的触发\n// 防抖函数:fn->逻辑 time->防抖时间\nfunction debounce(fn, time) {\n    if (TT !== null) clearTimeout(TT);\n    TT = setTimeout(fn, time);\n}\n\n// 复制提醒\ndocument.addEventListener(\"copy\", function () {\n    debounce(function () {\n        new Vue({\n            data: function () {\n                this.$notify({\n                    title: \"哎嘿！复制成功🍬\",\n                    message: \"若要转载最好保留原文链接哦，给你一个大大的赞！\",\n                    position: 'top-left',\n                    offset: 50,\n                    showClose: true,\n                    type: \"success\",\n                    duration: 5000\n                });\n            }\n        })\n    }, 300);\n})\n\nif (document.body.clientWidth > 992) {\n    function getBasicInfo() {\n        /* 窗口高度 */\n        var ViewH = $(window).height();\n        /* document高度 */\n        var DocH = $(\"body\")[0].scrollHeight;\n        /* 滚动的高度 */\n        var ScrollTop = $(window).scrollTop();\n        /* 可滚动的高度 */\n        var S_V = DocH - ViewH;\n        var Band_H = ScrollTop / (DocH - ViewH) * 100;\n        return {\n            ViewH: ViewH,\n            DocH: DocH,\n            ScrollTop: ScrollTop,\n            Band_H: Band_H,\n            S_V: S_V\n        }\n    };\n    function show(basicInfo) {\n        if (basicInfo.ScrollTop > 0.001) {\n            $(\".neko\").css('display', 'block');\n        } else {\n            $(\".neko\").css('display', 'none');\n        }\n    }\n    (function ($) {\n        $.fn.nekoScroll = function (option) {\n            var defaultSetting = {\n                top: '0',\n                scroWidth: 6 + 'px',\n                z_index: 9999,\n                zoom: 0.9,\n                borderRadius: 5 + 'px',\n                right: 60 + 'px',\n                // 这里可以换为你喜欢的图片，例如我就换为了雪人，但是要抠图\n                nekoImg: \"https://bu.dusays.com/2022/07/20/62d812db74be9.png\",\n                hoverMsg: \"喵喵喵~\",\n                color: \"#6f42c1\",\n                during: 500,\n                blog_body: \"body\",\n            };\n            var setting = $.extend(defaultSetting, option);\n            var getThis = this.prop(\"className\") !== \"\" ? \".\" + this.prop(\"className\") : this.prop(\"id\") !== \"\" ? \"#\" +\n                this.prop(\"id\") : this.prop(\"nodeName\");\n            if ($(\".neko\").length == 0) {\n                this.after(\"<div class=\\\"neko\\\" id=\" + setting.nekoname + \" data-msg=\\\"\" + setting.hoverMsg + \"\\\"></div>\");\n            }\n            let basicInfo = getBasicInfo();\n            $(getThis)\n                .css({\n                    'position': 'fixed',\n                    'width': setting.scroWidth,\n                    'top': setting.top,\n                    'height': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 + 'px',\n                    'z-index': setting.z_index,\n                    'background-color': setting.bgcolor,\n                    \"border-radius\": setting.borderRadius,\n                    'right': setting.right,\n                    'background-image': 'url(' + setting.scImg + ')',\n                    'background-image': '-webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent)', 'border-radius': '2em',\n                    'background-size': 'contain'\n                });\n            $(\"#\" + setting.nekoname)\n                .css({\n                    'position': 'fixed',\n                    'top': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 - 50 + 'px',\n                    'z-index': setting.z_index * 10,\n                    'right': setting.right,\n                    'background-image': 'url(' + setting.nekoImg + ')',\n                });\n            show(getBasicInfo());\n            $(window)\n                .scroll(function () {\n                    let basicInfo = getBasicInfo();\n                    show(basicInfo);\n                    $(getThis)\n                        .css({\n                            'position': 'fixed',\n                            'width': setting.scroWidth,\n                            'top': setting.top,\n                            'height': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 + 'px',\n                            'z-index': setting.z_index,\n                            'background-color': setting.bgcolor,\n                            \"border-radius\": setting.borderRadius,\n                            'right': setting.right,\n                            'background-image': 'url(' + setting.scImg + ')',\n                            'background-image': '-webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent)', 'border-radius': '2em',\n                            'background-size': 'contain'\n                        });\n                    $(\"#\" + setting.nekoname)\n                        .css({\n                            'position': 'fixed',\n                            'top': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 - 50 + 'px',\n                            'z-index': setting.z_index * 10,\n                            'right': setting.right,\n                            'background-image': 'url(' + setting.nekoImg + ')',\n                        });\n                    if (basicInfo.ScrollTop == basicInfo.S_V) {\n                        $(\"#\" + setting.nekoname)\n                            .addClass(\"showMsg\")\n                    } else {\n                        $(\"#\" + setting.nekoname)\n                            .removeClass(\"showMsg\");\n                        $(\"#\" + setting.nekoname)\n                            .attr(\"data-msg\", setting.hoverMsg);\n                    }\n                });\n            this.click(function (e) {\n                btf.scrollToDest(0, 500)\n            });\n            $(\"#\" + setting.nekoname)\n                .click(function () {\n                    btf.scrollToDest(0, 500)\n                });\n            return this;\n        }\n    })(jQuery);\n\n    $(document).ready(function () {\n        //部分自定义\n        $(\"#myscoll\").nekoScroll({\n            bgcolor: 'rgb(0 0 0 / .5)', //背景颜色，没有绳子背景图片时有效\n            borderRadius: '2em',\n            zoom: 0.9\n        }\n        );\n        //自定义（去掉以下注释，并注释掉其他的查看效果）\n        /*\n        $(\"#myscoll\").nekoScroll({\n            nekoname:'neko1', //nekoname，相当于id\n            nekoImg:'img/猫咪.png', //neko的背景图片\n            scImg:\"img/绳1.png\", //绳子的背景图片\n            bgcolor:'#1e90ff', //背景颜色，没有绳子背景图片时有效\n            zoom:0.9, //绳子长度的缩放值\n            hoverMsg:'你好~喵', //鼠标浮动到neko上方的对话框信息\n            right:'100px', //距离页面右边的距离\n            fontFamily:'楷体', //对话框字体\n            fontSize:'14px', //对话框字体的大小\n            color:'#1e90ff', //对话框字体颜色\n            scroWidth:'8px', //绳子的宽度\n            z_index:100, //不用解释了吧\n            during:1200, //从顶部到底部滑动的时长\n        });\n        */\n    })\n}","source":"js/cat.js","raw":"// 防抖全局计时器\nlet TT = null;    //time用来控制事件的触发\n// 防抖函数:fn->逻辑 time->防抖时间\nfunction debounce(fn, time) {\n    if (TT !== null) clearTimeout(TT);\n    TT = setTimeout(fn, time);\n}\n\n// 复制提醒\ndocument.addEventListener(\"copy\", function () {\n    debounce(function () {\n        new Vue({\n            data: function () {\n                this.$notify({\n                    title: \"哎嘿！复制成功🍬\",\n                    message: \"若要转载最好保留原文链接哦，给你一个大大的赞！\",\n                    position: 'top-left',\n                    offset: 50,\n                    showClose: true,\n                    type: \"success\",\n                    duration: 5000\n                });\n            }\n        })\n    }, 300);\n})\n\nif (document.body.clientWidth > 992) {\n    function getBasicInfo() {\n        /* 窗口高度 */\n        var ViewH = $(window).height();\n        /* document高度 */\n        var DocH = $(\"body\")[0].scrollHeight;\n        /* 滚动的高度 */\n        var ScrollTop = $(window).scrollTop();\n        /* 可滚动的高度 */\n        var S_V = DocH - ViewH;\n        var Band_H = ScrollTop / (DocH - ViewH) * 100;\n        return {\n            ViewH: ViewH,\n            DocH: DocH,\n            ScrollTop: ScrollTop,\n            Band_H: Band_H,\n            S_V: S_V\n        }\n    };\n    function show(basicInfo) {\n        if (basicInfo.ScrollTop > 0.001) {\n            $(\".neko\").css('display', 'block');\n        } else {\n            $(\".neko\").css('display', 'none');\n        }\n    }\n    (function ($) {\n        $.fn.nekoScroll = function (option) {\n            var defaultSetting = {\n                top: '0',\n                scroWidth: 6 + 'px',\n                z_index: 9999,\n                zoom: 0.9,\n                borderRadius: 5 + 'px',\n                right: 60 + 'px',\n                // 这里可以换为你喜欢的图片，例如我就换为了雪人，但是要抠图\n                nekoImg: \"https://bu.dusays.com/2022/07/20/62d812db74be9.png\",\n                hoverMsg: \"喵喵喵~\",\n                color: \"#6f42c1\",\n                during: 500,\n                blog_body: \"body\",\n            };\n            var setting = $.extend(defaultSetting, option);\n            var getThis = this.prop(\"className\") !== \"\" ? \".\" + this.prop(\"className\") : this.prop(\"id\") !== \"\" ? \"#\" +\n                this.prop(\"id\") : this.prop(\"nodeName\");\n            if ($(\".neko\").length == 0) {\n                this.after(\"<div class=\\\"neko\\\" id=\" + setting.nekoname + \" data-msg=\\\"\" + setting.hoverMsg + \"\\\"></div>\");\n            }\n            let basicInfo = getBasicInfo();\n            $(getThis)\n                .css({\n                    'position': 'fixed',\n                    'width': setting.scroWidth,\n                    'top': setting.top,\n                    'height': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 + 'px',\n                    'z-index': setting.z_index,\n                    'background-color': setting.bgcolor,\n                    \"border-radius\": setting.borderRadius,\n                    'right': setting.right,\n                    'background-image': 'url(' + setting.scImg + ')',\n                    'background-image': '-webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent)', 'border-radius': '2em',\n                    'background-size': 'contain'\n                });\n            $(\"#\" + setting.nekoname)\n                .css({\n                    'position': 'fixed',\n                    'top': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 - 50 + 'px',\n                    'z-index': setting.z_index * 10,\n                    'right': setting.right,\n                    'background-image': 'url(' + setting.nekoImg + ')',\n                });\n            show(getBasicInfo());\n            $(window)\n                .scroll(function () {\n                    let basicInfo = getBasicInfo();\n                    show(basicInfo);\n                    $(getThis)\n                        .css({\n                            'position': 'fixed',\n                            'width': setting.scroWidth,\n                            'top': setting.top,\n                            'height': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 + 'px',\n                            'z-index': setting.z_index,\n                            'background-color': setting.bgcolor,\n                            \"border-radius\": setting.borderRadius,\n                            'right': setting.right,\n                            'background-image': 'url(' + setting.scImg + ')',\n                            'background-image': '-webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent)', 'border-radius': '2em',\n                            'background-size': 'contain'\n                        });\n                    $(\"#\" + setting.nekoname)\n                        .css({\n                            'position': 'fixed',\n                            'top': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 - 50 + 'px',\n                            'z-index': setting.z_index * 10,\n                            'right': setting.right,\n                            'background-image': 'url(' + setting.nekoImg + ')',\n                        });\n                    if (basicInfo.ScrollTop == basicInfo.S_V) {\n                        $(\"#\" + setting.nekoname)\n                            .addClass(\"showMsg\")\n                    } else {\n                        $(\"#\" + setting.nekoname)\n                            .removeClass(\"showMsg\");\n                        $(\"#\" + setting.nekoname)\n                            .attr(\"data-msg\", setting.hoverMsg);\n                    }\n                });\n            this.click(function (e) {\n                btf.scrollToDest(0, 500)\n            });\n            $(\"#\" + setting.nekoname)\n                .click(function () {\n                    btf.scrollToDest(0, 500)\n                });\n            return this;\n        }\n    })(jQuery);\n\n    $(document).ready(function () {\n        //部分自定义\n        $(\"#myscoll\").nekoScroll({\n            bgcolor: 'rgb(0 0 0 / .5)', //背景颜色，没有绳子背景图片时有效\n            borderRadius: '2em',\n            zoom: 0.9\n        }\n        );\n        //自定义（去掉以下注释，并注释掉其他的查看效果）\n        /*\n        $(\"#myscoll\").nekoScroll({\n            nekoname:'neko1', //nekoname，相当于id\n            nekoImg:'img/猫咪.png', //neko的背景图片\n            scImg:\"img/绳1.png\", //绳子的背景图片\n            bgcolor:'#1e90ff', //背景颜色，没有绳子背景图片时有效\n            zoom:0.9, //绳子长度的缩放值\n            hoverMsg:'你好~喵', //鼠标浮动到neko上方的对话框信息\n            right:'100px', //距离页面右边的距离\n            fontFamily:'楷体', //对话框字体\n            fontSize:'14px', //对话框字体的大小\n            color:'#1e90ff', //对话框字体颜色\n            scroWidth:'8px', //绳子的宽度\n            z_index:100, //不用解释了吧\n            during:1200, //从顶部到底部滑动的时长\n        });\n        */\n    })\n}","date":"2024-02-04T23:05:33.256Z","updated":"2024-02-04T23:05:33.256Z","path":"js/cat.js","layout":"false","title":"","comments":1,"_id":"clyh2ognb000ee0dshdtv1ftc","content":"// 防抖全局计时器\nlet TT = null;    //time用来控制事件的触发\n// 防抖函数:fn->逻辑 time->防抖时间\nfunction debounce(fn, time) {\n    if (TT !== null) clearTimeout(TT);\n    TT = setTimeout(fn, time);\n}\n\n// 复制提醒\ndocument.addEventListener(\"copy\", function () {\n    debounce(function () {\n        new Vue({\n            data: function () {\n                this.$notify({\n                    title: \"哎嘿！复制成功🍬\",\n                    message: \"若要转载最好保留原文链接哦，给你一个大大的赞！\",\n                    position: 'top-left',\n                    offset: 50,\n                    showClose: true,\n                    type: \"success\",\n                    duration: 5000\n                });\n            }\n        })\n    }, 300);\n})\n\nif (document.body.clientWidth > 992) {\n    function getBasicInfo() {\n        /* 窗口高度 */\n        var ViewH = $(window).height();\n        /* document高度 */\n        var DocH = $(\"body\")[0].scrollHeight;\n        /* 滚动的高度 */\n        var ScrollTop = $(window).scrollTop();\n        /* 可滚动的高度 */\n        var S_V = DocH - ViewH;\n        var Band_H = ScrollTop / (DocH - ViewH) * 100;\n        return {\n            ViewH: ViewH,\n            DocH: DocH,\n            ScrollTop: ScrollTop,\n            Band_H: Band_H,\n            S_V: S_V\n        }\n    };\n    function show(basicInfo) {\n        if (basicInfo.ScrollTop > 0.001) {\n            $(\".neko\").css('display', 'block');\n        } else {\n            $(\".neko\").css('display', 'none');\n        }\n    }\n    (function ($) {\n        $.fn.nekoScroll = function (option) {\n            var defaultSetting = {\n                top: '0',\n                scroWidth: 6 + 'px',\n                z_index: 9999,\n                zoom: 0.9,\n                borderRadius: 5 + 'px',\n                right: 60 + 'px',\n                // 这里可以换为你喜欢的图片，例如我就换为了雪人，但是要抠图\n                nekoImg: \"https://bu.dusays.com/2022/07/20/62d812db74be9.png\",\n                hoverMsg: \"喵喵喵~\",\n                color: \"#6f42c1\",\n                during: 500,\n                blog_body: \"body\",\n            };\n            var setting = $.extend(defaultSetting, option);\n            var getThis = this.prop(\"className\") !== \"\" ? \".\" + this.prop(\"className\") : this.prop(\"id\") !== \"\" ? \"#\" +\n                this.prop(\"id\") : this.prop(\"nodeName\");\n            if ($(\".neko\").length == 0) {\n                this.after(\"<div class=\\\"neko\\\" id=\" + setting.nekoname + \" data-msg=\\\"\" + setting.hoverMsg + \"\\\"></div>\");\n            }\n            let basicInfo = getBasicInfo();\n            $(getThis)\n                .css({\n                    'position': 'fixed',\n                    'width': setting.scroWidth,\n                    'top': setting.top,\n                    'height': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 + 'px',\n                    'z-index': setting.z_index,\n                    'background-color': setting.bgcolor,\n                    \"border-radius\": setting.borderRadius,\n                    'right': setting.right,\n                    'background-image': 'url(' + setting.scImg + ')',\n                    'background-image': '-webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent)', 'border-radius': '2em',\n                    'background-size': 'contain'\n                });\n            $(\"#\" + setting.nekoname)\n                .css({\n                    'position': 'fixed',\n                    'top': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 - 50 + 'px',\n                    'z-index': setting.z_index * 10,\n                    'right': setting.right,\n                    'background-image': 'url(' + setting.nekoImg + ')',\n                });\n            show(getBasicInfo());\n            $(window)\n                .scroll(function () {\n                    let basicInfo = getBasicInfo();\n                    show(basicInfo);\n                    $(getThis)\n                        .css({\n                            'position': 'fixed',\n                            'width': setting.scroWidth,\n                            'top': setting.top,\n                            'height': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 + 'px',\n                            'z-index': setting.z_index,\n                            'background-color': setting.bgcolor,\n                            \"border-radius\": setting.borderRadius,\n                            'right': setting.right,\n                            'background-image': 'url(' + setting.scImg + ')',\n                            'background-image': '-webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent)', 'border-radius': '2em',\n                            'background-size': 'contain'\n                        });\n                    $(\"#\" + setting.nekoname)\n                        .css({\n                            'position': 'fixed',\n                            'top': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 - 50 + 'px',\n                            'z-index': setting.z_index * 10,\n                            'right': setting.right,\n                            'background-image': 'url(' + setting.nekoImg + ')',\n                        });\n                    if (basicInfo.ScrollTop == basicInfo.S_V) {\n                        $(\"#\" + setting.nekoname)\n                            .addClass(\"showMsg\")\n                    } else {\n                        $(\"#\" + setting.nekoname)\n                            .removeClass(\"showMsg\");\n                        $(\"#\" + setting.nekoname)\n                            .attr(\"data-msg\", setting.hoverMsg);\n                    }\n                });\n            this.click(function (e) {\n                btf.scrollToDest(0, 500)\n            });\n            $(\"#\" + setting.nekoname)\n                .click(function () {\n                    btf.scrollToDest(0, 500)\n                });\n            return this;\n        }\n    })(jQuery);\n\n    $(document).ready(function () {\n        //部分自定义\n        $(\"#myscoll\").nekoScroll({\n            bgcolor: 'rgb(0 0 0 / .5)', //背景颜色，没有绳子背景图片时有效\n            borderRadius: '2em',\n            zoom: 0.9\n        }\n        );\n        //自定义（去掉以下注释，并注释掉其他的查看效果）\n        /*\n        $(\"#myscoll\").nekoScroll({\n            nekoname:'neko1', //nekoname，相当于id\n            nekoImg:'img/猫咪.png', //neko的背景图片\n            scImg:\"img/绳1.png\", //绳子的背景图片\n            bgcolor:'#1e90ff', //背景颜色，没有绳子背景图片时有效\n            zoom:0.9, //绳子长度的缩放值\n            hoverMsg:'你好~喵', //鼠标浮动到neko上方的对话框信息\n            right:'100px', //距离页面右边的距离\n            fontFamily:'楷体', //对话框字体\n            fontSize:'14px', //对话框字体的大小\n            color:'#1e90ff', //对话框字体颜色\n            scroWidth:'8px', //绳子的宽度\n            z_index:100, //不用解释了吧\n            during:1200, //从顶部到底部滑动的时长\n        });\n        */\n    })\n}","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"Vue","color":"#b8f0ae","icon":"https://img02.anheyu.com/adminuploads/1/2022/09/25/633001374747b.png"}]}],"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"}]}]}},"cover":false,"excerpt":"","more":"// 防抖全局计时器\nlet TT = null;    //time用来控制事件的触发\n// 防抖函数:fn->逻辑 time->防抖时间\nfunction debounce(fn, time) {\n    if (TT !== null) clearTimeout(TT);\n    TT = setTimeout(fn, time);\n}\n\n// 复制提醒\ndocument.addEventListener(\"copy\", function () {\n    debounce(function () {\n        new Vue({\n            data: function () {\n                this.$notify({\n                    title: \"哎嘿！复制成功🍬\",\n                    message: \"若要转载最好保留原文链接哦，给你一个大大的赞！\",\n                    position: 'top-left',\n                    offset: 50,\n                    showClose: true,\n                    type: \"success\",\n                    duration: 5000\n                });\n            }\n        })\n    }, 300);\n})\n\nif (document.body.clientWidth > 992) {\n    function getBasicInfo() {\n        /* 窗口高度 */\n        var ViewH = $(window).height();\n        /* document高度 */\n        var DocH = $(\"body\")[0].scrollHeight;\n        /* 滚动的高度 */\n        var ScrollTop = $(window).scrollTop();\n        /* 可滚动的高度 */\n        var S_V = DocH - ViewH;\n        var Band_H = ScrollTop / (DocH - ViewH) * 100;\n        return {\n            ViewH: ViewH,\n            DocH: DocH,\n            ScrollTop: ScrollTop,\n            Band_H: Band_H,\n            S_V: S_V\n        }\n    };\n    function show(basicInfo) {\n        if (basicInfo.ScrollTop > 0.001) {\n            $(\".neko\").css('display', 'block');\n        } else {\n            $(\".neko\").css('display', 'none');\n        }\n    }\n    (function ($) {\n        $.fn.nekoScroll = function (option) {\n            var defaultSetting = {\n                top: '0',\n                scroWidth: 6 + 'px',\n                z_index: 9999,\n                zoom: 0.9,\n                borderRadius: 5 + 'px',\n                right: 60 + 'px',\n                // 这里可以换为你喜欢的图片，例如我就换为了雪人，但是要抠图\n                nekoImg: \"https://bu.dusays.com/2022/07/20/62d812db74be9.png\",\n                hoverMsg: \"喵喵喵~\",\n                color: \"#6f42c1\",\n                during: 500,\n                blog_body: \"body\",\n            };\n            var setting = $.extend(defaultSetting, option);\n            var getThis = this.prop(\"className\") !== \"\" ? \".\" + this.prop(\"className\") : this.prop(\"id\") !== \"\" ? \"#\" +\n                this.prop(\"id\") : this.prop(\"nodeName\");\n            if ($(\".neko\").length == 0) {\n                this.after(\"<div class=\\\"neko\\\" id=\" + setting.nekoname + \" data-msg=\\\"\" + setting.hoverMsg + \"\\\"></div>\");\n            }\n            let basicInfo = getBasicInfo();\n            $(getThis)\n                .css({\n                    'position': 'fixed',\n                    'width': setting.scroWidth,\n                    'top': setting.top,\n                    'height': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 + 'px',\n                    'z-index': setting.z_index,\n                    'background-color': setting.bgcolor,\n                    \"border-radius\": setting.borderRadius,\n                    'right': setting.right,\n                    'background-image': 'url(' + setting.scImg + ')',\n                    'background-image': '-webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent)', 'border-radius': '2em',\n                    'background-size': 'contain'\n                });\n            $(\"#\" + setting.nekoname)\n                .css({\n                    'position': 'fixed',\n                    'top': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 - 50 + 'px',\n                    'z-index': setting.z_index * 10,\n                    'right': setting.right,\n                    'background-image': 'url(' + setting.nekoImg + ')',\n                });\n            show(getBasicInfo());\n            $(window)\n                .scroll(function () {\n                    let basicInfo = getBasicInfo();\n                    show(basicInfo);\n                    $(getThis)\n                        .css({\n                            'position': 'fixed',\n                            'width': setting.scroWidth,\n                            'top': setting.top,\n                            'height': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 + 'px',\n                            'z-index': setting.z_index,\n                            'background-color': setting.bgcolor,\n                            \"border-radius\": setting.borderRadius,\n                            'right': setting.right,\n                            'background-image': 'url(' + setting.scImg + ')',\n                            'background-image': '-webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent)', 'border-radius': '2em',\n                            'background-size': 'contain'\n                        });\n                    $(\"#\" + setting.nekoname)\n                        .css({\n                            'position': 'fixed',\n                            'top': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 - 50 + 'px',\n                            'z-index': setting.z_index * 10,\n                            'right': setting.right,\n                            'background-image': 'url(' + setting.nekoImg + ')',\n                        });\n                    if (basicInfo.ScrollTop == basicInfo.S_V) {\n                        $(\"#\" + setting.nekoname)\n                            .addClass(\"showMsg\")\n                    } else {\n                        $(\"#\" + setting.nekoname)\n                            .removeClass(\"showMsg\");\n                        $(\"#\" + setting.nekoname)\n                            .attr(\"data-msg\", setting.hoverMsg);\n                    }\n                });\n            this.click(function (e) {\n                btf.scrollToDest(0, 500)\n            });\n            $(\"#\" + setting.nekoname)\n                .click(function () {\n                    btf.scrollToDest(0, 500)\n                });\n            return this;\n        }\n    })(jQuery);\n\n    $(document).ready(function () {\n        //部分自定义\n        $(\"#myscoll\").nekoScroll({\n            bgcolor: 'rgb(0 0 0 / .5)', //背景颜色，没有绳子背景图片时有效\n            borderRadius: '2em',\n            zoom: 0.9\n        }\n        );\n        //自定义（去掉以下注释，并注释掉其他的查看效果）\n        /*\n        $(\"#myscoll\").nekoScroll({\n            nekoname:'neko1', //nekoname，相当于id\n            nekoImg:'img/猫咪.png', //neko的背景图片\n            scImg:\"img/绳1.png\", //绳子的背景图片\n            bgcolor:'#1e90ff', //背景颜色，没有绳子背景图片时有效\n            zoom:0.9, //绳子长度的缩放值\n            hoverMsg:'你好~喵', //鼠标浮动到neko上方的对话框信息\n            right:'100px', //距离页面右边的距离\n            fontFamily:'楷体', //对话框字体\n            fontSize:'14px', //对话框字体的大小\n            color:'#1e90ff', //对话框字体颜色\n            scroWidth:'8px', //绳子的宽度\n            z_index:100, //不用解释了吧\n            during:1200, //从顶部到底部滑动的时长\n        });\n        */\n    })\n}"},{"_content":"var CountUp = function (target, startVal, endVal, decimals, duration, options) {\n    var self = this;\n    self.version = function () {\n      return \"1.9.2\";\n    };\n    self.options = {\n      useEasing: true,\n      useGrouping: true,\n      separator: \",\",\n      decimal: \".\",\n      easingFn: easeOutExpo,\n      formattingFn: formatNumber,\n      prefix: \"\",\n      suffix: \"\",\n      numerals: [],\n    };\n    if (options && typeof options === \"object\") {\n      for (var key in self.options) {\n        if (options.hasOwnProperty(key) && options[key] !== null) {\n          self.options[key] = options[key];\n        }\n      }\n    }\n    if (self.options.separator === \"\") {\n      self.options.useGrouping = false;\n    } else {\n      self.options.separator = \"\" + self.options.separator;\n    }\n    var lastTime = 0;\n    var vendors = [\"webkit\", \"moz\", \"ms\", \"o\"];\n    for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n      window.requestAnimationFrame = window[vendors[x] + \"RequestAnimationFrame\"];\n      window.cancelAnimationFrame =\n        window[vendors[x] + \"CancelAnimationFrame\"] || window[vendors[x] + \"CancelRequestAnimationFrame\"];\n    }\n    if (!window.requestAnimationFrame) {\n      window.requestAnimationFrame = function (callback, element) {\n        var currTime = new Date().getTime();\n        var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n        var id = window.setTimeout(function () {\n          callback(currTime + timeToCall);\n        }, timeToCall);\n        lastTime = currTime + timeToCall;\n        return id;\n      };\n    }\n    if (!window.cancelAnimationFrame) {\n      window.cancelAnimationFrame = function (id) {\n        clearTimeout(id);\n      };\n    }\n    function formatNumber(num) {\n      num = num.toFixed(self.decimals);\n      num += \"\";\n      var x, x1, x2, x3, i, l;\n      x = num.split(\".\");\n      x1 = x[0];\n      x2 = x.length > 1 ? self.options.decimal + x[1] : \"\";\n      if (self.options.useGrouping) {\n        x3 = \"\";\n        for (i = 0, l = x1.length; i < l; ++i) {\n          if (i !== 0 && i % 3 === 0) {\n            x3 = self.options.separator + x3;\n          }\n          x3 = x1[l - i - 1] + x3;\n        }\n        x1 = x3;\n      }\n      if (self.options.numerals.length) {\n        x1 = x1.replace(/[0-9]/g, function (w) {\n          return self.options.numerals[+w];\n        });\n        x2 = x2.replace(/[0-9]/g, function (w) {\n          return self.options.numerals[+w];\n        });\n      }\n      return self.options.prefix + x1 + x2 + self.options.suffix;\n    }\n    function easeOutExpo(t, b, c, d) {\n      return (c * (-Math.pow(2, (-10 * t) / d) + 1) * 1024) / 1023 + b;\n    }\n    function ensureNumber(n) {\n      return typeof n === \"number\" && !isNaN(n);\n    }\n    self.initialize = function () {\n      if (self.initialized) {\n        return true;\n      }\n      self.error = \"\";\n      self.d = typeof target === \"string\" ? document.getElementById(target) : target;\n      if (!self.d) {\n        self.error = \"[CountUp] target is null or undefined\";\n        return false;\n      }\n      self.startVal = Number(startVal);\n      self.endVal = Number(endVal);\n      if (ensureNumber(self.startVal) && ensureNumber(self.endVal)) {\n        self.decimals = Math.max(0, decimals || 0);\n        self.dec = Math.pow(10, self.decimals);\n        self.duration = Number(duration) * 1000 || 2000;\n        self.countDown = self.startVal > self.endVal;\n        self.frameVal = self.startVal;\n        self.initialized = true;\n        return true;\n      } else {\n        self.error = \"[CountUp] startVal (\" + startVal + \") or endVal (\" + endVal + \") is not a number\";\n        return false;\n      }\n    };\n    self.printValue = function (value) {\n      var result = self.options.formattingFn(value);\n      if (self.d.tagName === \"INPUT\") {\n        this.d.value = result;\n      } else {\n        if (self.d.tagName === \"text\" || self.d.tagName === \"tspan\") {\n          this.d.textContent = result;\n        } else {\n          this.d.innerHTML = result;\n        }\n      }\n    };\n    self.count = function (timestamp) {\n      if (!self.startTime) {\n        self.startTime = timestamp;\n      }\n      self.timestamp = timestamp;\n      var progress = timestamp - self.startTime;\n      self.remaining = self.duration - progress;\n      if (self.options.useEasing) {\n        if (self.countDown) {\n          self.frameVal = self.startVal - self.options.easingFn(progress, 0, self.startVal - self.endVal, self.duration);\n        } else {\n          self.frameVal = self.options.easingFn(progress, self.startVal, self.endVal - self.startVal, self.duration);\n        }\n      } else {\n        if (self.countDown) {\n          self.frameVal = self.startVal - (self.startVal - self.endVal) * (progress / self.duration);\n        } else {\n          self.frameVal = self.startVal + (self.endVal - self.startVal) * (progress / self.duration);\n        }\n      }\n      if (self.countDown) {\n        self.frameVal = self.frameVal < self.endVal ? self.endVal : self.frameVal;\n      } else {\n        self.frameVal = self.frameVal > self.endVal ? self.endVal : self.frameVal;\n      }\n      self.frameVal = Math.round(self.frameVal * self.dec) / self.dec;\n      self.printValue(self.frameVal);\n      if (progress < self.duration) {\n        self.rAF = requestAnimationFrame(self.count);\n      } else {\n        if (self.callback) {\n          self.callback();\n        }\n      }\n    };\n    self.start = function (callback) {\n      if (!self.initialize()) {\n        return;\n      }\n      self.callback = callback;\n      self.rAF = requestAnimationFrame(self.count);\n    };\n    self.pauseResume = function () {\n      if (!self.paused) {\n        self.paused = true;\n        cancelAnimationFrame(self.rAF);\n      } else {\n        self.paused = false;\n        delete self.startTime;\n        self.duration = self.remaining;\n        self.startVal = self.frameVal;\n        requestAnimationFrame(self.count);\n      }\n    };\n    self.reset = function () {\n      self.paused = false;\n      delete self.startTime;\n      self.initialized = false;\n      if (self.initialize()) {\n        cancelAnimationFrame(self.rAF);\n        self.printValue(self.startVal);\n      }\n    };\n    self.update = function (newEndVal) {\n      if (!self.initialize()) {\n        return;\n      }\n      newEndVal = Number(newEndVal);\n      if (!ensureNumber(newEndVal)) {\n        self.error = \"[CountUp] update() - new endVal is not a number: \" + newEndVal;\n        return;\n      }\n      self.error = \"\";\n      if (newEndVal === self.frameVal) {\n        return;\n      }\n      cancelAnimationFrame(self.rAF);\n      self.paused = false;\n      delete self.startTime;\n      self.startVal = self.frameVal;\n      self.endVal = newEndVal;\n      self.countDown = self.startVal > self.endVal;\n      self.rAF = requestAnimationFrame(self.count);\n    };\n    if (self.initialize()) {\n      self.printValue(self.startVal);\n    }\n  };","source":"js/countup.js","raw":"var CountUp = function (target, startVal, endVal, decimals, duration, options) {\n    var self = this;\n    self.version = function () {\n      return \"1.9.2\";\n    };\n    self.options = {\n      useEasing: true,\n      useGrouping: true,\n      separator: \",\",\n      decimal: \".\",\n      easingFn: easeOutExpo,\n      formattingFn: formatNumber,\n      prefix: \"\",\n      suffix: \"\",\n      numerals: [],\n    };\n    if (options && typeof options === \"object\") {\n      for (var key in self.options) {\n        if (options.hasOwnProperty(key) && options[key] !== null) {\n          self.options[key] = options[key];\n        }\n      }\n    }\n    if (self.options.separator === \"\") {\n      self.options.useGrouping = false;\n    } else {\n      self.options.separator = \"\" + self.options.separator;\n    }\n    var lastTime = 0;\n    var vendors = [\"webkit\", \"moz\", \"ms\", \"o\"];\n    for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n      window.requestAnimationFrame = window[vendors[x] + \"RequestAnimationFrame\"];\n      window.cancelAnimationFrame =\n        window[vendors[x] + \"CancelAnimationFrame\"] || window[vendors[x] + \"CancelRequestAnimationFrame\"];\n    }\n    if (!window.requestAnimationFrame) {\n      window.requestAnimationFrame = function (callback, element) {\n        var currTime = new Date().getTime();\n        var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n        var id = window.setTimeout(function () {\n          callback(currTime + timeToCall);\n        }, timeToCall);\n        lastTime = currTime + timeToCall;\n        return id;\n      };\n    }\n    if (!window.cancelAnimationFrame) {\n      window.cancelAnimationFrame = function (id) {\n        clearTimeout(id);\n      };\n    }\n    function formatNumber(num) {\n      num = num.toFixed(self.decimals);\n      num += \"\";\n      var x, x1, x2, x3, i, l;\n      x = num.split(\".\");\n      x1 = x[0];\n      x2 = x.length > 1 ? self.options.decimal + x[1] : \"\";\n      if (self.options.useGrouping) {\n        x3 = \"\";\n        for (i = 0, l = x1.length; i < l; ++i) {\n          if (i !== 0 && i % 3 === 0) {\n            x3 = self.options.separator + x3;\n          }\n          x3 = x1[l - i - 1] + x3;\n        }\n        x1 = x3;\n      }\n      if (self.options.numerals.length) {\n        x1 = x1.replace(/[0-9]/g, function (w) {\n          return self.options.numerals[+w];\n        });\n        x2 = x2.replace(/[0-9]/g, function (w) {\n          return self.options.numerals[+w];\n        });\n      }\n      return self.options.prefix + x1 + x2 + self.options.suffix;\n    }\n    function easeOutExpo(t, b, c, d) {\n      return (c * (-Math.pow(2, (-10 * t) / d) + 1) * 1024) / 1023 + b;\n    }\n    function ensureNumber(n) {\n      return typeof n === \"number\" && !isNaN(n);\n    }\n    self.initialize = function () {\n      if (self.initialized) {\n        return true;\n      }\n      self.error = \"\";\n      self.d = typeof target === \"string\" ? document.getElementById(target) : target;\n      if (!self.d) {\n        self.error = \"[CountUp] target is null or undefined\";\n        return false;\n      }\n      self.startVal = Number(startVal);\n      self.endVal = Number(endVal);\n      if (ensureNumber(self.startVal) && ensureNumber(self.endVal)) {\n        self.decimals = Math.max(0, decimals || 0);\n        self.dec = Math.pow(10, self.decimals);\n        self.duration = Number(duration) * 1000 || 2000;\n        self.countDown = self.startVal > self.endVal;\n        self.frameVal = self.startVal;\n        self.initialized = true;\n        return true;\n      } else {\n        self.error = \"[CountUp] startVal (\" + startVal + \") or endVal (\" + endVal + \") is not a number\";\n        return false;\n      }\n    };\n    self.printValue = function (value) {\n      var result = self.options.formattingFn(value);\n      if (self.d.tagName === \"INPUT\") {\n        this.d.value = result;\n      } else {\n        if (self.d.tagName === \"text\" || self.d.tagName === \"tspan\") {\n          this.d.textContent = result;\n        } else {\n          this.d.innerHTML = result;\n        }\n      }\n    };\n    self.count = function (timestamp) {\n      if (!self.startTime) {\n        self.startTime = timestamp;\n      }\n      self.timestamp = timestamp;\n      var progress = timestamp - self.startTime;\n      self.remaining = self.duration - progress;\n      if (self.options.useEasing) {\n        if (self.countDown) {\n          self.frameVal = self.startVal - self.options.easingFn(progress, 0, self.startVal - self.endVal, self.duration);\n        } else {\n          self.frameVal = self.options.easingFn(progress, self.startVal, self.endVal - self.startVal, self.duration);\n        }\n      } else {\n        if (self.countDown) {\n          self.frameVal = self.startVal - (self.startVal - self.endVal) * (progress / self.duration);\n        } else {\n          self.frameVal = self.startVal + (self.endVal - self.startVal) * (progress / self.duration);\n        }\n      }\n      if (self.countDown) {\n        self.frameVal = self.frameVal < self.endVal ? self.endVal : self.frameVal;\n      } else {\n        self.frameVal = self.frameVal > self.endVal ? self.endVal : self.frameVal;\n      }\n      self.frameVal = Math.round(self.frameVal * self.dec) / self.dec;\n      self.printValue(self.frameVal);\n      if (progress < self.duration) {\n        self.rAF = requestAnimationFrame(self.count);\n      } else {\n        if (self.callback) {\n          self.callback();\n        }\n      }\n    };\n    self.start = function (callback) {\n      if (!self.initialize()) {\n        return;\n      }\n      self.callback = callback;\n      self.rAF = requestAnimationFrame(self.count);\n    };\n    self.pauseResume = function () {\n      if (!self.paused) {\n        self.paused = true;\n        cancelAnimationFrame(self.rAF);\n      } else {\n        self.paused = false;\n        delete self.startTime;\n        self.duration = self.remaining;\n        self.startVal = self.frameVal;\n        requestAnimationFrame(self.count);\n      }\n    };\n    self.reset = function () {\n      self.paused = false;\n      delete self.startTime;\n      self.initialized = false;\n      if (self.initialize()) {\n        cancelAnimationFrame(self.rAF);\n        self.printValue(self.startVal);\n      }\n    };\n    self.update = function (newEndVal) {\n      if (!self.initialize()) {\n        return;\n      }\n      newEndVal = Number(newEndVal);\n      if (!ensureNumber(newEndVal)) {\n        self.error = \"[CountUp] update() - new endVal is not a number: \" + newEndVal;\n        return;\n      }\n      self.error = \"\";\n      if (newEndVal === self.frameVal) {\n        return;\n      }\n      cancelAnimationFrame(self.rAF);\n      self.paused = false;\n      delete self.startTime;\n      self.startVal = self.frameVal;\n      self.endVal = newEndVal;\n      self.countDown = self.startVal > self.endVal;\n      self.rAF = requestAnimationFrame(self.count);\n    };\n    if (self.initialize()) {\n      self.printValue(self.startVal);\n    }\n  };","date":"2024-07-11T07:59:02.340Z","updated":"2024-07-11T07:59:02.340Z","path":"js/countup.js","layout":"false","title":"","comments":1,"_id":"clyh2ognc000ge0dsfq048d4h","content":"var CountUp = function (target, startVal, endVal, decimals, duration, options) {\n    var self = this;\n    self.version = function () {\n      return \"1.9.2\";\n    };\n    self.options = {\n      useEasing: true,\n      useGrouping: true,\n      separator: \",\",\n      decimal: \".\",\n      easingFn: easeOutExpo,\n      formattingFn: formatNumber,\n      prefix: \"\",\n      suffix: \"\",\n      numerals: [],\n    };\n    if (options && typeof options === \"object\") {\n      for (var key in self.options) {\n        if (options.hasOwnProperty(key) && options[key] !== null) {\n          self.options[key] = options[key];\n        }\n      }\n    }\n    if (self.options.separator === \"\") {\n      self.options.useGrouping = false;\n    } else {\n      self.options.separator = \"\" + self.options.separator;\n    }\n    var lastTime = 0;\n    var vendors = [\"webkit\", \"moz\", \"ms\", \"o\"];\n    for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n      window.requestAnimationFrame = window[vendors[x] + \"RequestAnimationFrame\"];\n      window.cancelAnimationFrame =\n        window[vendors[x] + \"CancelAnimationFrame\"] || window[vendors[x] + \"CancelRequestAnimationFrame\"];\n    }\n    if (!window.requestAnimationFrame) {\n      window.requestAnimationFrame = function (callback, element) {\n        var currTime = new Date().getTime();\n        var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n        var id = window.setTimeout(function () {\n          callback(currTime + timeToCall);\n        }, timeToCall);\n        lastTime = currTime + timeToCall;\n        return id;\n      };\n    }\n    if (!window.cancelAnimationFrame) {\n      window.cancelAnimationFrame = function (id) {\n        clearTimeout(id);\n      };\n    }\n    function formatNumber(num) {\n      num = num.toFixed(self.decimals);\n      num += \"\";\n      var x, x1, x2, x3, i, l;\n      x = num.split(\".\");\n      x1 = x[0];\n      x2 = x.length > 1 ? self.options.decimal + x[1] : \"\";\n      if (self.options.useGrouping) {\n        x3 = \"\";\n        for (i = 0, l = x1.length; i < l; ++i) {\n          if (i !== 0 && i % 3 === 0) {\n            x3 = self.options.separator + x3;\n          }\n          x3 = x1[l - i - 1] + x3;\n        }\n        x1 = x3;\n      }\n      if (self.options.numerals.length) {\n        x1 = x1.replace(/[0-9]/g, function (w) {\n          return self.options.numerals[+w];\n        });\n        x2 = x2.replace(/[0-9]/g, function (w) {\n          return self.options.numerals[+w];\n        });\n      }\n      return self.options.prefix + x1 + x2 + self.options.suffix;\n    }\n    function easeOutExpo(t, b, c, d) {\n      return (c * (-Math.pow(2, (-10 * t) / d) + 1) * 1024) / 1023 + b;\n    }\n    function ensureNumber(n) {\n      return typeof n === \"number\" && !isNaN(n);\n    }\n    self.initialize = function () {\n      if (self.initialized) {\n        return true;\n      }\n      self.error = \"\";\n      self.d = typeof target === \"string\" ? document.getElementById(target) : target;\n      if (!self.d) {\n        self.error = \"[CountUp] target is null or undefined\";\n        return false;\n      }\n      self.startVal = Number(startVal);\n      self.endVal = Number(endVal);\n      if (ensureNumber(self.startVal) && ensureNumber(self.endVal)) {\n        self.decimals = Math.max(0, decimals || 0);\n        self.dec = Math.pow(10, self.decimals);\n        self.duration = Number(duration) * 1000 || 2000;\n        self.countDown = self.startVal > self.endVal;\n        self.frameVal = self.startVal;\n        self.initialized = true;\n        return true;\n      } else {\n        self.error = \"[CountUp] startVal (\" + startVal + \") or endVal (\" + endVal + \") is not a number\";\n        return false;\n      }\n    };\n    self.printValue = function (value) {\n      var result = self.options.formattingFn(value);\n      if (self.d.tagName === \"INPUT\") {\n        this.d.value = result;\n      } else {\n        if (self.d.tagName === \"text\" || self.d.tagName === \"tspan\") {\n          this.d.textContent = result;\n        } else {\n          this.d.innerHTML = result;\n        }\n      }\n    };\n    self.count = function (timestamp) {\n      if (!self.startTime) {\n        self.startTime = timestamp;\n      }\n      self.timestamp = timestamp;\n      var progress = timestamp - self.startTime;\n      self.remaining = self.duration - progress;\n      if (self.options.useEasing) {\n        if (self.countDown) {\n          self.frameVal = self.startVal - self.options.easingFn(progress, 0, self.startVal - self.endVal, self.duration);\n        } else {\n          self.frameVal = self.options.easingFn(progress, self.startVal, self.endVal - self.startVal, self.duration);\n        }\n      } else {\n        if (self.countDown) {\n          self.frameVal = self.startVal - (self.startVal - self.endVal) * (progress / self.duration);\n        } else {\n          self.frameVal = self.startVal + (self.endVal - self.startVal) * (progress / self.duration);\n        }\n      }\n      if (self.countDown) {\n        self.frameVal = self.frameVal < self.endVal ? self.endVal : self.frameVal;\n      } else {\n        self.frameVal = self.frameVal > self.endVal ? self.endVal : self.frameVal;\n      }\n      self.frameVal = Math.round(self.frameVal * self.dec) / self.dec;\n      self.printValue(self.frameVal);\n      if (progress < self.duration) {\n        self.rAF = requestAnimationFrame(self.count);\n      } else {\n        if (self.callback) {\n          self.callback();\n        }\n      }\n    };\n    self.start = function (callback) {\n      if (!self.initialize()) {\n        return;\n      }\n      self.callback = callback;\n      self.rAF = requestAnimationFrame(self.count);\n    };\n    self.pauseResume = function () {\n      if (!self.paused) {\n        self.paused = true;\n        cancelAnimationFrame(self.rAF);\n      } else {\n        self.paused = false;\n        delete self.startTime;\n        self.duration = self.remaining;\n        self.startVal = self.frameVal;\n        requestAnimationFrame(self.count);\n      }\n    };\n    self.reset = function () {\n      self.paused = false;\n      delete self.startTime;\n      self.initialized = false;\n      if (self.initialize()) {\n        cancelAnimationFrame(self.rAF);\n        self.printValue(self.startVal);\n      }\n    };\n    self.update = function (newEndVal) {\n      if (!self.initialize()) {\n        return;\n      }\n      newEndVal = Number(newEndVal);\n      if (!ensureNumber(newEndVal)) {\n        self.error = \"[CountUp] update() - new endVal is not a number: \" + newEndVal;\n        return;\n      }\n      self.error = \"\";\n      if (newEndVal === self.frameVal) {\n        return;\n      }\n      cancelAnimationFrame(self.rAF);\n      self.paused = false;\n      delete self.startTime;\n      self.startVal = self.frameVal;\n      self.endVal = newEndVal;\n      self.countDown = self.startVal > self.endVal;\n      self.rAF = requestAnimationFrame(self.count);\n    };\n    if (self.initialize()) {\n      self.printValue(self.startVal);\n    }\n  };","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"Vue","color":"#b8f0ae","icon":"https://img02.anheyu.com/adminuploads/1/2022/09/25/633001374747b.png"}]}],"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"}]}]}},"cover":false,"excerpt":"","more":"var CountUp = function (target, startVal, endVal, decimals, duration, options) {\n    var self = this;\n    self.version = function () {\n      return \"1.9.2\";\n    };\n    self.options = {\n      useEasing: true,\n      useGrouping: true,\n      separator: \",\",\n      decimal: \".\",\n      easingFn: easeOutExpo,\n      formattingFn: formatNumber,\n      prefix: \"\",\n      suffix: \"\",\n      numerals: [],\n    };\n    if (options && typeof options === \"object\") {\n      for (var key in self.options) {\n        if (options.hasOwnProperty(key) && options[key] !== null) {\n          self.options[key] = options[key];\n        }\n      }\n    }\n    if (self.options.separator === \"\") {\n      self.options.useGrouping = false;\n    } else {\n      self.options.separator = \"\" + self.options.separator;\n    }\n    var lastTime = 0;\n    var vendors = [\"webkit\", \"moz\", \"ms\", \"o\"];\n    for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n      window.requestAnimationFrame = window[vendors[x] + \"RequestAnimationFrame\"];\n      window.cancelAnimationFrame =\n        window[vendors[x] + \"CancelAnimationFrame\"] || window[vendors[x] + \"CancelRequestAnimationFrame\"];\n    }\n    if (!window.requestAnimationFrame) {\n      window.requestAnimationFrame = function (callback, element) {\n        var currTime = new Date().getTime();\n        var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n        var id = window.setTimeout(function () {\n          callback(currTime + timeToCall);\n        }, timeToCall);\n        lastTime = currTime + timeToCall;\n        return id;\n      };\n    }\n    if (!window.cancelAnimationFrame) {\n      window.cancelAnimationFrame = function (id) {\n        clearTimeout(id);\n      };\n    }\n    function formatNumber(num) {\n      num = num.toFixed(self.decimals);\n      num += \"\";\n      var x, x1, x2, x3, i, l;\n      x = num.split(\".\");\n      x1 = x[0];\n      x2 = x.length > 1 ? self.options.decimal + x[1] : \"\";\n      if (self.options.useGrouping) {\n        x3 = \"\";\n        for (i = 0, l = x1.length; i < l; ++i) {\n          if (i !== 0 && i % 3 === 0) {\n            x3 = self.options.separator + x3;\n          }\n          x3 = x1[l - i - 1] + x3;\n        }\n        x1 = x3;\n      }\n      if (self.options.numerals.length) {\n        x1 = x1.replace(/[0-9]/g, function (w) {\n          return self.options.numerals[+w];\n        });\n        x2 = x2.replace(/[0-9]/g, function (w) {\n          return self.options.numerals[+w];\n        });\n      }\n      return self.options.prefix + x1 + x2 + self.options.suffix;\n    }\n    function easeOutExpo(t, b, c, d) {\n      return (c * (-Math.pow(2, (-10 * t) / d) + 1) * 1024) / 1023 + b;\n    }\n    function ensureNumber(n) {\n      return typeof n === \"number\" && !isNaN(n);\n    }\n    self.initialize = function () {\n      if (self.initialized) {\n        return true;\n      }\n      self.error = \"\";\n      self.d = typeof target === \"string\" ? document.getElementById(target) : target;\n      if (!self.d) {\n        self.error = \"[CountUp] target is null or undefined\";\n        return false;\n      }\n      self.startVal = Number(startVal);\n      self.endVal = Number(endVal);\n      if (ensureNumber(self.startVal) && ensureNumber(self.endVal)) {\n        self.decimals = Math.max(0, decimals || 0);\n        self.dec = Math.pow(10, self.decimals);\n        self.duration = Number(duration) * 1000 || 2000;\n        self.countDown = self.startVal > self.endVal;\n        self.frameVal = self.startVal;\n        self.initialized = true;\n        return true;\n      } else {\n        self.error = \"[CountUp] startVal (\" + startVal + \") or endVal (\" + endVal + \") is not a number\";\n        return false;\n      }\n    };\n    self.printValue = function (value) {\n      var result = self.options.formattingFn(value);\n      if (self.d.tagName === \"INPUT\") {\n        this.d.value = result;\n      } else {\n        if (self.d.tagName === \"text\" || self.d.tagName === \"tspan\") {\n          this.d.textContent = result;\n        } else {\n          this.d.innerHTML = result;\n        }\n      }\n    };\n    self.count = function (timestamp) {\n      if (!self.startTime) {\n        self.startTime = timestamp;\n      }\n      self.timestamp = timestamp;\n      var progress = timestamp - self.startTime;\n      self.remaining = self.duration - progress;\n      if (self.options.useEasing) {\n        if (self.countDown) {\n          self.frameVal = self.startVal - self.options.easingFn(progress, 0, self.startVal - self.endVal, self.duration);\n        } else {\n          self.frameVal = self.options.easingFn(progress, self.startVal, self.endVal - self.startVal, self.duration);\n        }\n      } else {\n        if (self.countDown) {\n          self.frameVal = self.startVal - (self.startVal - self.endVal) * (progress / self.duration);\n        } else {\n          self.frameVal = self.startVal + (self.endVal - self.startVal) * (progress / self.duration);\n        }\n      }\n      if (self.countDown) {\n        self.frameVal = self.frameVal < self.endVal ? self.endVal : self.frameVal;\n      } else {\n        self.frameVal = self.frameVal > self.endVal ? self.endVal : self.frameVal;\n      }\n      self.frameVal = Math.round(self.frameVal * self.dec) / self.dec;\n      self.printValue(self.frameVal);\n      if (progress < self.duration) {\n        self.rAF = requestAnimationFrame(self.count);\n      } else {\n        if (self.callback) {\n          self.callback();\n        }\n      }\n    };\n    self.start = function (callback) {\n      if (!self.initialize()) {\n        return;\n      }\n      self.callback = callback;\n      self.rAF = requestAnimationFrame(self.count);\n    };\n    self.pauseResume = function () {\n      if (!self.paused) {\n        self.paused = true;\n        cancelAnimationFrame(self.rAF);\n      } else {\n        self.paused = false;\n        delete self.startTime;\n        self.duration = self.remaining;\n        self.startVal = self.frameVal;\n        requestAnimationFrame(self.count);\n      }\n    };\n    self.reset = function () {\n      self.paused = false;\n      delete self.startTime;\n      self.initialized = false;\n      if (self.initialize()) {\n        cancelAnimationFrame(self.rAF);\n        self.printValue(self.startVal);\n      }\n    };\n    self.update = function (newEndVal) {\n      if (!self.initialize()) {\n        return;\n      }\n      newEndVal = Number(newEndVal);\n      if (!ensureNumber(newEndVal)) {\n        self.error = \"[CountUp] update() - new endVal is not a number: \" + newEndVal;\n        return;\n      }\n      self.error = \"\";\n      if (newEndVal === self.frameVal) {\n        return;\n      }\n      cancelAnimationFrame(self.rAF);\n      self.paused = false;\n      delete self.startTime;\n      self.startVal = self.frameVal;\n      self.endVal = newEndVal;\n      self.countDown = self.startVal > self.endVal;\n      self.rAF = requestAnimationFrame(self.count);\n    };\n    if (self.initialize()) {\n      self.printValue(self.startVal);\n    }\n  };"},{"_content":"document.onkeydown = function (e) {\n    if (123 == e.keyCode || (e.ctrlKey && e.shiftKey && (74 === e.keyCode || 73 === e.keyCode || 67 === e.keyCode)) || (e.ctrlKey && 85 === e.keyCode)) return btf.snackbarShow(\"你真坏，不能打开控制台喔!\"), event.keyCode = 0, event.returnValue = !1, !1\n};","source":"js/f12.js","raw":"document.onkeydown = function (e) {\n    if (123 == e.keyCode || (e.ctrlKey && e.shiftKey && (74 === e.keyCode || 73 === e.keyCode || 67 === e.keyCode)) || (e.ctrlKey && 85 === e.keyCode)) return btf.snackbarShow(\"你真坏，不能打开控制台喔!\"), event.keyCode = 0, event.returnValue = !1, !1\n};","date":"2024-02-04T23:15:22.032Z","updated":"2024-02-04T23:15:22.032Z","path":"js/f12.js","layout":"false","title":"","comments":1,"_id":"clyh2ognk000le0ds4tiaciia","content":"document.onkeydown = function (e) {\n    if (123 == e.keyCode || (e.ctrlKey && e.shiftKey && (74 === e.keyCode || 73 === e.keyCode || 67 === e.keyCode)) || (e.ctrlKey && 85 === e.keyCode)) return btf.snackbarShow(\"你真坏，不能打开控制台喔!\"), event.keyCode = 0, event.returnValue = !1, !1\n};","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"Vue","color":"#b8f0ae","icon":"https://img02.anheyu.com/adminuploads/1/2022/09/25/633001374747b.png"}]}],"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"}]}]}},"cover":false,"excerpt":"","more":"document.onkeydown = function (e) {\n    if (123 == e.keyCode || (e.ctrlKey && e.shiftKey && (74 === e.keyCode || 73 === e.keyCode || 67 === e.keyCode)) || (e.ctrlKey && 85 === e.keyCode)) return btf.snackbarShow(\"你真坏，不能打开控制台喔!\"), event.keyCode = 0, event.returnValue = !1, !1\n};"},{"_content":"// 霓虹灯效果\n// 颜色数组\nvar arr = [\"#39c5bb\", \"#f14747\", \"#f1a247\", \"#f1ee47\", \"#b347f1\", \"#1edbff\", \"#ed709b\", \"#5636ed\"];\n// 颜色索引\nvar idx = 0;\n\n// 切换颜色\nfunction changeColor() {\n    // 仅夜间模式才启用\n    if (document.getElementsByTagName('html')[0].getAttribute('data-theme') == 'dark') {\n        if (document.getElementById(\"site-name\"))\n            document.getElementById(\"site-name\").style.textShadow = arr[idx] + \" 0 0 15px\";\n        if (document.getElementById(\"site-title\"))\n            document.getElementById(\"site-title\").style.textShadow = arr[idx] + \" 0 0 15px\";\n        if (document.getElementById(\"site-subtitle\"))\n            document.getElementById(\"site-subtitle\").style.textShadow = arr[idx] + \" 0 0 10px\";\n        if (document.getElementById(\"post-info\"))\n            document.getElementById(\"post-info\").style.textShadow = arr[idx] + \" 0 0 5px\";\n        try {\n            document.getElementsByClassName(\"author-info__name\")[0].style.textShadow = arr[idx] + \" 0 0 12px\";\n            document.getElementsByClassName(\"author-info__description\")[0].style.textShadow = arr[idx] + \" 0 0 12px\";\n        } catch {\n            \n        }\n        idx++;\n        if (idx == 8) {\n            idx = 0;\n        }\n    } else {\n        // 白天模式恢复默认\n        if (document.getElementById(\"site-name\"))\n            document.getElementById(\"site-name\").style.textShadow = \"#1e1e1ee0 1px 1px 1px\";\n        if (document.getElementById(\"site-title\"))\n            document.getElementById(\"site-title\").style.textShadow = \"#1e1e1ee0 1px 1px 1px\";\n        if (document.getElementById(\"site-subtitle\"))\n            document.getElementById(\"site-subtitle\").style.textShadow = \"#1e1e1ee0 1px 1px 1px\";\n        if (document.getElementById(\"post-info\"))\n            document.getElementById(\"post-info\").style.textShadow = \"#1e1e1ee0 1px 1px 1px\";\n        try {\n            document.getElementsByClassName(\"author-info__name\")[0].style.textShadow = \"\";\n            document.getElementsByClassName(\"author-info__description\")[0].style.textShadow = \"\";\n        } catch {\n            \n        }\n    }\n}\n\n// 开启计时器\nwindow.onload = setInterval(changeColor, 1200);","source":"js/light.js","raw":"// 霓虹灯效果\n// 颜色数组\nvar arr = [\"#39c5bb\", \"#f14747\", \"#f1a247\", \"#f1ee47\", \"#b347f1\", \"#1edbff\", \"#ed709b\", \"#5636ed\"];\n// 颜色索引\nvar idx = 0;\n\n// 切换颜色\nfunction changeColor() {\n    // 仅夜间模式才启用\n    if (document.getElementsByTagName('html')[0].getAttribute('data-theme') == 'dark') {\n        if (document.getElementById(\"site-name\"))\n            document.getElementById(\"site-name\").style.textShadow = arr[idx] + \" 0 0 15px\";\n        if (document.getElementById(\"site-title\"))\n            document.getElementById(\"site-title\").style.textShadow = arr[idx] + \" 0 0 15px\";\n        if (document.getElementById(\"site-subtitle\"))\n            document.getElementById(\"site-subtitle\").style.textShadow = arr[idx] + \" 0 0 10px\";\n        if (document.getElementById(\"post-info\"))\n            document.getElementById(\"post-info\").style.textShadow = arr[idx] + \" 0 0 5px\";\n        try {\n            document.getElementsByClassName(\"author-info__name\")[0].style.textShadow = arr[idx] + \" 0 0 12px\";\n            document.getElementsByClassName(\"author-info__description\")[0].style.textShadow = arr[idx] + \" 0 0 12px\";\n        } catch {\n            \n        }\n        idx++;\n        if (idx == 8) {\n            idx = 0;\n        }\n    } else {\n        // 白天模式恢复默认\n        if (document.getElementById(\"site-name\"))\n            document.getElementById(\"site-name\").style.textShadow = \"#1e1e1ee0 1px 1px 1px\";\n        if (document.getElementById(\"site-title\"))\n            document.getElementById(\"site-title\").style.textShadow = \"#1e1e1ee0 1px 1px 1px\";\n        if (document.getElementById(\"site-subtitle\"))\n            document.getElementById(\"site-subtitle\").style.textShadow = \"#1e1e1ee0 1px 1px 1px\";\n        if (document.getElementById(\"post-info\"))\n            document.getElementById(\"post-info\").style.textShadow = \"#1e1e1ee0 1px 1px 1px\";\n        try {\n            document.getElementsByClassName(\"author-info__name\")[0].style.textShadow = \"\";\n            document.getElementsByClassName(\"author-info__description\")[0].style.textShadow = \"\";\n        } catch {\n            \n        }\n    }\n}\n\n// 开启计时器\nwindow.onload = setInterval(changeColor, 1200);","date":"2024-02-04T21:42:19.909Z","updated":"2024-02-04T21:42:19.909Z","path":"js/light.js","layout":"false","title":"","comments":1,"_id":"clyh2ognl000oe0dsdnoa7xg1","content":"// 霓虹灯效果\n// 颜色数组\nvar arr = [\"#39c5bb\", \"#f14747\", \"#f1a247\", \"#f1ee47\", \"#b347f1\", \"#1edbff\", \"#ed709b\", \"#5636ed\"];\n// 颜色索引\nvar idx = 0;\n\n// 切换颜色\nfunction changeColor() {\n    // 仅夜间模式才启用\n    if (document.getElementsByTagName('html')[0].getAttribute('data-theme') == 'dark') {\n        if (document.getElementById(\"site-name\"))\n            document.getElementById(\"site-name\").style.textShadow = arr[idx] + \" 0 0 15px\";\n        if (document.getElementById(\"site-title\"))\n            document.getElementById(\"site-title\").style.textShadow = arr[idx] + \" 0 0 15px\";\n        if (document.getElementById(\"site-subtitle\"))\n            document.getElementById(\"site-subtitle\").style.textShadow = arr[idx] + \" 0 0 10px\";\n        if (document.getElementById(\"post-info\"))\n            document.getElementById(\"post-info\").style.textShadow = arr[idx] + \" 0 0 5px\";\n        try {\n            document.getElementsByClassName(\"author-info__name\")[0].style.textShadow = arr[idx] + \" 0 0 12px\";\n            document.getElementsByClassName(\"author-info__description\")[0].style.textShadow = arr[idx] + \" 0 0 12px\";\n        } catch {\n            \n        }\n        idx++;\n        if (idx == 8) {\n            idx = 0;\n        }\n    } else {\n        // 白天模式恢复默认\n        if (document.getElementById(\"site-name\"))\n            document.getElementById(\"site-name\").style.textShadow = \"#1e1e1ee0 1px 1px 1px\";\n        if (document.getElementById(\"site-title\"))\n            document.getElementById(\"site-title\").style.textShadow = \"#1e1e1ee0 1px 1px 1px\";\n        if (document.getElementById(\"site-subtitle\"))\n            document.getElementById(\"site-subtitle\").style.textShadow = \"#1e1e1ee0 1px 1px 1px\";\n        if (document.getElementById(\"post-info\"))\n            document.getElementById(\"post-info\").style.textShadow = \"#1e1e1ee0 1px 1px 1px\";\n        try {\n            document.getElementsByClassName(\"author-info__name\")[0].style.textShadow = \"\";\n            document.getElementsByClassName(\"author-info__description\")[0].style.textShadow = \"\";\n        } catch {\n            \n        }\n    }\n}\n\n// 开启计时器\nwindow.onload = setInterval(changeColor, 1200);","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"Vue","color":"#b8f0ae","icon":"https://img02.anheyu.com/adminuploads/1/2022/09/25/633001374747b.png"}]}],"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"}]}]}},"cover":false,"excerpt":"","more":"// 霓虹灯效果\n// 颜色数组\nvar arr = [\"#39c5bb\", \"#f14747\", \"#f1a247\", \"#f1ee47\", \"#b347f1\", \"#1edbff\", \"#ed709b\", \"#5636ed\"];\n// 颜色索引\nvar idx = 0;\n\n// 切换颜色\nfunction changeColor() {\n    // 仅夜间模式才启用\n    if (document.getElementsByTagName('html')[0].getAttribute('data-theme') == 'dark') {\n        if (document.getElementById(\"site-name\"))\n            document.getElementById(\"site-name\").style.textShadow = arr[idx] + \" 0 0 15px\";\n        if (document.getElementById(\"site-title\"))\n            document.getElementById(\"site-title\").style.textShadow = arr[idx] + \" 0 0 15px\";\n        if (document.getElementById(\"site-subtitle\"))\n            document.getElementById(\"site-subtitle\").style.textShadow = arr[idx] + \" 0 0 10px\";\n        if (document.getElementById(\"post-info\"))\n            document.getElementById(\"post-info\").style.textShadow = arr[idx] + \" 0 0 5px\";\n        try {\n            document.getElementsByClassName(\"author-info__name\")[0].style.textShadow = arr[idx] + \" 0 0 12px\";\n            document.getElementsByClassName(\"author-info__description\")[0].style.textShadow = arr[idx] + \" 0 0 12px\";\n        } catch {\n            \n        }\n        idx++;\n        if (idx == 8) {\n            idx = 0;\n        }\n    } else {\n        // 白天模式恢复默认\n        if (document.getElementById(\"site-name\"))\n            document.getElementById(\"site-name\").style.textShadow = \"#1e1e1ee0 1px 1px 1px\";\n        if (document.getElementById(\"site-title\"))\n            document.getElementById(\"site-title\").style.textShadow = \"#1e1e1ee0 1px 1px 1px\";\n        if (document.getElementById(\"site-subtitle\"))\n            document.getElementById(\"site-subtitle\").style.textShadow = \"#1e1e1ee0 1px 1px 1px\";\n        if (document.getElementById(\"post-info\"))\n            document.getElementById(\"post-info\").style.textShadow = \"#1e1e1ee0 1px 1px 1px\";\n        try {\n            document.getElementsByClassName(\"author-info__name\")[0].style.textShadow = \"\";\n            document.getElementsByClassName(\"author-info__description\")[0].style.textShadow = \"\";\n        } catch {\n            \n        }\n    }\n}\n\n// 开启计时器\nwindow.onload = setInterval(changeColor, 1200);"},{"_content":"window.onscroll = percent;// 执行函数\n// 页面百分比\nfunction percent() {\n    let a = document.documentElement.scrollTop || window.pageYOffset, // 卷去高度\n        b = Math.max(document.body.scrollHeight, document.documentElement.scrollHeight, document.body.offsetHeight, document.documentElement.offsetHeight, document.body.clientHeight, document.documentElement.clientHeight) - document.documentElement.clientHeight, // 整个网页高度\n        result = Math.round(a / b * 100), // 计算百分比\n        up = document.querySelector(\"#go-up\") // 获取按钮\n\n    if (result <= 95) {\n        up.childNodes[0].style.display = 'none'\n        up.childNodes[1].style.display = 'block'\n        up.childNodes[1].innerHTML = result;\n    } else {\n        up.childNodes[1].style.display = 'none'\n        up.childNodes[0].style.display = 'block'\n    }\n}","source":"js/readPercent.js","raw":"window.onscroll = percent;// 执行函数\n// 页面百分比\nfunction percent() {\n    let a = document.documentElement.scrollTop || window.pageYOffset, // 卷去高度\n        b = Math.max(document.body.scrollHeight, document.documentElement.scrollHeight, document.body.offsetHeight, document.documentElement.offsetHeight, document.body.clientHeight, document.documentElement.clientHeight) - document.documentElement.clientHeight, // 整个网页高度\n        result = Math.round(a / b * 100), // 计算百分比\n        up = document.querySelector(\"#go-up\") // 获取按钮\n\n    if (result <= 95) {\n        up.childNodes[0].style.display = 'none'\n        up.childNodes[1].style.display = 'block'\n        up.childNodes[1].innerHTML = result;\n    } else {\n        up.childNodes[1].style.display = 'none'\n        up.childNodes[0].style.display = 'block'\n    }\n}","date":"2024-02-04T23:00:41.465Z","updated":"2024-02-04T23:00:41.465Z","path":"js/readPercent.js","layout":"false","title":"","comments":1,"_id":"clyh2ognn000te0ds7iii4ztj","content":"window.onscroll = percent;// 执行函数\n// 页面百分比\nfunction percent() {\n    let a = document.documentElement.scrollTop || window.pageYOffset, // 卷去高度\n        b = Math.max(document.body.scrollHeight, document.documentElement.scrollHeight, document.body.offsetHeight, document.documentElement.offsetHeight, document.body.clientHeight, document.documentElement.clientHeight) - document.documentElement.clientHeight, // 整个网页高度\n        result = Math.round(a / b * 100), // 计算百分比\n        up = document.querySelector(\"#go-up\") // 获取按钮\n\n    if (result <= 95) {\n        up.childNodes[0].style.display = 'none'\n        up.childNodes[1].style.display = 'block'\n        up.childNodes[1].innerHTML = result;\n    } else {\n        up.childNodes[1].style.display = 'none'\n        up.childNodes[0].style.display = 'block'\n    }\n}","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"Vue","color":"#b8f0ae","icon":"https://img02.anheyu.com/adminuploads/1/2022/09/25/633001374747b.png"}]}],"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"}]}]}},"cover":false,"excerpt":"","more":"window.onscroll = percent;// 执行函数\n// 页面百分比\nfunction percent() {\n    let a = document.documentElement.scrollTop || window.pageYOffset, // 卷去高度\n        b = Math.max(document.body.scrollHeight, document.documentElement.scrollHeight, document.body.offsetHeight, document.documentElement.offsetHeight, document.body.clientHeight, document.documentElement.clientHeight) - document.documentElement.clientHeight, // 整个网页高度\n        result = Math.round(a / b * 100), // 计算百分比\n        up = document.querySelector(\"#go-up\") // 获取按钮\n\n    if (result <= 95) {\n        up.childNodes[0].style.display = 'none'\n        up.childNodes[1].style.display = 'block'\n        up.childNodes[1].innerHTML = result;\n    } else {\n        up.childNodes[1].style.display = 'none'\n        up.childNodes[0].style.display = 'block'\n    }\n}"},{"_content":"setInterval(() => {\n    let create_time = Math.round(new Date('2024-01-01 00:00:00').getTime() / 1000); //在此行修改建站时间\n    let timestamp = Math.round((new Date().getTime()) / 1000);\n    let second = timestamp - create_time;\n    let time = new Array(0, 0, 0, 0, 0);\n  \n    var nol = function(h){\n      return h>9?h:'0'+h;\n    }\n    if (second >= 365 * 24 * 3600) {\n      time[0] = parseInt(second / (365 * 24 * 3600));\n      second %= 365 * 24 * 3600;\n    }\n    if (second >= 24 * 3600) {\n      time[1] = parseInt(second / (24 * 3600));\n      second %= 24 * 3600;\n    }\n    if (second >= 3600) {\n      time[2] = nol(parseInt(second / 3600));\n      second %= 3600;\n    }\n    if (second >= 60) {\n      time[3] = nol(parseInt(second / 60));\n      second %= 60;\n    }\n    if (second > 0) {\n      time[4] = nol(second);\n    }\n    if ((Number(time[2])<22) && (Number(time[2])>7)){\n      currentTimeHtml =\"<img class='boardsign' src='https://img.shields.io/badge/日记本-记录中-6adea8?style=social&logo=cakephp' title='距离百年老店也就差不到一百年~'><div id='runtime'>\" + time[0] + ' YEAR ' + time[1] + ' DAYS ' + time[2] + ' : ' + time[3] + ' : ' + time[4] + '</div>';\n    }\n    else{\n      currentTimeHtml =\"<img class='boardsign' src='https://img.shields.io/badge/日记本-休息了-6adea8?style=social&logo=coffeescript' title='这个点了应该去睡觉啦，熬夜对身体不好哦'><div id='runtime'>\" + time[0] + ' YEAR ' + time[1] + ' DAYS ' + time[2] + ' : ' + time[3] + ' : ' + time[4] + '</div>';\n    }\n    document.getElementById(\"workboard\").innerHTML = currentTimeHtml;\n  }, 1000);","source":"js/runtime.js","raw":"setInterval(() => {\n    let create_time = Math.round(new Date('2024-01-01 00:00:00').getTime() / 1000); //在此行修改建站时间\n    let timestamp = Math.round((new Date().getTime()) / 1000);\n    let second = timestamp - create_time;\n    let time = new Array(0, 0, 0, 0, 0);\n  \n    var nol = function(h){\n      return h>9?h:'0'+h;\n    }\n    if (second >= 365 * 24 * 3600) {\n      time[0] = parseInt(second / (365 * 24 * 3600));\n      second %= 365 * 24 * 3600;\n    }\n    if (second >= 24 * 3600) {\n      time[1] = parseInt(second / (24 * 3600));\n      second %= 24 * 3600;\n    }\n    if (second >= 3600) {\n      time[2] = nol(parseInt(second / 3600));\n      second %= 3600;\n    }\n    if (second >= 60) {\n      time[3] = nol(parseInt(second / 60));\n      second %= 60;\n    }\n    if (second > 0) {\n      time[4] = nol(second);\n    }\n    if ((Number(time[2])<22) && (Number(time[2])>7)){\n      currentTimeHtml =\"<img class='boardsign' src='https://img.shields.io/badge/日记本-记录中-6adea8?style=social&logo=cakephp' title='距离百年老店也就差不到一百年~'><div id='runtime'>\" + time[0] + ' YEAR ' + time[1] + ' DAYS ' + time[2] + ' : ' + time[3] + ' : ' + time[4] + '</div>';\n    }\n    else{\n      currentTimeHtml =\"<img class='boardsign' src='https://img.shields.io/badge/日记本-休息了-6adea8?style=social&logo=coffeescript' title='这个点了应该去睡觉啦，熬夜对身体不好哦'><div id='runtime'>\" + time[0] + ' YEAR ' + time[1] + ' DAYS ' + time[2] + ' : ' + time[3] + ' : ' + time[4] + '</div>';\n    }\n    document.getElementById(\"workboard\").innerHTML = currentTimeHtml;\n  }, 1000);","date":"2024-03-19T20:38:14.245Z","updated":"2024-03-19T20:38:14.245Z","path":"js/runtime.js","layout":"false","title":"","comments":1,"_id":"clyh2ognp000we0dsfceh8z78","content":"setInterval(() => {\n    let create_time = Math.round(new Date('2024-01-01 00:00:00').getTime() / 1000); //在此行修改建站时间\n    let timestamp = Math.round((new Date().getTime()) / 1000);\n    let second = timestamp - create_time;\n    let time = new Array(0, 0, 0, 0, 0);\n  \n    var nol = function(h){\n      return h>9?h:'0'+h;\n    }\n    if (second >= 365 * 24 * 3600) {\n      time[0] = parseInt(second / (365 * 24 * 3600));\n      second %= 365 * 24 * 3600;\n    }\n    if (second >= 24 * 3600) {\n      time[1] = parseInt(second / (24 * 3600));\n      second %= 24 * 3600;\n    }\n    if (second >= 3600) {\n      time[2] = nol(parseInt(second / 3600));\n      second %= 3600;\n    }\n    if (second >= 60) {\n      time[3] = nol(parseInt(second / 60));\n      second %= 60;\n    }\n    if (second > 0) {\n      time[4] = nol(second);\n    }\n    if ((Number(time[2])<22) && (Number(time[2])>7)){\n      currentTimeHtml =\"<img class='boardsign' src='https://img.shields.io/badge/日记本-记录中-6adea8?style=social&logo=cakephp' title='距离百年老店也就差不到一百年~'><div id='runtime'>\" + time[0] + ' YEAR ' + time[1] + ' DAYS ' + time[2] + ' : ' + time[3] + ' : ' + time[4] + '</div>';\n    }\n    else{\n      currentTimeHtml =\"<img class='boardsign' src='https://img.shields.io/badge/日记本-休息了-6adea8?style=social&logo=coffeescript' title='这个点了应该去睡觉啦，熬夜对身体不好哦'><div id='runtime'>\" + time[0] + ' YEAR ' + time[1] + ' DAYS ' + time[2] + ' : ' + time[3] + ' : ' + time[4] + '</div>';\n    }\n    document.getElementById(\"workboard\").innerHTML = currentTimeHtml;\n  }, 1000);","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"Vue","color":"#b8f0ae","icon":"https://img02.anheyu.com/adminuploads/1/2022/09/25/633001374747b.png"}]}],"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"}]}]}},"cover":false,"excerpt":"","more":"setInterval(() => {\n    let create_time = Math.round(new Date('2024-01-01 00:00:00').getTime() / 1000); //在此行修改建站时间\n    let timestamp = Math.round((new Date().getTime()) / 1000);\n    let second = timestamp - create_time;\n    let time = new Array(0, 0, 0, 0, 0);\n  \n    var nol = function(h){\n      return h>9?h:'0'+h;\n    }\n    if (second >= 365 * 24 * 3600) {\n      time[0] = parseInt(second / (365 * 24 * 3600));\n      second %= 365 * 24 * 3600;\n    }\n    if (second >= 24 * 3600) {\n      time[1] = parseInt(second / (24 * 3600));\n      second %= 24 * 3600;\n    }\n    if (second >= 3600) {\n      time[2] = nol(parseInt(second / 3600));\n      second %= 3600;\n    }\n    if (second >= 60) {\n      time[3] = nol(parseInt(second / 60));\n      second %= 60;\n    }\n    if (second > 0) {\n      time[4] = nol(second);\n    }\n    if ((Number(time[2])<22) && (Number(time[2])>7)){\n      currentTimeHtml =\"<img class='boardsign' src='https://img.shields.io/badge/日记本-记录中-6adea8?style=social&logo=cakephp' title='距离百年老店也就差不到一百年~'><div id='runtime'>\" + time[0] + ' YEAR ' + time[1] + ' DAYS ' + time[2] + ' : ' + time[3] + ' : ' + time[4] + '</div>';\n    }\n    else{\n      currentTimeHtml =\"<img class='boardsign' src='https://img.shields.io/badge/日记本-休息了-6adea8?style=social&logo=coffeescript' title='这个点了应该去睡觉啦，熬夜对身体不好哦'><div id='runtime'>\" + time[0] + ' YEAR ' + time[1] + ' DAYS ' + time[2] + ' : ' + time[3] + ' : ' + time[4] + '</div>';\n    }\n    document.getElementById(\"workboard\").innerHTML = currentTimeHtml;\n  }, 1000);"},{"_content":"// 分享本页\nfunction share_() {\n    let url = window.location.origin + window.location.pathname\n    try {\n        // 截取标题\n        var title = document.title;\n        var subTitle = title.endsWith(\"| Fomalhaut🥝\") ? title.substring(0, title.length - 14) : title;\n        navigator.clipboard.writeText('Fomalhaut🥝的站内分享\\n标题：' + subTitle + '\\n链接：' + url + '\\n欢迎来访！🍭🍭🍭');\n        new Vue({\n            data: function () {\n                this.$notify({\n                    title: \"成功复制分享信息🎉\",\n                    message: \"您现在可以通过粘贴直接跟小伙伴分享了！\",\n                    position: 'top-left',\n                    offset: 50,\n                    showClose: true,\n                    type: \"success\", \n                    duration: 5000\n                });\n                // return { visible: false }\n            }\n        })\n    } catch (err) {\n        console.error('复制失败！', err);\n    }\n    // new ClipboardJS(\".share\", { text: function () { return '标题：' + document.title + '\\n链接：' + url } });\n    // btf.snackbarShow(\"本页链接已复制到剪切板，快去分享吧~\")\n}\n\n// 防抖\nfunction share() {\n    debounce(share_, 300);\n}","source":"js/share.js","raw":"// 分享本页\nfunction share_() {\n    let url = window.location.origin + window.location.pathname\n    try {\n        // 截取标题\n        var title = document.title;\n        var subTitle = title.endsWith(\"| Fomalhaut🥝\") ? title.substring(0, title.length - 14) : title;\n        navigator.clipboard.writeText('Fomalhaut🥝的站内分享\\n标题：' + subTitle + '\\n链接：' + url + '\\n欢迎来访！🍭🍭🍭');\n        new Vue({\n            data: function () {\n                this.$notify({\n                    title: \"成功复制分享信息🎉\",\n                    message: \"您现在可以通过粘贴直接跟小伙伴分享了！\",\n                    position: 'top-left',\n                    offset: 50,\n                    showClose: true,\n                    type: \"success\", \n                    duration: 5000\n                });\n                // return { visible: false }\n            }\n        })\n    } catch (err) {\n        console.error('复制失败！', err);\n    }\n    // new ClipboardJS(\".share\", { text: function () { return '标题：' + document.title + '\\n链接：' + url } });\n    // btf.snackbarShow(\"本页链接已复制到剪切板，快去分享吧~\")\n}\n\n// 防抖\nfunction share() {\n    debounce(share_, 300);\n}","date":"2024-02-04T23:09:52.789Z","updated":"2024-02-04T23:09:52.789Z","path":"js/share.js","layout":"false","title":"","comments":1,"_id":"clyh2ognr0012e0dsgyd08wr4","content":"// 分享本页\nfunction share_() {\n    let url = window.location.origin + window.location.pathname\n    try {\n        // 截取标题\n        var title = document.title;\n        var subTitle = title.endsWith(\"| Fomalhaut🥝\") ? title.substring(0, title.length - 14) : title;\n        navigator.clipboard.writeText('Fomalhaut🥝的站内分享\\n标题：' + subTitle + '\\n链接：' + url + '\\n欢迎来访！🍭🍭🍭');\n        new Vue({\n            data: function () {\n                this.$notify({\n                    title: \"成功复制分享信息🎉\",\n                    message: \"您现在可以通过粘贴直接跟小伙伴分享了！\",\n                    position: 'top-left',\n                    offset: 50,\n                    showClose: true,\n                    type: \"success\", \n                    duration: 5000\n                });\n                // return { visible: false }\n            }\n        })\n    } catch (err) {\n        console.error('复制失败！', err);\n    }\n    // new ClipboardJS(\".share\", { text: function () { return '标题：' + document.title + '\\n链接：' + url } });\n    // btf.snackbarShow(\"本页链接已复制到剪切板，快去分享吧~\")\n}\n\n// 防抖\nfunction share() {\n    debounce(share_, 300);\n}","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"Vue","color":"#b8f0ae","icon":"https://img02.anheyu.com/adminuploads/1/2022/09/25/633001374747b.png"}]}],"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"}]}]}},"cover":false,"excerpt":"","more":"// 分享本页\nfunction share_() {\n    let url = window.location.origin + window.location.pathname\n    try {\n        // 截取标题\n        var title = document.title;\n        var subTitle = title.endsWith(\"| Fomalhaut🥝\") ? title.substring(0, title.length - 14) : title;\n        navigator.clipboard.writeText('Fomalhaut🥝的站内分享\\n标题：' + subTitle + '\\n链接：' + url + '\\n欢迎来访！🍭🍭🍭');\n        new Vue({\n            data: function () {\n                this.$notify({\n                    title: \"成功复制分享信息🎉\",\n                    message: \"您现在可以通过粘贴直接跟小伙伴分享了！\",\n                    position: 'top-left',\n                    offset: 50,\n                    showClose: true,\n                    type: \"success\", \n                    duration: 5000\n                });\n                // return { visible: false }\n            }\n        })\n    } catch (err) {\n        console.error('复制失败！', err);\n    }\n    // new ClipboardJS(\".share\", { text: function () { return '标题：' + document.title + '\\n链接：' + url } });\n    // btf.snackbarShow(\"本页链接已复制到剪切板，快去分享吧~\")\n}\n\n// 防抖\nfunction share() {\n    debounce(share_, 300);\n}"},{"_content":"//get请求\n$.ajax({\n    type: 'get',\n    url: 'https://apis.map.qq.com/ws/location/v1/ip',\n    data: {\n        key: 'PQGBZ-6HFKM-BOK64-6MJYU-5R3O6-7HFW6',\n        output: 'jsonp',\n    },\n    dataType: 'jsonp',\n    success: function (res) {\n        ipLoacation = res;\n    }\n})\nfunction getDistance(e1, n1, e2, n2) {\n    const R = 6371\n    const { sin, cos, asin, PI, hypot } = Math\n    let getPoint = (e, n) => {\n        e *= PI / 180\n        n *= PI / 180\n        return { x: cos(n) * cos(e), y: cos(n) * sin(e), z: sin(n) }\n    }\n\n    let a = getPoint(e1, n1)\n    let b = getPoint(e2, n2)\n    let c = hypot(a.x - b.x, a.y - b.y, a.z - b.z)\n    let r = asin(c / 2) * 2 * R\n    return Math.round(r);\n}\n\nfunction showWelcome() {\n\n    let dist = getDistance(112.823054, 26.404134, ipLoacation.result.location.lng, ipLoacation.result.location.lat); //这里换成自己的经纬度\n    let pos = ipLoacation.result.ad_info.nation;\n    let ip;\n    let posdesc;\n    //根据国家、省份、城市信息自定义欢迎语\n    switch (ipLoacation.result.ad_info.nation) {\n        case \"日本\":\n            posdesc = \"よろしく，一起去看樱花吗\";\n            break;\n        case \"美国\":\n            posdesc = \"Let us live in peace!\";\n            break;\n        case \"英国\":\n            posdesc = \"想同你一起夜乘伦敦眼\";\n            break;\n        case \"俄罗斯\":\n            posdesc = \"干了这瓶伏特加！\";\n            break;\n        case \"法国\":\n            posdesc = \"C'est La Vie\";\n            break;\n        case \"德国\":\n            posdesc = \"Die Zeit verging im Fluge.\";\n            break;\n        case \"澳大利亚\":\n            posdesc = \"一起去大堡礁吧！\";\n            break;\n        case \"加拿大\":\n            posdesc = \"拾起一片枫叶赠予你\";\n            break;\n        case \"中国\":\n            pos = ipLoacation.result.ad_info.province + \" \" + ipLoacation.result.ad_info.city + \" \" + ipLoacation.result.ad_info.district;\n            ip = ipLoacation.result.ip;\n            switch (ipLoacation.result.ad_info.province) {\n                case \"北京市\":\n                    posdesc = \"北——京——欢迎你~~~\";\n                    break;\n                case \"天津市\":\n                    posdesc = \"讲段相声吧。\";\n                    break;\n                case \"河北省\":\n                    posdesc = \"山势巍巍成壁垒，天下雄关。铁马金戈由此向，无限江山。\";\n                    break;\n                case \"山西省\":\n                    posdesc = \"展开坐具长三尺，已占山河五百余。\";\n                    break;\n                case \"内蒙古自治区\":\n                    posdesc = \"天苍苍，野茫茫，风吹草低见牛羊。\";\n                    break;\n                case \"辽宁省\":\n                    posdesc = \"我想吃烤鸡架！\";\n                    break;\n                case \"吉林省\":\n                    posdesc = \"状元阁就是东北烧烤之王。\";\n                    break;\n                case \"黑龙江省\":\n                    posdesc = \"很喜欢哈尔滨大剧院。\";\n                    break;\n                case \"上海市\":\n                    posdesc = \"众所周知，中国只有两个城市。\";\n                    break;\n                case \"江苏省\":\n                    switch (ipLoacation.result.ad_info.city) {\n                        case \"南京市\":\n                            posdesc = \"这是我挺想去的城市啦。\";\n                            break;\n                        case \"苏州市\":\n                            posdesc = \"上有天堂，下有苏杭。\";\n                            break;\n                        default:\n                            posdesc = \"散装是必须要散装的。\";\n                            break;\n                    }\n                    break;\n                case \"浙江省\":\n                    posdesc = \"东风渐绿西湖柳，雁已还人未南归。\";\n                    break;\n                case \"河南省\":\n                    switch (ipLoacation.result.ad_info.city) {\n                        case \"郑州市\":\n                            posdesc = \"豫州之域，天地之中。\";\n                            break;\n                        case \"南阳市\":\n                            posdesc = \"臣本布衣，躬耕于南阳。此南阳非彼南阳！\";\n                            break;\n                        case \"驻马店市\":\n                            posdesc = \"峰峰有奇石，石石挟仙气。嵖岈山的花很美哦！\";\n                            break;\n                        case \"开封市\":\n                            posdesc = \"刚正不阿包青天。\";\n                            break;\n                        case \"洛阳市\":\n                            posdesc = \"洛阳牡丹甲天下。\";\n                            break;\n                        default:\n                            posdesc = \"可否带我品尝河南烩面啦？\";\n                            break;\n                    }\n                    break;\n                case \"安徽省\":\n                    posdesc = \"蚌埠住了，芜湖起飞。\";\n                    break;\n                case \"福建省\":\n                    posdesc = \"井邑白云间，岩城远带山。\";\n                    break;\n                case \"江西省\":\n                    posdesc = \"落霞与孤鹜齐飞，秋水共长天一色。\";\n                    break;\n                case \"山东省\":\n                    posdesc = \"遥望齐州九点烟，一泓海水杯中泻。\";\n                    break;\n                case \"湖北省\":\n                    posdesc = \"来碗热干面！\";\n                    break;\n                case \"湖南省\":\n                    posdesc = \"74751，长沙斯塔克。\";\n                    break;\n                case \"广东省\":\n                    posdesc = \"老板来两斤福建人。\";\n                    break;\n                case \"广西壮族自治区\":\n                    posdesc = \"桂林山水甲天下。\";\n                    break;\n                case \"海南省\":\n                    posdesc = \"朝观日出逐白浪，夕看云起收霞光。\";\n                    break;\n                case \"四川省\":\n                    posdesc = \"康康川妹子。\";\n                    break;\n                case \"贵州省\":\n                    posdesc = \"茅台，学生，再塞200。\";\n                    break;\n                case \"云南省\":\n                    posdesc = \"玉龙飞舞云缠绕，万仞冰川直耸天。\";\n                    break;\n                case \"西藏自治区\":\n                    posdesc = \"躺在茫茫草原上，仰望蓝天。\";\n                    break;\n                case \"陕西省\":\n                    posdesc = \"来份臊子面加馍。\";\n                    break;\n                case \"甘肃省\":\n                    posdesc = \"羌笛何须怨杨柳，春风不度玉门关。\";\n                    break;\n                case \"青海省\":\n                    posdesc = \"牛肉干和老酸奶都好好吃。\";\n                    break;\n                case \"宁夏回族自治区\":\n                    posdesc = \"大漠孤烟直，长河落日圆。\";\n                    break;\n                case \"新疆维吾尔自治区\":\n                    posdesc = \"驼铃古道丝绸路，胡马犹闻唐汉风。\";\n                    break;\n                case \"台湾省\":\n                    posdesc = \"我在这头，大陆在那头。\";\n                    break;\n                case \"香港特别行政区\":\n                    posdesc = \"永定贼有残留地鬼嚎，迎击光非岁玉。\";\n                    break;\n                case \"澳门特别行政区\":\n                    posdesc = \"性感荷官，在线发牌。\";\n                    break;\n                default:\n                    posdesc = \"带我去你的城市逛逛吧！\";\n                    break;\n            }\n            break;\n        default:\n            posdesc = \"带我去你的国家逛逛吧。\";\n            break;\n    }\n\n    //根据本地时间切换欢迎语\n    let timeChange;\n    let date = new Date();\n    if (date.getHours() >= 5 && date.getHours() < 11) timeChange = \"<span>上午好</span>，一日之计在于晨！\";\n    else if (date.getHours() >= 11 && date.getHours() < 13) timeChange = \"<span>中午好</span>，该摸鱼吃午饭了。\";\n    else if (date.getHours() >= 13 && date.getHours() < 15) timeChange = \"<span>下午好</span>，懒懒地睡个午觉吧！\";\n    else if (date.getHours() >= 15 && date.getHours() < 16) timeChange = \"<span>三点几啦</span>，一起饮茶呀！\";\n    else if (date.getHours() >= 16 && date.getHours() < 19) timeChange = \"<span>夕阳无限好！</span>\";\n    else if (date.getHours() >= 19 && date.getHours() < 24) timeChange = \"<span>晚上好</span>，夜生活嗨起来！\";\n    else timeChange = \"夜深了，早点休息，少熬夜。\";\n\n    try {\n        //自定义文本和需要放的位置\n        document.getElementById(\"welcome-info\").innerHTML =\n            `<b><center>🎉 欢迎信息 🎉</center>&emsp;&emsp;欢迎来自 <span style=\"color:var(--theme-color)\">${pos}</span> 的小伙伴，${timeChange}您现在距离AnHao约 <span style=\"color:var(--theme-color)\">${dist}</span> 公里，当前的IP地址为： <span style=\"color:var(--theme-color)\">${ip}</span>， ${posdesc}</b>`;\n    } catch (err) {\n        // console.log(\"Pjax无法获取#welcome-info元素🙄🙄🙄\")\n    }\n}\nwindow.onload = showWelcome;\n// 如果使用了pjax在加上下面这行代码\ndocument.addEventListener('pjax:complete', showWelcome);\n","source":"js/txmap.js","raw":"//get请求\n$.ajax({\n    type: 'get',\n    url: 'https://apis.map.qq.com/ws/location/v1/ip',\n    data: {\n        key: 'PQGBZ-6HFKM-BOK64-6MJYU-5R3O6-7HFW6',\n        output: 'jsonp',\n    },\n    dataType: 'jsonp',\n    success: function (res) {\n        ipLoacation = res;\n    }\n})\nfunction getDistance(e1, n1, e2, n2) {\n    const R = 6371\n    const { sin, cos, asin, PI, hypot } = Math\n    let getPoint = (e, n) => {\n        e *= PI / 180\n        n *= PI / 180\n        return { x: cos(n) * cos(e), y: cos(n) * sin(e), z: sin(n) }\n    }\n\n    let a = getPoint(e1, n1)\n    let b = getPoint(e2, n2)\n    let c = hypot(a.x - b.x, a.y - b.y, a.z - b.z)\n    let r = asin(c / 2) * 2 * R\n    return Math.round(r);\n}\n\nfunction showWelcome() {\n\n    let dist = getDistance(112.823054, 26.404134, ipLoacation.result.location.lng, ipLoacation.result.location.lat); //这里换成自己的经纬度\n    let pos = ipLoacation.result.ad_info.nation;\n    let ip;\n    let posdesc;\n    //根据国家、省份、城市信息自定义欢迎语\n    switch (ipLoacation.result.ad_info.nation) {\n        case \"日本\":\n            posdesc = \"よろしく，一起去看樱花吗\";\n            break;\n        case \"美国\":\n            posdesc = \"Let us live in peace!\";\n            break;\n        case \"英国\":\n            posdesc = \"想同你一起夜乘伦敦眼\";\n            break;\n        case \"俄罗斯\":\n            posdesc = \"干了这瓶伏特加！\";\n            break;\n        case \"法国\":\n            posdesc = \"C'est La Vie\";\n            break;\n        case \"德国\":\n            posdesc = \"Die Zeit verging im Fluge.\";\n            break;\n        case \"澳大利亚\":\n            posdesc = \"一起去大堡礁吧！\";\n            break;\n        case \"加拿大\":\n            posdesc = \"拾起一片枫叶赠予你\";\n            break;\n        case \"中国\":\n            pos = ipLoacation.result.ad_info.province + \" \" + ipLoacation.result.ad_info.city + \" \" + ipLoacation.result.ad_info.district;\n            ip = ipLoacation.result.ip;\n            switch (ipLoacation.result.ad_info.province) {\n                case \"北京市\":\n                    posdesc = \"北——京——欢迎你~~~\";\n                    break;\n                case \"天津市\":\n                    posdesc = \"讲段相声吧。\";\n                    break;\n                case \"河北省\":\n                    posdesc = \"山势巍巍成壁垒，天下雄关。铁马金戈由此向，无限江山。\";\n                    break;\n                case \"山西省\":\n                    posdesc = \"展开坐具长三尺，已占山河五百余。\";\n                    break;\n                case \"内蒙古自治区\":\n                    posdesc = \"天苍苍，野茫茫，风吹草低见牛羊。\";\n                    break;\n                case \"辽宁省\":\n                    posdesc = \"我想吃烤鸡架！\";\n                    break;\n                case \"吉林省\":\n                    posdesc = \"状元阁就是东北烧烤之王。\";\n                    break;\n                case \"黑龙江省\":\n                    posdesc = \"很喜欢哈尔滨大剧院。\";\n                    break;\n                case \"上海市\":\n                    posdesc = \"众所周知，中国只有两个城市。\";\n                    break;\n                case \"江苏省\":\n                    switch (ipLoacation.result.ad_info.city) {\n                        case \"南京市\":\n                            posdesc = \"这是我挺想去的城市啦。\";\n                            break;\n                        case \"苏州市\":\n                            posdesc = \"上有天堂，下有苏杭。\";\n                            break;\n                        default:\n                            posdesc = \"散装是必须要散装的。\";\n                            break;\n                    }\n                    break;\n                case \"浙江省\":\n                    posdesc = \"东风渐绿西湖柳，雁已还人未南归。\";\n                    break;\n                case \"河南省\":\n                    switch (ipLoacation.result.ad_info.city) {\n                        case \"郑州市\":\n                            posdesc = \"豫州之域，天地之中。\";\n                            break;\n                        case \"南阳市\":\n                            posdesc = \"臣本布衣，躬耕于南阳。此南阳非彼南阳！\";\n                            break;\n                        case \"驻马店市\":\n                            posdesc = \"峰峰有奇石，石石挟仙气。嵖岈山的花很美哦！\";\n                            break;\n                        case \"开封市\":\n                            posdesc = \"刚正不阿包青天。\";\n                            break;\n                        case \"洛阳市\":\n                            posdesc = \"洛阳牡丹甲天下。\";\n                            break;\n                        default:\n                            posdesc = \"可否带我品尝河南烩面啦？\";\n                            break;\n                    }\n                    break;\n                case \"安徽省\":\n                    posdesc = \"蚌埠住了，芜湖起飞。\";\n                    break;\n                case \"福建省\":\n                    posdesc = \"井邑白云间，岩城远带山。\";\n                    break;\n                case \"江西省\":\n                    posdesc = \"落霞与孤鹜齐飞，秋水共长天一色。\";\n                    break;\n                case \"山东省\":\n                    posdesc = \"遥望齐州九点烟，一泓海水杯中泻。\";\n                    break;\n                case \"湖北省\":\n                    posdesc = \"来碗热干面！\";\n                    break;\n                case \"湖南省\":\n                    posdesc = \"74751，长沙斯塔克。\";\n                    break;\n                case \"广东省\":\n                    posdesc = \"老板来两斤福建人。\";\n                    break;\n                case \"广西壮族自治区\":\n                    posdesc = \"桂林山水甲天下。\";\n                    break;\n                case \"海南省\":\n                    posdesc = \"朝观日出逐白浪，夕看云起收霞光。\";\n                    break;\n                case \"四川省\":\n                    posdesc = \"康康川妹子。\";\n                    break;\n                case \"贵州省\":\n                    posdesc = \"茅台，学生，再塞200。\";\n                    break;\n                case \"云南省\":\n                    posdesc = \"玉龙飞舞云缠绕，万仞冰川直耸天。\";\n                    break;\n                case \"西藏自治区\":\n                    posdesc = \"躺在茫茫草原上，仰望蓝天。\";\n                    break;\n                case \"陕西省\":\n                    posdesc = \"来份臊子面加馍。\";\n                    break;\n                case \"甘肃省\":\n                    posdesc = \"羌笛何须怨杨柳，春风不度玉门关。\";\n                    break;\n                case \"青海省\":\n                    posdesc = \"牛肉干和老酸奶都好好吃。\";\n                    break;\n                case \"宁夏回族自治区\":\n                    posdesc = \"大漠孤烟直，长河落日圆。\";\n                    break;\n                case \"新疆维吾尔自治区\":\n                    posdesc = \"驼铃古道丝绸路，胡马犹闻唐汉风。\";\n                    break;\n                case \"台湾省\":\n                    posdesc = \"我在这头，大陆在那头。\";\n                    break;\n                case \"香港特别行政区\":\n                    posdesc = \"永定贼有残留地鬼嚎，迎击光非岁玉。\";\n                    break;\n                case \"澳门特别行政区\":\n                    posdesc = \"性感荷官，在线发牌。\";\n                    break;\n                default:\n                    posdesc = \"带我去你的城市逛逛吧！\";\n                    break;\n            }\n            break;\n        default:\n            posdesc = \"带我去你的国家逛逛吧。\";\n            break;\n    }\n\n    //根据本地时间切换欢迎语\n    let timeChange;\n    let date = new Date();\n    if (date.getHours() >= 5 && date.getHours() < 11) timeChange = \"<span>上午好</span>，一日之计在于晨！\";\n    else if (date.getHours() >= 11 && date.getHours() < 13) timeChange = \"<span>中午好</span>，该摸鱼吃午饭了。\";\n    else if (date.getHours() >= 13 && date.getHours() < 15) timeChange = \"<span>下午好</span>，懒懒地睡个午觉吧！\";\n    else if (date.getHours() >= 15 && date.getHours() < 16) timeChange = \"<span>三点几啦</span>，一起饮茶呀！\";\n    else if (date.getHours() >= 16 && date.getHours() < 19) timeChange = \"<span>夕阳无限好！</span>\";\n    else if (date.getHours() >= 19 && date.getHours() < 24) timeChange = \"<span>晚上好</span>，夜生活嗨起来！\";\n    else timeChange = \"夜深了，早点休息，少熬夜。\";\n\n    try {\n        //自定义文本和需要放的位置\n        document.getElementById(\"welcome-info\").innerHTML =\n            `<b><center>🎉 欢迎信息 🎉</center>&emsp;&emsp;欢迎来自 <span style=\"color:var(--theme-color)\">${pos}</span> 的小伙伴，${timeChange}您现在距离AnHao约 <span style=\"color:var(--theme-color)\">${dist}</span> 公里，当前的IP地址为： <span style=\"color:var(--theme-color)\">${ip}</span>， ${posdesc}</b>`;\n    } catch (err) {\n        // console.log(\"Pjax无法获取#welcome-info元素🙄🙄🙄\")\n    }\n}\nwindow.onload = showWelcome;\n// 如果使用了pjax在加上下面这行代码\ndocument.addEventListener('pjax:complete', showWelcome);\n","date":"2024-03-19T08:43:45.093Z","updated":"2024-03-19T08:43:45.093Z","path":"js/txmap.js","layout":"false","title":"","comments":1,"_id":"clyh2ogns0015e0ds50w76es7","content":"//get请求\n$.ajax({\n    type: 'get',\n    url: 'https://apis.map.qq.com/ws/location/v1/ip',\n    data: {\n        key: 'PQGBZ-6HFKM-BOK64-6MJYU-5R3O6-7HFW6',\n        output: 'jsonp',\n    },\n    dataType: 'jsonp',\n    success: function (res) {\n        ipLoacation = res;\n    }\n})\nfunction getDistance(e1, n1, e2, n2) {\n    const R = 6371\n    const { sin, cos, asin, PI, hypot } = Math\n    let getPoint = (e, n) => {\n        e *= PI / 180\n        n *= PI / 180\n        return { x: cos(n) * cos(e), y: cos(n) * sin(e), z: sin(n) }\n    }\n\n    let a = getPoint(e1, n1)\n    let b = getPoint(e2, n2)\n    let c = hypot(a.x - b.x, a.y - b.y, a.z - b.z)\n    let r = asin(c / 2) * 2 * R\n    return Math.round(r);\n}\n\nfunction showWelcome() {\n\n    let dist = getDistance(112.823054, 26.404134, ipLoacation.result.location.lng, ipLoacation.result.location.lat); //这里换成自己的经纬度\n    let pos = ipLoacation.result.ad_info.nation;\n    let ip;\n    let posdesc;\n    //根据国家、省份、城市信息自定义欢迎语\n    switch (ipLoacation.result.ad_info.nation) {\n        case \"日本\":\n            posdesc = \"よろしく，一起去看樱花吗\";\n            break;\n        case \"美国\":\n            posdesc = \"Let us live in peace!\";\n            break;\n        case \"英国\":\n            posdesc = \"想同你一起夜乘伦敦眼\";\n            break;\n        case \"俄罗斯\":\n            posdesc = \"干了这瓶伏特加！\";\n            break;\n        case \"法国\":\n            posdesc = \"C'est La Vie\";\n            break;\n        case \"德国\":\n            posdesc = \"Die Zeit verging im Fluge.\";\n            break;\n        case \"澳大利亚\":\n            posdesc = \"一起去大堡礁吧！\";\n            break;\n        case \"加拿大\":\n            posdesc = \"拾起一片枫叶赠予你\";\n            break;\n        case \"中国\":\n            pos = ipLoacation.result.ad_info.province + \" \" + ipLoacation.result.ad_info.city + \" \" + ipLoacation.result.ad_info.district;\n            ip = ipLoacation.result.ip;\n            switch (ipLoacation.result.ad_info.province) {\n                case \"北京市\":\n                    posdesc = \"北——京——欢迎你~~~\";\n                    break;\n                case \"天津市\":\n                    posdesc = \"讲段相声吧。\";\n                    break;\n                case \"河北省\":\n                    posdesc = \"山势巍巍成壁垒，天下雄关。铁马金戈由此向，无限江山。\";\n                    break;\n                case \"山西省\":\n                    posdesc = \"展开坐具长三尺，已占山河五百余。\";\n                    break;\n                case \"内蒙古自治区\":\n                    posdesc = \"天苍苍，野茫茫，风吹草低见牛羊。\";\n                    break;\n                case \"辽宁省\":\n                    posdesc = \"我想吃烤鸡架！\";\n                    break;\n                case \"吉林省\":\n                    posdesc = \"状元阁就是东北烧烤之王。\";\n                    break;\n                case \"黑龙江省\":\n                    posdesc = \"很喜欢哈尔滨大剧院。\";\n                    break;\n                case \"上海市\":\n                    posdesc = \"众所周知，中国只有两个城市。\";\n                    break;\n                case \"江苏省\":\n                    switch (ipLoacation.result.ad_info.city) {\n                        case \"南京市\":\n                            posdesc = \"这是我挺想去的城市啦。\";\n                            break;\n                        case \"苏州市\":\n                            posdesc = \"上有天堂，下有苏杭。\";\n                            break;\n                        default:\n                            posdesc = \"散装是必须要散装的。\";\n                            break;\n                    }\n                    break;\n                case \"浙江省\":\n                    posdesc = \"东风渐绿西湖柳，雁已还人未南归。\";\n                    break;\n                case \"河南省\":\n                    switch (ipLoacation.result.ad_info.city) {\n                        case \"郑州市\":\n                            posdesc = \"豫州之域，天地之中。\";\n                            break;\n                        case \"南阳市\":\n                            posdesc = \"臣本布衣，躬耕于南阳。此南阳非彼南阳！\";\n                            break;\n                        case \"驻马店市\":\n                            posdesc = \"峰峰有奇石，石石挟仙气。嵖岈山的花很美哦！\";\n                            break;\n                        case \"开封市\":\n                            posdesc = \"刚正不阿包青天。\";\n                            break;\n                        case \"洛阳市\":\n                            posdesc = \"洛阳牡丹甲天下。\";\n                            break;\n                        default:\n                            posdesc = \"可否带我品尝河南烩面啦？\";\n                            break;\n                    }\n                    break;\n                case \"安徽省\":\n                    posdesc = \"蚌埠住了，芜湖起飞。\";\n                    break;\n                case \"福建省\":\n                    posdesc = \"井邑白云间，岩城远带山。\";\n                    break;\n                case \"江西省\":\n                    posdesc = \"落霞与孤鹜齐飞，秋水共长天一色。\";\n                    break;\n                case \"山东省\":\n                    posdesc = \"遥望齐州九点烟，一泓海水杯中泻。\";\n                    break;\n                case \"湖北省\":\n                    posdesc = \"来碗热干面！\";\n                    break;\n                case \"湖南省\":\n                    posdesc = \"74751，长沙斯塔克。\";\n                    break;\n                case \"广东省\":\n                    posdesc = \"老板来两斤福建人。\";\n                    break;\n                case \"广西壮族自治区\":\n                    posdesc = \"桂林山水甲天下。\";\n                    break;\n                case \"海南省\":\n                    posdesc = \"朝观日出逐白浪，夕看云起收霞光。\";\n                    break;\n                case \"四川省\":\n                    posdesc = \"康康川妹子。\";\n                    break;\n                case \"贵州省\":\n                    posdesc = \"茅台，学生，再塞200。\";\n                    break;\n                case \"云南省\":\n                    posdesc = \"玉龙飞舞云缠绕，万仞冰川直耸天。\";\n                    break;\n                case \"西藏自治区\":\n                    posdesc = \"躺在茫茫草原上，仰望蓝天。\";\n                    break;\n                case \"陕西省\":\n                    posdesc = \"来份臊子面加馍。\";\n                    break;\n                case \"甘肃省\":\n                    posdesc = \"羌笛何须怨杨柳，春风不度玉门关。\";\n                    break;\n                case \"青海省\":\n                    posdesc = \"牛肉干和老酸奶都好好吃。\";\n                    break;\n                case \"宁夏回族自治区\":\n                    posdesc = \"大漠孤烟直，长河落日圆。\";\n                    break;\n                case \"新疆维吾尔自治区\":\n                    posdesc = \"驼铃古道丝绸路，胡马犹闻唐汉风。\";\n                    break;\n                case \"台湾省\":\n                    posdesc = \"我在这头，大陆在那头。\";\n                    break;\n                case \"香港特别行政区\":\n                    posdesc = \"永定贼有残留地鬼嚎，迎击光非岁玉。\";\n                    break;\n                case \"澳门特别行政区\":\n                    posdesc = \"性感荷官，在线发牌。\";\n                    break;\n                default:\n                    posdesc = \"带我去你的城市逛逛吧！\";\n                    break;\n            }\n            break;\n        default:\n            posdesc = \"带我去你的国家逛逛吧。\";\n            break;\n    }\n\n    //根据本地时间切换欢迎语\n    let timeChange;\n    let date = new Date();\n    if (date.getHours() >= 5 && date.getHours() < 11) timeChange = \"<span>上午好</span>，一日之计在于晨！\";\n    else if (date.getHours() >= 11 && date.getHours() < 13) timeChange = \"<span>中午好</span>，该摸鱼吃午饭了。\";\n    else if (date.getHours() >= 13 && date.getHours() < 15) timeChange = \"<span>下午好</span>，懒懒地睡个午觉吧！\";\n    else if (date.getHours() >= 15 && date.getHours() < 16) timeChange = \"<span>三点几啦</span>，一起饮茶呀！\";\n    else if (date.getHours() >= 16 && date.getHours() < 19) timeChange = \"<span>夕阳无限好！</span>\";\n    else if (date.getHours() >= 19 && date.getHours() < 24) timeChange = \"<span>晚上好</span>，夜生活嗨起来！\";\n    else timeChange = \"夜深了，早点休息，少熬夜。\";\n\n    try {\n        //自定义文本和需要放的位置\n        document.getElementById(\"welcome-info\").innerHTML =\n            `<b><center>🎉 欢迎信息 🎉</center>&emsp;&emsp;欢迎来自 <span style=\"color:var(--theme-color)\">${pos}</span> 的小伙伴，${timeChange}您现在距离AnHao约 <span style=\"color:var(--theme-color)\">${dist}</span> 公里，当前的IP地址为： <span style=\"color:var(--theme-color)\">${ip}</span>， ${posdesc}</b>`;\n    } catch (err) {\n        // console.log(\"Pjax无法获取#welcome-info元素🙄🙄🙄\")\n    }\n}\nwindow.onload = showWelcome;\n// 如果使用了pjax在加上下面这行代码\ndocument.addEventListener('pjax:complete', showWelcome);\n","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"Vue","color":"#b8f0ae","icon":"https://img02.anheyu.com/adminuploads/1/2022/09/25/633001374747b.png"}]}],"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"}]}]}},"cover":false,"excerpt":"","more":"//get请求\n$.ajax({\n    type: 'get',\n    url: 'https://apis.map.qq.com/ws/location/v1/ip',\n    data: {\n        key: 'PQGBZ-6HFKM-BOK64-6MJYU-5R3O6-7HFW6',\n        output: 'jsonp',\n    },\n    dataType: 'jsonp',\n    success: function (res) {\n        ipLoacation = res;\n    }\n})\nfunction getDistance(e1, n1, e2, n2) {\n    const R = 6371\n    const { sin, cos, asin, PI, hypot } = Math\n    let getPoint = (e, n) => {\n        e *= PI / 180\n        n *= PI / 180\n        return { x: cos(n) * cos(e), y: cos(n) * sin(e), z: sin(n) }\n    }\n\n    let a = getPoint(e1, n1)\n    let b = getPoint(e2, n2)\n    let c = hypot(a.x - b.x, a.y - b.y, a.z - b.z)\n    let r = asin(c / 2) * 2 * R\n    return Math.round(r);\n}\n\nfunction showWelcome() {\n\n    let dist = getDistance(112.823054, 26.404134, ipLoacation.result.location.lng, ipLoacation.result.location.lat); //这里换成自己的经纬度\n    let pos = ipLoacation.result.ad_info.nation;\n    let ip;\n    let posdesc;\n    //根据国家、省份、城市信息自定义欢迎语\n    switch (ipLoacation.result.ad_info.nation) {\n        case \"日本\":\n            posdesc = \"よろしく，一起去看樱花吗\";\n            break;\n        case \"美国\":\n            posdesc = \"Let us live in peace!\";\n            break;\n        case \"英国\":\n            posdesc = \"想同你一起夜乘伦敦眼\";\n            break;\n        case \"俄罗斯\":\n            posdesc = \"干了这瓶伏特加！\";\n            break;\n        case \"法国\":\n            posdesc = \"C'est La Vie\";\n            break;\n        case \"德国\":\n            posdesc = \"Die Zeit verging im Fluge.\";\n            break;\n        case \"澳大利亚\":\n            posdesc = \"一起去大堡礁吧！\";\n            break;\n        case \"加拿大\":\n            posdesc = \"拾起一片枫叶赠予你\";\n            break;\n        case \"中国\":\n            pos = ipLoacation.result.ad_info.province + \" \" + ipLoacation.result.ad_info.city + \" \" + ipLoacation.result.ad_info.district;\n            ip = ipLoacation.result.ip;\n            switch (ipLoacation.result.ad_info.province) {\n                case \"北京市\":\n                    posdesc = \"北——京——欢迎你~~~\";\n                    break;\n                case \"天津市\":\n                    posdesc = \"讲段相声吧。\";\n                    break;\n                case \"河北省\":\n                    posdesc = \"山势巍巍成壁垒，天下雄关。铁马金戈由此向，无限江山。\";\n                    break;\n                case \"山西省\":\n                    posdesc = \"展开坐具长三尺，已占山河五百余。\";\n                    break;\n                case \"内蒙古自治区\":\n                    posdesc = \"天苍苍，野茫茫，风吹草低见牛羊。\";\n                    break;\n                case \"辽宁省\":\n                    posdesc = \"我想吃烤鸡架！\";\n                    break;\n                case \"吉林省\":\n                    posdesc = \"状元阁就是东北烧烤之王。\";\n                    break;\n                case \"黑龙江省\":\n                    posdesc = \"很喜欢哈尔滨大剧院。\";\n                    break;\n                case \"上海市\":\n                    posdesc = \"众所周知，中国只有两个城市。\";\n                    break;\n                case \"江苏省\":\n                    switch (ipLoacation.result.ad_info.city) {\n                        case \"南京市\":\n                            posdesc = \"这是我挺想去的城市啦。\";\n                            break;\n                        case \"苏州市\":\n                            posdesc = \"上有天堂，下有苏杭。\";\n                            break;\n                        default:\n                            posdesc = \"散装是必须要散装的。\";\n                            break;\n                    }\n                    break;\n                case \"浙江省\":\n                    posdesc = \"东风渐绿西湖柳，雁已还人未南归。\";\n                    break;\n                case \"河南省\":\n                    switch (ipLoacation.result.ad_info.city) {\n                        case \"郑州市\":\n                            posdesc = \"豫州之域，天地之中。\";\n                            break;\n                        case \"南阳市\":\n                            posdesc = \"臣本布衣，躬耕于南阳。此南阳非彼南阳！\";\n                            break;\n                        case \"驻马店市\":\n                            posdesc = \"峰峰有奇石，石石挟仙气。嵖岈山的花很美哦！\";\n                            break;\n                        case \"开封市\":\n                            posdesc = \"刚正不阿包青天。\";\n                            break;\n                        case \"洛阳市\":\n                            posdesc = \"洛阳牡丹甲天下。\";\n                            break;\n                        default:\n                            posdesc = \"可否带我品尝河南烩面啦？\";\n                            break;\n                    }\n                    break;\n                case \"安徽省\":\n                    posdesc = \"蚌埠住了，芜湖起飞。\";\n                    break;\n                case \"福建省\":\n                    posdesc = \"井邑白云间，岩城远带山。\";\n                    break;\n                case \"江西省\":\n                    posdesc = \"落霞与孤鹜齐飞，秋水共长天一色。\";\n                    break;\n                case \"山东省\":\n                    posdesc = \"遥望齐州九点烟，一泓海水杯中泻。\";\n                    break;\n                case \"湖北省\":\n                    posdesc = \"来碗热干面！\";\n                    break;\n                case \"湖南省\":\n                    posdesc = \"74751，长沙斯塔克。\";\n                    break;\n                case \"广东省\":\n                    posdesc = \"老板来两斤福建人。\";\n                    break;\n                case \"广西壮族自治区\":\n                    posdesc = \"桂林山水甲天下。\";\n                    break;\n                case \"海南省\":\n                    posdesc = \"朝观日出逐白浪，夕看云起收霞光。\";\n                    break;\n                case \"四川省\":\n                    posdesc = \"康康川妹子。\";\n                    break;\n                case \"贵州省\":\n                    posdesc = \"茅台，学生，再塞200。\";\n                    break;\n                case \"云南省\":\n                    posdesc = \"玉龙飞舞云缠绕，万仞冰川直耸天。\";\n                    break;\n                case \"西藏自治区\":\n                    posdesc = \"躺在茫茫草原上，仰望蓝天。\";\n                    break;\n                case \"陕西省\":\n                    posdesc = \"来份臊子面加馍。\";\n                    break;\n                case \"甘肃省\":\n                    posdesc = \"羌笛何须怨杨柳，春风不度玉门关。\";\n                    break;\n                case \"青海省\":\n                    posdesc = \"牛肉干和老酸奶都好好吃。\";\n                    break;\n                case \"宁夏回族自治区\":\n                    posdesc = \"大漠孤烟直，长河落日圆。\";\n                    break;\n                case \"新疆维吾尔自治区\":\n                    posdesc = \"驼铃古道丝绸路，胡马犹闻唐汉风。\";\n                    break;\n                case \"台湾省\":\n                    posdesc = \"我在这头，大陆在那头。\";\n                    break;\n                case \"香港特别行政区\":\n                    posdesc = \"永定贼有残留地鬼嚎，迎击光非岁玉。\";\n                    break;\n                case \"澳门特别行政区\":\n                    posdesc = \"性感荷官，在线发牌。\";\n                    break;\n                default:\n                    posdesc = \"带我去你的城市逛逛吧！\";\n                    break;\n            }\n            break;\n        default:\n            posdesc = \"带我去你的国家逛逛吧。\";\n            break;\n    }\n\n    //根据本地时间切换欢迎语\n    let timeChange;\n    let date = new Date();\n    if (date.getHours() >= 5 && date.getHours() < 11) timeChange = \"<span>上午好</span>，一日之计在于晨！\";\n    else if (date.getHours() >= 11 && date.getHours() < 13) timeChange = \"<span>中午好</span>，该摸鱼吃午饭了。\";\n    else if (date.getHours() >= 13 && date.getHours() < 15) timeChange = \"<span>下午好</span>，懒懒地睡个午觉吧！\";\n    else if (date.getHours() >= 15 && date.getHours() < 16) timeChange = \"<span>三点几啦</span>，一起饮茶呀！\";\n    else if (date.getHours() >= 16 && date.getHours() < 19) timeChange = \"<span>夕阳无限好！</span>\";\n    else if (date.getHours() >= 19 && date.getHours() < 24) timeChange = \"<span>晚上好</span>，夜生活嗨起来！\";\n    else timeChange = \"夜深了，早点休息，少熬夜。\";\n\n    try {\n        //自定义文本和需要放的位置\n        document.getElementById(\"welcome-info\").innerHTML =\n            `<b><center>🎉 欢迎信息 🎉</center>&emsp;&emsp;欢迎来自 <span style=\"color:var(--theme-color)\">${pos}</span> 的小伙伴，${timeChange}您现在距离AnHao约 <span style=\"color:var(--theme-color)\">${dist}</span> 公里，当前的IP地址为： <span style=\"color:var(--theme-color)\">${ip}</span>， ${posdesc}</b>`;\n    } catch (err) {\n        // console.log(\"Pjax无法获取#welcome-info元素🙄🙄🙄\")\n    }\n}\nwindow.onload = showWelcome;\n// 如果使用了pjax在加上下面这行代码\ndocument.addEventListener('pjax:complete', showWelcome);\n"},{"title":"标签","date":"2024-07-11T05:54:21.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2024-07-11 13:54:21\ntype: tags\n---\n","updated":"2024-07-11T05:54:21.000Z","path":"tags/index.html","comments":1,"layout":"page","_id":"clyh2ognu001ae0dshk6e5oq6","content":"","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"Vue","color":"#b8f0ae","icon":"https://img02.anheyu.com/adminuploads/1/2022/09/25/633001374747b.png"}]}],"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"}]}]}},"cover":false,"excerpt":"","more":""}],"Post":[{"title":"ASE基本知识","data":"2024-07-04T11:52:54.000Z","updated":"2024-07-03T16:00:00.000Z","description":"ASE基本知识","cover":"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202403210542035.jpg","_content":"\n","source":"_posts/ASE.md","raw":"---\ntitle: ASE基本知识\ndata: 2024-7-4 19:52:54\nupdated: 2024-7-4\ntags: \n    - TA\n    - Program\n    - ASE\ncategories: Program\ndescription: ASE基本知识\ncover: https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202403210542035.jpg\n---\n\n","slug":"ASE","published":1,"date":"2024-07-11T06:04:07.408Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clyh2ogmg0001e0ds3u47d5k4","content":"","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"Vue","color":"#b8f0ae","icon":"https://img02.anheyu.com/adminuploads/1/2022/09/25/633001374747b.png"}]}],"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"}]}]}},"cover_type":"img","excerpt":"","more":""},{"title":"C#基础知识","data":"2024-07-05T11:52:54.000Z","updated":"2024-07-04T16:00:00.000Z","description":"C#基础知识","cover":"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202403201546328.jpg","_content":"\n# C#基础知识\n\n## 简介\n\n- C#是微软公司发布的一种由C和C++衍生出来的面向对象的编程语言，它不仅去掉了 C++ 和 Java 语言中的一些复杂特性，还提供了可视化工具，能够高效地编写程序。\n\n- C#是由C和C++衍生出来的一种安全的、稳定的、简单的、优雅的面向对象编程语言。它在继承C和C++强大功能的同时去掉了一些它们的复杂特性（例如没有宏以及不允许多重继承）。\n- C#使得C++程序员可以高效的开发程序，且因可调用由 C/C++ 编写的本机原生函数，而绝不损失C/C++原有的强大的功能。因为这种继承关系，C#与C/C++具有极大的相似性，熟悉类似语言的开发者可以很快的转向C#。\n\n## HelloWorld\n\n```c#\nnamespace Hello\n{\n  internal class Program\n  {\n    static void Main(string[] args)\n    {\n      Console.WriteLine(\"Hello World!\");\n      Console.ReadLine();\n    }\n  }\n}\n```\n\n## 基本语法\n\n### 注释\n\n```\n//这是一个单行注释\n\n/*\n*\t这是一个多行注释\n*/\n```\n\n### 成员变量\n\n```\nint a = 1;//a是一个变量\n```\n\n### 实例化\n\n```\nObeject r = new Obejct();\n```\n\n### 关键字\n\n|     关键字     |                             作用                             |\n| :------------: | :----------------------------------------------------------: |\n|    **void**    |              用作方法的返回类型，指定不返回值。              |\n|   **const**    |          指定字段或局部变量的值是常数，不能被修改。          |\n|     **as**     |               转换操作符，若转换失败返回null。               |\n|  **private**   |            访问修饰符，是允许访问的最低访问级别。            |\n|   **public**   |            访问修饰符，是允许访问的最高访问级别。            |\n|  **internal**  | 访问修饰符，允许在同一程序集的文件中内部类型和成员可以访问。 |\n| **protected**  |         访问修饰符，允许在其所在类中可由派生类访问。         |\n|    **try**     |     异常处理代码块的组成部分，包括可能会抛出异常的代码。     |\n|   **catch**    |     定义一个代码块，在特定类型异常抛出时，执行块内代码。     |\n|    **base**    |      用于访问被派生类或构造中的同名成员隐藏的基类成员。      |\n|  **abstract**  |   标识一个可以扩展但不能被实体化的、必须被实现的类或方法。   |\n|  **delegate**  | 指定一个声明为一种委托类型，委托把方法封装为可调用实体，能在委托实体中调用。 |\n|   **event**    | 声明一个全新的事件。允许一个类或对象提供通知的成员，必须是委托类型。 |\n|  **checked**   |    确保编译器运行时，检查整数类型操作或转换时出现的溢出。    |\n| **unchecked**  |                        禁止溢出检查。                        |\n|    **enum**    |                   枚举类型，特殊的值类型。                   |\n|    **goto**    |          跳转语句，将程序执行重定向到一个标签语句。          |\n|  **foreach**   |                            遍历。                            |\n| **namespace**  |               定义一个逻辑组的类型和命名空间。               |\n|    **ref**     |              标识一个参数值可能会受影响的参数。              |\n|   **struct**   |                       可以声明值类型。                       |\n|   **throw**    |                          抛出异常。                          |\n|   **typeof**   |                 操作符，返回传入参数的类型。                 |\n|  **virtual**   |                     标识可被覆载的方法。                     |\n|   **using**    | 用于命名空间时，允许访问该命名空间中的类型而无需指定其全名。用于定义finalization操作的范围。 |\n|   **static**   |                   声明静态变量或静态函数。                   |\n|   **extern**   |                    声明在外部实现的方法。                    |\n|   **object**   | 所有类型都是直接或间接从Object继承的，可以将任何类型的值赋给object类型的变量。 |\n|  **volatile**  | 标识一个可被操作系统、某些硬件设备或并发线程修改的attribute。 |\n|  **readonly**  |             标识一个变量的值在初始化后不可修改。             |\n|   **params**   |                      声明一个参数数组。                      |\n|  **operator**  |                    声明或多载一个操作符。                    |\n| **interface**  |   将一个声明指定为接口类型，即实现类或构造必须遵循的合同。   |\n|    **out**     | 标识一个参数值会受影响的参数，但在传入方法时，该参数无需先初始化。 |\n|   **sizeof**   |          操作符，以byte为单位返回一个值类型的长度。          |\n| **stackalloc** |              返回在堆上分配的一个内存块的指针。              |\n|   **sealed**   | 防止类型被派生，防止方法和property被覆载。在声明中使用可以防止该类被其他类继承。 |\n|   **unsafe**   |             标注包含指针操作的代码块、方法或类。             |\n|  **override**  |                在派生类中声明对虚方法的重载。                |\n|  **implicit**  | 定义一个用户定义的转换操作符。通常用来将预定义类型转换为用户定义类型或反向操作。隐式转换操作符必须在转换时使用。 |\n|  **explicit**  | 一个定义用户自定义转换操作符的操作符。通常用来将内建类型转换为用户定义类型或反向操作。必须在转换时调用显式转换操作符。 |\n\n## C#数据类型\n\n- 值类型\n- 引用类型\n- 指针类型\n\n### 值类型\n\n值类型变量可以直接分配给一个值。它们是从类 System.ValueType 中派生的。\n\n#### 整型\n\n|  类型  |         示意         |                       范围                        |\n| :----: | :------------------: | :-----------------------------------------------: |\n| Sbyte  | 代表有符号的8位整数  |               数值范围从-128 ～ 127               |\n|  Byte  | 代表有符号的8位整数  |                 数值范围从0～255                  |\n| Short  | 代表有符号的16位整数 |               范围从-32768 ～ 32767               |\n| ushort | 代表有符号的16位整数 |                 范围从0 到 65,535                 |\n|  Int   | 代表有符号的32位整数 |          范围从-2147483648 ～ 2147483648          |\n|  uint  | 代表有符号的32位整数 |               范围从0 ～ 4294967295               |\n|  Long  | 代表有符号的64位整数 | 范围从-9223372036854775808 ～ 9223372036854775808 |\n| Ulong  | 代表有符号的64位整数 |          范围从0 ～ 18446744073709551615          |\n|  char  | 代表有符号的16位整数 |                数值范围从0～65535                 |\n\n#### 浮点型\n\n|  类型  |           范围           |\n| :----: | :----------------------: |\n| Float  |  1.5*10 -45～3.4* 10 38  |\n| Double | 5.0*10 -324～1.7* 10 308 |\n\n### 引用类型\n\n#### 对象类型（Object）\n\n对象（Object）类型 是 C# 通用类型系统（Common Type System - CTS）中所有数据类型的终极基类。Object 是 System.Object 类的别名。所以对象（Object）类型可以被分配任何其他类型（值类型、引用类型、预定义类型或用户自定义类型）的值。但是，在分配值之前，需要先进行类型转换。\n\n##### 装箱和拆箱\n\n当一个值类型转换为对象类型时，则被称为**装箱**；另一方面，当一个对象类型转换为值类型时，则被称为**拆箱**。\n\n```\n//装箱：值类型转换为对象类型\nint val = 8;\nobject obj = val;//整型数据转换为了对象类型（装箱）\n\n//拆箱：之前由值类型转换而来的对象类型再转回值类型\nint val = 8;\nobject obj = val;//先装箱\nint nval = （int）obj;//再拆箱\n```\n\n#### 动态类型\n\n您可以存储任何类型的值在**动态数据类型**变量中。这些变量的类型检查是在**运行**时发生的。\n\n```\n//语法\ndynamic <variable_name> = value;\n//实例\ndynamic d = 20;\n```\n\n#### 字符串型\n\n字符串（String）类型 允许您给变量分配任何字符串值。字符串（String）类型是 System.String 类的别名。它是从对象（Object）类型派生的。字符串（String）类型的值可以通过两种形式进行分配：引号和 @引号。\n\n```\n//实例\nstring str = \"runoob.com\";\n//@转义\nstring str = @\"C:\\Windows\";\n```\n\n#### 指针类型\n\n指针类型变量存储另一种类型的内存地址。\n\n```\n//语法\ntype* identifier;\n//实例\nchar* cptr;\nint* iptr;\n```\n\n### 类型转换\n\n- **隐式类型转换** ：这些转换是 C# 默认的以安全方式进行的转换, 不会导致数据丢失。例如，从小的整数类型转换为大的整数类型，从派生类转换为基类。\n- **显式类型转换** ：显式类型转换，即强制类型转换。通过用户使用预定义的函数显式完成的，显式转换需要强制转换运算符，而且强制转换会造成数据丢失。转换类型的范围大小和从属关系和隐式转换相反。显式转换可能会导致数据出错，或者转换失败，甚至无法编译成功。\n\n```c#\n//隐式类型转换\nnamespace TypeConvertion\n{   class Class1\n    {\n\n    }\n\n    class Class2 : Class1 //类Class2是类Class1的子类\n    {\n\n    }\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int inum = 100;\n            long lnum = inum; // 进行了隐式转换，将 int 型（数据范围小）数据转换为了 long 型（数据范围大）的数据\n            Class1 c1 = new Class2(); // 这里也是隐式转换，将一个新建的 Class2 实例转换为了其基类 Class1 类型的实例 C1\n        }\n    }\n}\n\n//显式类型转换\nnamespace TypeConversionApplication\n{\n    class ExplicitConversion\n    {\n        static void Main(string[] args)\n        {\n            double d = 5673.74;\n            int i;\n\n            // 强制转换 double 为 int\n            i = (int)d;\n            Console.WriteLine(i);\n            Console.ReadKey();\n           \n        }\n    }\n}//result 5673\n```\n\n## C#运算符\n\n## C#运算符\n\n### 算术运算符\n\n```\n+,-,*,/,%,++,--\n```\n\n### 关系运算符\n\n```\n==,!=,>,<,>=,<=\n```\n\n### 逻辑运算符\n\n```\n&&,||,!\n```\n\n### 位运算符\n\n```\n&,|,^\n```\n\n### 赋值运算符\n\n```\n=,+=,-=,*=,/=,&=,<<=,>>=,&=,^=,|=\n```\n\n### 其他运算符\n\n```\nsizeof(),typeof(),&,*,? :,is.as\n```\n\n## C#语法\n\n### 判断语句\n\n#### if 语句\n\n一个 if 语句 由一个布尔表达式后跟一个或多个语句组成。\n\n#### switch语句\n\n一个 switch 语句允许测试一个变量等于多个值时的情况。\n\n### 循环语句\n\n### while循环\n\n### for/foreach循环\n\n### do..while循环\n\n### break循环控制\n\n### continue循环控制\n\n## C#封装\n\n**封装** 被定义为\"把一个或多个项目封闭在一个物理的或者逻辑的包中\"。在面向对象程序设计方法论中，封装是为了防止对实现细节的访问。\n\n一个 访问修饰符 定义了一个类成员的范围和可见性。C# 支持的访问修饰符如下所示：\n\n- public：所有对象都可以访问；\n\n- private：对象本身在对象内部可以访问；\n- protected：只有该类对象及其子类对象可以访问\n- internal：同一个程序集的对象可以访问；\n- protected internal：访问限于当前程序集或派生自包含类的类型。\n\n## C#方法\n\n一个**方法**是把一些相关的语句组织在一起，用来执行一个任务的语句块。\n\n- 定义方法\n- 调用方法\n\n### C#数组\n\n数组是一个存储相同类型元素的固定大小的顺序集合。\n\n```\n//初始化数组\ndouble[] balance = new double[10];\n\n//数组赋值\ndouble[] balance = new double[10];\nbalance[0] = 4500.0;\ndouble[] balance = { 2340.0, 4523.69, 3421.0};\nint [] marks = new int[5]  { 99,  98, 92, 97, 95};\nint [] marks = new int[]  { 99,  98, 92, 97, 95};\nint [] marks = new int[]  { 99,  98, 92, 97, 95};\nint[] score = marks;\n```\n\n## C#结构体\n\n在 C# 中，结构体是**值类型数据结构**。\n\n```c#\n//定义结构体\n\nstruct Books\n{\n   public string title;\n   public string author;\n   public string subject;\n   public int book_id;\n};\n//调用结构体\nusing System;\nusing System.Text;\nnamespace day01\n{\n   struct Books\n    {\n        public string title;\n        public string author;\n        public string subject;\n        public int book_id;\n    };\n    class Program\n    {\n     \n        static void Main(string[] args)\n        {\n            Books Book1;\n            Book1.title = \"C programming\";\n            Book1.author = \"Nuha Ali\";\n            Book1.subject = \"C programming Tutorial\";\n            Book1.book_id = 12345;\n            Console.WriteLine(\"Book1 title:{0}\", Book1.title);\n            Console.WriteLine(\"Book1 author:{0}\", Book1.author);\n            Console.WriteLine(\"Book1 subject:{0}\", Book1.subject);\n            Console.WriteLine(\"Book1 book_id:{0}\", Book1.book_id);\n            Console.ReadKey();\n           \n        }\n    }\n}\n```\n\n- 结构可带有方法、字段、索引、属性、运算符方法和事件。\n\n- 结构可定义构造函数，但不能定义析构函数。但是，您不能为结构定义无参构造函数。无参构造函数(默认)是自动定义的，且不能被改变。\n- 与类不同，结构不能继承其他的结构或类。\n- 结构不能作为其他结构或类的基础结构。\n- 结构可实现一个或多个接口。\n- 结构成员不能指定为 abstract、virtual 或 protected。\n- 当您使用 New 操作符创建一个结构对象时，会调用适当的构造函数来创建结构。与类不同，结构可以不使用 New 操作符即可被实例化。\n- 如果不使用 New 操作符，只有在所有的字段都被初始化之后，字段才被赋值，对象才被使用。\n\n### 类 VS 结构\n\n类和结构有以下几个基本的不同点：\n\n- 类是引用类型，结构是值类型。\n- 结构不支持继承。\n- 结构不能声明默认的构造函数。","source":"_posts/C++++.md","raw":"---\ntitle: C#基础知识\ndata: 2024-7-5 19:52:54\nupdated: 2024-7-5\ntags: \n    - TA\n    - Program\n    - C#\ncategories: Program\ndescription: C#基础知识\ncover: https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202403201546328.jpg\n---\n\n# C#基础知识\n\n## 简介\n\n- C#是微软公司发布的一种由C和C++衍生出来的面向对象的编程语言，它不仅去掉了 C++ 和 Java 语言中的一些复杂特性，还提供了可视化工具，能够高效地编写程序。\n\n- C#是由C和C++衍生出来的一种安全的、稳定的、简单的、优雅的面向对象编程语言。它在继承C和C++强大功能的同时去掉了一些它们的复杂特性（例如没有宏以及不允许多重继承）。\n- C#使得C++程序员可以高效的开发程序，且因可调用由 C/C++ 编写的本机原生函数，而绝不损失C/C++原有的强大的功能。因为这种继承关系，C#与C/C++具有极大的相似性，熟悉类似语言的开发者可以很快的转向C#。\n\n## HelloWorld\n\n```c#\nnamespace Hello\n{\n  internal class Program\n  {\n    static void Main(string[] args)\n    {\n      Console.WriteLine(\"Hello World!\");\n      Console.ReadLine();\n    }\n  }\n}\n```\n\n## 基本语法\n\n### 注释\n\n```\n//这是一个单行注释\n\n/*\n*\t这是一个多行注释\n*/\n```\n\n### 成员变量\n\n```\nint a = 1;//a是一个变量\n```\n\n### 实例化\n\n```\nObeject r = new Obejct();\n```\n\n### 关键字\n\n|     关键字     |                             作用                             |\n| :------------: | :----------------------------------------------------------: |\n|    **void**    |              用作方法的返回类型，指定不返回值。              |\n|   **const**    |          指定字段或局部变量的值是常数，不能被修改。          |\n|     **as**     |               转换操作符，若转换失败返回null。               |\n|  **private**   |            访问修饰符，是允许访问的最低访问级别。            |\n|   **public**   |            访问修饰符，是允许访问的最高访问级别。            |\n|  **internal**  | 访问修饰符，允许在同一程序集的文件中内部类型和成员可以访问。 |\n| **protected**  |         访问修饰符，允许在其所在类中可由派生类访问。         |\n|    **try**     |     异常处理代码块的组成部分，包括可能会抛出异常的代码。     |\n|   **catch**    |     定义一个代码块，在特定类型异常抛出时，执行块内代码。     |\n|    **base**    |      用于访问被派生类或构造中的同名成员隐藏的基类成员。      |\n|  **abstract**  |   标识一个可以扩展但不能被实体化的、必须被实现的类或方法。   |\n|  **delegate**  | 指定一个声明为一种委托类型，委托把方法封装为可调用实体，能在委托实体中调用。 |\n|   **event**    | 声明一个全新的事件。允许一个类或对象提供通知的成员，必须是委托类型。 |\n|  **checked**   |    确保编译器运行时，检查整数类型操作或转换时出现的溢出。    |\n| **unchecked**  |                        禁止溢出检查。                        |\n|    **enum**    |                   枚举类型，特殊的值类型。                   |\n|    **goto**    |          跳转语句，将程序执行重定向到一个标签语句。          |\n|  **foreach**   |                            遍历。                            |\n| **namespace**  |               定义一个逻辑组的类型和命名空间。               |\n|    **ref**     |              标识一个参数值可能会受影响的参数。              |\n|   **struct**   |                       可以声明值类型。                       |\n|   **throw**    |                          抛出异常。                          |\n|   **typeof**   |                 操作符，返回传入参数的类型。                 |\n|  **virtual**   |                     标识可被覆载的方法。                     |\n|   **using**    | 用于命名空间时，允许访问该命名空间中的类型而无需指定其全名。用于定义finalization操作的范围。 |\n|   **static**   |                   声明静态变量或静态函数。                   |\n|   **extern**   |                    声明在外部实现的方法。                    |\n|   **object**   | 所有类型都是直接或间接从Object继承的，可以将任何类型的值赋给object类型的变量。 |\n|  **volatile**  | 标识一个可被操作系统、某些硬件设备或并发线程修改的attribute。 |\n|  **readonly**  |             标识一个变量的值在初始化后不可修改。             |\n|   **params**   |                      声明一个参数数组。                      |\n|  **operator**  |                    声明或多载一个操作符。                    |\n| **interface**  |   将一个声明指定为接口类型，即实现类或构造必须遵循的合同。   |\n|    **out**     | 标识一个参数值会受影响的参数，但在传入方法时，该参数无需先初始化。 |\n|   **sizeof**   |          操作符，以byte为单位返回一个值类型的长度。          |\n| **stackalloc** |              返回在堆上分配的一个内存块的指针。              |\n|   **sealed**   | 防止类型被派生，防止方法和property被覆载。在声明中使用可以防止该类被其他类继承。 |\n|   **unsafe**   |             标注包含指针操作的代码块、方法或类。             |\n|  **override**  |                在派生类中声明对虚方法的重载。                |\n|  **implicit**  | 定义一个用户定义的转换操作符。通常用来将预定义类型转换为用户定义类型或反向操作。隐式转换操作符必须在转换时使用。 |\n|  **explicit**  | 一个定义用户自定义转换操作符的操作符。通常用来将内建类型转换为用户定义类型或反向操作。必须在转换时调用显式转换操作符。 |\n\n## C#数据类型\n\n- 值类型\n- 引用类型\n- 指针类型\n\n### 值类型\n\n值类型变量可以直接分配给一个值。它们是从类 System.ValueType 中派生的。\n\n#### 整型\n\n|  类型  |         示意         |                       范围                        |\n| :----: | :------------------: | :-----------------------------------------------: |\n| Sbyte  | 代表有符号的8位整数  |               数值范围从-128 ～ 127               |\n|  Byte  | 代表有符号的8位整数  |                 数值范围从0～255                  |\n| Short  | 代表有符号的16位整数 |               范围从-32768 ～ 32767               |\n| ushort | 代表有符号的16位整数 |                 范围从0 到 65,535                 |\n|  Int   | 代表有符号的32位整数 |          范围从-2147483648 ～ 2147483648          |\n|  uint  | 代表有符号的32位整数 |               范围从0 ～ 4294967295               |\n|  Long  | 代表有符号的64位整数 | 范围从-9223372036854775808 ～ 9223372036854775808 |\n| Ulong  | 代表有符号的64位整数 |          范围从0 ～ 18446744073709551615          |\n|  char  | 代表有符号的16位整数 |                数值范围从0～65535                 |\n\n#### 浮点型\n\n|  类型  |           范围           |\n| :----: | :----------------------: |\n| Float  |  1.5*10 -45～3.4* 10 38  |\n| Double | 5.0*10 -324～1.7* 10 308 |\n\n### 引用类型\n\n#### 对象类型（Object）\n\n对象（Object）类型 是 C# 通用类型系统（Common Type System - CTS）中所有数据类型的终极基类。Object 是 System.Object 类的别名。所以对象（Object）类型可以被分配任何其他类型（值类型、引用类型、预定义类型或用户自定义类型）的值。但是，在分配值之前，需要先进行类型转换。\n\n##### 装箱和拆箱\n\n当一个值类型转换为对象类型时，则被称为**装箱**；另一方面，当一个对象类型转换为值类型时，则被称为**拆箱**。\n\n```\n//装箱：值类型转换为对象类型\nint val = 8;\nobject obj = val;//整型数据转换为了对象类型（装箱）\n\n//拆箱：之前由值类型转换而来的对象类型再转回值类型\nint val = 8;\nobject obj = val;//先装箱\nint nval = （int）obj;//再拆箱\n```\n\n#### 动态类型\n\n您可以存储任何类型的值在**动态数据类型**变量中。这些变量的类型检查是在**运行**时发生的。\n\n```\n//语法\ndynamic <variable_name> = value;\n//实例\ndynamic d = 20;\n```\n\n#### 字符串型\n\n字符串（String）类型 允许您给变量分配任何字符串值。字符串（String）类型是 System.String 类的别名。它是从对象（Object）类型派生的。字符串（String）类型的值可以通过两种形式进行分配：引号和 @引号。\n\n```\n//实例\nstring str = \"runoob.com\";\n//@转义\nstring str = @\"C:\\Windows\";\n```\n\n#### 指针类型\n\n指针类型变量存储另一种类型的内存地址。\n\n```\n//语法\ntype* identifier;\n//实例\nchar* cptr;\nint* iptr;\n```\n\n### 类型转换\n\n- **隐式类型转换** ：这些转换是 C# 默认的以安全方式进行的转换, 不会导致数据丢失。例如，从小的整数类型转换为大的整数类型，从派生类转换为基类。\n- **显式类型转换** ：显式类型转换，即强制类型转换。通过用户使用预定义的函数显式完成的，显式转换需要强制转换运算符，而且强制转换会造成数据丢失。转换类型的范围大小和从属关系和隐式转换相反。显式转换可能会导致数据出错，或者转换失败，甚至无法编译成功。\n\n```c#\n//隐式类型转换\nnamespace TypeConvertion\n{   class Class1\n    {\n\n    }\n\n    class Class2 : Class1 //类Class2是类Class1的子类\n    {\n\n    }\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int inum = 100;\n            long lnum = inum; // 进行了隐式转换，将 int 型（数据范围小）数据转换为了 long 型（数据范围大）的数据\n            Class1 c1 = new Class2(); // 这里也是隐式转换，将一个新建的 Class2 实例转换为了其基类 Class1 类型的实例 C1\n        }\n    }\n}\n\n//显式类型转换\nnamespace TypeConversionApplication\n{\n    class ExplicitConversion\n    {\n        static void Main(string[] args)\n        {\n            double d = 5673.74;\n            int i;\n\n            // 强制转换 double 为 int\n            i = (int)d;\n            Console.WriteLine(i);\n            Console.ReadKey();\n           \n        }\n    }\n}//result 5673\n```\n\n## C#运算符\n\n## C#运算符\n\n### 算术运算符\n\n```\n+,-,*,/,%,++,--\n```\n\n### 关系运算符\n\n```\n==,!=,>,<,>=,<=\n```\n\n### 逻辑运算符\n\n```\n&&,||,!\n```\n\n### 位运算符\n\n```\n&,|,^\n```\n\n### 赋值运算符\n\n```\n=,+=,-=,*=,/=,&=,<<=,>>=,&=,^=,|=\n```\n\n### 其他运算符\n\n```\nsizeof(),typeof(),&,*,? :,is.as\n```\n\n## C#语法\n\n### 判断语句\n\n#### if 语句\n\n一个 if 语句 由一个布尔表达式后跟一个或多个语句组成。\n\n#### switch语句\n\n一个 switch 语句允许测试一个变量等于多个值时的情况。\n\n### 循环语句\n\n### while循环\n\n### for/foreach循环\n\n### do..while循环\n\n### break循环控制\n\n### continue循环控制\n\n## C#封装\n\n**封装** 被定义为\"把一个或多个项目封闭在一个物理的或者逻辑的包中\"。在面向对象程序设计方法论中，封装是为了防止对实现细节的访问。\n\n一个 访问修饰符 定义了一个类成员的范围和可见性。C# 支持的访问修饰符如下所示：\n\n- public：所有对象都可以访问；\n\n- private：对象本身在对象内部可以访问；\n- protected：只有该类对象及其子类对象可以访问\n- internal：同一个程序集的对象可以访问；\n- protected internal：访问限于当前程序集或派生自包含类的类型。\n\n## C#方法\n\n一个**方法**是把一些相关的语句组织在一起，用来执行一个任务的语句块。\n\n- 定义方法\n- 调用方法\n\n### C#数组\n\n数组是一个存储相同类型元素的固定大小的顺序集合。\n\n```\n//初始化数组\ndouble[] balance = new double[10];\n\n//数组赋值\ndouble[] balance = new double[10];\nbalance[0] = 4500.0;\ndouble[] balance = { 2340.0, 4523.69, 3421.0};\nint [] marks = new int[5]  { 99,  98, 92, 97, 95};\nint [] marks = new int[]  { 99,  98, 92, 97, 95};\nint [] marks = new int[]  { 99,  98, 92, 97, 95};\nint[] score = marks;\n```\n\n## C#结构体\n\n在 C# 中，结构体是**值类型数据结构**。\n\n```c#\n//定义结构体\n\nstruct Books\n{\n   public string title;\n   public string author;\n   public string subject;\n   public int book_id;\n};\n//调用结构体\nusing System;\nusing System.Text;\nnamespace day01\n{\n   struct Books\n    {\n        public string title;\n        public string author;\n        public string subject;\n        public int book_id;\n    };\n    class Program\n    {\n     \n        static void Main(string[] args)\n        {\n            Books Book1;\n            Book1.title = \"C programming\";\n            Book1.author = \"Nuha Ali\";\n            Book1.subject = \"C programming Tutorial\";\n            Book1.book_id = 12345;\n            Console.WriteLine(\"Book1 title:{0}\", Book1.title);\n            Console.WriteLine(\"Book1 author:{0}\", Book1.author);\n            Console.WriteLine(\"Book1 subject:{0}\", Book1.subject);\n            Console.WriteLine(\"Book1 book_id:{0}\", Book1.book_id);\n            Console.ReadKey();\n           \n        }\n    }\n}\n```\n\n- 结构可带有方法、字段、索引、属性、运算符方法和事件。\n\n- 结构可定义构造函数，但不能定义析构函数。但是，您不能为结构定义无参构造函数。无参构造函数(默认)是自动定义的，且不能被改变。\n- 与类不同，结构不能继承其他的结构或类。\n- 结构不能作为其他结构或类的基础结构。\n- 结构可实现一个或多个接口。\n- 结构成员不能指定为 abstract、virtual 或 protected。\n- 当您使用 New 操作符创建一个结构对象时，会调用适当的构造函数来创建结构。与类不同，结构可以不使用 New 操作符即可被实例化。\n- 如果不使用 New 操作符，只有在所有的字段都被初始化之后，字段才被赋值，对象才被使用。\n\n### 类 VS 结构\n\n类和结构有以下几个基本的不同点：\n\n- 类是引用类型，结构是值类型。\n- 结构不支持继承。\n- 结构不能声明默认的构造函数。","slug":"C++++","published":1,"date":"2024-07-11T06:04:06.586Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clyh2ogmp0003e0dsby2q742w","content":"<h1 id=\"C-基础知识\"><a href=\"#C-基础知识\" class=\"headerlink\" title=\"C#基础知识\"></a>C#基础知识</h1><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><ul>\n<li><p>C#是微软公司发布的一种由C和C++衍生出来的面向对象的编程语言，它不仅去掉了 C++ 和 Java 语言中的一些复杂特性，还提供了可视化工具，能够高效地编写程序。</p>\n</li>\n<li><p>C#是由C和C++衍生出来的一种安全的、稳定的、简单的、优雅的面向对象编程语言。它在继承C和C++强大功能的同时去掉了一些它们的复杂特性（例如没有宏以及不允许多重继承）。</p>\n</li>\n<li>C#使得C++程序员可以高效的开发程序，且因可调用由 C/C++ 编写的本机原生函数，而绝不损失C/C++原有的强大的功能。因为这种继承关系，C#与C/C++具有极大的相似性，熟悉类似语言的开发者可以很快的转向C#。</li>\n</ul>\n<h2 id=\"HelloWorld\"><a href=\"#HelloWorld\" class=\"headerlink\" title=\"HelloWorld\"></a>HelloWorld</h2><figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">Hello</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"keyword\">internal</span> <span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"built_in\">string</span>[] args</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      Console.WriteLine(<span class=\"string\">&quot;Hello World!&quot;</span>);</span><br><span class=\"line\">      Console.ReadLine();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"基本语法\"><a href=\"#基本语法\" class=\"headerlink\" title=\"基本语法\"></a>基本语法</h2><h3 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//这是一个单行注释</span><br><span class=\"line\"></span><br><span class=\"line\">/*</span><br><span class=\"line\">*\t这是一个多行注释</span><br><span class=\"line\">*/</span><br></pre></td></tr></table></figure>\n<h3 id=\"成员变量\"><a href=\"#成员变量\" class=\"headerlink\" title=\"成员变量\"></a>成员变量</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int a = 1;//a是一个变量</span><br></pre></td></tr></table></figure>\n<h3 id=\"实例化\"><a href=\"#实例化\" class=\"headerlink\" title=\"实例化\"></a>实例化</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Obeject r = new Obejct();</span><br></pre></td></tr></table></figure>\n<h3 id=\"关键字\"><a href=\"#关键字\" class=\"headerlink\" title=\"关键字\"></a>关键字</h3><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">关键字</th>\n<th style=\"text-align:center\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><strong>void</strong></td>\n<td style=\"text-align:center\">用作方法的返回类型，指定不返回值。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>const</strong></td>\n<td style=\"text-align:center\">指定字段或局部变量的值是常数，不能被修改。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>as</strong></td>\n<td style=\"text-align:center\">转换操作符，若转换失败返回null。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>private</strong></td>\n<td style=\"text-align:center\">访问修饰符，是允许访问的最低访问级别。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>public</strong></td>\n<td style=\"text-align:center\">访问修饰符，是允许访问的最高访问级别。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>internal</strong></td>\n<td style=\"text-align:center\">访问修饰符，允许在同一程序集的文件中内部类型和成员可以访问。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>protected</strong></td>\n<td style=\"text-align:center\">访问修饰符，允许在其所在类中可由派生类访问。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>try</strong></td>\n<td style=\"text-align:center\">异常处理代码块的组成部分，包括可能会抛出异常的代码。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>catch</strong></td>\n<td style=\"text-align:center\">定义一个代码块，在特定类型异常抛出时，执行块内代码。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>base</strong></td>\n<td style=\"text-align:center\">用于访问被派生类或构造中的同名成员隐藏的基类成员。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>abstract</strong></td>\n<td style=\"text-align:center\">标识一个可以扩展但不能被实体化的、必须被实现的类或方法。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>delegate</strong></td>\n<td style=\"text-align:center\">指定一个声明为一种委托类型，委托把方法封装为可调用实体，能在委托实体中调用。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>event</strong></td>\n<td style=\"text-align:center\">声明一个全新的事件。允许一个类或对象提供通知的成员，必须是委托类型。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>checked</strong></td>\n<td style=\"text-align:center\">确保编译器运行时，检查整数类型操作或转换时出现的溢出。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>unchecked</strong></td>\n<td style=\"text-align:center\">禁止溢出检查。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>enum</strong></td>\n<td style=\"text-align:center\">枚举类型，特殊的值类型。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>goto</strong></td>\n<td style=\"text-align:center\">跳转语句，将程序执行重定向到一个标签语句。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>foreach</strong></td>\n<td style=\"text-align:center\">遍历。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>namespace</strong></td>\n<td style=\"text-align:center\">定义一个逻辑组的类型和命名空间。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>ref</strong></td>\n<td style=\"text-align:center\">标识一个参数值可能会受影响的参数。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>struct</strong></td>\n<td style=\"text-align:center\">可以声明值类型。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>throw</strong></td>\n<td style=\"text-align:center\">抛出异常。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>typeof</strong></td>\n<td style=\"text-align:center\">操作符，返回传入参数的类型。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>virtual</strong></td>\n<td style=\"text-align:center\">标识可被覆载的方法。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>using</strong></td>\n<td style=\"text-align:center\">用于命名空间时，允许访问该命名空间中的类型而无需指定其全名。用于定义finalization操作的范围。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>static</strong></td>\n<td style=\"text-align:center\">声明静态变量或静态函数。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>extern</strong></td>\n<td style=\"text-align:center\">声明在外部实现的方法。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>object</strong></td>\n<td style=\"text-align:center\">所有类型都是直接或间接从Object继承的，可以将任何类型的值赋给object类型的变量。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>volatile</strong></td>\n<td style=\"text-align:center\">标识一个可被操作系统、某些硬件设备或并发线程修改的attribute。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>readonly</strong></td>\n<td style=\"text-align:center\">标识一个变量的值在初始化后不可修改。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>params</strong></td>\n<td style=\"text-align:center\">声明一个参数数组。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>operator</strong></td>\n<td style=\"text-align:center\">声明或多载一个操作符。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>interface</strong></td>\n<td style=\"text-align:center\">将一个声明指定为接口类型，即实现类或构造必须遵循的合同。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>out</strong></td>\n<td style=\"text-align:center\">标识一个参数值会受影响的参数，但在传入方法时，该参数无需先初始化。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>sizeof</strong></td>\n<td style=\"text-align:center\">操作符，以byte为单位返回一个值类型的长度。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>stackalloc</strong></td>\n<td style=\"text-align:center\">返回在堆上分配的一个内存块的指针。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>sealed</strong></td>\n<td style=\"text-align:center\">防止类型被派生，防止方法和property被覆载。在声明中使用可以防止该类被其他类继承。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>unsafe</strong></td>\n<td style=\"text-align:center\">标注包含指针操作的代码块、方法或类。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>override</strong></td>\n<td style=\"text-align:center\">在派生类中声明对虚方法的重载。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>implicit</strong></td>\n<td style=\"text-align:center\">定义一个用户定义的转换操作符。通常用来将预定义类型转换为用户定义类型或反向操作。隐式转换操作符必须在转换时使用。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>explicit</strong></td>\n<td style=\"text-align:center\">一个定义用户自定义转换操作符的操作符。通常用来将内建类型转换为用户定义类型或反向操作。必须在转换时调用显式转换操作符。</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"C-数据类型\"><a href=\"#C-数据类型\" class=\"headerlink\" title=\"C#数据类型\"></a>C#数据类型</h2><ul>\n<li>值类型</li>\n<li>引用类型</li>\n<li>指针类型</li>\n</ul>\n<h3 id=\"值类型\"><a href=\"#值类型\" class=\"headerlink\" title=\"值类型\"></a>值类型</h3><p>值类型变量可以直接分配给一个值。它们是从类 System.ValueType 中派生的。</p>\n<h4 id=\"整型\"><a href=\"#整型\" class=\"headerlink\" title=\"整型\"></a>整型</h4><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">类型</th>\n<th style=\"text-align:center\">示意</th>\n<th style=\"text-align:center\">范围</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">Sbyte</td>\n<td style=\"text-align:center\">代表有符号的8位整数</td>\n<td style=\"text-align:center\">数值范围从-128 ～ 127</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Byte</td>\n<td style=\"text-align:center\">代表有符号的8位整数</td>\n<td style=\"text-align:center\">数值范围从0～255</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Short</td>\n<td style=\"text-align:center\">代表有符号的16位整数</td>\n<td style=\"text-align:center\">范围从-32768 ～ 32767</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ushort</td>\n<td style=\"text-align:center\">代表有符号的16位整数</td>\n<td style=\"text-align:center\">范围从0 到 65,535</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Int</td>\n<td style=\"text-align:center\">代表有符号的32位整数</td>\n<td style=\"text-align:center\">范围从-2147483648 ～ 2147483648</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">uint</td>\n<td style=\"text-align:center\">代表有符号的32位整数</td>\n<td style=\"text-align:center\">范围从0 ～ 4294967295</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Long</td>\n<td style=\"text-align:center\">代表有符号的64位整数</td>\n<td style=\"text-align:center\">范围从-9223372036854775808 ～ 9223372036854775808</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Ulong</td>\n<td style=\"text-align:center\">代表有符号的64位整数</td>\n<td style=\"text-align:center\">范围从0 ～ 18446744073709551615</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">char</td>\n<td style=\"text-align:center\">代表有符号的16位整数</td>\n<td style=\"text-align:center\">数值范围从0～65535</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h4 id=\"浮点型\"><a href=\"#浮点型\" class=\"headerlink\" title=\"浮点型\"></a>浮点型</h4><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">类型</th>\n<th style=\"text-align:center\">范围</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">Float</td>\n<td style=\"text-align:center\">1.5<em>10 -45～3.4</em> 10 38</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Double</td>\n<td style=\"text-align:center\">5.0<em>10 -324～1.7</em> 10 308</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"引用类型\"><a href=\"#引用类型\" class=\"headerlink\" title=\"引用类型\"></a>引用类型</h3><h4 id=\"对象类型（Object）\"><a href=\"#对象类型（Object）\" class=\"headerlink\" title=\"对象类型（Object）\"></a>对象类型（Object）</h4><p>对象（Object）类型 是 C# 通用类型系统（Common Type System - CTS）中所有数据类型的终极基类。Object 是 System.Object 类的别名。所以对象（Object）类型可以被分配任何其他类型（值类型、引用类型、预定义类型或用户自定义类型）的值。但是，在分配值之前，需要先进行类型转换。</p>\n<h5 id=\"装箱和拆箱\"><a href=\"#装箱和拆箱\" class=\"headerlink\" title=\"装箱和拆箱\"></a>装箱和拆箱</h5><p>当一个值类型转换为对象类型时，则被称为<strong>装箱</strong>；另一方面，当一个对象类型转换为值类型时，则被称为<strong>拆箱</strong>。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//装箱：值类型转换为对象类型</span><br><span class=\"line\">int val = 8;</span><br><span class=\"line\">object obj = val;//整型数据转换为了对象类型（装箱）</span><br><span class=\"line\"></span><br><span class=\"line\">//拆箱：之前由值类型转换而来的对象类型再转回值类型</span><br><span class=\"line\">int val = 8;</span><br><span class=\"line\">object obj = val;//先装箱</span><br><span class=\"line\">int nval = （int）obj;//再拆箱</span><br></pre></td></tr></table></figure>\n<h4 id=\"动态类型\"><a href=\"#动态类型\" class=\"headerlink\" title=\"动态类型\"></a>动态类型</h4><p>您可以存储任何类型的值在<strong>动态数据类型</strong>变量中。这些变量的类型检查是在<strong>运行</strong>时发生的。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//语法</span><br><span class=\"line\">dynamic &lt;variable_name&gt; = value;</span><br><span class=\"line\">//实例</span><br><span class=\"line\">dynamic d = 20;</span><br></pre></td></tr></table></figure>\n<h4 id=\"字符串型\"><a href=\"#字符串型\" class=\"headerlink\" title=\"字符串型\"></a>字符串型</h4><p>字符串（String）类型 允许您给变量分配任何字符串值。字符串（String）类型是 System.String 类的别名。它是从对象（Object）类型派生的。字符串（String）类型的值可以通过两种形式进行分配：引号和 @引号。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//实例</span><br><span class=\"line\">string str = &quot;runoob.com&quot;;</span><br><span class=\"line\">//@转义</span><br><span class=\"line\">string str = @&quot;C:\\Windows&quot;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"指针类型\"><a href=\"#指针类型\" class=\"headerlink\" title=\"指针类型\"></a>指针类型</h4><p>指针类型变量存储另一种类型的内存地址。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//语法</span><br><span class=\"line\">type* identifier;</span><br><span class=\"line\">//实例</span><br><span class=\"line\">char* cptr;</span><br><span class=\"line\">int* iptr;</span><br></pre></td></tr></table></figure>\n<h3 id=\"类型转换\"><a href=\"#类型转换\" class=\"headerlink\" title=\"类型转换\"></a>类型转换</h3><ul>\n<li><strong>隐式类型转换</strong> ：这些转换是 C# 默认的以安全方式进行的转换, 不会导致数据丢失。例如，从小的整数类型转换为大的整数类型，从派生类转换为基类。</li>\n<li><strong>显式类型转换</strong> ：显式类型转换，即强制类型转换。通过用户使用预定义的函数显式完成的，显式转换需要强制转换运算符，而且强制转换会造成数据丢失。转换类型的范围大小和从属关系和隐式转换相反。显式转换可能会导致数据出错，或者转换失败，甚至无法编译成功。</li>\n</ul>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//隐式类型转换</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">TypeConvertion</span></span><br><span class=\"line\">&#123;   <span class=\"keyword\">class</span> <span class=\"title\">Class1</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title\">Class2</span> : <span class=\"title\">Class1</span> <span class=\"comment\">//类Class2是类Class1的子类</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"built_in\">string</span>[] args</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">int</span> inum = <span class=\"number\">100</span>;</span><br><span class=\"line\">            <span class=\"built_in\">long</span> lnum = inum; <span class=\"comment\">// 进行了隐式转换，将 int 型（数据范围小）数据转换为了 long 型（数据范围大）的数据</span></span><br><span class=\"line\">            Class1 c1 = <span class=\"keyword\">new</span> Class2(); <span class=\"comment\">// 这里也是隐式转换，将一个新建的 Class2 实例转换为了其基类 Class1 类型的实例 C1</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//显式类型转换</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">TypeConversionApplication</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title\">ExplicitConversion</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"built_in\">string</span>[] args</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">double</span> d = <span class=\"number\">5673.74</span>;</span><br><span class=\"line\">            <span class=\"built_in\">int</span> i;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 强制转换 double 为 int</span></span><br><span class=\"line\">            i = (<span class=\"built_in\">int</span>)d;</span><br><span class=\"line\">            Console.WriteLine(i);</span><br><span class=\"line\">            Console.ReadKey();</span><br><span class=\"line\">           </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;<span class=\"comment\">//result 5673</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"C-运算符\"><a href=\"#C-运算符\" class=\"headerlink\" title=\"C#运算符\"></a>C#运算符</h2><h2 id=\"C-运算符-1\"><a href=\"#C-运算符-1\" class=\"headerlink\" title=\"C#运算符\"></a>C#运算符</h2><h3 id=\"算术运算符\"><a href=\"#算术运算符\" class=\"headerlink\" title=\"算术运算符\"></a>算术运算符</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+,-,*,/,%,++,--</span><br></pre></td></tr></table></figure>\n<h3 id=\"关系运算符\"><a href=\"#关系运算符\" class=\"headerlink\" title=\"关系运算符\"></a>关系运算符</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">==,!=,&gt;,&lt;,&gt;=,&lt;=</span><br></pre></td></tr></table></figure>\n<h3 id=\"逻辑运算符\"><a href=\"#逻辑运算符\" class=\"headerlink\" title=\"逻辑运算符\"></a>逻辑运算符</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;&amp;,||,!</span><br></pre></td></tr></table></figure>\n<h3 id=\"位运算符\"><a href=\"#位运算符\" class=\"headerlink\" title=\"位运算符\"></a>位运算符</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;,|,^</span><br></pre></td></tr></table></figure>\n<h3 id=\"赋值运算符\"><a href=\"#赋值运算符\" class=\"headerlink\" title=\"赋值运算符\"></a>赋值运算符</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">=,+=,-=,*=,/=,&amp;=,&lt;&lt;=,&gt;&gt;=,&amp;=,^=,|=</span><br></pre></td></tr></table></figure>\n<h3 id=\"其他运算符\"><a href=\"#其他运算符\" class=\"headerlink\" title=\"其他运算符\"></a>其他运算符</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sizeof(),typeof(),&amp;,*,? :,is.as</span><br></pre></td></tr></table></figure>\n<h2 id=\"C-语法\"><a href=\"#C-语法\" class=\"headerlink\" title=\"C#语法\"></a>C#语法</h2><h3 id=\"判断语句\"><a href=\"#判断语句\" class=\"headerlink\" title=\"判断语句\"></a>判断语句</h3><h4 id=\"if-语句\"><a href=\"#if-语句\" class=\"headerlink\" title=\"if 语句\"></a>if 语句</h4><p>一个 if 语句 由一个布尔表达式后跟一个或多个语句组成。</p>\n<h4 id=\"switch语句\"><a href=\"#switch语句\" class=\"headerlink\" title=\"switch语句\"></a>switch语句</h4><p>一个 switch 语句允许测试一个变量等于多个值时的情况。</p>\n<h3 id=\"循环语句\"><a href=\"#循环语句\" class=\"headerlink\" title=\"循环语句\"></a>循环语句</h3><h3 id=\"while循环\"><a href=\"#while循环\" class=\"headerlink\" title=\"while循环\"></a>while循环</h3><h3 id=\"for-foreach循环\"><a href=\"#for-foreach循环\" class=\"headerlink\" title=\"for/foreach循环\"></a>for/foreach循环</h3><h3 id=\"do-while循环\"><a href=\"#do-while循环\" class=\"headerlink\" title=\"do..while循环\"></a>do..while循环</h3><h3 id=\"break循环控制\"><a href=\"#break循环控制\" class=\"headerlink\" title=\"break循环控制\"></a>break循环控制</h3><h3 id=\"continue循环控制\"><a href=\"#continue循环控制\" class=\"headerlink\" title=\"continue循环控制\"></a>continue循环控制</h3><h2 id=\"C-封装\"><a href=\"#C-封装\" class=\"headerlink\" title=\"C#封装\"></a>C#封装</h2><p><strong>封装</strong> 被定义为”把一个或多个项目封闭在一个物理的或者逻辑的包中”。在面向对象程序设计方法论中，封装是为了防止对实现细节的访问。</p>\n<p>一个 访问修饰符 定义了一个类成员的范围和可见性。C# 支持的访问修饰符如下所示：</p>\n<ul>\n<li><p>public：所有对象都可以访问；</p>\n</li>\n<li><p>private：对象本身在对象内部可以访问；</p>\n</li>\n<li>protected：只有该类对象及其子类对象可以访问</li>\n<li>internal：同一个程序集的对象可以访问；</li>\n<li>protected internal：访问限于当前程序集或派生自包含类的类型。</li>\n</ul>\n<h2 id=\"C-方法\"><a href=\"#C-方法\" class=\"headerlink\" title=\"C#方法\"></a>C#方法</h2><p>一个<strong>方法</strong>是把一些相关的语句组织在一起，用来执行一个任务的语句块。</p>\n<ul>\n<li>定义方法</li>\n<li>调用方法</li>\n</ul>\n<h3 id=\"C-数组\"><a href=\"#C-数组\" class=\"headerlink\" title=\"C#数组\"></a>C#数组</h3><p>数组是一个存储相同类型元素的固定大小的顺序集合。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//初始化数组</span><br><span class=\"line\">double[] balance = new double[10];</span><br><span class=\"line\"></span><br><span class=\"line\">//数组赋值</span><br><span class=\"line\">double[] balance = new double[10];</span><br><span class=\"line\">balance[0] = 4500.0;</span><br><span class=\"line\">double[] balance = &#123; 2340.0, 4523.69, 3421.0&#125;;</span><br><span class=\"line\">int [] marks = new int[5]  &#123; 99,  98, 92, 97, 95&#125;;</span><br><span class=\"line\">int [] marks = new int[]  &#123; 99,  98, 92, 97, 95&#125;;</span><br><span class=\"line\">int [] marks = new int[]  &#123; 99,  98, 92, 97, 95&#125;;</span><br><span class=\"line\">int[] score = marks;</span><br></pre></td></tr></table></figure>\n<h2 id=\"C-结构体\"><a href=\"#C-结构体\" class=\"headerlink\" title=\"C#结构体\"></a>C#结构体</h2><p>在 C# 中，结构体是<strong>值类型数据结构</strong>。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//定义结构体</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> Books</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> title;</span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> author;</span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> subject;</span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> book_id;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">//调用结构体</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Text;</span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">day01</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"keyword\">struct</span> Books</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> title;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> author;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> subject;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> book_id;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">     </span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"built_in\">string</span>[] args</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Books Book1;</span><br><span class=\"line\">            Book1.title = <span class=\"string\">&quot;C programming&quot;</span>;</span><br><span class=\"line\">            Book1.author = <span class=\"string\">&quot;Nuha Ali&quot;</span>;</span><br><span class=\"line\">            Book1.subject = <span class=\"string\">&quot;C programming Tutorial&quot;</span>;</span><br><span class=\"line\">            Book1.book_id = <span class=\"number\">12345</span>;</span><br><span class=\"line\">            Console.WriteLine(<span class=\"string\">&quot;Book1 title:&#123;0&#125;&quot;</span>, Book1.title);</span><br><span class=\"line\">            Console.WriteLine(<span class=\"string\">&quot;Book1 author:&#123;0&#125;&quot;</span>, Book1.author);</span><br><span class=\"line\">            Console.WriteLine(<span class=\"string\">&quot;Book1 subject:&#123;0&#125;&quot;</span>, Book1.subject);</span><br><span class=\"line\">            Console.WriteLine(<span class=\"string\">&quot;Book1 book_id:&#123;0&#125;&quot;</span>, Book1.book_id);</span><br><span class=\"line\">            Console.ReadKey();</span><br><span class=\"line\">           </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>结构可带有方法、字段、索引、属性、运算符方法和事件。</p>\n</li>\n<li><p>结构可定义构造函数，但不能定义析构函数。但是，您不能为结构定义无参构造函数。无参构造函数(默认)是自动定义的，且不能被改变。</p>\n</li>\n<li>与类不同，结构不能继承其他的结构或类。</li>\n<li>结构不能作为其他结构或类的基础结构。</li>\n<li>结构可实现一个或多个接口。</li>\n<li>结构成员不能指定为 abstract、virtual 或 protected。</li>\n<li>当您使用 New 操作符创建一个结构对象时，会调用适当的构造函数来创建结构。与类不同，结构可以不使用 New 操作符即可被实例化。</li>\n<li>如果不使用 New 操作符，只有在所有的字段都被初始化之后，字段才被赋值，对象才被使用。</li>\n</ul>\n<h3 id=\"类-VS-结构\"><a href=\"#类-VS-结构\" class=\"headerlink\" title=\"类 VS 结构\"></a>类 VS 结构</h3><p>类和结构有以下几个基本的不同点：</p>\n<ul>\n<li>类是引用类型，结构是值类型。</li>\n<li>结构不支持继承。</li>\n<li>结构不能声明默认的构造函数。</li>\n</ul>\n","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"Vue","color":"#b8f0ae","icon":"https://img02.anheyu.com/adminuploads/1/2022/09/25/633001374747b.png"}]}],"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"}]}]}},"cover_type":"img","excerpt":"","more":"<h1 id=\"C-基础知识\"><a href=\"#C-基础知识\" class=\"headerlink\" title=\"C#基础知识\"></a>C#基础知识</h1><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><ul>\n<li><p>C#是微软公司发布的一种由C和C++衍生出来的面向对象的编程语言，它不仅去掉了 C++ 和 Java 语言中的一些复杂特性，还提供了可视化工具，能够高效地编写程序。</p>\n</li>\n<li><p>C#是由C和C++衍生出来的一种安全的、稳定的、简单的、优雅的面向对象编程语言。它在继承C和C++强大功能的同时去掉了一些它们的复杂特性（例如没有宏以及不允许多重继承）。</p>\n</li>\n<li>C#使得C++程序员可以高效的开发程序，且因可调用由 C/C++ 编写的本机原生函数，而绝不损失C/C++原有的强大的功能。因为这种继承关系，C#与C/C++具有极大的相似性，熟悉类似语言的开发者可以很快的转向C#。</li>\n</ul>\n<h2 id=\"HelloWorld\"><a href=\"#HelloWorld\" class=\"headerlink\" title=\"HelloWorld\"></a>HelloWorld</h2><figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">Hello</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"keyword\">internal</span> <span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"built_in\">string</span>[] args</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      Console.WriteLine(<span class=\"string\">&quot;Hello World!&quot;</span>);</span><br><span class=\"line\">      Console.ReadLine();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"基本语法\"><a href=\"#基本语法\" class=\"headerlink\" title=\"基本语法\"></a>基本语法</h2><h3 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//这是一个单行注释</span><br><span class=\"line\"></span><br><span class=\"line\">/*</span><br><span class=\"line\">*\t这是一个多行注释</span><br><span class=\"line\">*/</span><br></pre></td></tr></table></figure>\n<h3 id=\"成员变量\"><a href=\"#成员变量\" class=\"headerlink\" title=\"成员变量\"></a>成员变量</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int a = 1;//a是一个变量</span><br></pre></td></tr></table></figure>\n<h3 id=\"实例化\"><a href=\"#实例化\" class=\"headerlink\" title=\"实例化\"></a>实例化</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Obeject r = new Obejct();</span><br></pre></td></tr></table></figure>\n<h3 id=\"关键字\"><a href=\"#关键字\" class=\"headerlink\" title=\"关键字\"></a>关键字</h3><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">关键字</th>\n<th style=\"text-align:center\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><strong>void</strong></td>\n<td style=\"text-align:center\">用作方法的返回类型，指定不返回值。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>const</strong></td>\n<td style=\"text-align:center\">指定字段或局部变量的值是常数，不能被修改。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>as</strong></td>\n<td style=\"text-align:center\">转换操作符，若转换失败返回null。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>private</strong></td>\n<td style=\"text-align:center\">访问修饰符，是允许访问的最低访问级别。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>public</strong></td>\n<td style=\"text-align:center\">访问修饰符，是允许访问的最高访问级别。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>internal</strong></td>\n<td style=\"text-align:center\">访问修饰符，允许在同一程序集的文件中内部类型和成员可以访问。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>protected</strong></td>\n<td style=\"text-align:center\">访问修饰符，允许在其所在类中可由派生类访问。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>try</strong></td>\n<td style=\"text-align:center\">异常处理代码块的组成部分，包括可能会抛出异常的代码。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>catch</strong></td>\n<td style=\"text-align:center\">定义一个代码块，在特定类型异常抛出时，执行块内代码。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>base</strong></td>\n<td style=\"text-align:center\">用于访问被派生类或构造中的同名成员隐藏的基类成员。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>abstract</strong></td>\n<td style=\"text-align:center\">标识一个可以扩展但不能被实体化的、必须被实现的类或方法。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>delegate</strong></td>\n<td style=\"text-align:center\">指定一个声明为一种委托类型，委托把方法封装为可调用实体，能在委托实体中调用。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>event</strong></td>\n<td style=\"text-align:center\">声明一个全新的事件。允许一个类或对象提供通知的成员，必须是委托类型。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>checked</strong></td>\n<td style=\"text-align:center\">确保编译器运行时，检查整数类型操作或转换时出现的溢出。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>unchecked</strong></td>\n<td style=\"text-align:center\">禁止溢出检查。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>enum</strong></td>\n<td style=\"text-align:center\">枚举类型，特殊的值类型。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>goto</strong></td>\n<td style=\"text-align:center\">跳转语句，将程序执行重定向到一个标签语句。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>foreach</strong></td>\n<td style=\"text-align:center\">遍历。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>namespace</strong></td>\n<td style=\"text-align:center\">定义一个逻辑组的类型和命名空间。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>ref</strong></td>\n<td style=\"text-align:center\">标识一个参数值可能会受影响的参数。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>struct</strong></td>\n<td style=\"text-align:center\">可以声明值类型。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>throw</strong></td>\n<td style=\"text-align:center\">抛出异常。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>typeof</strong></td>\n<td style=\"text-align:center\">操作符，返回传入参数的类型。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>virtual</strong></td>\n<td style=\"text-align:center\">标识可被覆载的方法。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>using</strong></td>\n<td style=\"text-align:center\">用于命名空间时，允许访问该命名空间中的类型而无需指定其全名。用于定义finalization操作的范围。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>static</strong></td>\n<td style=\"text-align:center\">声明静态变量或静态函数。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>extern</strong></td>\n<td style=\"text-align:center\">声明在外部实现的方法。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>object</strong></td>\n<td style=\"text-align:center\">所有类型都是直接或间接从Object继承的，可以将任何类型的值赋给object类型的变量。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>volatile</strong></td>\n<td style=\"text-align:center\">标识一个可被操作系统、某些硬件设备或并发线程修改的attribute。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>readonly</strong></td>\n<td style=\"text-align:center\">标识一个变量的值在初始化后不可修改。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>params</strong></td>\n<td style=\"text-align:center\">声明一个参数数组。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>operator</strong></td>\n<td style=\"text-align:center\">声明或多载一个操作符。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>interface</strong></td>\n<td style=\"text-align:center\">将一个声明指定为接口类型，即实现类或构造必须遵循的合同。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>out</strong></td>\n<td style=\"text-align:center\">标识一个参数值会受影响的参数，但在传入方法时，该参数无需先初始化。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>sizeof</strong></td>\n<td style=\"text-align:center\">操作符，以byte为单位返回一个值类型的长度。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>stackalloc</strong></td>\n<td style=\"text-align:center\">返回在堆上分配的一个内存块的指针。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>sealed</strong></td>\n<td style=\"text-align:center\">防止类型被派生，防止方法和property被覆载。在声明中使用可以防止该类被其他类继承。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>unsafe</strong></td>\n<td style=\"text-align:center\">标注包含指针操作的代码块、方法或类。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>override</strong></td>\n<td style=\"text-align:center\">在派生类中声明对虚方法的重载。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>implicit</strong></td>\n<td style=\"text-align:center\">定义一个用户定义的转换操作符。通常用来将预定义类型转换为用户定义类型或反向操作。隐式转换操作符必须在转换时使用。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>explicit</strong></td>\n<td style=\"text-align:center\">一个定义用户自定义转换操作符的操作符。通常用来将内建类型转换为用户定义类型或反向操作。必须在转换时调用显式转换操作符。</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"C-数据类型\"><a href=\"#C-数据类型\" class=\"headerlink\" title=\"C#数据类型\"></a>C#数据类型</h2><ul>\n<li>值类型</li>\n<li>引用类型</li>\n<li>指针类型</li>\n</ul>\n<h3 id=\"值类型\"><a href=\"#值类型\" class=\"headerlink\" title=\"值类型\"></a>值类型</h3><p>值类型变量可以直接分配给一个值。它们是从类 System.ValueType 中派生的。</p>\n<h4 id=\"整型\"><a href=\"#整型\" class=\"headerlink\" title=\"整型\"></a>整型</h4><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">类型</th>\n<th style=\"text-align:center\">示意</th>\n<th style=\"text-align:center\">范围</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">Sbyte</td>\n<td style=\"text-align:center\">代表有符号的8位整数</td>\n<td style=\"text-align:center\">数值范围从-128 ～ 127</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Byte</td>\n<td style=\"text-align:center\">代表有符号的8位整数</td>\n<td style=\"text-align:center\">数值范围从0～255</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Short</td>\n<td style=\"text-align:center\">代表有符号的16位整数</td>\n<td style=\"text-align:center\">范围从-32768 ～ 32767</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ushort</td>\n<td style=\"text-align:center\">代表有符号的16位整数</td>\n<td style=\"text-align:center\">范围从0 到 65,535</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Int</td>\n<td style=\"text-align:center\">代表有符号的32位整数</td>\n<td style=\"text-align:center\">范围从-2147483648 ～ 2147483648</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">uint</td>\n<td style=\"text-align:center\">代表有符号的32位整数</td>\n<td style=\"text-align:center\">范围从0 ～ 4294967295</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Long</td>\n<td style=\"text-align:center\">代表有符号的64位整数</td>\n<td style=\"text-align:center\">范围从-9223372036854775808 ～ 9223372036854775808</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Ulong</td>\n<td style=\"text-align:center\">代表有符号的64位整数</td>\n<td style=\"text-align:center\">范围从0 ～ 18446744073709551615</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">char</td>\n<td style=\"text-align:center\">代表有符号的16位整数</td>\n<td style=\"text-align:center\">数值范围从0～65535</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h4 id=\"浮点型\"><a href=\"#浮点型\" class=\"headerlink\" title=\"浮点型\"></a>浮点型</h4><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">类型</th>\n<th style=\"text-align:center\">范围</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">Float</td>\n<td style=\"text-align:center\">1.5<em>10 -45～3.4</em> 10 38</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Double</td>\n<td style=\"text-align:center\">5.0<em>10 -324～1.7</em> 10 308</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"引用类型\"><a href=\"#引用类型\" class=\"headerlink\" title=\"引用类型\"></a>引用类型</h3><h4 id=\"对象类型（Object）\"><a href=\"#对象类型（Object）\" class=\"headerlink\" title=\"对象类型（Object）\"></a>对象类型（Object）</h4><p>对象（Object）类型 是 C# 通用类型系统（Common Type System - CTS）中所有数据类型的终极基类。Object 是 System.Object 类的别名。所以对象（Object）类型可以被分配任何其他类型（值类型、引用类型、预定义类型或用户自定义类型）的值。但是，在分配值之前，需要先进行类型转换。</p>\n<h5 id=\"装箱和拆箱\"><a href=\"#装箱和拆箱\" class=\"headerlink\" title=\"装箱和拆箱\"></a>装箱和拆箱</h5><p>当一个值类型转换为对象类型时，则被称为<strong>装箱</strong>；另一方面，当一个对象类型转换为值类型时，则被称为<strong>拆箱</strong>。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//装箱：值类型转换为对象类型</span><br><span class=\"line\">int val = 8;</span><br><span class=\"line\">object obj = val;//整型数据转换为了对象类型（装箱）</span><br><span class=\"line\"></span><br><span class=\"line\">//拆箱：之前由值类型转换而来的对象类型再转回值类型</span><br><span class=\"line\">int val = 8;</span><br><span class=\"line\">object obj = val;//先装箱</span><br><span class=\"line\">int nval = （int）obj;//再拆箱</span><br></pre></td></tr></table></figure>\n<h4 id=\"动态类型\"><a href=\"#动态类型\" class=\"headerlink\" title=\"动态类型\"></a>动态类型</h4><p>您可以存储任何类型的值在<strong>动态数据类型</strong>变量中。这些变量的类型检查是在<strong>运行</strong>时发生的。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//语法</span><br><span class=\"line\">dynamic &lt;variable_name&gt; = value;</span><br><span class=\"line\">//实例</span><br><span class=\"line\">dynamic d = 20;</span><br></pre></td></tr></table></figure>\n<h4 id=\"字符串型\"><a href=\"#字符串型\" class=\"headerlink\" title=\"字符串型\"></a>字符串型</h4><p>字符串（String）类型 允许您给变量分配任何字符串值。字符串（String）类型是 System.String 类的别名。它是从对象（Object）类型派生的。字符串（String）类型的值可以通过两种形式进行分配：引号和 @引号。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//实例</span><br><span class=\"line\">string str = &quot;runoob.com&quot;;</span><br><span class=\"line\">//@转义</span><br><span class=\"line\">string str = @&quot;C:\\Windows&quot;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"指针类型\"><a href=\"#指针类型\" class=\"headerlink\" title=\"指针类型\"></a>指针类型</h4><p>指针类型变量存储另一种类型的内存地址。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//语法</span><br><span class=\"line\">type* identifier;</span><br><span class=\"line\">//实例</span><br><span class=\"line\">char* cptr;</span><br><span class=\"line\">int* iptr;</span><br></pre></td></tr></table></figure>\n<h3 id=\"类型转换\"><a href=\"#类型转换\" class=\"headerlink\" title=\"类型转换\"></a>类型转换</h3><ul>\n<li><strong>隐式类型转换</strong> ：这些转换是 C# 默认的以安全方式进行的转换, 不会导致数据丢失。例如，从小的整数类型转换为大的整数类型，从派生类转换为基类。</li>\n<li><strong>显式类型转换</strong> ：显式类型转换，即强制类型转换。通过用户使用预定义的函数显式完成的，显式转换需要强制转换运算符，而且强制转换会造成数据丢失。转换类型的范围大小和从属关系和隐式转换相反。显式转换可能会导致数据出错，或者转换失败，甚至无法编译成功。</li>\n</ul>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//隐式类型转换</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">TypeConvertion</span></span><br><span class=\"line\">&#123;   <span class=\"keyword\">class</span> <span class=\"title\">Class1</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title\">Class2</span> : <span class=\"title\">Class1</span> <span class=\"comment\">//类Class2是类Class1的子类</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"built_in\">string</span>[] args</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">int</span> inum = <span class=\"number\">100</span>;</span><br><span class=\"line\">            <span class=\"built_in\">long</span> lnum = inum; <span class=\"comment\">// 进行了隐式转换，将 int 型（数据范围小）数据转换为了 long 型（数据范围大）的数据</span></span><br><span class=\"line\">            Class1 c1 = <span class=\"keyword\">new</span> Class2(); <span class=\"comment\">// 这里也是隐式转换，将一个新建的 Class2 实例转换为了其基类 Class1 类型的实例 C1</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//显式类型转换</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">TypeConversionApplication</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title\">ExplicitConversion</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"built_in\">string</span>[] args</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">double</span> d = <span class=\"number\">5673.74</span>;</span><br><span class=\"line\">            <span class=\"built_in\">int</span> i;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 强制转换 double 为 int</span></span><br><span class=\"line\">            i = (<span class=\"built_in\">int</span>)d;</span><br><span class=\"line\">            Console.WriteLine(i);</span><br><span class=\"line\">            Console.ReadKey();</span><br><span class=\"line\">           </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;<span class=\"comment\">//result 5673</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"C-运算符\"><a href=\"#C-运算符\" class=\"headerlink\" title=\"C#运算符\"></a>C#运算符</h2><h2 id=\"C-运算符-1\"><a href=\"#C-运算符-1\" class=\"headerlink\" title=\"C#运算符\"></a>C#运算符</h2><h3 id=\"算术运算符\"><a href=\"#算术运算符\" class=\"headerlink\" title=\"算术运算符\"></a>算术运算符</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+,-,*,/,%,++,--</span><br></pre></td></tr></table></figure>\n<h3 id=\"关系运算符\"><a href=\"#关系运算符\" class=\"headerlink\" title=\"关系运算符\"></a>关系运算符</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">==,!=,&gt;,&lt;,&gt;=,&lt;=</span><br></pre></td></tr></table></figure>\n<h3 id=\"逻辑运算符\"><a href=\"#逻辑运算符\" class=\"headerlink\" title=\"逻辑运算符\"></a>逻辑运算符</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;&amp;,||,!</span><br></pre></td></tr></table></figure>\n<h3 id=\"位运算符\"><a href=\"#位运算符\" class=\"headerlink\" title=\"位运算符\"></a>位运算符</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;,|,^</span><br></pre></td></tr></table></figure>\n<h3 id=\"赋值运算符\"><a href=\"#赋值运算符\" class=\"headerlink\" title=\"赋值运算符\"></a>赋值运算符</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">=,+=,-=,*=,/=,&amp;=,&lt;&lt;=,&gt;&gt;=,&amp;=,^=,|=</span><br></pre></td></tr></table></figure>\n<h3 id=\"其他运算符\"><a href=\"#其他运算符\" class=\"headerlink\" title=\"其他运算符\"></a>其他运算符</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sizeof(),typeof(),&amp;,*,? :,is.as</span><br></pre></td></tr></table></figure>\n<h2 id=\"C-语法\"><a href=\"#C-语法\" class=\"headerlink\" title=\"C#语法\"></a>C#语法</h2><h3 id=\"判断语句\"><a href=\"#判断语句\" class=\"headerlink\" title=\"判断语句\"></a>判断语句</h3><h4 id=\"if-语句\"><a href=\"#if-语句\" class=\"headerlink\" title=\"if 语句\"></a>if 语句</h4><p>一个 if 语句 由一个布尔表达式后跟一个或多个语句组成。</p>\n<h4 id=\"switch语句\"><a href=\"#switch语句\" class=\"headerlink\" title=\"switch语句\"></a>switch语句</h4><p>一个 switch 语句允许测试一个变量等于多个值时的情况。</p>\n<h3 id=\"循环语句\"><a href=\"#循环语句\" class=\"headerlink\" title=\"循环语句\"></a>循环语句</h3><h3 id=\"while循环\"><a href=\"#while循环\" class=\"headerlink\" title=\"while循环\"></a>while循环</h3><h3 id=\"for-foreach循环\"><a href=\"#for-foreach循环\" class=\"headerlink\" title=\"for/foreach循环\"></a>for/foreach循环</h3><h3 id=\"do-while循环\"><a href=\"#do-while循环\" class=\"headerlink\" title=\"do..while循环\"></a>do..while循环</h3><h3 id=\"break循环控制\"><a href=\"#break循环控制\" class=\"headerlink\" title=\"break循环控制\"></a>break循环控制</h3><h3 id=\"continue循环控制\"><a href=\"#continue循环控制\" class=\"headerlink\" title=\"continue循环控制\"></a>continue循环控制</h3><h2 id=\"C-封装\"><a href=\"#C-封装\" class=\"headerlink\" title=\"C#封装\"></a>C#封装</h2><p><strong>封装</strong> 被定义为”把一个或多个项目封闭在一个物理的或者逻辑的包中”。在面向对象程序设计方法论中，封装是为了防止对实现细节的访问。</p>\n<p>一个 访问修饰符 定义了一个类成员的范围和可见性。C# 支持的访问修饰符如下所示：</p>\n<ul>\n<li><p>public：所有对象都可以访问；</p>\n</li>\n<li><p>private：对象本身在对象内部可以访问；</p>\n</li>\n<li>protected：只有该类对象及其子类对象可以访问</li>\n<li>internal：同一个程序集的对象可以访问；</li>\n<li>protected internal：访问限于当前程序集或派生自包含类的类型。</li>\n</ul>\n<h2 id=\"C-方法\"><a href=\"#C-方法\" class=\"headerlink\" title=\"C#方法\"></a>C#方法</h2><p>一个<strong>方法</strong>是把一些相关的语句组织在一起，用来执行一个任务的语句块。</p>\n<ul>\n<li>定义方法</li>\n<li>调用方法</li>\n</ul>\n<h3 id=\"C-数组\"><a href=\"#C-数组\" class=\"headerlink\" title=\"C#数组\"></a>C#数组</h3><p>数组是一个存储相同类型元素的固定大小的顺序集合。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//初始化数组</span><br><span class=\"line\">double[] balance = new double[10];</span><br><span class=\"line\"></span><br><span class=\"line\">//数组赋值</span><br><span class=\"line\">double[] balance = new double[10];</span><br><span class=\"line\">balance[0] = 4500.0;</span><br><span class=\"line\">double[] balance = &#123; 2340.0, 4523.69, 3421.0&#125;;</span><br><span class=\"line\">int [] marks = new int[5]  &#123; 99,  98, 92, 97, 95&#125;;</span><br><span class=\"line\">int [] marks = new int[]  &#123; 99,  98, 92, 97, 95&#125;;</span><br><span class=\"line\">int [] marks = new int[]  &#123; 99,  98, 92, 97, 95&#125;;</span><br><span class=\"line\">int[] score = marks;</span><br></pre></td></tr></table></figure>\n<h2 id=\"C-结构体\"><a href=\"#C-结构体\" class=\"headerlink\" title=\"C#结构体\"></a>C#结构体</h2><p>在 C# 中，结构体是<strong>值类型数据结构</strong>。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//定义结构体</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> Books</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> title;</span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> author;</span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> subject;</span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> book_id;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">//调用结构体</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Text;</span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">day01</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"keyword\">struct</span> Books</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> title;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> author;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> subject;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> book_id;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">     </span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"built_in\">string</span>[] args</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Books Book1;</span><br><span class=\"line\">            Book1.title = <span class=\"string\">&quot;C programming&quot;</span>;</span><br><span class=\"line\">            Book1.author = <span class=\"string\">&quot;Nuha Ali&quot;</span>;</span><br><span class=\"line\">            Book1.subject = <span class=\"string\">&quot;C programming Tutorial&quot;</span>;</span><br><span class=\"line\">            Book1.book_id = <span class=\"number\">12345</span>;</span><br><span class=\"line\">            Console.WriteLine(<span class=\"string\">&quot;Book1 title:&#123;0&#125;&quot;</span>, Book1.title);</span><br><span class=\"line\">            Console.WriteLine(<span class=\"string\">&quot;Book1 author:&#123;0&#125;&quot;</span>, Book1.author);</span><br><span class=\"line\">            Console.WriteLine(<span class=\"string\">&quot;Book1 subject:&#123;0&#125;&quot;</span>, Book1.subject);</span><br><span class=\"line\">            Console.WriteLine(<span class=\"string\">&quot;Book1 book_id:&#123;0&#125;&quot;</span>, Book1.book_id);</span><br><span class=\"line\">            Console.ReadKey();</span><br><span class=\"line\">           </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>结构可带有方法、字段、索引、属性、运算符方法和事件。</p>\n</li>\n<li><p>结构可定义构造函数，但不能定义析构函数。但是，您不能为结构定义无参构造函数。无参构造函数(默认)是自动定义的，且不能被改变。</p>\n</li>\n<li>与类不同，结构不能继承其他的结构或类。</li>\n<li>结构不能作为其他结构或类的基础结构。</li>\n<li>结构可实现一个或多个接口。</li>\n<li>结构成员不能指定为 abstract、virtual 或 protected。</li>\n<li>当您使用 New 操作符创建一个结构对象时，会调用适当的构造函数来创建结构。与类不同，结构可以不使用 New 操作符即可被实例化。</li>\n<li>如果不使用 New 操作符，只有在所有的字段都被初始化之后，字段才被赋值，对象才被使用。</li>\n</ul>\n<h3 id=\"类-VS-结构\"><a href=\"#类-VS-结构\" class=\"headerlink\" title=\"类 VS 结构\"></a>类 VS 结构</h3><p>类和结构有以下几个基本的不同点：</p>\n<ul>\n<li>类是引用类型，结构是值类型。</li>\n<li>结构不支持继承。</li>\n<li>结构不能声明默认的构造函数。</li>\n</ul>\n"},{"title":"CG语言基本知识","data":"2024-7-619:52:54","updated":"2024-07-05T16:00:00.000Z","description":"CG语言基本知识","cover":"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202403201634433.png","_content":"","source":"_posts/CGshaderlab.md","raw":"---\ntitle: CG语言基本知识\ndata: 2024-7-619:52:54\nupdated: 2024-7-6\ntags: \n    - TA\n    - Program\n    - CG\ncategories: Program\ndescription: CG语言基本知识\ncover: https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202403201634433.png\n---\n","slug":"CGshaderlab","published":1,"date":"2024-07-11T06:04:06.491Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clyh2ogn40007e0ds8htfhggv","content":"","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"Vue","color":"#b8f0ae","icon":"https://img02.anheyu.com/adminuploads/1/2022/09/25/633001374747b.png"}]}],"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"}]}]}},"cover_type":"img","excerpt":"","more":""},{"title":"HLSL语言基本知识","data":"2024-07-07T11:52:54.000Z","updated":"2024-07-06T16:00:00.000Z","description":"CG语言基本知识","cover":"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202403201634433.png","_content":"\n","source":"_posts/HLSL.md","raw":"---\ntitle: HLSL语言基本知识\ndata: 2024-7-7 19:52:54\nupdated: 2024-7-7\ntags: \n    - TA\n    - Program\n    - HLSL\ncategories: Program\ndescription: CG语言基本知识\ncover: https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202403201634433.png\n---\n\n","slug":"HLSL","published":1,"date":"2024-07-11T06:04:06.618Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clyh2ogn60009e0dsf2lu5yfo","content":"","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"Vue","color":"#b8f0ae","icon":"https://img02.anheyu.com/adminuploads/1/2022/09/25/633001374747b.png"}]}],"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"}]}]}},"cover_type":"img","excerpt":"","more":""},{"title":"MarkDown","data":"2024-07-08T11:52:54.000Z","updated":"2024-07-07T16:00:00.000Z","description":"MarkDown语法模板","cover":"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202403210421347.png","_content":"\n# MarkDown\n\n## Front Matter模板\n\n[基于Hexo和Butterfly创建个人技术博客，(10) 使用Butterfly的Tags Plugin插件增强博客文章内容和视觉表现力_hexo+butterfly创建分类目录-CSDN博客](https://blog.csdn.net/liudonglovehemin/article/details/131095922)\n\n```\ntitle: \ndata: 2024-03-18\ntags: \ncategories: \ndescription:\ncover: \ntop_img:\ncomments: \nkeywords: \naside: \ntoc: \nswiper_index: 2\n\n\ntitle: 文章标题\nauthor: 作者名\ndata: 2024-03-18\nupdated: 更新日期\ntags: \n\t\t- 标签1\n\t\t- 标签2\ncategories: 分类\nreward: 打赏（true/false）\ndescription: 描述\ncover: 封面\ntop_img: 顶部图片\ncomments: 评论（true/flase）\nkeywords: 关键字\naside: 侧边栏显示\ntoc: 文章目录\nswiper_index: 优先顺序\n\ntype : 页面类型\n\n\n```\n\n## Markdown基本语法\n\n### butterfly标签外挂\n\n#### 行内文本\n\n{% tabs 行内文本%}\n\n<!-- tab 渲染效果-->\n\n1. 带 {% u 下划线 %} 的文本\n2. 带 {% emp 着重号 %} 的文本\n3. 带 {% wavy 波浪线 %} 的文本\n4. 带 {% del 删除线 %} 的文本\n5. 键盘样式的文本 {% kbd command %} + {% kbd D %}\n6. 密码样式的文本：{% psw 这里没有验证码 %}\n\n- 彩色文字\n  在一段话中方便插入各种颜色的标签，包括：{% span red, 红色 %}、{% span yellow, 黄色 %}、{% span green, 绿色 %}、{% span cyan, 青色 %}、{% span blue, 蓝色 %}、{% span gray, 灰色 %}。\n- 超大号文字\n  文档「开始」页面中的标题部分就是超大号文字。\n  {% span center logo large, Volantis %}\n  {% span center small, A Wonderful Theme for Hexo %}\n\n<!-- endtab -->\n\n<!-- tab 源码示例-->\n\n```\n1. 带 {% u 下划线 %} 的文本\n2. 带 {% emp 着重号 %} 的文本\n3. 带 {% wavy 波浪线 %} 的文本\n4. 带 {% del 删除线 %} 的文本\n5. 键盘样式的文本 {% kbd command %} + {% kbd D %}\n6. 密码样式的文本：{% psw 这里没有验证码 %}\n- 彩色文字\n在一段话中方便插入各种颜色的标签，包括：{% span red, 红色 %}、{% span yellow, 黄色 %}、{% span green, 绿色 %}、{% span cyan, 青色 %}、{% span blue, 蓝色 %}、{% span gray, 灰色 %}。\n- 超大号文字\n文档「开始」页面中的标题部分就是超大号文字。\n{% span center logo large, Volantis %}\n{% span center small, A Wonderful Theme for Hexo %}\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n#### 分栏\n\n{% tabs  分栏 %}\n\n<!-- tab 展示效果-->\n\n{% tabs test %}\n<!-- tab 1-->\nThis is Tab 1\n<!-- endtab -->\n\n<!-- tab 2-->\n**This is Tab 2.**\n<!-- endtab -->\n\n<!-- tab -->\n**This is Tab 3.**\n<!-- endtab -->\n\n{% endtabs %}\n\n<!-- endtab -->\n\n<!-- tab 源码-->\n\n```\n{% tabs test %}\n<!-- tab 1-->\nThis is Tab 1\n<!-- endtab -->\n\n<!-- tab 2-->\n**This is Tab 2.**\n<!-- endtab -->\n\n<!-- tab -->\n**This is Tab 3.**\n<!-- endtab -->\n{% endtabs %}\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n#### 折叠框\n\n{% tabs 折叠框%}\n\n<!-- tab 渲染效果-->\n{% folding 查看图片测试 %}\n\n![](https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg)\n\n{% endfolding %}\n\n{% folding cyan open, 查看默认打开的折叠框 %}\n\n这是一个默认打开的折叠框。\n\n{% endfolding %}\n\n{% folding green, 查看代码测试 %}\n假装这里有代码块（代码块没法嵌套代码块）\n{% endfolding %}\n\n{% folding yellow, 查看列表测试 %}\n\n- haha\n- hehe\n\n{% endfolding %}\n\n{% folding red, 查看嵌套测试 %}\n\n{% folding blue, 查看嵌套测试2 %}\n\n{% folding 查看嵌套测试3 %}\n\nhahaha <span><img src='https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png' style='height:24px'></span>\n\n{% endfolding %}\n\n{% endfolding %}\n\n{% endfolding %}\n<!-- endtab -->\n\n<!-- tab 源码示例-->\n\n```\n{% folding 查看图片测试 %}\n\n![](https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg)\n\n{% endfolding %}\n\n{% folding cyan open, 查看默认打开的折叠框 %}\n\n这是一个默认打开的折叠框。\n\n{% endfolding %}\n\n{% folding green, 查看代码测试 %}\n假装这里有代码块（代码块没法嵌套代码块）\n{% endfolding %}\n\n{% folding yellow, 查看列表测试 %}\n\n- haha\n- hehe\n\n{% endfolding %}\n\n{% folding red, 查看嵌套测试 %}\n\n{% folding blue, 查看嵌套测试2 %}\n\n{% folding 查看嵌套测试3 %}\n\nhahaha <span><img src='https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png' style='height:24px'></span>\n\n{% endfolding %}\n\n{% endfolding %}\n\n{% endfolding %}\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n####  提示块标签\n\n{% tabs 提示块标签%}\n\n<!-- tab 渲染效果-->\n{% note default simple %}default 提示块标签{% endnote %}\n<!-- endtab -->\n\n<!-- tab 源码示例-->\n\n```\n{% note default simple %}default 提示块标签{% endnote %}\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n{% tabs 引用%}\n\n<!-- tab 渲染效果-->\n{% note pink 'fas fa-car-crash' modern %}小心开车 安全至上{% endnote %}\n<!-- endtab -->\n\n<!-- tab 源码示例-->\n\n```\n{% note pink 'fas fa-car-crash' modern %}小心开车 安全至上{% endnote %}\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n#### 上标标签\n\n{% tabs 上标标签%}\n\n<!-- tab 渲染效果-->\n{% tip success %}success{% endtip %}\n<!-- endtab -->\n\n<!-- tab 源码示例-->\n\n```\n{% tip success %}success{% endtip %}\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n#### 复选列表\n\n{% tabs 复选列表%}\n\n<!-- tab 渲染效果-->\n{% checkbox red, 支持自定义颜色 %}\n{% checkbox green checked, 绿色 + 默认选中 %}\n{% checkbox yellow checked, 黄色 + 默认选中 %}\n<!-- endtab -->\n\n<!-- tab 源码示例-->\n\n```\n{% checkbox red, 支持自定义颜色 %}\n{% checkbox green checked, 绿色 + 默认选中 %}\n{% checkbox yellow checked, 黄色 + 默认选中 %}\n```\n\n<!-- endtab -->\n{% endtabs %}\n\n#### 单选列表\n\n{% tabs 单选列表%}\n\n<!-- tab 渲染效果-->\n{% radio 纯文本测试 %}\n{% radio checked, 支持简单的 [markdown](https://guides.github.com/features/mastering-markdown/) 语法 %}\n{% radio red, 支持自定义颜色 %}\n<!-- endtab -->\n\n<!-- tab 源码示例-->\n\n```\n{% radio 纯文本测试 %}\n{% radio checked, 支持简单的 [markdown](https://guides.github.com/features/mastering-markdown/) 语法 %}\n{% radio red, 支持自定义颜色 %}\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n#### 记号笔注释\n\n{% tabs 记号笔注释%}\n\n<!-- tab 渲染效果-->\n最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的{% bubble 兄弟相邻选择器,\"例如 h1 + p {margin-top:50px;}\" %}，{% bubble flex布局,\"Flex 是 Flexible Box 的缩写，意为\"弹性布局\"，用来为盒状模型提供最大的灵活性\",\"#ec5830\" %}，{% bubble transform变换,\"transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。\",\"#1db675\" %}，animation的{% bubble 贝塞尔速度曲线,\"贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋\",\"#de4489\" %}写法，还有今天刚看到的{% bubble clip-path,\"clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。\",\"#868fd7\" %}属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。\n<!-- endtab -->\n\n<!-- tab 源码示例-->\n\n```\n最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的{% bubble 兄弟相邻选择器,\"例如 h1 + p {margin-top:50px;}\" %}，{% bubble flex布局,\"Flex 是 Flexible Box 的缩写，意为\"弹性布局\"，用来为盒状模型提供最大的灵活性\",\"#ec5830\" %}，{% bubble transform变换,\"transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。\",\"#1db675\" %}，animation的{% bubble 贝塞尔速度曲线,\"贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋\",\"#de4489\" %}写法，还有今天刚看到的{% bubble clip-path,\"clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。\",\"#868fd7\" %}属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n#### 链接卡片\n\n{% tabs 链接卡片%}\n\n<!-- tab 渲染效果-->\n{% link 糖果屋教程贴, https://akilar.top/posts/615e2dec/, https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico %}\n<!-- endtab -->\n\n<!-- tab 源码示例-->\n\n```\n{% link 糖果屋教程贴, https://akilar.top/posts/615e2dec/, https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico %}\n```\n\n<!-- endtab -->\n{% endtabs %}\n\n#### 网站卡片\n\n{% tabs 网站卡片%}\n\n<!-- tab 渲染效果-->\n\n{% sitegroup %}\n{% site xaoxuu, url=https://xaoxuu.com, screenshot=https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg, avatar=https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/avatar/avatar.png, description=简约风格 %}\n{% site inkss, url=https://inkss.cn, screenshot=https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg, avatar=https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg, description=这是一段关于这个网站的描述文字 %}\n{% site MHuiG, url=https://blog.mhuig.top, screenshot=https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png, avatar=https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png, description=这是一段关于这个网站的描述文字 %}\n{% site Colsrch, url=https://colsrch.top, screenshot=https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png, avatar=https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg, description=这是一段关于这个网站的描述文字 %}\n{% site Linhk1606, url=https://linhk1606.github.io, screenshot=https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png, avatar=https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png, description=这是一段关于这个网站的描述文字 %}\n{% endsitegroup %}\n\n<!-- endtab -->\n\n<!-- tab 源码示例-->\n\n```\n{% sitegroup %}\n{% site xaoxuu, url=https://xaoxuu.com, screenshot=https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg, avatar=https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/avatar/avatar.png, description=简约风格 %}\n{% site inkss, url=https://inkss.cn, screenshot=https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg, avatar=https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg, description=这是一段关于这个网站的描述文字 %}\n{% site MHuiG, url=https://blog.mhuig.top, screenshot=https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png, avatar=https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png, description=这是一段关于这个网站的描述文字 %}\n{% site Colsrch, url=https://colsrch.top, screenshot=https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png, avatar=https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg, description=这是一段关于这个网站的描述文字 %}\n{% site Linhk1606, url=https://linhk1606.github.io, screenshot=https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png, avatar=https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png, description=这是一段关于这个网站的描述文字 %}\n{% endsitegroup %}\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n#### 音频\n\n{% tabs 音频%}\n\n<!-- tab 渲染效果-->\n\n{% audio https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3 %}\n\n<!-- endtab -->\n\n<!-- tab 源码示例-->\n\n```\n{% audio https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3 %}\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n#### 视频\n\n{% tabs 视频%}\n\n<!-- tab 渲染效果-->\n\n{% videos %}\n{% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %}\n{% video https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404170857702.mp4 %}\n{% video https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/CartoonDance.mp4 %}\n{% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %}\n{% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %}\n{% endvideos %}\n\n<!-- endtab -->\n\n<!-- tab 源码示例-->\n\n```\n{% videos, 2 %}\n{% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %}\n{% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %}\n{% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %}\n{% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %}\n{% endvideos %}\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n#### 相册图库\n\n{% tabs 相册图库%}\n\n<!-- tab 渲染效果-->\n\n<div class=\"gallery-group-main\">\n{% galleryGroup name description link img-url %}\n{% galleryGroup name description link img-url %}\n{% galleryGroup name description link img-url %}\n</div>\n\n\n<!-- endtab -->\n\n<!-- tab 源码示例-->\n\n```\n<div class=\"gallery-group-main\">\n{% galleryGroup name description link img-url %}\n{% galleryGroup name description link img-url %}\n{% galleryGroup name description link img-url %}\n</div>\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n#### 展示画廊Gallery\n\n{% tabs 展示画廊Gallery %}\n\n<!-- tab 渲染效果-->\n\n{% gallery %}\n![](https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg)\n![](https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg)\n{% endgallery %}<!-- endtab -->\n\n<!-- tab 源码示例-->\n\n```\n{% gallery %}\n![](https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg)\n![](https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg)\n{% endgallery %}\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n#### 按钮\n\n{% tabs 按钮%}\n\n<!-- tab 渲染效果-->\n{% btns circle grid5 %}\n{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}\n{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}\n{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}\n{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}\n{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}\n{% endbtns %}\n<!-- endtab -->\n\n<!-- tab 源码示例-->\n\n```\n{% btns circle grid5 %}\n{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}\n{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}\n{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}\n{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}\n{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}\n{% endbtns %}\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n#### 诗词标签\n\n{% tabs 诗词标签%}\n\n<!-- tab 渲染效果-->\n{% poem 水调歌头,苏轼 %}\n丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。\n明月几时有？把酒问青天。\n{% endpoem %}\n<!-- endtab -->\n\n<!-- tab 源码示例-->\n\n```\n{% poem 水调歌头,苏轼 %}\n丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。\n明月几时有？把酒问青天。\n{% endpoem %}\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n#### 时间轴样式\n\n{% tabs 时间轴样式%}\n\n<!-- tab 渲染效果-->\n\n{% note blue no-icon %}\n\n{% timeline 时间轴样式,blue %}\n\n<!-- timeline 2020-07-24 [2.6.6 -> 3.0](https://github.com/volantis-x/hexo-theme-volantis/releases) -->\n\n1. 如果有 `hexo-lazyload-image` 插件，需要删除并重新安装最新版本，设置 `lazyload.isSPA: true`。\n2. 2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 `use_cdn: true` 则需要删除。\n3. 2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。\n4. 2.x 版本的置顶 `top: true` 改为了 `pin: true`，并且同样适用于 `layout: page` 的页面。\n5. 如果使用了 `hexo-offline` 插件，建议卸载，3.0 版本默认开启了 pjax 服务。\n\n<!-- endtimeline -->\n\n<!-- timeline 2020-05-15 [2.6.3 -> 2.6.6](https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6) -->\n\n不需要额外处理。\n\n<!-- endtimeline -->\n\n<!-- timeline 2020-04-20 [2.6.2 -> 2.6.3](https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3) -->\n\n1. 全局搜索 `seotitle` 并替换为 `seo_title`。\n2. group 组件的索引规则有变，使用 group 组件的文章内，`group: group_name` 对应的组件名必须是 `group_name`。\n3. group 组件的列表名优先显示文章的 `short_title` 其次是 `title`。\n\n<!-- endtimeline -->\n\n<div class=\"gallery-group-main\">\n{% galleryGroup 宗门合影 2023-10-23 '/gallery/MC/' https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202310261501300.jpg %}\n</div>\n\n\n{% endtimeline %}\n\n{% endnote %}\n\n<!-- endtab -->\n\n<!-- tab 源码示例-->\n\n```\n{% note blue no-icon %}\n\n{% timeline 时间轴样式,blue %}\n\n<!-- timeline 2020-07-24 [2.6.6 -> 3.0](https://github.com/volantis-x/hexo-theme-volantis/releases) -->\n\n1. 如果有 `hexo-lazyload-image` 插件，需要删除并重新安装最新版本，设置 `lazyload.isSPA: true`。\n2. 2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 `use_cdn: true` 则需要删除。\n3. 2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。\n4. 2.x 版本的置顶 `top: true` 改为了 `pin: true`，并且同样适用于 `layout: page` 的页面。\n5. 如果使用了 `hexo-offline` 插件，建议卸载，3.0 版本默认开启了 pjax 服务。\n\n<!-- endtimeline -->\n\n<!-- timeline 2020-05-15 [2.6.3 -> 2.6.6](https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6) -->\n\n不需要额外处理。\n\n<!-- endtimeline -->\n\n<!-- timeline 2020-04-20 [2.6.2 -> 2.6.3](https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3) -->\n\n1. 全局搜索 `seotitle` 并替换为 `seo_title`。\n2. group 组件的索引规则有变，使用 group 组件的文章内，`group: group_name` 对应的组件名必须是 `group_name`。\n3. group 组件的列表名优先显示文章的 `short_title` 其次是 `title`。\n\n<!-- endtimeline -->\n\n<div class=\"gallery-group-main\">\n{% galleryGroup 宗门合影 2023-10-23 '/gallery/MC/' https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202310261501300.jpg %}\n</div>\n\n{% endtimeline %}\n\n{% endnote %}\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n\n\n","source":"_posts/MarkDown.md","raw":"---\ntitle: MarkDown\ndata: 2024-7-8 19:52:54\nupdated: 2024-7-8\ntags: \n    - MarkDown\n    - Templatet \ncategories: Comment\ndescription: MarkDown语法模板\ncover: https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202403210421347.png\n---\n\n# MarkDown\n\n## Front Matter模板\n\n[基于Hexo和Butterfly创建个人技术博客，(10) 使用Butterfly的Tags Plugin插件增强博客文章内容和视觉表现力_hexo+butterfly创建分类目录-CSDN博客](https://blog.csdn.net/liudonglovehemin/article/details/131095922)\n\n```\ntitle: \ndata: 2024-03-18\ntags: \ncategories: \ndescription:\ncover: \ntop_img:\ncomments: \nkeywords: \naside: \ntoc: \nswiper_index: 2\n\n\ntitle: 文章标题\nauthor: 作者名\ndata: 2024-03-18\nupdated: 更新日期\ntags: \n\t\t- 标签1\n\t\t- 标签2\ncategories: 分类\nreward: 打赏（true/false）\ndescription: 描述\ncover: 封面\ntop_img: 顶部图片\ncomments: 评论（true/flase）\nkeywords: 关键字\naside: 侧边栏显示\ntoc: 文章目录\nswiper_index: 优先顺序\n\ntype : 页面类型\n\n\n```\n\n## Markdown基本语法\n\n### butterfly标签外挂\n\n#### 行内文本\n\n{% tabs 行内文本%}\n\n<!-- tab 渲染效果-->\n\n1. 带 {% u 下划线 %} 的文本\n2. 带 {% emp 着重号 %} 的文本\n3. 带 {% wavy 波浪线 %} 的文本\n4. 带 {% del 删除线 %} 的文本\n5. 键盘样式的文本 {% kbd command %} + {% kbd D %}\n6. 密码样式的文本：{% psw 这里没有验证码 %}\n\n- 彩色文字\n  在一段话中方便插入各种颜色的标签，包括：{% span red, 红色 %}、{% span yellow, 黄色 %}、{% span green, 绿色 %}、{% span cyan, 青色 %}、{% span blue, 蓝色 %}、{% span gray, 灰色 %}。\n- 超大号文字\n  文档「开始」页面中的标题部分就是超大号文字。\n  {% span center logo large, Volantis %}\n  {% span center small, A Wonderful Theme for Hexo %}\n\n<!-- endtab -->\n\n<!-- tab 源码示例-->\n\n```\n1. 带 {% u 下划线 %} 的文本\n2. 带 {% emp 着重号 %} 的文本\n3. 带 {% wavy 波浪线 %} 的文本\n4. 带 {% del 删除线 %} 的文本\n5. 键盘样式的文本 {% kbd command %} + {% kbd D %}\n6. 密码样式的文本：{% psw 这里没有验证码 %}\n- 彩色文字\n在一段话中方便插入各种颜色的标签，包括：{% span red, 红色 %}、{% span yellow, 黄色 %}、{% span green, 绿色 %}、{% span cyan, 青色 %}、{% span blue, 蓝色 %}、{% span gray, 灰色 %}。\n- 超大号文字\n文档「开始」页面中的标题部分就是超大号文字。\n{% span center logo large, Volantis %}\n{% span center small, A Wonderful Theme for Hexo %}\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n#### 分栏\n\n{% tabs  分栏 %}\n\n<!-- tab 展示效果-->\n\n{% tabs test %}\n<!-- tab 1-->\nThis is Tab 1\n<!-- endtab -->\n\n<!-- tab 2-->\n**This is Tab 2.**\n<!-- endtab -->\n\n<!-- tab -->\n**This is Tab 3.**\n<!-- endtab -->\n\n{% endtabs %}\n\n<!-- endtab -->\n\n<!-- tab 源码-->\n\n```\n{% tabs test %}\n<!-- tab 1-->\nThis is Tab 1\n<!-- endtab -->\n\n<!-- tab 2-->\n**This is Tab 2.**\n<!-- endtab -->\n\n<!-- tab -->\n**This is Tab 3.**\n<!-- endtab -->\n{% endtabs %}\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n#### 折叠框\n\n{% tabs 折叠框%}\n\n<!-- tab 渲染效果-->\n{% folding 查看图片测试 %}\n\n![](https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg)\n\n{% endfolding %}\n\n{% folding cyan open, 查看默认打开的折叠框 %}\n\n这是一个默认打开的折叠框。\n\n{% endfolding %}\n\n{% folding green, 查看代码测试 %}\n假装这里有代码块（代码块没法嵌套代码块）\n{% endfolding %}\n\n{% folding yellow, 查看列表测试 %}\n\n- haha\n- hehe\n\n{% endfolding %}\n\n{% folding red, 查看嵌套测试 %}\n\n{% folding blue, 查看嵌套测试2 %}\n\n{% folding 查看嵌套测试3 %}\n\nhahaha <span><img src='https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png' style='height:24px'></span>\n\n{% endfolding %}\n\n{% endfolding %}\n\n{% endfolding %}\n<!-- endtab -->\n\n<!-- tab 源码示例-->\n\n```\n{% folding 查看图片测试 %}\n\n![](https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg)\n\n{% endfolding %}\n\n{% folding cyan open, 查看默认打开的折叠框 %}\n\n这是一个默认打开的折叠框。\n\n{% endfolding %}\n\n{% folding green, 查看代码测试 %}\n假装这里有代码块（代码块没法嵌套代码块）\n{% endfolding %}\n\n{% folding yellow, 查看列表测试 %}\n\n- haha\n- hehe\n\n{% endfolding %}\n\n{% folding red, 查看嵌套测试 %}\n\n{% folding blue, 查看嵌套测试2 %}\n\n{% folding 查看嵌套测试3 %}\n\nhahaha <span><img src='https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png' style='height:24px'></span>\n\n{% endfolding %}\n\n{% endfolding %}\n\n{% endfolding %}\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n####  提示块标签\n\n{% tabs 提示块标签%}\n\n<!-- tab 渲染效果-->\n{% note default simple %}default 提示块标签{% endnote %}\n<!-- endtab -->\n\n<!-- tab 源码示例-->\n\n```\n{% note default simple %}default 提示块标签{% endnote %}\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n{% tabs 引用%}\n\n<!-- tab 渲染效果-->\n{% note pink 'fas fa-car-crash' modern %}小心开车 安全至上{% endnote %}\n<!-- endtab -->\n\n<!-- tab 源码示例-->\n\n```\n{% note pink 'fas fa-car-crash' modern %}小心开车 安全至上{% endnote %}\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n#### 上标标签\n\n{% tabs 上标标签%}\n\n<!-- tab 渲染效果-->\n{% tip success %}success{% endtip %}\n<!-- endtab -->\n\n<!-- tab 源码示例-->\n\n```\n{% tip success %}success{% endtip %}\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n#### 复选列表\n\n{% tabs 复选列表%}\n\n<!-- tab 渲染效果-->\n{% checkbox red, 支持自定义颜色 %}\n{% checkbox green checked, 绿色 + 默认选中 %}\n{% checkbox yellow checked, 黄色 + 默认选中 %}\n<!-- endtab -->\n\n<!-- tab 源码示例-->\n\n```\n{% checkbox red, 支持自定义颜色 %}\n{% checkbox green checked, 绿色 + 默认选中 %}\n{% checkbox yellow checked, 黄色 + 默认选中 %}\n```\n\n<!-- endtab -->\n{% endtabs %}\n\n#### 单选列表\n\n{% tabs 单选列表%}\n\n<!-- tab 渲染效果-->\n{% radio 纯文本测试 %}\n{% radio checked, 支持简单的 [markdown](https://guides.github.com/features/mastering-markdown/) 语法 %}\n{% radio red, 支持自定义颜色 %}\n<!-- endtab -->\n\n<!-- tab 源码示例-->\n\n```\n{% radio 纯文本测试 %}\n{% radio checked, 支持简单的 [markdown](https://guides.github.com/features/mastering-markdown/) 语法 %}\n{% radio red, 支持自定义颜色 %}\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n#### 记号笔注释\n\n{% tabs 记号笔注释%}\n\n<!-- tab 渲染效果-->\n最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的{% bubble 兄弟相邻选择器,\"例如 h1 + p {margin-top:50px;}\" %}，{% bubble flex布局,\"Flex 是 Flexible Box 的缩写，意为\"弹性布局\"，用来为盒状模型提供最大的灵活性\",\"#ec5830\" %}，{% bubble transform变换,\"transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。\",\"#1db675\" %}，animation的{% bubble 贝塞尔速度曲线,\"贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋\",\"#de4489\" %}写法，还有今天刚看到的{% bubble clip-path,\"clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。\",\"#868fd7\" %}属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。\n<!-- endtab -->\n\n<!-- tab 源码示例-->\n\n```\n最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的{% bubble 兄弟相邻选择器,\"例如 h1 + p {margin-top:50px;}\" %}，{% bubble flex布局,\"Flex 是 Flexible Box 的缩写，意为\"弹性布局\"，用来为盒状模型提供最大的灵活性\",\"#ec5830\" %}，{% bubble transform变换,\"transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。\",\"#1db675\" %}，animation的{% bubble 贝塞尔速度曲线,\"贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋\",\"#de4489\" %}写法，还有今天刚看到的{% bubble clip-path,\"clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。\",\"#868fd7\" %}属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n#### 链接卡片\n\n{% tabs 链接卡片%}\n\n<!-- tab 渲染效果-->\n{% link 糖果屋教程贴, https://akilar.top/posts/615e2dec/, https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico %}\n<!-- endtab -->\n\n<!-- tab 源码示例-->\n\n```\n{% link 糖果屋教程贴, https://akilar.top/posts/615e2dec/, https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico %}\n```\n\n<!-- endtab -->\n{% endtabs %}\n\n#### 网站卡片\n\n{% tabs 网站卡片%}\n\n<!-- tab 渲染效果-->\n\n{% sitegroup %}\n{% site xaoxuu, url=https://xaoxuu.com, screenshot=https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg, avatar=https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/avatar/avatar.png, description=简约风格 %}\n{% site inkss, url=https://inkss.cn, screenshot=https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg, avatar=https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg, description=这是一段关于这个网站的描述文字 %}\n{% site MHuiG, url=https://blog.mhuig.top, screenshot=https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png, avatar=https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png, description=这是一段关于这个网站的描述文字 %}\n{% site Colsrch, url=https://colsrch.top, screenshot=https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png, avatar=https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg, description=这是一段关于这个网站的描述文字 %}\n{% site Linhk1606, url=https://linhk1606.github.io, screenshot=https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png, avatar=https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png, description=这是一段关于这个网站的描述文字 %}\n{% endsitegroup %}\n\n<!-- endtab -->\n\n<!-- tab 源码示例-->\n\n```\n{% sitegroup %}\n{% site xaoxuu, url=https://xaoxuu.com, screenshot=https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg, avatar=https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/avatar/avatar.png, description=简约风格 %}\n{% site inkss, url=https://inkss.cn, screenshot=https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg, avatar=https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg, description=这是一段关于这个网站的描述文字 %}\n{% site MHuiG, url=https://blog.mhuig.top, screenshot=https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png, avatar=https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png, description=这是一段关于这个网站的描述文字 %}\n{% site Colsrch, url=https://colsrch.top, screenshot=https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png, avatar=https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg, description=这是一段关于这个网站的描述文字 %}\n{% site Linhk1606, url=https://linhk1606.github.io, screenshot=https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png, avatar=https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png, description=这是一段关于这个网站的描述文字 %}\n{% endsitegroup %}\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n#### 音频\n\n{% tabs 音频%}\n\n<!-- tab 渲染效果-->\n\n{% audio https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3 %}\n\n<!-- endtab -->\n\n<!-- tab 源码示例-->\n\n```\n{% audio https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3 %}\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n#### 视频\n\n{% tabs 视频%}\n\n<!-- tab 渲染效果-->\n\n{% videos %}\n{% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %}\n{% video https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404170857702.mp4 %}\n{% video https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/CartoonDance.mp4 %}\n{% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %}\n{% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %}\n{% endvideos %}\n\n<!-- endtab -->\n\n<!-- tab 源码示例-->\n\n```\n{% videos, 2 %}\n{% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %}\n{% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %}\n{% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %}\n{% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %}\n{% endvideos %}\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n#### 相册图库\n\n{% tabs 相册图库%}\n\n<!-- tab 渲染效果-->\n\n<div class=\"gallery-group-main\">\n{% galleryGroup name description link img-url %}\n{% galleryGroup name description link img-url %}\n{% galleryGroup name description link img-url %}\n</div>\n\n\n<!-- endtab -->\n\n<!-- tab 源码示例-->\n\n```\n<div class=\"gallery-group-main\">\n{% galleryGroup name description link img-url %}\n{% galleryGroup name description link img-url %}\n{% galleryGroup name description link img-url %}\n</div>\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n#### 展示画廊Gallery\n\n{% tabs 展示画廊Gallery %}\n\n<!-- tab 渲染效果-->\n\n{% gallery %}\n![](https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg)\n![](https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg)\n{% endgallery %}<!-- endtab -->\n\n<!-- tab 源码示例-->\n\n```\n{% gallery %}\n![](https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg)\n![](https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg)\n{% endgallery %}\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n#### 按钮\n\n{% tabs 按钮%}\n\n<!-- tab 渲染效果-->\n{% btns circle grid5 %}\n{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}\n{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}\n{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}\n{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}\n{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}\n{% endbtns %}\n<!-- endtab -->\n\n<!-- tab 源码示例-->\n\n```\n{% btns circle grid5 %}\n{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}\n{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}\n{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}\n{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}\n{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}\n{% endbtns %}\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n#### 诗词标签\n\n{% tabs 诗词标签%}\n\n<!-- tab 渲染效果-->\n{% poem 水调歌头,苏轼 %}\n丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。\n明月几时有？把酒问青天。\n{% endpoem %}\n<!-- endtab -->\n\n<!-- tab 源码示例-->\n\n```\n{% poem 水调歌头,苏轼 %}\n丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。\n明月几时有？把酒问青天。\n{% endpoem %}\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n#### 时间轴样式\n\n{% tabs 时间轴样式%}\n\n<!-- tab 渲染效果-->\n\n{% note blue no-icon %}\n\n{% timeline 时间轴样式,blue %}\n\n<!-- timeline 2020-07-24 [2.6.6 -> 3.0](https://github.com/volantis-x/hexo-theme-volantis/releases) -->\n\n1. 如果有 `hexo-lazyload-image` 插件，需要删除并重新安装最新版本，设置 `lazyload.isSPA: true`。\n2. 2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 `use_cdn: true` 则需要删除。\n3. 2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。\n4. 2.x 版本的置顶 `top: true` 改为了 `pin: true`，并且同样适用于 `layout: page` 的页面。\n5. 如果使用了 `hexo-offline` 插件，建议卸载，3.0 版本默认开启了 pjax 服务。\n\n<!-- endtimeline -->\n\n<!-- timeline 2020-05-15 [2.6.3 -> 2.6.6](https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6) -->\n\n不需要额外处理。\n\n<!-- endtimeline -->\n\n<!-- timeline 2020-04-20 [2.6.2 -> 2.6.3](https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3) -->\n\n1. 全局搜索 `seotitle` 并替换为 `seo_title`。\n2. group 组件的索引规则有变，使用 group 组件的文章内，`group: group_name` 对应的组件名必须是 `group_name`。\n3. group 组件的列表名优先显示文章的 `short_title` 其次是 `title`。\n\n<!-- endtimeline -->\n\n<div class=\"gallery-group-main\">\n{% galleryGroup 宗门合影 2023-10-23 '/gallery/MC/' https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202310261501300.jpg %}\n</div>\n\n\n{% endtimeline %}\n\n{% endnote %}\n\n<!-- endtab -->\n\n<!-- tab 源码示例-->\n\n```\n{% note blue no-icon %}\n\n{% timeline 时间轴样式,blue %}\n\n<!-- timeline 2020-07-24 [2.6.6 -> 3.0](https://github.com/volantis-x/hexo-theme-volantis/releases) -->\n\n1. 如果有 `hexo-lazyload-image` 插件，需要删除并重新安装最新版本，设置 `lazyload.isSPA: true`。\n2. 2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 `use_cdn: true` 则需要删除。\n3. 2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。\n4. 2.x 版本的置顶 `top: true` 改为了 `pin: true`，并且同样适用于 `layout: page` 的页面。\n5. 如果使用了 `hexo-offline` 插件，建议卸载，3.0 版本默认开启了 pjax 服务。\n\n<!-- endtimeline -->\n\n<!-- timeline 2020-05-15 [2.6.3 -> 2.6.6](https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6) -->\n\n不需要额外处理。\n\n<!-- endtimeline -->\n\n<!-- timeline 2020-04-20 [2.6.2 -> 2.6.3](https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3) -->\n\n1. 全局搜索 `seotitle` 并替换为 `seo_title`。\n2. group 组件的索引规则有变，使用 group 组件的文章内，`group: group_name` 对应的组件名必须是 `group_name`。\n3. group 组件的列表名优先显示文章的 `short_title` 其次是 `title`。\n\n<!-- endtimeline -->\n\n<div class=\"gallery-group-main\">\n{% galleryGroup 宗门合影 2023-10-23 '/gallery/MC/' https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202310261501300.jpg %}\n</div>\n\n{% endtimeline %}\n\n{% endnote %}\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n\n\n","slug":"MarkDown","published":1,"date":"2024-07-11T06:04:06.721Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clyh2ogn8000be0dsd5x81f6g","content":"<h1 id=\"MarkDown\"><a href=\"#MarkDown\" class=\"headerlink\" title=\"MarkDown\"></a>MarkDown</h1><h2 id=\"Front-Matter模板\"><a href=\"#Front-Matter模板\" class=\"headerlink\" title=\"Front Matter模板\"></a>Front Matter模板</h2><p><a href=\"https://blog.csdn.net/liudonglovehemin/article/details/131095922\">基于Hexo和Butterfly创建个人技术博客，(10) 使用Butterfly的Tags Plugin插件增强博客文章内容和视觉表现力_hexo+butterfly创建分类目录-CSDN博客</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: </span><br><span class=\"line\">data: 2024-03-18</span><br><span class=\"line\">tags: </span><br><span class=\"line\">categories: </span><br><span class=\"line\">description:</span><br><span class=\"line\">cover: </span><br><span class=\"line\">top_img:</span><br><span class=\"line\">comments: </span><br><span class=\"line\">keywords: </span><br><span class=\"line\">aside: </span><br><span class=\"line\">toc: </span><br><span class=\"line\">swiper_index: 2</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">title: 文章标题</span><br><span class=\"line\">author: 作者名</span><br><span class=\"line\">data: 2024-03-18</span><br><span class=\"line\">updated: 更新日期</span><br><span class=\"line\">tags: </span><br><span class=\"line\">\t\t- 标签1</span><br><span class=\"line\">\t\t- 标签2</span><br><span class=\"line\">categories: 分类</span><br><span class=\"line\">reward: 打赏（true/false）</span><br><span class=\"line\">description: 描述</span><br><span class=\"line\">cover: 封面</span><br><span class=\"line\">top_img: 顶部图片</span><br><span class=\"line\">comments: 评论（true/flase）</span><br><span class=\"line\">keywords: 关键字</span><br><span class=\"line\">aside: 侧边栏显示</span><br><span class=\"line\">toc: 文章目录</span><br><span class=\"line\">swiper_index: 优先顺序</span><br><span class=\"line\"></span><br><span class=\"line\">type : 页面类型</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"Markdown基本语法\"><a href=\"#Markdown基本语法\" class=\"headerlink\" title=\"Markdown基本语法\"></a>Markdown基本语法</h2><h3 id=\"butterfly标签外挂\"><a href=\"#butterfly标签外挂\" class=\"headerlink\" title=\"butterfly标签外挂\"></a>butterfly标签外挂</h3><h4 id=\"行内文本\"><a href=\"#行内文本\" class=\"headerlink\" title=\"行内文本\"></a>行内文本</h4><div class=\"tabs\" id=\"行内文本\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"行内文本-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"行内文本-2\">源码示例</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"行内文本-1\"><ol>\n<li>带 <u>下划线</u> 的文本</li>\n<li>带 <emp>着重号</emp> 的文本</li>\n<li>带 <wavy>波浪线</wavy> 的文本</li>\n<li>带 <del>删除线</del> 的文本</li>\n<li>键盘样式的文本 <kbd>command</kbd> + <kbd>D</kbd></li>\n<li>密码样式的文本：<psw>这里没有验证码</psw></li>\n</ol>\n<ul>\n<li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<span class='p red'>红色</span>、<span class='p yellow'>黄色</span>、<span class='p green'>绿色</span>、<span class='p cyan'>青色</span>、<span class='p blue'>蓝色</span>、<span class='p gray'>灰色</span>。</li>\n<li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<br><span class='p center logo large'>Volantis</span><br><span class='p center small'>A Wonderful Theme for Hexo</span></li>\n</ul></div><div class=\"tab-item-content\" id=\"行内文本-2\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 带 &#123;% u 下划线 %&#125; 的文本</span><br><span class=\"line\">2. 带 &#123;% emp 着重号 %&#125; 的文本</span><br><span class=\"line\">3. 带 &#123;% wavy 波浪线 %&#125; 的文本</span><br><span class=\"line\">4. 带 &#123;% del 删除线 %&#125; 的文本</span><br><span class=\"line\">5. 键盘样式的文本 &#123;% kbd command %&#125; + &#123;% kbd D %&#125;</span><br><span class=\"line\">6. 密码样式的文本：&#123;% psw 这里没有验证码 %&#125;</span><br><span class=\"line\">- 彩色文字</span><br><span class=\"line\">在一段话中方便插入各种颜色的标签，包括：&#123;% span red, 红色 %&#125;、&#123;% span yellow, 黄色 %&#125;、&#123;% span green, 绿色 %&#125;、&#123;% span cyan, 青色 %&#125;、&#123;% span blue, 蓝色 %&#125;、&#123;% span gray, 灰色 %&#125;。</span><br><span class=\"line\">- 超大号文字</span><br><span class=\"line\">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class=\"line\">&#123;% span center logo large, Volantis %&#125;</span><br><span class=\"line\">&#123;% span center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h4 id=\"分栏\"><a href=\"#分栏\" class=\"headerlink\" title=\"分栏\"></a>分栏</h4><div class=\"tabs\" id=\"分栏\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"分栏-1\">展示效果</button><button type=\"button\" class=\"tab \" data-href=\"分栏-2\">源码</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"分栏-1\"><div class=\"tabs\" id=\"test\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"test-1\">1</button><button type=\"button\" class=\"tab \" data-href=\"test-2\">2</button><button type=\"button\" class=\"tab \" data-href=\"test-3\">test 3</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"test-1\"><p>This is Tab 1</p></div><div class=\"tab-item-content\" id=\"test-2\"><p><strong>This is Tab 2.</strong></p></div><div class=\"tab-item-content\" id=\"test-3\"><p><strong>This is Tab 3.</strong></p></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div><div class=\"tab-item-content\" id=\"分栏-2\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% tabs test %&#125;</span><br><span class=\"line\">&lt;!-- tab 1--&gt;</span><br><span class=\"line\">This is Tab 1</span><br><span class=\"line\">&lt;!-- endtab --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- tab 2--&gt;</span><br><span class=\"line\">**This is Tab 2.**</span><br><span class=\"line\">&lt;!-- endtab --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- tab --&gt;</span><br><span class=\"line\">**This is Tab 3.**</span><br><span class=\"line\">&lt;!-- endtab --&gt;</span><br><span class=\"line\">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h4 id=\"折叠框\"><a href=\"#折叠框\" class=\"headerlink\" title=\"折叠框\"></a>折叠框</h4><div class=\"tabs\" id=\"折叠框\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"折叠框-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"折叠框-2\">源码示例</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"折叠框-1\"><details class=\"folding-tag\" ><summary> 查看图片测试 </summary>\n              <div class='content'>\n              <p><img src=\"https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg\" alt=\"\"></p>\n              </div>\n            </details>\n\n<details class=\"folding-tag\" cyan open><summary> 查看默认打开的折叠框 </summary>\n              <div class='content'>\n              <p>这是一个默认打开的折叠框。</p>\n              </div>\n            </details>\n\n<details class=\"folding-tag\" green><summary> 查看代码测试 </summary>\n              <div class='content'>\n              <p>假装这里有代码块（代码块没法嵌套代码块）</p>\n              </div>\n            </details>\n\n<details class=\"folding-tag\" yellow><summary> 查看列表测试 </summary>\n              <div class='content'>\n              <ul><li>haha</li><li>hehe</li></ul>\n              </div>\n            </details>\n\n<details class=\"folding-tag\" red><summary> 查看嵌套测试 </summary>\n              <div class='content'>\n              <details class=\"folding-tag\" blue><summary> 查看嵌套测试2 </summary>              <div class='content'>              <details class=\"folding-tag\" ><summary> 查看嵌套测试3 </summary>              <div class='content'>              <p>hahaha <span><img src='https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png' style='height:24px'></span></p>              </div>            </details>              </div>            </details>\n              </div>\n            </details></div><div class=\"tab-item-content\" id=\"折叠框-2\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% folding 查看图片测试 %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">![](https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg)</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% endfolding %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% folding cyan open, 查看默认打开的折叠框 %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">这是一个默认打开的折叠框。</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% endfolding %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% folding green, 查看代码测试 %&#125;</span><br><span class=\"line\">假装这里有代码块（代码块没法嵌套代码块）</span><br><span class=\"line\">&#123;% endfolding %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% folding yellow, 查看列表测试 %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- haha</span><br><span class=\"line\">- hehe</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% endfolding %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% folding red, 查看嵌套测试 %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% folding blue, 查看嵌套测试2 %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% folding 查看嵌套测试3 %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">hahaha &lt;span&gt;&lt;img src=&#x27;https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png&#x27; style=&#x27;height:24px&#x27;&gt;&lt;/span&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% endfolding %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% endfolding %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h4 id=\"提示块标签\"><a href=\"#提示块标签\" class=\"headerlink\" title=\"提示块标签\"></a>提示块标签</h4><div class=\"tabs\" id=\"提示块标签\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"提示块标签-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"提示块标签-2\">源码示例</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"提示块标签-1\"><div class=\"note default simple\"><p>default 提示块标签</p>\n</div></div><div class=\"tab-item-content\" id=\"提示块标签-2\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% note default simple %&#125;default 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<div class=\"tabs\" id=\"引用\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"引用-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"引用-2\">源码示例</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"引用-1\"><div class=\"note pink icon-padding modern\"><i class=\"note-icon fas fa-car-crash\"></i><p>小心开车 安全至上</p>\n</div></div><div class=\"tab-item-content\" id=\"引用-2\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% note pink &#x27;fas fa-car-crash&#x27; modern %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h4 id=\"上标标签\"><a href=\"#上标标签\" class=\"headerlink\" title=\"上标标签\"></a>上标标签</h4><div class=\"tabs\" id=\"上标标签\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"上标标签-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"上标标签-2\">源码示例</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"上标标签-1\"><div class=\"tip success\"><p>success</p>\n</div></div><div class=\"tab-item-content\" id=\"上标标签-2\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% tip success %&#125;success&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h4 id=\"复选列表\"><a href=\"#复选列表\" class=\"headerlink\" title=\"复选列表\"></a>复选列表</h4><div class=\"tabs\" id=\"复选列表\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"复选列表-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"复选列表-2\">源码示例</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"复选列表-1\"><div class='checkbox red'><input type=\"checkbox\" />\n            <p>支持自定义颜色</p>\n            </div>\n<div class='checkbox green checked'><input type=\"checkbox\" checked=\"checked\"/>\n            <p>绿色 + 默认选中</p>\n            </div>\n<div class='checkbox yellow checked'><input type=\"checkbox\" checked=\"checked\"/>\n            <p>黄色 + 默认选中</p>\n            </div></div><div class=\"tab-item-content\" id=\"复选列表-2\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% checkbox red, 支持自定义颜色 %&#125;</span><br><span class=\"line\">&#123;% checkbox green checked, 绿色 + 默认选中 %&#125;</span><br><span class=\"line\">&#123;% checkbox yellow checked, 黄色 + 默认选中 %&#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h4 id=\"单选列表\"><a href=\"#单选列表\" class=\"headerlink\" title=\"单选列表\"></a>单选列表</h4><div class=\"tabs\" id=\"单选列表\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"单选列表-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"单选列表-2\">源码示例</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"单选列表-1\"><div class='checkbox'><input type=\"radio\" />\n            <p>纯文本测试</p>\n            </div>\n<div class='checkbox checked'><input type=\"radio\" checked=\"checked\"/>\n            <p>支持简单的 <a href=\"https://guides.github.com/features/mastering-markdown/\">markdown</a> 语法</p>\n            </div>\n<div class='checkbox red'><input type=\"radio\" />\n            <p>支持自定义颜色</p>\n            </div></div><div class=\"tab-item-content\" id=\"单选列表-2\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% radio 纯文本测试 %&#125;</span><br><span class=\"line\">&#123;% radio checked, 支持简单的 [markdown](https://guides.github.com/features/mastering-markdown/) 语法 %&#125;</span><br><span class=\"line\">&#123;% radio red, 支持自定义颜色 %&#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h4 id=\"记号笔注释\"><a href=\"#记号笔注释\" class=\"headerlink\" title=\"记号笔注释\"></a>记号笔注释</h4><div class=\"tabs\" id=\"记号笔注释\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"记号笔注释-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"记号笔注释-2\">源码示例</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"记号笔注释-1\"><p>最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的<span class=\"bubble-content\">兄弟相邻选择器</span><span class=\"bubble-notation\"><span class=\"bubble-item\" style=\"background-color:#71a4e3;\">例如 h1 + p {margin-top:50px;}</span>&lt;/span&gt;，<span class=\"bubble-content\">flex布局</span><span class=\"bubble-notation\"><span class=\"bubble-item\" style=\"background-color:#ec5830;\">Flex 是 Flexible Box 的缩写，意为弹性布局”，用来为盒状模型提供最大的灵活性”</span>&lt;/span&gt;，<span class=\"bubble-content\">transform变换</span><span class=\"bubble-notation\"><span class=\"bubble-item\" style=\"background-color:#1db675;\">transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。</span>&lt;/span&gt;，animation的<span class=\"bubble-content\">贝塞尔速度曲线</span><span class=\"bubble-notation\"><span class=\"bubble-item\" style=\"background-color:#de4489;\">贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋</span>&lt;/span&gt;写法，还有今天刚看到的<span class=\"bubble-content\">clip-path</span><span class=\"bubble-notation\"><span class=\"bubble-item\" style=\"background-color:#868fd7;\">clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。</span>&lt;/span&gt;属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。</p></div><div class=\"tab-item-content\" id=\"记号笔注释-2\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的&#123;% bubble 兄弟相邻选择器,&quot;例如 h1 + p &#123;margin-top:50px;&#125;&quot; %&#125;，&#123;% bubble flex布局,&quot;Flex 是 Flexible Box 的缩写，意为&quot;弹性布局&quot;，用来为盒状模型提供最大的灵活性&quot;,&quot;#ec5830&quot; %&#125;，&#123;% bubble transform变换,&quot;transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。&quot;,&quot;#1db675&quot; %&#125;，animation的&#123;% bubble 贝塞尔速度曲线,&quot;贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋&quot;,&quot;#de4489&quot; %&#125;写法，还有今天刚看到的&#123;% bubble clip-path,&quot;clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。&quot;,&quot;#868fd7&quot; %&#125;属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h4 id=\"链接卡片\"><a href=\"#链接卡片\" class=\"headerlink\" title=\"链接卡片\"></a>链接卡片</h4><div class=\"tabs\" id=\"链接卡片\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"链接卡片-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"链接卡片-2\">源码示例</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"链接卡片-1\"><div class=\"tag link\"><a class=\"link-card\" title=\"糖果屋教程贴\" href=\"https://akilar.top/posts/615e2dec/\"><div class=\"left\"><img src=\"https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">糖果屋教程贴</p><p class=\"url\">https://akilar.top/posts/615e2dec/</p></div></a></div></div><div class=\"tab-item-content\" id=\"链接卡片-2\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% link 糖果屋教程贴, https://akilar.top/posts/615e2dec/, https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico %&#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h4 id=\"网站卡片\"><a href=\"#网站卡片\" class=\"headerlink\" title=\"网站卡片\"></a>网站卡片</h4><div class=\"tabs\" id=\"网站卡片\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"网站卡片-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"网站卡片-2\">源码示例</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"网站卡片-1\"><div class=\"site-card-group\"><a class=\"site-card\" href=\"https://xaoxuu.com\"><div class=\"img\"><img src=\"https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg\"/></div><div class=\"info\"><img src=\"https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/avatar/avatar.png\"/><span class=\"title\">xaoxuu</span><span class=\"desc\">简约风格</span></div></a>\n<a class=\"site-card\" href=\"https://inkss.cn\"><div class=\"img\"><img src=\"https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg\"/></div><div class=\"info\"><img src=\"https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg\"/><span class=\"title\">inkss</span><span class=\"desc\">这是一段关于这个网站的描述文字</span></div></a>\n<a class=\"site-card\" href=\"https://blog.mhuig.top\"><div class=\"img\"><img src=\"https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png\"/></div><div class=\"info\"><img src=\"https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png\"/><span class=\"title\">MHuiG</span><span class=\"desc\">这是一段关于这个网站的描述文字</span></div></a>\n<a class=\"site-card\" href=\"https://colsrch.top\"><div class=\"img\"><img src=\"https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png\"/></div><div class=\"info\"><img src=\"https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg\"/><span class=\"title\">Colsrch</span><span class=\"desc\">这是一段关于这个网站的描述文字</span></div></a>\n<a class=\"site-card\" href=\"https://linhk1606.github.io\"><div class=\"img\"><img src=\"https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png\"/></div><div class=\"info\"><img src=\"https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png\"/><span class=\"title\">Linhk1606</span><span class=\"desc\">这是一段关于这个网站的描述文字</span></div></a></div></div><div class=\"tab-item-content\" id=\"网站卡片-2\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% sitegroup %&#125;</span><br><span class=\"line\">&#123;% site xaoxuu, url=https://xaoxuu.com, screenshot=https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg, avatar=https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/avatar/avatar.png, description=简约风格 %&#125;</span><br><span class=\"line\">&#123;% site inkss, url=https://inkss.cn, screenshot=https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg, avatar=https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class=\"line\">&#123;% site MHuiG, url=https://blog.mhuig.top, screenshot=https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png, avatar=https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class=\"line\">&#123;% site Colsrch, url=https://colsrch.top, screenshot=https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png, avatar=https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class=\"line\">&#123;% site Linhk1606, url=https://linhk1606.github.io, screenshot=https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png, avatar=https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class=\"line\">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h4 id=\"音频\"><a href=\"#音频\" class=\"headerlink\" title=\"音频\"></a>音频</h4><div class=\"tabs\" id=\"音频\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"音频-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"音频-2\">源码示例</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"音频-1\"><div class=\"audio\"><audio controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div></div><div class=\"tab-item-content\" id=\"音频-2\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% audio https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3 %&#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h4 id=\"视频\"><a href=\"#视频\" class=\"headerlink\" title=\"视频\"></a>视频</h4><div class=\"tabs\" id=\"视频\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"视频-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"视频-2\">源码示例</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"视频-1\"><div class=\"videos\"><div class=\"video\"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div>\n<div class=\"video\"><video controls preload><source src='https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404170857702.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>\n<div class=\"video\"><video controls preload><source src='https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/CartoonDance.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>\n<div class=\"video\"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div>\n<div class=\"video\"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div></div><div class=\"tab-item-content\" id=\"视频-2\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% videos, 2 %&#125;</span><br><span class=\"line\">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %&#125;</span><br><span class=\"line\">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %&#125;</span><br><span class=\"line\">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %&#125;</span><br><span class=\"line\">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %&#125;</span><br><span class=\"line\">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h4 id=\"相册图库\"><a href=\"#相册图库\" class=\"headerlink\" title=\"相册图库\"></a>相册图库</h4><div class=\"tabs\" id=\"相册图库\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"相册图库-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"相册图库-2\">源码示例</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"相册图库-1\"><div class=\"gallery-group-main\">\n<figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src='/img-url' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">name</div>\n  <p>description</p>\n  <a href='/link'></a>\n  </figcaption>\n  </figure>\n\n<figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src='/img-url' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">name</div>\n  <p>description</p>\n  <a href='/link'></a>\n  </figcaption>\n  </figure>\n\n<figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src='/img-url' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">name</div>\n  <p>description</p>\n  <a href='/link'></a>\n  </figcaption>\n  </figure>\n\n</div></div><div class=\"tab-item-content\" id=\"相册图库-2\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div class=&quot;gallery-group-main&quot;&gt;</span><br><span class=\"line\">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class=\"line\">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class=\"line\">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h4 id=\"展示画廊Gallery\"><a href=\"#展示画廊Gallery\" class=\"headerlink\" title=\"展示画廊Gallery\"></a>展示画廊Gallery</h4><div class=\"tabs\" id=\"展示画廊gallery\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"展示画廊gallery-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"展示画廊gallery-2\">源码示例</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"展示画廊gallery-1\"><div class=\"gallery-container\" data-type=\"data\" data-button=\"\">\n      <div class=\"gallery-data\">[{\"url\":\"https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg\",\"alt\":\"\"},{\"url\":\"https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg\",\"alt\":\"\"}]</div>\n      <div class=\"gallery-items\">\n      </div>\n    </div></div><div class=\"tab-item-content\" id=\"展示画廊gallery-2\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% gallery %&#125;</span><br><span class=\"line\">![](https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg)</span><br><span class=\"line\">![](https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg)</span><br><span class=\"line\">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h4 id=\"按钮\"><a href=\"#按钮\" class=\"headerlink\" title=\"按钮\"></a>按钮</h4><div class=\"tabs\" id=\"按钮\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"按钮-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"按钮-2\">源码示例</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"按钮-1\"><div class=\"btns circle grid5\">\n            <a class=\"button\" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a>\n<a class=\"button\" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a>\n<a class=\"button\" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a>\n<a class=\"button\" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a>\n<a class=\"button\" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a>\n          </div></div><div class=\"tab-item-content\" id=\"按钮-2\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% btns circle grid5 %&#125;</span><br><span class=\"line\">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class=\"line\">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class=\"line\">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class=\"line\">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class=\"line\">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class=\"line\">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h4 id=\"诗词标签\"><a href=\"#诗词标签\" class=\"headerlink\" title=\"诗词标签\"></a>诗词标签</h4><div class=\"tabs\" id=\"诗词标签\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"诗词标签-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"诗词标签-2\">源码示例</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"诗词标签-1\"><div class='poem'><div class='poem-title'>水调歌头</div><div class='poem-author'>苏轼</div><p>丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。<br>明月几时有？把酒问青天。</p>\n</div></div><div class=\"tab-item-content\" id=\"诗词标签-2\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% poem 水调歌头,苏轼 %&#125;</span><br><span class=\"line\">丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。</span><br><span class=\"line\">明月几时有？把酒问青天。</span><br><span class=\"line\">&#123;% endpoem %&#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h4 id=\"时间轴样式\"><a href=\"#时间轴样式\" class=\"headerlink\" title=\"时间轴样式\"></a>时间轴样式</h4><div class=\"tabs\" id=\"时间轴样式\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"时间轴样式-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"时间轴样式-2\">源码示例</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"时间轴样式-1\"><div class=\"note blue no-icon flat\"><div class=\"timeline blue\"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>时间轴样式</p>\n</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-07-24 <a href=\"https://github.com/volantis-x/hexo-theme-volantis/releases\">2.6.6 -&gt; 3.0</a></p>\n</div></div><div class='timeline-item-content'><ol>\n<li>如果有 <code>hexo-lazyload-image</code> 插件，需要删除并重新安装最新版本，设置 <code>lazyload.isSPA: true</code>。</li>\n<li>2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <code>use_cdn: true</code> 则需要删除。</li>\n<li>2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</li>\n<li>2.x 版本的置顶 <code>top: true</code> 改为了 <code>pin: true</code>，并且同样适用于 <code>layout: page</code> 的页面。</li>\n<li>如果使用了 <code>hexo-offline</code> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</li>\n</ol>\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-05-15 <a href=\"https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6\">2.6.3 -&gt; 2.6.6</a></p>\n</div></div><div class='timeline-item-content'><p>不需要额外处理。</p>\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-04-20 <a href=\"https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3\">2.6.2 -&gt; 2.6.3</a></p>\n</div></div><div class='timeline-item-content'><ol>\n<li>全局搜索 <code>seotitle</code> 并替换为 <code>seo_title</code>。</li>\n<li>group 组件的索引规则有变，使用 group 组件的文章内，<code>group: group_name</code> 对应的组件名必须是 <code>group_name</code>。</li>\n<li>group 组件的列表名优先显示文章的 <code>short_title</code> 其次是 <code>title</code>。</li>\n</ol>\n</div></div></div>\n</div></div><div class=\"tab-item-content\" id=\"时间轴样式-2\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% note blue no-icon %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% timeline 时间轴样式,blue %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- timeline 2020-07-24 [2.6.6 -&gt; 3.0](https://github.com/volantis-x/hexo-theme-volantis/releases) --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">1. 如果有 `hexo-lazyload-image` 插件，需要删除并重新安装最新版本，设置 `lazyload.isSPA: true`。</span><br><span class=\"line\">2. 2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 `use_cdn: true` 则需要删除。</span><br><span class=\"line\">3. 2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</span><br><span class=\"line\">4. 2.x 版本的置顶 `top: true` 改为了 `pin: true`，并且同样适用于 `layout: page` 的页面。</span><br><span class=\"line\">5. 如果使用了 `hexo-offline` 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- endtimeline --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- timeline 2020-05-15 [2.6.3 -&gt; 2.6.6](https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6) --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">不需要额外处理。</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- endtimeline --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- timeline 2020-04-20 [2.6.2 -&gt; 2.6.3](https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3) --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">1. 全局搜索 `seotitle` 并替换为 `seo_title`。</span><br><span class=\"line\">2. group 组件的索引规则有变，使用 group 组件的文章内，`group: group_name` 对应的组件名必须是 `group_name`。</span><br><span class=\"line\">3. group 组件的列表名优先显示文章的 `short_title` 其次是 `title`。</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- endtimeline --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;div class=&quot;gallery-group-main&quot;&gt;</span><br><span class=\"line\">&#123;% galleryGroup 宗门合影 2023-10-23 &#x27;/gallery/MC/&#x27; https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202310261501300.jpg %&#125;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% endtimeline %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"Vue","color":"#b8f0ae","icon":"https://img02.anheyu.com/adminuploads/1/2022/09/25/633001374747b.png"}]}],"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"}]}]}},"cover_type":"img","excerpt":"","more":"<h1 id=\"MarkDown\"><a href=\"#MarkDown\" class=\"headerlink\" title=\"MarkDown\"></a>MarkDown</h1><h2 id=\"Front-Matter模板\"><a href=\"#Front-Matter模板\" class=\"headerlink\" title=\"Front Matter模板\"></a>Front Matter模板</h2><p><a href=\"https://blog.csdn.net/liudonglovehemin/article/details/131095922\">基于Hexo和Butterfly创建个人技术博客，(10) 使用Butterfly的Tags Plugin插件增强博客文章内容和视觉表现力_hexo+butterfly创建分类目录-CSDN博客</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: </span><br><span class=\"line\">data: 2024-03-18</span><br><span class=\"line\">tags: </span><br><span class=\"line\">categories: </span><br><span class=\"line\">description:</span><br><span class=\"line\">cover: </span><br><span class=\"line\">top_img:</span><br><span class=\"line\">comments: </span><br><span class=\"line\">keywords: </span><br><span class=\"line\">aside: </span><br><span class=\"line\">toc: </span><br><span class=\"line\">swiper_index: 2</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">title: 文章标题</span><br><span class=\"line\">author: 作者名</span><br><span class=\"line\">data: 2024-03-18</span><br><span class=\"line\">updated: 更新日期</span><br><span class=\"line\">tags: </span><br><span class=\"line\">\t\t- 标签1</span><br><span class=\"line\">\t\t- 标签2</span><br><span class=\"line\">categories: 分类</span><br><span class=\"line\">reward: 打赏（true/false）</span><br><span class=\"line\">description: 描述</span><br><span class=\"line\">cover: 封面</span><br><span class=\"line\">top_img: 顶部图片</span><br><span class=\"line\">comments: 评论（true/flase）</span><br><span class=\"line\">keywords: 关键字</span><br><span class=\"line\">aside: 侧边栏显示</span><br><span class=\"line\">toc: 文章目录</span><br><span class=\"line\">swiper_index: 优先顺序</span><br><span class=\"line\"></span><br><span class=\"line\">type : 页面类型</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"Markdown基本语法\"><a href=\"#Markdown基本语法\" class=\"headerlink\" title=\"Markdown基本语法\"></a>Markdown基本语法</h2><h3 id=\"butterfly标签外挂\"><a href=\"#butterfly标签外挂\" class=\"headerlink\" title=\"butterfly标签外挂\"></a>butterfly标签外挂</h3><h4 id=\"行内文本\"><a href=\"#行内文本\" class=\"headerlink\" title=\"行内文本\"></a>行内文本</h4><div class=\"tabs\" id=\"行内文本\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"行内文本-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"行内文本-2\">源码示例</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"行内文本-1\"><ol>\n<li>带 <u>下划线</u> 的文本</li>\n<li>带 <emp>着重号</emp> 的文本</li>\n<li>带 <wavy>波浪线</wavy> 的文本</li>\n<li>带 <del>删除线</del> 的文本</li>\n<li>键盘样式的文本 <kbd>command</kbd> + <kbd>D</kbd></li>\n<li>密码样式的文本：<psw>这里没有验证码</psw></li>\n</ol>\n<ul>\n<li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<span class='p red'>红色</span>、<span class='p yellow'>黄色</span>、<span class='p green'>绿色</span>、<span class='p cyan'>青色</span>、<span class='p blue'>蓝色</span>、<span class='p gray'>灰色</span>。</li>\n<li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<br><span class='p center logo large'>Volantis</span><br><span class='p center small'>A Wonderful Theme for Hexo</span></li>\n</ul></div><div class=\"tab-item-content\" id=\"行内文本-2\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 带 &#123;% u 下划线 %&#125; 的文本</span><br><span class=\"line\">2. 带 &#123;% emp 着重号 %&#125; 的文本</span><br><span class=\"line\">3. 带 &#123;% wavy 波浪线 %&#125; 的文本</span><br><span class=\"line\">4. 带 &#123;% del 删除线 %&#125; 的文本</span><br><span class=\"line\">5. 键盘样式的文本 &#123;% kbd command %&#125; + &#123;% kbd D %&#125;</span><br><span class=\"line\">6. 密码样式的文本：&#123;% psw 这里没有验证码 %&#125;</span><br><span class=\"line\">- 彩色文字</span><br><span class=\"line\">在一段话中方便插入各种颜色的标签，包括：&#123;% span red, 红色 %&#125;、&#123;% span yellow, 黄色 %&#125;、&#123;% span green, 绿色 %&#125;、&#123;% span cyan, 青色 %&#125;、&#123;% span blue, 蓝色 %&#125;、&#123;% span gray, 灰色 %&#125;。</span><br><span class=\"line\">- 超大号文字</span><br><span class=\"line\">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class=\"line\">&#123;% span center logo large, Volantis %&#125;</span><br><span class=\"line\">&#123;% span center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h4 id=\"分栏\"><a href=\"#分栏\" class=\"headerlink\" title=\"分栏\"></a>分栏</h4><div class=\"tabs\" id=\"分栏\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"分栏-1\">展示效果</button><button type=\"button\" class=\"tab \" data-href=\"分栏-2\">源码</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"分栏-1\"><div class=\"tabs\" id=\"test\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"test-1\">1</button><button type=\"button\" class=\"tab \" data-href=\"test-2\">2</button><button type=\"button\" class=\"tab \" data-href=\"test-3\">test 3</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"test-1\"><p>This is Tab 1</p></div><div class=\"tab-item-content\" id=\"test-2\"><p><strong>This is Tab 2.</strong></p></div><div class=\"tab-item-content\" id=\"test-3\"><p><strong>This is Tab 3.</strong></p></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div><div class=\"tab-item-content\" id=\"分栏-2\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% tabs test %&#125;</span><br><span class=\"line\">&lt;!-- tab 1--&gt;</span><br><span class=\"line\">This is Tab 1</span><br><span class=\"line\">&lt;!-- endtab --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- tab 2--&gt;</span><br><span class=\"line\">**This is Tab 2.**</span><br><span class=\"line\">&lt;!-- endtab --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- tab --&gt;</span><br><span class=\"line\">**This is Tab 3.**</span><br><span class=\"line\">&lt;!-- endtab --&gt;</span><br><span class=\"line\">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h4 id=\"折叠框\"><a href=\"#折叠框\" class=\"headerlink\" title=\"折叠框\"></a>折叠框</h4><div class=\"tabs\" id=\"折叠框\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"折叠框-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"折叠框-2\">源码示例</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"折叠框-1\"><details class=\"folding-tag\" ><summary> 查看图片测试 </summary>\n              <div class='content'>\n              <p><img src=\"https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg\" alt=\"\"></p>\n              </div>\n            </details>\n\n<details class=\"folding-tag\" cyan open><summary> 查看默认打开的折叠框 </summary>\n              <div class='content'>\n              <p>这是一个默认打开的折叠框。</p>\n              </div>\n            </details>\n\n<details class=\"folding-tag\" green><summary> 查看代码测试 </summary>\n              <div class='content'>\n              <p>假装这里有代码块（代码块没法嵌套代码块）</p>\n              </div>\n            </details>\n\n<details class=\"folding-tag\" yellow><summary> 查看列表测试 </summary>\n              <div class='content'>\n              <ul><li>haha</li><li>hehe</li></ul>\n              </div>\n            </details>\n\n<details class=\"folding-tag\" red><summary> 查看嵌套测试 </summary>\n              <div class='content'>\n              <details class=\"folding-tag\" blue><summary> 查看嵌套测试2 </summary>              <div class='content'>              <details class=\"folding-tag\" ><summary> 查看嵌套测试3 </summary>              <div class='content'>              <p>hahaha <span><img src='https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png' style='height:24px'></span></p>              </div>            </details>              </div>            </details>\n              </div>\n            </details></div><div class=\"tab-item-content\" id=\"折叠框-2\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% folding 查看图片测试 %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">![](https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg)</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% endfolding %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% folding cyan open, 查看默认打开的折叠框 %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">这是一个默认打开的折叠框。</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% endfolding %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% folding green, 查看代码测试 %&#125;</span><br><span class=\"line\">假装这里有代码块（代码块没法嵌套代码块）</span><br><span class=\"line\">&#123;% endfolding %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% folding yellow, 查看列表测试 %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- haha</span><br><span class=\"line\">- hehe</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% endfolding %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% folding red, 查看嵌套测试 %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% folding blue, 查看嵌套测试2 %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% folding 查看嵌套测试3 %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">hahaha &lt;span&gt;&lt;img src=&#x27;https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png&#x27; style=&#x27;height:24px&#x27;&gt;&lt;/span&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% endfolding %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% endfolding %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h4 id=\"提示块标签\"><a href=\"#提示块标签\" class=\"headerlink\" title=\"提示块标签\"></a>提示块标签</h4><div class=\"tabs\" id=\"提示块标签\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"提示块标签-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"提示块标签-2\">源码示例</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"提示块标签-1\"><div class=\"note default simple\"><p>default 提示块标签</p>\n</div></div><div class=\"tab-item-content\" id=\"提示块标签-2\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% note default simple %&#125;default 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<div class=\"tabs\" id=\"引用\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"引用-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"引用-2\">源码示例</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"引用-1\"><div class=\"note pink icon-padding modern\"><i class=\"note-icon fas fa-car-crash\"></i><p>小心开车 安全至上</p>\n</div></div><div class=\"tab-item-content\" id=\"引用-2\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% note pink &#x27;fas fa-car-crash&#x27; modern %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h4 id=\"上标标签\"><a href=\"#上标标签\" class=\"headerlink\" title=\"上标标签\"></a>上标标签</h4><div class=\"tabs\" id=\"上标标签\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"上标标签-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"上标标签-2\">源码示例</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"上标标签-1\"><div class=\"tip success\"><p>success</p>\n</div></div><div class=\"tab-item-content\" id=\"上标标签-2\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% tip success %&#125;success&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h4 id=\"复选列表\"><a href=\"#复选列表\" class=\"headerlink\" title=\"复选列表\"></a>复选列表</h4><div class=\"tabs\" id=\"复选列表\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"复选列表-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"复选列表-2\">源码示例</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"复选列表-1\"><div class='checkbox red'><input type=\"checkbox\" />\n            <p>支持自定义颜色</p>\n            </div>\n<div class='checkbox green checked'><input type=\"checkbox\" checked=\"checked\"/>\n            <p>绿色 + 默认选中</p>\n            </div>\n<div class='checkbox yellow checked'><input type=\"checkbox\" checked=\"checked\"/>\n            <p>黄色 + 默认选中</p>\n            </div></div><div class=\"tab-item-content\" id=\"复选列表-2\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% checkbox red, 支持自定义颜色 %&#125;</span><br><span class=\"line\">&#123;% checkbox green checked, 绿色 + 默认选中 %&#125;</span><br><span class=\"line\">&#123;% checkbox yellow checked, 黄色 + 默认选中 %&#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h4 id=\"单选列表\"><a href=\"#单选列表\" class=\"headerlink\" title=\"单选列表\"></a>单选列表</h4><div class=\"tabs\" id=\"单选列表\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"单选列表-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"单选列表-2\">源码示例</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"单选列表-1\"><div class='checkbox'><input type=\"radio\" />\n            <p>纯文本测试</p>\n            </div>\n<div class='checkbox checked'><input type=\"radio\" checked=\"checked\"/>\n            <p>支持简单的 <a href=\"https://guides.github.com/features/mastering-markdown/\">markdown</a> 语法</p>\n            </div>\n<div class='checkbox red'><input type=\"radio\" />\n            <p>支持自定义颜色</p>\n            </div></div><div class=\"tab-item-content\" id=\"单选列表-2\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% radio 纯文本测试 %&#125;</span><br><span class=\"line\">&#123;% radio checked, 支持简单的 [markdown](https://guides.github.com/features/mastering-markdown/) 语法 %&#125;</span><br><span class=\"line\">&#123;% radio red, 支持自定义颜色 %&#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h4 id=\"记号笔注释\"><a href=\"#记号笔注释\" class=\"headerlink\" title=\"记号笔注释\"></a>记号笔注释</h4><div class=\"tabs\" id=\"记号笔注释\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"记号笔注释-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"记号笔注释-2\">源码示例</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"记号笔注释-1\"><p>最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的<span class=\"bubble-content\">兄弟相邻选择器</span><span class=\"bubble-notation\"><span class=\"bubble-item\" style=\"background-color:#71a4e3;\">例如 h1 + p {margin-top:50px;}</span>&lt;/span&gt;，<span class=\"bubble-content\">flex布局</span><span class=\"bubble-notation\"><span class=\"bubble-item\" style=\"background-color:#ec5830;\">Flex 是 Flexible Box 的缩写，意为弹性布局”，用来为盒状模型提供最大的灵活性”</span>&lt;/span&gt;，<span class=\"bubble-content\">transform变换</span><span class=\"bubble-notation\"><span class=\"bubble-item\" style=\"background-color:#1db675;\">transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。</span>&lt;/span&gt;，animation的<span class=\"bubble-content\">贝塞尔速度曲线</span><span class=\"bubble-notation\"><span class=\"bubble-item\" style=\"background-color:#de4489;\">贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋</span>&lt;/span&gt;写法，还有今天刚看到的<span class=\"bubble-content\">clip-path</span><span class=\"bubble-notation\"><span class=\"bubble-item\" style=\"background-color:#868fd7;\">clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。</span>&lt;/span&gt;属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。</p></div><div class=\"tab-item-content\" id=\"记号笔注释-2\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的&#123;% bubble 兄弟相邻选择器,&quot;例如 h1 + p &#123;margin-top:50px;&#125;&quot; %&#125;，&#123;% bubble flex布局,&quot;Flex 是 Flexible Box 的缩写，意为&quot;弹性布局&quot;，用来为盒状模型提供最大的灵活性&quot;,&quot;#ec5830&quot; %&#125;，&#123;% bubble transform变换,&quot;transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。&quot;,&quot;#1db675&quot; %&#125;，animation的&#123;% bubble 贝塞尔速度曲线,&quot;贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋&quot;,&quot;#de4489&quot; %&#125;写法，还有今天刚看到的&#123;% bubble clip-path,&quot;clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。&quot;,&quot;#868fd7&quot; %&#125;属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h4 id=\"链接卡片\"><a href=\"#链接卡片\" class=\"headerlink\" title=\"链接卡片\"></a>链接卡片</h4><div class=\"tabs\" id=\"链接卡片\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"链接卡片-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"链接卡片-2\">源码示例</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"链接卡片-1\"><div class=\"tag link\"><a class=\"link-card\" title=\"糖果屋教程贴\" href=\"https://akilar.top/posts/615e2dec/\"><div class=\"left\"><img src=\"https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico\"/></div><div class=\"right\"><p class=\"text\">糖果屋教程贴</p><p class=\"url\">https://akilar.top/posts/615e2dec/</p></div></a></div></div><div class=\"tab-item-content\" id=\"链接卡片-2\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% link 糖果屋教程贴, https://akilar.top/posts/615e2dec/, https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico %&#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h4 id=\"网站卡片\"><a href=\"#网站卡片\" class=\"headerlink\" title=\"网站卡片\"></a>网站卡片</h4><div class=\"tabs\" id=\"网站卡片\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"网站卡片-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"网站卡片-2\">源码示例</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"网站卡片-1\"><div class=\"site-card-group\"><a class=\"site-card\" href=\"https://xaoxuu.com\"><div class=\"img\"><img src=\"https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg\"/></div><div class=\"info\"><img src=\"https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/avatar/avatar.png\"/><span class=\"title\">xaoxuu</span><span class=\"desc\">简约风格</span></div></a>\n<a class=\"site-card\" href=\"https://inkss.cn\"><div class=\"img\"><img src=\"https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg\"/></div><div class=\"info\"><img src=\"https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg\"/><span class=\"title\">inkss</span><span class=\"desc\">这是一段关于这个网站的描述文字</span></div></a>\n<a class=\"site-card\" href=\"https://blog.mhuig.top\"><div class=\"img\"><img src=\"https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png\"/></div><div class=\"info\"><img src=\"https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png\"/><span class=\"title\">MHuiG</span><span class=\"desc\">这是一段关于这个网站的描述文字</span></div></a>\n<a class=\"site-card\" href=\"https://colsrch.top\"><div class=\"img\"><img src=\"https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png\"/></div><div class=\"info\"><img src=\"https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg\"/><span class=\"title\">Colsrch</span><span class=\"desc\">这是一段关于这个网站的描述文字</span></div></a>\n<a class=\"site-card\" href=\"https://linhk1606.github.io\"><div class=\"img\"><img src=\"https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png\"/></div><div class=\"info\"><img src=\"https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png\"/><span class=\"title\">Linhk1606</span><span class=\"desc\">这是一段关于这个网站的描述文字</span></div></a></div></div><div class=\"tab-item-content\" id=\"网站卡片-2\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% sitegroup %&#125;</span><br><span class=\"line\">&#123;% site xaoxuu, url=https://xaoxuu.com, screenshot=https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg, avatar=https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/avatar/avatar.png, description=简约风格 %&#125;</span><br><span class=\"line\">&#123;% site inkss, url=https://inkss.cn, screenshot=https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg, avatar=https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class=\"line\">&#123;% site MHuiG, url=https://blog.mhuig.top, screenshot=https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png, avatar=https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class=\"line\">&#123;% site Colsrch, url=https://colsrch.top, screenshot=https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png, avatar=https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class=\"line\">&#123;% site Linhk1606, url=https://linhk1606.github.io, screenshot=https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png, avatar=https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class=\"line\">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h4 id=\"音频\"><a href=\"#音频\" class=\"headerlink\" title=\"音频\"></a>音频</h4><div class=\"tabs\" id=\"音频\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"音频-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"音频-2\">源码示例</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"音频-1\"><div class=\"audio\"><audio controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div></div><div class=\"tab-item-content\" id=\"音频-2\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% audio https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3 %&#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h4 id=\"视频\"><a href=\"#视频\" class=\"headerlink\" title=\"视频\"></a>视频</h4><div class=\"tabs\" id=\"视频\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"视频-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"视频-2\">源码示例</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"视频-1\"><div class=\"videos\"><div class=\"video\"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div>\n<div class=\"video\"><video controls preload><source src='https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404170857702.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>\n<div class=\"video\"><video controls preload><source src='https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/CartoonDance.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>\n<div class=\"video\"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div>\n<div class=\"video\"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div></div><div class=\"tab-item-content\" id=\"视频-2\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% videos, 2 %&#125;</span><br><span class=\"line\">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %&#125;</span><br><span class=\"line\">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %&#125;</span><br><span class=\"line\">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %&#125;</span><br><span class=\"line\">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %&#125;</span><br><span class=\"line\">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h4 id=\"相册图库\"><a href=\"#相册图库\" class=\"headerlink\" title=\"相册图库\"></a>相册图库</h4><div class=\"tabs\" id=\"相册图库\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"相册图库-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"相册图库-2\">源码示例</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"相册图库-1\"><div class=\"gallery-group-main\">\n<figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src='/img-url' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">name</div>\n  <p>description</p>\n  <a href='/link'></a>\n  </figcaption>\n  </figure>\n\n<figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src='/img-url' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">name</div>\n  <p>description</p>\n  <a href='/link'></a>\n  </figcaption>\n  </figure>\n\n<figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src='/img-url' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">name</div>\n  <p>description</p>\n  <a href='/link'></a>\n  </figcaption>\n  </figure>\n\n</div></div><div class=\"tab-item-content\" id=\"相册图库-2\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div class=&quot;gallery-group-main&quot;&gt;</span><br><span class=\"line\">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class=\"line\">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class=\"line\">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h4 id=\"展示画廊Gallery\"><a href=\"#展示画廊Gallery\" class=\"headerlink\" title=\"展示画廊Gallery\"></a>展示画廊Gallery</h4><div class=\"tabs\" id=\"展示画廊gallery\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"展示画廊gallery-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"展示画廊gallery-2\">源码示例</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"展示画廊gallery-1\"><div class=\"gallery-container\" data-type=\"data\" data-button=\"\">\n      <div class=\"gallery-data\">[{\"url\":\"https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg\",\"alt\":\"\"},{\"url\":\"https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg\",\"alt\":\"\"}]</div>\n      <div class=\"gallery-items\">\n      </div>\n    </div></div><div class=\"tab-item-content\" id=\"展示画廊gallery-2\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% gallery %&#125;</span><br><span class=\"line\">![](https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg)</span><br><span class=\"line\">![](https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg)</span><br><span class=\"line\">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h4 id=\"按钮\"><a href=\"#按钮\" class=\"headerlink\" title=\"按钮\"></a>按钮</h4><div class=\"tabs\" id=\"按钮\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"按钮-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"按钮-2\">源码示例</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"按钮-1\"><div class=\"btns circle grid5\">\n            <a class=\"button\" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a>\n<a class=\"button\" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a>\n<a class=\"button\" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a>\n<a class=\"button\" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a>\n<a class=\"button\" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a>\n          </div></div><div class=\"tab-item-content\" id=\"按钮-2\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% btns circle grid5 %&#125;</span><br><span class=\"line\">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class=\"line\">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class=\"line\">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class=\"line\">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class=\"line\">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class=\"line\">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h4 id=\"诗词标签\"><a href=\"#诗词标签\" class=\"headerlink\" title=\"诗词标签\"></a>诗词标签</h4><div class=\"tabs\" id=\"诗词标签\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"诗词标签-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"诗词标签-2\">源码示例</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"诗词标签-1\"><div class='poem'><div class='poem-title'>水调歌头</div><div class='poem-author'>苏轼</div><p>丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。<br>明月几时有？把酒问青天。</p>\n</div></div><div class=\"tab-item-content\" id=\"诗词标签-2\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% poem 水调歌头,苏轼 %&#125;</span><br><span class=\"line\">丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。</span><br><span class=\"line\">明月几时有？把酒问青天。</span><br><span class=\"line\">&#123;% endpoem %&#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h4 id=\"时间轴样式\"><a href=\"#时间轴样式\" class=\"headerlink\" title=\"时间轴样式\"></a>时间轴样式</h4><div class=\"tabs\" id=\"时间轴样式\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"时间轴样式-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"时间轴样式-2\">源码示例</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"时间轴样式-1\"><div class=\"note blue no-icon flat\"><div class=\"timeline blue\"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>时间轴样式</p>\n</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-07-24 <a href=\"https://github.com/volantis-x/hexo-theme-volantis/releases\">2.6.6 -&gt; 3.0</a></p>\n</div></div><div class='timeline-item-content'><ol>\n<li>如果有 <code>hexo-lazyload-image</code> 插件，需要删除并重新安装最新版本，设置 <code>lazyload.isSPA: true</code>。</li>\n<li>2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <code>use_cdn: true</code> 则需要删除。</li>\n<li>2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</li>\n<li>2.x 版本的置顶 <code>top: true</code> 改为了 <code>pin: true</code>，并且同样适用于 <code>layout: page</code> 的页面。</li>\n<li>如果使用了 <code>hexo-offline</code> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</li>\n</ol>\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-05-15 <a href=\"https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6\">2.6.3 -&gt; 2.6.6</a></p>\n</div></div><div class='timeline-item-content'><p>不需要额外处理。</p>\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-04-20 <a href=\"https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3\">2.6.2 -&gt; 2.6.3</a></p>\n</div></div><div class='timeline-item-content'><ol>\n<li>全局搜索 <code>seotitle</code> 并替换为 <code>seo_title</code>。</li>\n<li>group 组件的索引规则有变，使用 group 组件的文章内，<code>group: group_name</code> 对应的组件名必须是 <code>group_name</code>。</li>\n<li>group 组件的列表名优先显示文章的 <code>short_title</code> 其次是 <code>title</code>。</li>\n</ol>\n</div></div></div>\n</div></div><div class=\"tab-item-content\" id=\"时间轴样式-2\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% note blue no-icon %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% timeline 时间轴样式,blue %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- timeline 2020-07-24 [2.6.6 -&gt; 3.0](https://github.com/volantis-x/hexo-theme-volantis/releases) --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">1. 如果有 `hexo-lazyload-image` 插件，需要删除并重新安装最新版本，设置 `lazyload.isSPA: true`。</span><br><span class=\"line\">2. 2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 `use_cdn: true` 则需要删除。</span><br><span class=\"line\">3. 2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</span><br><span class=\"line\">4. 2.x 版本的置顶 `top: true` 改为了 `pin: true`，并且同样适用于 `layout: page` 的页面。</span><br><span class=\"line\">5. 如果使用了 `hexo-offline` 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- endtimeline --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- timeline 2020-05-15 [2.6.3 -&gt; 2.6.6](https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6) --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">不需要额外处理。</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- endtimeline --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- timeline 2020-04-20 [2.6.2 -&gt; 2.6.3](https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3) --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">1. 全局搜索 `seotitle` 并替换为 `seo_title`。</span><br><span class=\"line\">2. group 组件的索引规则有变，使用 group 组件的文章内，`group: group_name` 对应的组件名必须是 `group_name`。</span><br><span class=\"line\">3. group 组件的列表名优先显示文章的 `short_title` 其次是 `title`。</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- endtimeline --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;div class=&quot;gallery-group-main&quot;&gt;</span><br><span class=\"line\">&#123;% galleryGroup 宗门合影 2023-10-23 &#x27;/gallery/MC/&#x27; https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202310261501300.jpg %&#125;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% endtimeline %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n"},{"title":"Trick","data":"2024-07-09T11:52:54.000Z","updated":"2024-07-08T16:00:00.000Z","description":"trick","cover":"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202403191721929.jpg","_content":"\n# 范围检测\n\n```\nusing UnityEngine;\n \npublic class RangeCheck\n{\n    //--扇形\n    public static bool CurveRange(Transform self, Transform target, float maxDistance, float maxAngle)\n    {\n        return CurveRange(self, target, 0, maxDistance, maxAngle);\n    }\n    public static bool CurveRange(Transform self, Transform target, float minDistance, float maxDistance, float maxAngle)\n    {\n        Vector3 playerDir = self.forward;\n        Vector3 enemydir = (target.position - self.position).normalized;\n        float angle = Vector3.Angle(playerDir, enemydir);\n        if (angle > maxAngle * 0.5f)\n        {\n            return false;\n        }\n        float distance = Vector3.Distance(target.position, self.position);\n        if (distance <= maxDistance && distance >= minDistance)\n        {\n            return true;\n        }\n        return false;\n    }\n    //--圆形\n    public static bool CircleRange(Transform self, Transform target, float maxDistance)\n    {\n        return CircleRange(self, target, 0, maxDistance);\n    }\n    public static bool CircleRange(Transform self, Transform target, float minDistance, float maxDistance)\n    {\n        float distance = Vector3.Distance(target.position, self.position);\n        if (distance <= maxDistance && distance >= minDistance)\n        {\n            return true;\n        }\n        else\n        {\n            return false;\n        }\n    }\n    //--矩形\n    public static bool SquareRange(Transform self, Transform target, float maxWidth, float maxHeight)\n    {\n        return SquareRange(self, target, maxWidth, 0, maxHeight);\n    }\n    public static bool SquareRange(Transform self, Transform target, float maxWidth, float minHeight, float maxHeight)\n    {\n        Vector3 enemyDir = (target.position - self.position).normalized;\n        float angle = Vector3.Angle(enemyDir, self.forward);\n        if (angle > 90)\n        {\n            return false;\n        }\n        float distance = Vector3.Distance(target.position, self.position);\n        float z = distance * Mathf.Cos(angle * Mathf.Deg2Rad);\n        float x = distance * Mathf.Sin(angle * Mathf.Deg2Rad);\n        if (x <= maxWidth * 0.5f && z <= maxHeight && z >= minHeight)\n        {\n            return true;\n        }\n        return false;\n    }\n    //--等腰三角形\n    public static bool TriangleRange(Transform self, Transform target, float maxDistance, float maxAngle)\n    {\n        Vector3 playerDir = self.forward;\n        Vector3 enemydir = (target.position - self.position).normalized;\n        float angle = Vector3.Angle(playerDir, enemydir);\n        if (angle > maxAngle * 0.5f)\n        {\n            return false;\n        }\n        float angleDistance = maxDistance * Mathf.Cos(maxAngle * 0.5f * Mathf.Deg2Rad) / Mathf.Cos(angle * Mathf.Deg2Rad);\n        float distance = Vector3.Distance(target.position, self.position);\n        if (distance <= angleDistance)\n        {\n            return true;\n        }\n        return false;\n    }\n}\n```\n\n# 视锥体剔除\n\n```\n\npublic class MyCull : MonoBehaviour\n{\n    private Camera _camera;\n    public Transform parentTrans;\n    private Renderer[] meshRenders;\n \n \n    void Start()\n    {\n        _camera = GetComponent<Camera>();\n        meshRenders = parentTrans.GetComponentsInChildren<MeshRenderer>();\n    }\n \n    // Update is called once per frame\n    void Update()\n    {\n\t\tPlane[] cameraPlane = GeometryUtility.CalculateFrustumPlanes(_camera);//得到摄像机的视锥平面\n        foreach (var item in meshRenders)\n        {\n            Bounds bounds = item.bounds;\n            bool isShow = GeometryUtility.TestPlanesAABB(cameraPlane,bounds);//判断是否在摄像机的视锥体中\n            item.enabled = isShow;\n        }\n    }\n}\n```\n\n","source":"_posts/Trick.md","raw":"---\ntitle: Trick\ndata: 2024-7-9 19:52:54\nupdated: 2024-7-9\ntags: \n    - TA\n    - Technology\ncategories: Technology\ndescription: trick\ncover: https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202403191721929.jpg\n---\n\n# 范围检测\n\n```\nusing UnityEngine;\n \npublic class RangeCheck\n{\n    //--扇形\n    public static bool CurveRange(Transform self, Transform target, float maxDistance, float maxAngle)\n    {\n        return CurveRange(self, target, 0, maxDistance, maxAngle);\n    }\n    public static bool CurveRange(Transform self, Transform target, float minDistance, float maxDistance, float maxAngle)\n    {\n        Vector3 playerDir = self.forward;\n        Vector3 enemydir = (target.position - self.position).normalized;\n        float angle = Vector3.Angle(playerDir, enemydir);\n        if (angle > maxAngle * 0.5f)\n        {\n            return false;\n        }\n        float distance = Vector3.Distance(target.position, self.position);\n        if (distance <= maxDistance && distance >= minDistance)\n        {\n            return true;\n        }\n        return false;\n    }\n    //--圆形\n    public static bool CircleRange(Transform self, Transform target, float maxDistance)\n    {\n        return CircleRange(self, target, 0, maxDistance);\n    }\n    public static bool CircleRange(Transform self, Transform target, float minDistance, float maxDistance)\n    {\n        float distance = Vector3.Distance(target.position, self.position);\n        if (distance <= maxDistance && distance >= minDistance)\n        {\n            return true;\n        }\n        else\n        {\n            return false;\n        }\n    }\n    //--矩形\n    public static bool SquareRange(Transform self, Transform target, float maxWidth, float maxHeight)\n    {\n        return SquareRange(self, target, maxWidth, 0, maxHeight);\n    }\n    public static bool SquareRange(Transform self, Transform target, float maxWidth, float minHeight, float maxHeight)\n    {\n        Vector3 enemyDir = (target.position - self.position).normalized;\n        float angle = Vector3.Angle(enemyDir, self.forward);\n        if (angle > 90)\n        {\n            return false;\n        }\n        float distance = Vector3.Distance(target.position, self.position);\n        float z = distance * Mathf.Cos(angle * Mathf.Deg2Rad);\n        float x = distance * Mathf.Sin(angle * Mathf.Deg2Rad);\n        if (x <= maxWidth * 0.5f && z <= maxHeight && z >= minHeight)\n        {\n            return true;\n        }\n        return false;\n    }\n    //--等腰三角形\n    public static bool TriangleRange(Transform self, Transform target, float maxDistance, float maxAngle)\n    {\n        Vector3 playerDir = self.forward;\n        Vector3 enemydir = (target.position - self.position).normalized;\n        float angle = Vector3.Angle(playerDir, enemydir);\n        if (angle > maxAngle * 0.5f)\n        {\n            return false;\n        }\n        float angleDistance = maxDistance * Mathf.Cos(maxAngle * 0.5f * Mathf.Deg2Rad) / Mathf.Cos(angle * Mathf.Deg2Rad);\n        float distance = Vector3.Distance(target.position, self.position);\n        if (distance <= angleDistance)\n        {\n            return true;\n        }\n        return false;\n    }\n}\n```\n\n# 视锥体剔除\n\n```\n\npublic class MyCull : MonoBehaviour\n{\n    private Camera _camera;\n    public Transform parentTrans;\n    private Renderer[] meshRenders;\n \n \n    void Start()\n    {\n        _camera = GetComponent<Camera>();\n        meshRenders = parentTrans.GetComponentsInChildren<MeshRenderer>();\n    }\n \n    // Update is called once per frame\n    void Update()\n    {\n\t\tPlane[] cameraPlane = GeometryUtility.CalculateFrustumPlanes(_camera);//得到摄像机的视锥平面\n        foreach (var item in meshRenders)\n        {\n            Bounds bounds = item.bounds;\n            bool isShow = GeometryUtility.TestPlanesAABB(cameraPlane,bounds);//判断是否在摄像机的视锥体中\n            item.enabled = isShow;\n        }\n    }\n}\n```\n\n","slug":"Trick","published":1,"date":"2024-07-11T06:04:06.751Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clyh2ognb000fe0ds4m58d1js","content":"<h1 id=\"范围检测\"><a href=\"#范围检测\" class=\"headerlink\" title=\"范围检测\"></a>范围检测</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">using UnityEngine;</span><br><span class=\"line\"> </span><br><span class=\"line\">public class RangeCheck</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    //--扇形</span><br><span class=\"line\">    public static bool CurveRange(Transform self, Transform target, float maxDistance, float maxAngle)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        return CurveRange(self, target, 0, maxDistance, maxAngle);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    public static bool CurveRange(Transform self, Transform target, float minDistance, float maxDistance, float maxAngle)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Vector3 playerDir = self.forward;</span><br><span class=\"line\">        Vector3 enemydir = (target.position - self.position).normalized;</span><br><span class=\"line\">        float angle = Vector3.Angle(playerDir, enemydir);</span><br><span class=\"line\">        if (angle &gt; maxAngle * 0.5f)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return false;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        float distance = Vector3.Distance(target.position, self.position);</span><br><span class=\"line\">        if (distance &lt;= maxDistance &amp;&amp; distance &gt;= minDistance)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return true;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return false;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    //--圆形</span><br><span class=\"line\">    public static bool CircleRange(Transform self, Transform target, float maxDistance)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        return CircleRange(self, target, 0, maxDistance);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    public static bool CircleRange(Transform self, Transform target, float minDistance, float maxDistance)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        float distance = Vector3.Distance(target.position, self.position);</span><br><span class=\"line\">        if (distance &lt;= maxDistance &amp;&amp; distance &gt;= minDistance)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return true;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return false;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    //--矩形</span><br><span class=\"line\">    public static bool SquareRange(Transform self, Transform target, float maxWidth, float maxHeight)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        return SquareRange(self, target, maxWidth, 0, maxHeight);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    public static bool SquareRange(Transform self, Transform target, float maxWidth, float minHeight, float maxHeight)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Vector3 enemyDir = (target.position - self.position).normalized;</span><br><span class=\"line\">        float angle = Vector3.Angle(enemyDir, self.forward);</span><br><span class=\"line\">        if (angle &gt; 90)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return false;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        float distance = Vector3.Distance(target.position, self.position);</span><br><span class=\"line\">        float z = distance * Mathf.Cos(angle * Mathf.Deg2Rad);</span><br><span class=\"line\">        float x = distance * Mathf.Sin(angle * Mathf.Deg2Rad);</span><br><span class=\"line\">        if (x &lt;= maxWidth * 0.5f &amp;&amp; z &lt;= maxHeight &amp;&amp; z &gt;= minHeight)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return true;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return false;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    //--等腰三角形</span><br><span class=\"line\">    public static bool TriangleRange(Transform self, Transform target, float maxDistance, float maxAngle)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Vector3 playerDir = self.forward;</span><br><span class=\"line\">        Vector3 enemydir = (target.position - self.position).normalized;</span><br><span class=\"line\">        float angle = Vector3.Angle(playerDir, enemydir);</span><br><span class=\"line\">        if (angle &gt; maxAngle * 0.5f)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return false;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        float angleDistance = maxDistance * Mathf.Cos(maxAngle * 0.5f * Mathf.Deg2Rad) / Mathf.Cos(angle * Mathf.Deg2Rad);</span><br><span class=\"line\">        float distance = Vector3.Distance(target.position, self.position);</span><br><span class=\"line\">        if (distance &lt;= angleDistance)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return true;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return false;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"视锥体剔除\"><a href=\"#视锥体剔除\" class=\"headerlink\" title=\"视锥体剔除\"></a>视锥体剔除</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">public class MyCull : MonoBehaviour</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    private Camera _camera;</span><br><span class=\"line\">    public Transform parentTrans;</span><br><span class=\"line\">    private Renderer[] meshRenders;</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\">    void Start()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        _camera = GetComponent&lt;Camera&gt;();</span><br><span class=\"line\">        meshRenders = parentTrans.GetComponentsInChildren&lt;MeshRenderer&gt;();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    // Update is called once per frame</span><br><span class=\"line\">    void Update()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">\t\tPlane[] cameraPlane = GeometryUtility.CalculateFrustumPlanes(_camera);//得到摄像机的视锥平面</span><br><span class=\"line\">        foreach (var item in meshRenders)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Bounds bounds = item.bounds;</span><br><span class=\"line\">            bool isShow = GeometryUtility.TestPlanesAABB(cameraPlane,bounds);//判断是否在摄像机的视锥体中</span><br><span class=\"line\">            item.enabled = isShow;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"Vue","color":"#b8f0ae","icon":"https://img02.anheyu.com/adminuploads/1/2022/09/25/633001374747b.png"}]}],"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"}]}]}},"cover_type":"img","excerpt":"","more":"<h1 id=\"范围检测\"><a href=\"#范围检测\" class=\"headerlink\" title=\"范围检测\"></a>范围检测</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">using UnityEngine;</span><br><span class=\"line\"> </span><br><span class=\"line\">public class RangeCheck</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    //--扇形</span><br><span class=\"line\">    public static bool CurveRange(Transform self, Transform target, float maxDistance, float maxAngle)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        return CurveRange(self, target, 0, maxDistance, maxAngle);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    public static bool CurveRange(Transform self, Transform target, float minDistance, float maxDistance, float maxAngle)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Vector3 playerDir = self.forward;</span><br><span class=\"line\">        Vector3 enemydir = (target.position - self.position).normalized;</span><br><span class=\"line\">        float angle = Vector3.Angle(playerDir, enemydir);</span><br><span class=\"line\">        if (angle &gt; maxAngle * 0.5f)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return false;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        float distance = Vector3.Distance(target.position, self.position);</span><br><span class=\"line\">        if (distance &lt;= maxDistance &amp;&amp; distance &gt;= minDistance)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return true;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return false;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    //--圆形</span><br><span class=\"line\">    public static bool CircleRange(Transform self, Transform target, float maxDistance)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        return CircleRange(self, target, 0, maxDistance);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    public static bool CircleRange(Transform self, Transform target, float minDistance, float maxDistance)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        float distance = Vector3.Distance(target.position, self.position);</span><br><span class=\"line\">        if (distance &lt;= maxDistance &amp;&amp; distance &gt;= minDistance)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return true;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return false;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    //--矩形</span><br><span class=\"line\">    public static bool SquareRange(Transform self, Transform target, float maxWidth, float maxHeight)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        return SquareRange(self, target, maxWidth, 0, maxHeight);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    public static bool SquareRange(Transform self, Transform target, float maxWidth, float minHeight, float maxHeight)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Vector3 enemyDir = (target.position - self.position).normalized;</span><br><span class=\"line\">        float angle = Vector3.Angle(enemyDir, self.forward);</span><br><span class=\"line\">        if (angle &gt; 90)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return false;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        float distance = Vector3.Distance(target.position, self.position);</span><br><span class=\"line\">        float z = distance * Mathf.Cos(angle * Mathf.Deg2Rad);</span><br><span class=\"line\">        float x = distance * Mathf.Sin(angle * Mathf.Deg2Rad);</span><br><span class=\"line\">        if (x &lt;= maxWidth * 0.5f &amp;&amp; z &lt;= maxHeight &amp;&amp; z &gt;= minHeight)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return true;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return false;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    //--等腰三角形</span><br><span class=\"line\">    public static bool TriangleRange(Transform self, Transform target, float maxDistance, float maxAngle)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Vector3 playerDir = self.forward;</span><br><span class=\"line\">        Vector3 enemydir = (target.position - self.position).normalized;</span><br><span class=\"line\">        float angle = Vector3.Angle(playerDir, enemydir);</span><br><span class=\"line\">        if (angle &gt; maxAngle * 0.5f)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return false;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        float angleDistance = maxDistance * Mathf.Cos(maxAngle * 0.5f * Mathf.Deg2Rad) / Mathf.Cos(angle * Mathf.Deg2Rad);</span><br><span class=\"line\">        float distance = Vector3.Distance(target.position, self.position);</span><br><span class=\"line\">        if (distance &lt;= angleDistance)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return true;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return false;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"视锥体剔除\"><a href=\"#视锥体剔除\" class=\"headerlink\" title=\"视锥体剔除\"></a>视锥体剔除</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">public class MyCull : MonoBehaviour</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    private Camera _camera;</span><br><span class=\"line\">    public Transform parentTrans;</span><br><span class=\"line\">    private Renderer[] meshRenders;</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\">    void Start()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        _camera = GetComponent&lt;Camera&gt;();</span><br><span class=\"line\">        meshRenders = parentTrans.GetComponentsInChildren&lt;MeshRenderer&gt;();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    // Update is called once per frame</span><br><span class=\"line\">    void Update()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">\t\tPlane[] cameraPlane = GeometryUtility.CalculateFrustumPlanes(_camera);//得到摄像机的视锥平面</span><br><span class=\"line\">        foreach (var item in meshRenders)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Bounds bounds = item.bounds;</span><br><span class=\"line\">            bool isShow = GeometryUtility.TestPlanesAABB(cameraPlane,bounds);//判断是否在摄像机的视锥体中</span><br><span class=\"line\">            item.enabled = isShow;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"UE基本知识","data":"2024-7-1019:52:54","updated":"2024-07-09T16:00:00.000Z","description":"UE基本知识","cover":"https://yin-qin.oss-cn-shanghai.aliyuncs.com/img/202407111334240.jpg","_content":"\n","source":"_posts/UE.md","raw":"---\ntitle: UE基本知识\ndata: 2024-7-1019:52:54\nupdated: 2024-7-10\ntags: \n    - TA\n    - Unreal Engine\ncategories: Unreal Engine\ndescription: UE基本知识\ncover: https://yin-qin.oss-cn-shanghai.aliyuncs.com/img/202407111334240.jpg\n---\n\n","slug":"UE","published":1,"date":"2024-07-11T06:04:06.852Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clyh2ogni000he0ds4ffn22uq","content":"","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"Vue","color":"#b8f0ae","icon":"https://img02.anheyu.com/adminuploads/1/2022/09/25/633001374747b.png"}]}],"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"}]}]}},"cover_type":"img","excerpt":"","more":""},{"title":"Unity基本知识","data":"2024-07-11T11:52:54.000Z","updated":"2024-07-10T16:00:00.000Z","description":"Unity基本知识","cover":"https://yin-qin.oss-cn-shanghai.aliyuncs.com/img/202407111334932.jpg","_content":"\n","source":"_posts/Unity.md","raw":"---\ntitle: Unity基本知识\ndata: 2024-7-11 19:52:54\nupdated: 2024-7-11\ntags: \n    - TA\n    - Unity\ncategories: Unity\ndescription: Unity基本知识\ncover: https://yin-qin.oss-cn-shanghai.aliyuncs.com/img/202407111334932.jpg\n---\n\n","slug":"Unity","published":1,"date":"2024-07-11T06:04:06.881Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clyh2ognk000me0ds0ptm0xqi","content":"","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"Vue","color":"#b8f0ae","icon":"https://img02.anheyu.com/adminuploads/1/2022/09/25/633001374747b.png"}]}],"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"}]}]}},"cover_type":"img","excerpt":"","more":""},{"title":"Unity—HDRP——1：Process（HDRP project setting）","data":"2024-07-12T11:52:54.000Z","updated":"2024-07-11T16:00:00.000Z","description":"HDRP项目初始化设置","cover":"https://yin-qin.oss-cn-shanghai.aliyuncs.com/img/202407111108328.jpg","_content":"\n# 基本框架\n\n- **Process（HDRP project setting）**\n- HDRP配置文件和Volume框架\n- HDRP Lighting System\n- LightMapping（光照烘培）\n- Material\n- PostProcessing\n- HDRPDebug\n- HDRP Real-Time Ray Tracing\n\n# Process（HDRP project setting）\n\n## HDRP项目安装\n\n\n\n窗口—>HDRP向导\n\n![image-20240627111305585](https://yin-qin.oss-cn-shanghai.aliyuncs.com/img/202406271113610.png)\n\n所有的复选框必须是绿色打勾的状态\n\n## 项目初始化\n\n编辑—>项目设置—>HDRP Global Setting—>默认体积配置文件资源\n\n![image-20240627112056332](https://yin-qin.oss-cn-shanghai.aliyuncs.com/img/202406271120363.png)\n\n在HDRP配置文件下面找到体积配置文件，并在此处进行修改。\n\n项目默认使用此处的配置文件，因为我们需要自己生成项目的所有Volume配置信息，所以需要将预设全部取消。\n\n## 使用Volume框架设置场景环境\n\n1. 在Hierarchy窗口，新建一个空的GameObject，重命名为Scene Settings。\n2. 在Inspector窗口添加一个Volume组件，然后新建一个配置文件Volume Profile，名为Scene Settings Profile。\n3. 在Volume组件下面点击添加覆盖按钮，添加Visual Environment，并将类型设置为HDRI Sky，因为使用HDRI Sky提供环境光照，所以移除场景中的Directional Light。\n4. 再次点击添加覆盖按钮，添加 HDRI Sky组件，然后勾选Hdri Sky 、Indensity Mode 、Exposure选项，该组件用来控制环境光强度。\n5. 再次点击添加覆盖按钮，选择Shadows，使用默认的数值。\n6. 尽管已经设置了HDRI和阴影的配置信息，但是需要让这些配置生效需要进一步设置，窗口—>渲染—>光照，打开光照界面在环境窗口中的配置文件，关联刚刚生成的Scene Settings Profile，并将静态光照天空改为HDRISky。\n7. 在添加室内光源之前，要先为场景添加屏幕后处理效果\n   1. 在Hierarchy窗口，创建一个空的GameObject。重命名为Post Processing。\n   2. 为PostProcessing添加Volume组件，单击profile一栏右侧的new按钮生成PostProcessingProfile文件，用来保存后处理的更重信息。\n   3. 单击添加覆盖按钮添加Exposure和Tonemapping等等。。。。\n   4. 为生成的画面添加抗锯齿效果，使用Camera组件为画面添加抗锯齿效果\n8. 添加光源、LightProbe 和 ReflectiongProbe。\n9. 烘培光照贴图 \n   1. 打开Liighting界面，确保参数设置正确![image-20240627133635025](https://yin-qin.oss-cn-shanghai.aliyuncs.com/img/202406271336070.png)\n   2. 点击生成照明按钮开始烘培（通常不需要勾选 AutoGenerate，会导致编辑过程受到一定影响）\n\n","source":"_posts/Unity—HDRP--1：Process（HDRP project setting）.md","raw":"---\ntitle: Unity—HDRP——1：Process（HDRP project setting）\ndata: 2024-7-12 19:52:54\nupdated: 2024-7-12\ntags: \n    - TA\n    - Process\n    - Unity\n    - High Definition Render Pipline\ncategories: Unity\ndescription: HDRP项目初始化设置\ncover: https://yin-qin.oss-cn-shanghai.aliyuncs.com/img/202407111108328.jpg\n---\n\n# 基本框架\n\n- **Process（HDRP project setting）**\n- HDRP配置文件和Volume框架\n- HDRP Lighting System\n- LightMapping（光照烘培）\n- Material\n- PostProcessing\n- HDRPDebug\n- HDRP Real-Time Ray Tracing\n\n# Process（HDRP project setting）\n\n## HDRP项目安装\n\n\n\n窗口—>HDRP向导\n\n![image-20240627111305585](https://yin-qin.oss-cn-shanghai.aliyuncs.com/img/202406271113610.png)\n\n所有的复选框必须是绿色打勾的状态\n\n## 项目初始化\n\n编辑—>项目设置—>HDRP Global Setting—>默认体积配置文件资源\n\n![image-20240627112056332](https://yin-qin.oss-cn-shanghai.aliyuncs.com/img/202406271120363.png)\n\n在HDRP配置文件下面找到体积配置文件，并在此处进行修改。\n\n项目默认使用此处的配置文件，因为我们需要自己生成项目的所有Volume配置信息，所以需要将预设全部取消。\n\n## 使用Volume框架设置场景环境\n\n1. 在Hierarchy窗口，新建一个空的GameObject，重命名为Scene Settings。\n2. 在Inspector窗口添加一个Volume组件，然后新建一个配置文件Volume Profile，名为Scene Settings Profile。\n3. 在Volume组件下面点击添加覆盖按钮，添加Visual Environment，并将类型设置为HDRI Sky，因为使用HDRI Sky提供环境光照，所以移除场景中的Directional Light。\n4. 再次点击添加覆盖按钮，添加 HDRI Sky组件，然后勾选Hdri Sky 、Indensity Mode 、Exposure选项，该组件用来控制环境光强度。\n5. 再次点击添加覆盖按钮，选择Shadows，使用默认的数值。\n6. 尽管已经设置了HDRI和阴影的配置信息，但是需要让这些配置生效需要进一步设置，窗口—>渲染—>光照，打开光照界面在环境窗口中的配置文件，关联刚刚生成的Scene Settings Profile，并将静态光照天空改为HDRISky。\n7. 在添加室内光源之前，要先为场景添加屏幕后处理效果\n   1. 在Hierarchy窗口，创建一个空的GameObject。重命名为Post Processing。\n   2. 为PostProcessing添加Volume组件，单击profile一栏右侧的new按钮生成PostProcessingProfile文件，用来保存后处理的更重信息。\n   3. 单击添加覆盖按钮添加Exposure和Tonemapping等等。。。。\n   4. 为生成的画面添加抗锯齿效果，使用Camera组件为画面添加抗锯齿效果\n8. 添加光源、LightProbe 和 ReflectiongProbe。\n9. 烘培光照贴图 \n   1. 打开Liighting界面，确保参数设置正确![image-20240627133635025](https://yin-qin.oss-cn-shanghai.aliyuncs.com/img/202406271336070.png)\n   2. 点击生成照明按钮开始烘培（通常不需要勾选 AutoGenerate，会导致编辑过程受到一定影响）\n\n","slug":"Unity—HDRP--1：Process（HDRP project setting）","published":1,"date":"2024-07-11T08:31:02.928Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clyh2ognm000pe0dsf881bfhf","content":"<h1 id=\"基本框架\"><a href=\"#基本框架\" class=\"headerlink\" title=\"基本框架\"></a>基本框架</h1><ul>\n<li><strong>Process（HDRP project setting）</strong></li>\n<li>HDRP配置文件和Volume框架</li>\n<li>HDRP Lighting System</li>\n<li>LightMapping（光照烘培）</li>\n<li>Material</li>\n<li>PostProcessing</li>\n<li>HDRPDebug</li>\n<li>HDRP Real-Time Ray Tracing</li>\n</ul>\n<h1 id=\"Process（HDRP-project-setting）\"><a href=\"#Process（HDRP-project-setting）\" class=\"headerlink\" title=\"Process（HDRP project setting）\"></a>Process（HDRP project setting）</h1><h2 id=\"HDRP项目安装\"><a href=\"#HDRP项目安装\" class=\"headerlink\" title=\"HDRP项目安装\"></a>HDRP项目安装</h2><p>窗口—&gt;HDRP向导</p>\n<p><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/img/202406271113610.png\" alt=\"image-20240627111305585\"></p>\n<p>所有的复选框必须是绿色打勾的状态</p>\n<h2 id=\"项目初始化\"><a href=\"#项目初始化\" class=\"headerlink\" title=\"项目初始化\"></a>项目初始化</h2><p>编辑—&gt;项目设置—&gt;HDRP Global Setting—&gt;默认体积配置文件资源</p>\n<p><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/img/202406271120363.png\" alt=\"image-20240627112056332\"></p>\n<p>在HDRP配置文件下面找到体积配置文件，并在此处进行修改。</p>\n<p>项目默认使用此处的配置文件，因为我们需要自己生成项目的所有Volume配置信息，所以需要将预设全部取消。</p>\n<h2 id=\"使用Volume框架设置场景环境\"><a href=\"#使用Volume框架设置场景环境\" class=\"headerlink\" title=\"使用Volume框架设置场景环境\"></a>使用Volume框架设置场景环境</h2><ol>\n<li>在Hierarchy窗口，新建一个空的GameObject，重命名为Scene Settings。</li>\n<li>在Inspector窗口添加一个Volume组件，然后新建一个配置文件Volume Profile，名为Scene Settings Profile。</li>\n<li>在Volume组件下面点击添加覆盖按钮，添加Visual Environment，并将类型设置为HDRI Sky，因为使用HDRI Sky提供环境光照，所以移除场景中的Directional Light。</li>\n<li>再次点击添加覆盖按钮，添加 HDRI Sky组件，然后勾选Hdri Sky 、Indensity Mode 、Exposure选项，该组件用来控制环境光强度。</li>\n<li>再次点击添加覆盖按钮，选择Shadows，使用默认的数值。</li>\n<li>尽管已经设置了HDRI和阴影的配置信息，但是需要让这些配置生效需要进一步设置，窗口—&gt;渲染—&gt;光照，打开光照界面在环境窗口中的配置文件，关联刚刚生成的Scene Settings Profile，并将静态光照天空改为HDRISky。</li>\n<li>在添加室内光源之前，要先为场景添加屏幕后处理效果<ol>\n<li>在Hierarchy窗口，创建一个空的GameObject。重命名为Post Processing。</li>\n<li>为PostProcessing添加Volume组件，单击profile一栏右侧的new按钮生成PostProcessingProfile文件，用来保存后处理的更重信息。</li>\n<li>单击添加覆盖按钮添加Exposure和Tonemapping等等。。。。</li>\n<li>为生成的画面添加抗锯齿效果，使用Camera组件为画面添加抗锯齿效果</li>\n</ol>\n</li>\n<li>添加光源、LightProbe 和 ReflectiongProbe。</li>\n<li>烘培光照贴图 <ol>\n<li>打开Liighting界面，确保参数设置正确<img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/img/202406271336070.png\" alt=\"image-20240627133635025\"></li>\n<li>点击生成照明按钮开始烘培（通常不需要勾选 AutoGenerate，会导致编辑过程受到一定影响）</li>\n</ol>\n</li>\n</ol>\n","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"Vue","color":"#b8f0ae","icon":"https://img02.anheyu.com/adminuploads/1/2022/09/25/633001374747b.png"}]}],"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"}]}]}},"cover_type":"img","excerpt":"","more":"<h1 id=\"基本框架\"><a href=\"#基本框架\" class=\"headerlink\" title=\"基本框架\"></a>基本框架</h1><ul>\n<li><strong>Process（HDRP project setting）</strong></li>\n<li>HDRP配置文件和Volume框架</li>\n<li>HDRP Lighting System</li>\n<li>LightMapping（光照烘培）</li>\n<li>Material</li>\n<li>PostProcessing</li>\n<li>HDRPDebug</li>\n<li>HDRP Real-Time Ray Tracing</li>\n</ul>\n<h1 id=\"Process（HDRP-project-setting）\"><a href=\"#Process（HDRP-project-setting）\" class=\"headerlink\" title=\"Process（HDRP project setting）\"></a>Process（HDRP project setting）</h1><h2 id=\"HDRP项目安装\"><a href=\"#HDRP项目安装\" class=\"headerlink\" title=\"HDRP项目安装\"></a>HDRP项目安装</h2><p>窗口—&gt;HDRP向导</p>\n<p><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/img/202406271113610.png\" alt=\"image-20240627111305585\"></p>\n<p>所有的复选框必须是绿色打勾的状态</p>\n<h2 id=\"项目初始化\"><a href=\"#项目初始化\" class=\"headerlink\" title=\"项目初始化\"></a>项目初始化</h2><p>编辑—&gt;项目设置—&gt;HDRP Global Setting—&gt;默认体积配置文件资源</p>\n<p><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/img/202406271120363.png\" alt=\"image-20240627112056332\"></p>\n<p>在HDRP配置文件下面找到体积配置文件，并在此处进行修改。</p>\n<p>项目默认使用此处的配置文件，因为我们需要自己生成项目的所有Volume配置信息，所以需要将预设全部取消。</p>\n<h2 id=\"使用Volume框架设置场景环境\"><a href=\"#使用Volume框架设置场景环境\" class=\"headerlink\" title=\"使用Volume框架设置场景环境\"></a>使用Volume框架设置场景环境</h2><ol>\n<li>在Hierarchy窗口，新建一个空的GameObject，重命名为Scene Settings。</li>\n<li>在Inspector窗口添加一个Volume组件，然后新建一个配置文件Volume Profile，名为Scene Settings Profile。</li>\n<li>在Volume组件下面点击添加覆盖按钮，添加Visual Environment，并将类型设置为HDRI Sky，因为使用HDRI Sky提供环境光照，所以移除场景中的Directional Light。</li>\n<li>再次点击添加覆盖按钮，添加 HDRI Sky组件，然后勾选Hdri Sky 、Indensity Mode 、Exposure选项，该组件用来控制环境光强度。</li>\n<li>再次点击添加覆盖按钮，选择Shadows，使用默认的数值。</li>\n<li>尽管已经设置了HDRI和阴影的配置信息，但是需要让这些配置生效需要进一步设置，窗口—&gt;渲染—&gt;光照，打开光照界面在环境窗口中的配置文件，关联刚刚生成的Scene Settings Profile，并将静态光照天空改为HDRISky。</li>\n<li>在添加室内光源之前，要先为场景添加屏幕后处理效果<ol>\n<li>在Hierarchy窗口，创建一个空的GameObject。重命名为Post Processing。</li>\n<li>为PostProcessing添加Volume组件，单击profile一栏右侧的new按钮生成PostProcessingProfile文件，用来保存后处理的更重信息。</li>\n<li>单击添加覆盖按钮添加Exposure和Tonemapping等等。。。。</li>\n<li>为生成的画面添加抗锯齿效果，使用Camera组件为画面添加抗锯齿效果</li>\n</ol>\n</li>\n<li>添加光源、LightProbe 和 ReflectiongProbe。</li>\n<li>烘培光照贴图 <ol>\n<li>打开Liighting界面，确保参数设置正确<img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/img/202406271336070.png\" alt=\"image-20240627133635025\"></li>\n<li>点击生成照明按钮开始烘培（通常不需要勾选 AutoGenerate，会导致编辑过程受到一定影响）</li>\n</ol>\n</li>\n</ol>\n"},{"title":"Unity—HDRP——2：HDRP配置文件和Volume框架","data":"2024-07-13T11:52:54.000Z","updated":"2024-07-12T16:00:00.000Z","description":"HDRP高清渲染管线的配置文件和Volume框架介绍","cover":"https://yin-qin.oss-cn-shanghai.aliyuncs.com/img/202407111108328.jpg","_content":"\n# 基本框架\n\n- Process（HDRP project setting）\n- **HDRP配置文件和Volume框架**\n- HDRP Lighting System\n- LightMapping（光照烘培）\n- Material\n- PostProcessing\n- HDRPDebug\n- HDRP Real-Time Ray Tracing\n\n# HDRP配置文件和Volume框架\n\n## 介绍\n\n主要作用就是用来管理HDRP的所有渲染功能，首先会使用HDRP的配置文件生成一个HDRP的渲染管线实例，而这个渲染管线的实例则包含用于渲染的中间资源。\n\n## FrameSettings（帧设置）\n\n帧设置主要针对场景中的Camera、Baked or Custom Reflection和Realtime Reflection的相关设置。\n\n帧设置的优先级低于HDRP配置文件，即HDRP文件中没有打开某项功能，那么帧设置中对应的功能会被自动禁用。默认帧设置参数如下![image-20240627134815573](https://yin-qin.oss-cn-shanghai.aliyuncs.com/img/202406271653876.png)\n\n可在下拉选项中进行设置\n\n## Volume框架\n\nVolume的作用是通过调整各项HDRP参数，影响相机所看到的画面的最终渲染效果。\n\nVolume的优先级低于帧设置，即假如在当前相机的帧设置中没有打开某项功能，那么在Volume中对相关功能的调整是不起作用的。\n\n### Rendering（渲染）\n\n#### 1.Color Buffer Format（颜色缓存格式）\n\n出于性能考虑，HDRP默认使用R11G11B10格式（不含Alpha通道）\n\n如果要把HDRP渲染的画面合成到另外的图片上，就需要包含Alpha通道，这时就要选择R16G16B16A16\n\n#### 2.Lit Shader Mode（Lit着色器模式）\n\n- Forward\n- Deferred\n- Both\n  - 选择Both会让HDRP编译其他两种渲染方式着色器的变体\n\n选择Forward或Both模式，可以选择MSAA抗锯齿效果\n\n#### 3.Motion Vectors（运动矢量）\n\nHDRP可以在屏幕空间反射和运动模糊中使用运动矢量，通过Camera组件启用的TAA必须使用运动矢量才能正常工作。\n\n#### 4.Runtime Debug Display（运行时Debug显示）\n\n可以在运行时显示灯光和材质的属性信息，会增加构建时间和着色器内存占用\n\n#### 5.Dithering Cross-fade （平滑转换）\n\nHDRP在做LOD转换时进行平滑的转换\n\n#### 6.Terraub Hole（地形洞）\n\n启动后可以显示地形上的凹陷孔洞\n\n#### 7.Transparent Backface（透明背面）\n\n如果场景中没有使用透明材质或者不会渲染透明材质的背面。则可以禁用来减少构建时间\n\n此功能与Lit材质中的BackThenFrontRendering相关联，启用透明背面之后，材质中的这个选项才会有效果\n\n#### 8.Transparent Depth Prepass（透明深度预处理）\n\n如果你的场景中没有使用透明材质，禁用此选项减少构建时间。\n\n#### 9.Transparent Depth Postpass（透明深度后处理）\n\n如果你的场景中没有使用透明材质，禁用此选项减少构建时间。\n\n#### 10.Custom Pass（自定义通道）\n\n如果没有使用Custom Pass功能，则禁用此功能可以节约内存\n\n#### 11.Realtime Raytracing（实时光线追踪）\n\n如果要在HDRP中使用实时光纤追踪功能，则要先启动此选项\n\n#### 12.LOD Bias（LOD偏差）\n\n场景中的相机会使用此数值来计算LOD偏差\n\n#### 13.Maximum LOD Level（最大LOD级别）\n\n用于设置相机支持的最大LOD级别\n\n#### 14.Decals（贴花）\n\n调整与贴花相关的设置\n\n- Draw Distance（渲染距离）\n- Atlas Width和Atlas Height\n- Metal and Ambient Occlusion Properties\n- Maximum Clustered Decals on Screen\n\n#### 15.Dynamic Resolution（动态分辨率）\n\n#### 16.Low res Transparency（低分辨率透明）\n\n### Lighting（光照）\n\n### Lighting Quality Settings（光照质量设置）\n\n### Material（材质）\n\n### Post-Processing（后处理）\n\n### Post-processing Quality Setting（后处理质量设置）\n\n## 针对不同平台使用不同的HDRP配置\n\n# Volume框架详解\n\n## 作用\n\n- 为场景设置来自天空盒的光照\n- 设置各种阴影效果\n- 设置场景中的雾效\n- 设置基于屏幕空间的反射和折射\n- 设置后处理效果\n- 设置实时光线追踪\n\n## 使用方法\n\n1. 创建一个空的GameObject，然后添加Volume组件，并添加各种所需的重载（override）\n2. Global模式和Local模式\n   1. Global模式是全局生效\n   2. Local模式是碰撞范围内生效\n3. 要让Volume组件生效，需要将参数保存到一个配置文件中来\n\n## 参数类别\n\n一共分为九个参数\n\n","source":"_posts/Unity—HDRP--2：HDRP配置文件和Volume框架.md","raw":"---\ntitle: Unity—HDRP——2：HDRP配置文件和Volume框架\ndata: 2024-7-13 19:52:54\nupdated: 2024-7-13\ntags: \n    - TA\n    - Process\n    - Unity\n    - High Definition Render Pipline\ncategories: Unity\ndescription: HDRP高清渲染管线的配置文件和Volume框架介绍\ncover: https://yin-qin.oss-cn-shanghai.aliyuncs.com/img/202407111108328.jpg\n---\n\n# 基本框架\n\n- Process（HDRP project setting）\n- **HDRP配置文件和Volume框架**\n- HDRP Lighting System\n- LightMapping（光照烘培）\n- Material\n- PostProcessing\n- HDRPDebug\n- HDRP Real-Time Ray Tracing\n\n# HDRP配置文件和Volume框架\n\n## 介绍\n\n主要作用就是用来管理HDRP的所有渲染功能，首先会使用HDRP的配置文件生成一个HDRP的渲染管线实例，而这个渲染管线的实例则包含用于渲染的中间资源。\n\n## FrameSettings（帧设置）\n\n帧设置主要针对场景中的Camera、Baked or Custom Reflection和Realtime Reflection的相关设置。\n\n帧设置的优先级低于HDRP配置文件，即HDRP文件中没有打开某项功能，那么帧设置中对应的功能会被自动禁用。默认帧设置参数如下![image-20240627134815573](https://yin-qin.oss-cn-shanghai.aliyuncs.com/img/202406271653876.png)\n\n可在下拉选项中进行设置\n\n## Volume框架\n\nVolume的作用是通过调整各项HDRP参数，影响相机所看到的画面的最终渲染效果。\n\nVolume的优先级低于帧设置，即假如在当前相机的帧设置中没有打开某项功能，那么在Volume中对相关功能的调整是不起作用的。\n\n### Rendering（渲染）\n\n#### 1.Color Buffer Format（颜色缓存格式）\n\n出于性能考虑，HDRP默认使用R11G11B10格式（不含Alpha通道）\n\n如果要把HDRP渲染的画面合成到另外的图片上，就需要包含Alpha通道，这时就要选择R16G16B16A16\n\n#### 2.Lit Shader Mode（Lit着色器模式）\n\n- Forward\n- Deferred\n- Both\n  - 选择Both会让HDRP编译其他两种渲染方式着色器的变体\n\n选择Forward或Both模式，可以选择MSAA抗锯齿效果\n\n#### 3.Motion Vectors（运动矢量）\n\nHDRP可以在屏幕空间反射和运动模糊中使用运动矢量，通过Camera组件启用的TAA必须使用运动矢量才能正常工作。\n\n#### 4.Runtime Debug Display（运行时Debug显示）\n\n可以在运行时显示灯光和材质的属性信息，会增加构建时间和着色器内存占用\n\n#### 5.Dithering Cross-fade （平滑转换）\n\nHDRP在做LOD转换时进行平滑的转换\n\n#### 6.Terraub Hole（地形洞）\n\n启动后可以显示地形上的凹陷孔洞\n\n#### 7.Transparent Backface（透明背面）\n\n如果场景中没有使用透明材质或者不会渲染透明材质的背面。则可以禁用来减少构建时间\n\n此功能与Lit材质中的BackThenFrontRendering相关联，启用透明背面之后，材质中的这个选项才会有效果\n\n#### 8.Transparent Depth Prepass（透明深度预处理）\n\n如果你的场景中没有使用透明材质，禁用此选项减少构建时间。\n\n#### 9.Transparent Depth Postpass（透明深度后处理）\n\n如果你的场景中没有使用透明材质，禁用此选项减少构建时间。\n\n#### 10.Custom Pass（自定义通道）\n\n如果没有使用Custom Pass功能，则禁用此功能可以节约内存\n\n#### 11.Realtime Raytracing（实时光线追踪）\n\n如果要在HDRP中使用实时光纤追踪功能，则要先启动此选项\n\n#### 12.LOD Bias（LOD偏差）\n\n场景中的相机会使用此数值来计算LOD偏差\n\n#### 13.Maximum LOD Level（最大LOD级别）\n\n用于设置相机支持的最大LOD级别\n\n#### 14.Decals（贴花）\n\n调整与贴花相关的设置\n\n- Draw Distance（渲染距离）\n- Atlas Width和Atlas Height\n- Metal and Ambient Occlusion Properties\n- Maximum Clustered Decals on Screen\n\n#### 15.Dynamic Resolution（动态分辨率）\n\n#### 16.Low res Transparency（低分辨率透明）\n\n### Lighting（光照）\n\n### Lighting Quality Settings（光照质量设置）\n\n### Material（材质）\n\n### Post-Processing（后处理）\n\n### Post-processing Quality Setting（后处理质量设置）\n\n## 针对不同平台使用不同的HDRP配置\n\n# Volume框架详解\n\n## 作用\n\n- 为场景设置来自天空盒的光照\n- 设置各种阴影效果\n- 设置场景中的雾效\n- 设置基于屏幕空间的反射和折射\n- 设置后处理效果\n- 设置实时光线追踪\n\n## 使用方法\n\n1. 创建一个空的GameObject，然后添加Volume组件，并添加各种所需的重载（override）\n2. Global模式和Local模式\n   1. Global模式是全局生效\n   2. Local模式是碰撞范围内生效\n3. 要让Volume组件生效，需要将参数保存到一个配置文件中来\n\n## 参数类别\n\n一共分为九个参数\n\n","slug":"Unity—HDRP--2：HDRP配置文件和Volume框架","published":1,"date":"2024-07-11T06:04:07.013Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clyh2ogno000ue0dsb791gc48","content":"<h1 id=\"基本框架\"><a href=\"#基本框架\" class=\"headerlink\" title=\"基本框架\"></a>基本框架</h1><ul>\n<li>Process（HDRP project setting）</li>\n<li><strong>HDRP配置文件和Volume框架</strong></li>\n<li>HDRP Lighting System</li>\n<li>LightMapping（光照烘培）</li>\n<li>Material</li>\n<li>PostProcessing</li>\n<li>HDRPDebug</li>\n<li>HDRP Real-Time Ray Tracing</li>\n</ul>\n<h1 id=\"HDRP配置文件和Volume框架\"><a href=\"#HDRP配置文件和Volume框架\" class=\"headerlink\" title=\"HDRP配置文件和Volume框架\"></a>HDRP配置文件和Volume框架</h1><h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>主要作用就是用来管理HDRP的所有渲染功能，首先会使用HDRP的配置文件生成一个HDRP的渲染管线实例，而这个渲染管线的实例则包含用于渲染的中间资源。</p>\n<h2 id=\"FrameSettings（帧设置）\"><a href=\"#FrameSettings（帧设置）\" class=\"headerlink\" title=\"FrameSettings（帧设置）\"></a>FrameSettings（帧设置）</h2><p>帧设置主要针对场景中的Camera、Baked or Custom Reflection和Realtime Reflection的相关设置。</p>\n<p>帧设置的优先级低于HDRP配置文件，即HDRP文件中没有打开某项功能，那么帧设置中对应的功能会被自动禁用。默认帧设置参数如下<img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/img/202406271653876.png\" alt=\"image-20240627134815573\"></p>\n<p>可在下拉选项中进行设置</p>\n<h2 id=\"Volume框架\"><a href=\"#Volume框架\" class=\"headerlink\" title=\"Volume框架\"></a>Volume框架</h2><p>Volume的作用是通过调整各项HDRP参数，影响相机所看到的画面的最终渲染效果。</p>\n<p>Volume的优先级低于帧设置，即假如在当前相机的帧设置中没有打开某项功能，那么在Volume中对相关功能的调整是不起作用的。</p>\n<h3 id=\"Rendering（渲染）\"><a href=\"#Rendering（渲染）\" class=\"headerlink\" title=\"Rendering（渲染）\"></a>Rendering（渲染）</h3><h4 id=\"1-Color-Buffer-Format（颜色缓存格式）\"><a href=\"#1-Color-Buffer-Format（颜色缓存格式）\" class=\"headerlink\" title=\"1.Color Buffer Format（颜色缓存格式）\"></a>1.Color Buffer Format（颜色缓存格式）</h4><p>出于性能考虑，HDRP默认使用R11G11B10格式（不含Alpha通道）</p>\n<p>如果要把HDRP渲染的画面合成到另外的图片上，就需要包含Alpha通道，这时就要选择R16G16B16A16</p>\n<h4 id=\"2-Lit-Shader-Mode（Lit着色器模式）\"><a href=\"#2-Lit-Shader-Mode（Lit着色器模式）\" class=\"headerlink\" title=\"2.Lit Shader Mode（Lit着色器模式）\"></a>2.Lit Shader Mode（Lit着色器模式）</h4><ul>\n<li>Forward</li>\n<li>Deferred</li>\n<li>Both<ul>\n<li>选择Both会让HDRP编译其他两种渲染方式着色器的变体</li>\n</ul>\n</li>\n</ul>\n<p>选择Forward或Both模式，可以选择MSAA抗锯齿效果</p>\n<h4 id=\"3-Motion-Vectors（运动矢量）\"><a href=\"#3-Motion-Vectors（运动矢量）\" class=\"headerlink\" title=\"3.Motion Vectors（运动矢量）\"></a>3.Motion Vectors（运动矢量）</h4><p>HDRP可以在屏幕空间反射和运动模糊中使用运动矢量，通过Camera组件启用的TAA必须使用运动矢量才能正常工作。</p>\n<h4 id=\"4-Runtime-Debug-Display（运行时Debug显示）\"><a href=\"#4-Runtime-Debug-Display（运行时Debug显示）\" class=\"headerlink\" title=\"4.Runtime Debug Display（运行时Debug显示）\"></a>4.Runtime Debug Display（运行时Debug显示）</h4><p>可以在运行时显示灯光和材质的属性信息，会增加构建时间和着色器内存占用</p>\n<h4 id=\"5-Dithering-Cross-fade-（平滑转换）\"><a href=\"#5-Dithering-Cross-fade-（平滑转换）\" class=\"headerlink\" title=\"5.Dithering Cross-fade （平滑转换）\"></a>5.Dithering Cross-fade （平滑转换）</h4><p>HDRP在做LOD转换时进行平滑的转换</p>\n<h4 id=\"6-Terraub-Hole（地形洞）\"><a href=\"#6-Terraub-Hole（地形洞）\" class=\"headerlink\" title=\"6.Terraub Hole（地形洞）\"></a>6.Terraub Hole（地形洞）</h4><p>启动后可以显示地形上的凹陷孔洞</p>\n<h4 id=\"7-Transparent-Backface（透明背面）\"><a href=\"#7-Transparent-Backface（透明背面）\" class=\"headerlink\" title=\"7.Transparent Backface（透明背面）\"></a>7.Transparent Backface（透明背面）</h4><p>如果场景中没有使用透明材质或者不会渲染透明材质的背面。则可以禁用来减少构建时间</p>\n<p>此功能与Lit材质中的BackThenFrontRendering相关联，启用透明背面之后，材质中的这个选项才会有效果</p>\n<h4 id=\"8-Transparent-Depth-Prepass（透明深度预处理）\"><a href=\"#8-Transparent-Depth-Prepass（透明深度预处理）\" class=\"headerlink\" title=\"8.Transparent Depth Prepass（透明深度预处理）\"></a>8.Transparent Depth Prepass（透明深度预处理）</h4><p>如果你的场景中没有使用透明材质，禁用此选项减少构建时间。</p>\n<h4 id=\"9-Transparent-Depth-Postpass（透明深度后处理）\"><a href=\"#9-Transparent-Depth-Postpass（透明深度后处理）\" class=\"headerlink\" title=\"9.Transparent Depth Postpass（透明深度后处理）\"></a>9.Transparent Depth Postpass（透明深度后处理）</h4><p>如果你的场景中没有使用透明材质，禁用此选项减少构建时间。</p>\n<h4 id=\"10-Custom-Pass（自定义通道）\"><a href=\"#10-Custom-Pass（自定义通道）\" class=\"headerlink\" title=\"10.Custom Pass（自定义通道）\"></a>10.Custom Pass（自定义通道）</h4><p>如果没有使用Custom Pass功能，则禁用此功能可以节约内存</p>\n<h4 id=\"11-Realtime-Raytracing（实时光线追踪）\"><a href=\"#11-Realtime-Raytracing（实时光线追踪）\" class=\"headerlink\" title=\"11.Realtime Raytracing（实时光线追踪）\"></a>11.Realtime Raytracing（实时光线追踪）</h4><p>如果要在HDRP中使用实时光纤追踪功能，则要先启动此选项</p>\n<h4 id=\"12-LOD-Bias（LOD偏差）\"><a href=\"#12-LOD-Bias（LOD偏差）\" class=\"headerlink\" title=\"12.LOD Bias（LOD偏差）\"></a>12.LOD Bias（LOD偏差）</h4><p>场景中的相机会使用此数值来计算LOD偏差</p>\n<h4 id=\"13-Maximum-LOD-Level（最大LOD级别）\"><a href=\"#13-Maximum-LOD-Level（最大LOD级别）\" class=\"headerlink\" title=\"13.Maximum LOD Level（最大LOD级别）\"></a>13.Maximum LOD Level（最大LOD级别）</h4><p>用于设置相机支持的最大LOD级别</p>\n<h4 id=\"14-Decals（贴花）\"><a href=\"#14-Decals（贴花）\" class=\"headerlink\" title=\"14.Decals（贴花）\"></a>14.Decals（贴花）</h4><p>调整与贴花相关的设置</p>\n<ul>\n<li>Draw Distance（渲染距离）</li>\n<li>Atlas Width和Atlas Height</li>\n<li>Metal and Ambient Occlusion Properties</li>\n<li>Maximum Clustered Decals on Screen</li>\n</ul>\n<h4 id=\"15-Dynamic-Resolution（动态分辨率）\"><a href=\"#15-Dynamic-Resolution（动态分辨率）\" class=\"headerlink\" title=\"15.Dynamic Resolution（动态分辨率）\"></a>15.Dynamic Resolution（动态分辨率）</h4><h4 id=\"16-Low-res-Transparency（低分辨率透明）\"><a href=\"#16-Low-res-Transparency（低分辨率透明）\" class=\"headerlink\" title=\"16.Low res Transparency（低分辨率透明）\"></a>16.Low res Transparency（低分辨率透明）</h4><h3 id=\"Lighting（光照）\"><a href=\"#Lighting（光照）\" class=\"headerlink\" title=\"Lighting（光照）\"></a>Lighting（光照）</h3><h3 id=\"Lighting-Quality-Settings（光照质量设置）\"><a href=\"#Lighting-Quality-Settings（光照质量设置）\" class=\"headerlink\" title=\"Lighting Quality Settings（光照质量设置）\"></a>Lighting Quality Settings（光照质量设置）</h3><h3 id=\"Material（材质）\"><a href=\"#Material（材质）\" class=\"headerlink\" title=\"Material（材质）\"></a>Material（材质）</h3><h3 id=\"Post-Processing（后处理）\"><a href=\"#Post-Processing（后处理）\" class=\"headerlink\" title=\"Post-Processing（后处理）\"></a>Post-Processing（后处理）</h3><h3 id=\"Post-processing-Quality-Setting（后处理质量设置）\"><a href=\"#Post-processing-Quality-Setting（后处理质量设置）\" class=\"headerlink\" title=\"Post-processing Quality Setting（后处理质量设置）\"></a>Post-processing Quality Setting（后处理质量设置）</h3><h2 id=\"针对不同平台使用不同的HDRP配置\"><a href=\"#针对不同平台使用不同的HDRP配置\" class=\"headerlink\" title=\"针对不同平台使用不同的HDRP配置\"></a>针对不同平台使用不同的HDRP配置</h2><h1 id=\"Volume框架详解\"><a href=\"#Volume框架详解\" class=\"headerlink\" title=\"Volume框架详解\"></a>Volume框架详解</h1><h2 id=\"作用\"><a href=\"#作用\" class=\"headerlink\" title=\"作用\"></a>作用</h2><ul>\n<li>为场景设置来自天空盒的光照</li>\n<li>设置各种阴影效果</li>\n<li>设置场景中的雾效</li>\n<li>设置基于屏幕空间的反射和折射</li>\n<li>设置后处理效果</li>\n<li>设置实时光线追踪</li>\n</ul>\n<h2 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h2><ol>\n<li>创建一个空的GameObject，然后添加Volume组件，并添加各种所需的重载（override）</li>\n<li>Global模式和Local模式<ol>\n<li>Global模式是全局生效</li>\n<li>Local模式是碰撞范围内生效</li>\n</ol>\n</li>\n<li>要让Volume组件生效，需要将参数保存到一个配置文件中来</li>\n</ol>\n<h2 id=\"参数类别\"><a href=\"#参数类别\" class=\"headerlink\" title=\"参数类别\"></a>参数类别</h2><p>一共分为九个参数</p>\n","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"Vue","color":"#b8f0ae","icon":"https://img02.anheyu.com/adminuploads/1/2022/09/25/633001374747b.png"}]}],"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"}]}]}},"cover_type":"img","excerpt":"","more":"<h1 id=\"基本框架\"><a href=\"#基本框架\" class=\"headerlink\" title=\"基本框架\"></a>基本框架</h1><ul>\n<li>Process（HDRP project setting）</li>\n<li><strong>HDRP配置文件和Volume框架</strong></li>\n<li>HDRP Lighting System</li>\n<li>LightMapping（光照烘培）</li>\n<li>Material</li>\n<li>PostProcessing</li>\n<li>HDRPDebug</li>\n<li>HDRP Real-Time Ray Tracing</li>\n</ul>\n<h1 id=\"HDRP配置文件和Volume框架\"><a href=\"#HDRP配置文件和Volume框架\" class=\"headerlink\" title=\"HDRP配置文件和Volume框架\"></a>HDRP配置文件和Volume框架</h1><h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>主要作用就是用来管理HDRP的所有渲染功能，首先会使用HDRP的配置文件生成一个HDRP的渲染管线实例，而这个渲染管线的实例则包含用于渲染的中间资源。</p>\n<h2 id=\"FrameSettings（帧设置）\"><a href=\"#FrameSettings（帧设置）\" class=\"headerlink\" title=\"FrameSettings（帧设置）\"></a>FrameSettings（帧设置）</h2><p>帧设置主要针对场景中的Camera、Baked or Custom Reflection和Realtime Reflection的相关设置。</p>\n<p>帧设置的优先级低于HDRP配置文件，即HDRP文件中没有打开某项功能，那么帧设置中对应的功能会被自动禁用。默认帧设置参数如下<img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/img/202406271653876.png\" alt=\"image-20240627134815573\"></p>\n<p>可在下拉选项中进行设置</p>\n<h2 id=\"Volume框架\"><a href=\"#Volume框架\" class=\"headerlink\" title=\"Volume框架\"></a>Volume框架</h2><p>Volume的作用是通过调整各项HDRP参数，影响相机所看到的画面的最终渲染效果。</p>\n<p>Volume的优先级低于帧设置，即假如在当前相机的帧设置中没有打开某项功能，那么在Volume中对相关功能的调整是不起作用的。</p>\n<h3 id=\"Rendering（渲染）\"><a href=\"#Rendering（渲染）\" class=\"headerlink\" title=\"Rendering（渲染）\"></a>Rendering（渲染）</h3><h4 id=\"1-Color-Buffer-Format（颜色缓存格式）\"><a href=\"#1-Color-Buffer-Format（颜色缓存格式）\" class=\"headerlink\" title=\"1.Color Buffer Format（颜色缓存格式）\"></a>1.Color Buffer Format（颜色缓存格式）</h4><p>出于性能考虑，HDRP默认使用R11G11B10格式（不含Alpha通道）</p>\n<p>如果要把HDRP渲染的画面合成到另外的图片上，就需要包含Alpha通道，这时就要选择R16G16B16A16</p>\n<h4 id=\"2-Lit-Shader-Mode（Lit着色器模式）\"><a href=\"#2-Lit-Shader-Mode（Lit着色器模式）\" class=\"headerlink\" title=\"2.Lit Shader Mode（Lit着色器模式）\"></a>2.Lit Shader Mode（Lit着色器模式）</h4><ul>\n<li>Forward</li>\n<li>Deferred</li>\n<li>Both<ul>\n<li>选择Both会让HDRP编译其他两种渲染方式着色器的变体</li>\n</ul>\n</li>\n</ul>\n<p>选择Forward或Both模式，可以选择MSAA抗锯齿效果</p>\n<h4 id=\"3-Motion-Vectors（运动矢量）\"><a href=\"#3-Motion-Vectors（运动矢量）\" class=\"headerlink\" title=\"3.Motion Vectors（运动矢量）\"></a>3.Motion Vectors（运动矢量）</h4><p>HDRP可以在屏幕空间反射和运动模糊中使用运动矢量，通过Camera组件启用的TAA必须使用运动矢量才能正常工作。</p>\n<h4 id=\"4-Runtime-Debug-Display（运行时Debug显示）\"><a href=\"#4-Runtime-Debug-Display（运行时Debug显示）\" class=\"headerlink\" title=\"4.Runtime Debug Display（运行时Debug显示）\"></a>4.Runtime Debug Display（运行时Debug显示）</h4><p>可以在运行时显示灯光和材质的属性信息，会增加构建时间和着色器内存占用</p>\n<h4 id=\"5-Dithering-Cross-fade-（平滑转换）\"><a href=\"#5-Dithering-Cross-fade-（平滑转换）\" class=\"headerlink\" title=\"5.Dithering Cross-fade （平滑转换）\"></a>5.Dithering Cross-fade （平滑转换）</h4><p>HDRP在做LOD转换时进行平滑的转换</p>\n<h4 id=\"6-Terraub-Hole（地形洞）\"><a href=\"#6-Terraub-Hole（地形洞）\" class=\"headerlink\" title=\"6.Terraub Hole（地形洞）\"></a>6.Terraub Hole（地形洞）</h4><p>启动后可以显示地形上的凹陷孔洞</p>\n<h4 id=\"7-Transparent-Backface（透明背面）\"><a href=\"#7-Transparent-Backface（透明背面）\" class=\"headerlink\" title=\"7.Transparent Backface（透明背面）\"></a>7.Transparent Backface（透明背面）</h4><p>如果场景中没有使用透明材质或者不会渲染透明材质的背面。则可以禁用来减少构建时间</p>\n<p>此功能与Lit材质中的BackThenFrontRendering相关联，启用透明背面之后，材质中的这个选项才会有效果</p>\n<h4 id=\"8-Transparent-Depth-Prepass（透明深度预处理）\"><a href=\"#8-Transparent-Depth-Prepass（透明深度预处理）\" class=\"headerlink\" title=\"8.Transparent Depth Prepass（透明深度预处理）\"></a>8.Transparent Depth Prepass（透明深度预处理）</h4><p>如果你的场景中没有使用透明材质，禁用此选项减少构建时间。</p>\n<h4 id=\"9-Transparent-Depth-Postpass（透明深度后处理）\"><a href=\"#9-Transparent-Depth-Postpass（透明深度后处理）\" class=\"headerlink\" title=\"9.Transparent Depth Postpass（透明深度后处理）\"></a>9.Transparent Depth Postpass（透明深度后处理）</h4><p>如果你的场景中没有使用透明材质，禁用此选项减少构建时间。</p>\n<h4 id=\"10-Custom-Pass（自定义通道）\"><a href=\"#10-Custom-Pass（自定义通道）\" class=\"headerlink\" title=\"10.Custom Pass（自定义通道）\"></a>10.Custom Pass（自定义通道）</h4><p>如果没有使用Custom Pass功能，则禁用此功能可以节约内存</p>\n<h4 id=\"11-Realtime-Raytracing（实时光线追踪）\"><a href=\"#11-Realtime-Raytracing（实时光线追踪）\" class=\"headerlink\" title=\"11.Realtime Raytracing（实时光线追踪）\"></a>11.Realtime Raytracing（实时光线追踪）</h4><p>如果要在HDRP中使用实时光纤追踪功能，则要先启动此选项</p>\n<h4 id=\"12-LOD-Bias（LOD偏差）\"><a href=\"#12-LOD-Bias（LOD偏差）\" class=\"headerlink\" title=\"12.LOD Bias（LOD偏差）\"></a>12.LOD Bias（LOD偏差）</h4><p>场景中的相机会使用此数值来计算LOD偏差</p>\n<h4 id=\"13-Maximum-LOD-Level（最大LOD级别）\"><a href=\"#13-Maximum-LOD-Level（最大LOD级别）\" class=\"headerlink\" title=\"13.Maximum LOD Level（最大LOD级别）\"></a>13.Maximum LOD Level（最大LOD级别）</h4><p>用于设置相机支持的最大LOD级别</p>\n<h4 id=\"14-Decals（贴花）\"><a href=\"#14-Decals（贴花）\" class=\"headerlink\" title=\"14.Decals（贴花）\"></a>14.Decals（贴花）</h4><p>调整与贴花相关的设置</p>\n<ul>\n<li>Draw Distance（渲染距离）</li>\n<li>Atlas Width和Atlas Height</li>\n<li>Metal and Ambient Occlusion Properties</li>\n<li>Maximum Clustered Decals on Screen</li>\n</ul>\n<h4 id=\"15-Dynamic-Resolution（动态分辨率）\"><a href=\"#15-Dynamic-Resolution（动态分辨率）\" class=\"headerlink\" title=\"15.Dynamic Resolution（动态分辨率）\"></a>15.Dynamic Resolution（动态分辨率）</h4><h4 id=\"16-Low-res-Transparency（低分辨率透明）\"><a href=\"#16-Low-res-Transparency（低分辨率透明）\" class=\"headerlink\" title=\"16.Low res Transparency（低分辨率透明）\"></a>16.Low res Transparency（低分辨率透明）</h4><h3 id=\"Lighting（光照）\"><a href=\"#Lighting（光照）\" class=\"headerlink\" title=\"Lighting（光照）\"></a>Lighting（光照）</h3><h3 id=\"Lighting-Quality-Settings（光照质量设置）\"><a href=\"#Lighting-Quality-Settings（光照质量设置）\" class=\"headerlink\" title=\"Lighting Quality Settings（光照质量设置）\"></a>Lighting Quality Settings（光照质量设置）</h3><h3 id=\"Material（材质）\"><a href=\"#Material（材质）\" class=\"headerlink\" title=\"Material（材质）\"></a>Material（材质）</h3><h3 id=\"Post-Processing（后处理）\"><a href=\"#Post-Processing（后处理）\" class=\"headerlink\" title=\"Post-Processing（后处理）\"></a>Post-Processing（后处理）</h3><h3 id=\"Post-processing-Quality-Setting（后处理质量设置）\"><a href=\"#Post-processing-Quality-Setting（后处理质量设置）\" class=\"headerlink\" title=\"Post-processing Quality Setting（后处理质量设置）\"></a>Post-processing Quality Setting（后处理质量设置）</h3><h2 id=\"针对不同平台使用不同的HDRP配置\"><a href=\"#针对不同平台使用不同的HDRP配置\" class=\"headerlink\" title=\"针对不同平台使用不同的HDRP配置\"></a>针对不同平台使用不同的HDRP配置</h2><h1 id=\"Volume框架详解\"><a href=\"#Volume框架详解\" class=\"headerlink\" title=\"Volume框架详解\"></a>Volume框架详解</h1><h2 id=\"作用\"><a href=\"#作用\" class=\"headerlink\" title=\"作用\"></a>作用</h2><ul>\n<li>为场景设置来自天空盒的光照</li>\n<li>设置各种阴影效果</li>\n<li>设置场景中的雾效</li>\n<li>设置基于屏幕空间的反射和折射</li>\n<li>设置后处理效果</li>\n<li>设置实时光线追踪</li>\n</ul>\n<h2 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h2><ol>\n<li>创建一个空的GameObject，然后添加Volume组件，并添加各种所需的重载（override）</li>\n<li>Global模式和Local模式<ol>\n<li>Global模式是全局生效</li>\n<li>Local模式是碰撞范围内生效</li>\n</ol>\n</li>\n<li>要让Volume组件生效，需要将参数保存到一个配置文件中来</li>\n</ol>\n<h2 id=\"参数类别\"><a href=\"#参数类别\" class=\"headerlink\" title=\"参数类别\"></a>参数类别</h2><p>一共分为九个参数</p>\n"},{"title":"Unity—HDRP——3：HDRP Lighting System","data":"2024-07-14T11:52:54.000Z","updated":"2024-07-13T16:00:00.000Z","description":"HDRP光照系统，烘培光照设置和流程，光照组件的介绍","cover":"https://yin-qin.oss-cn-shanghai.aliyuncs.com/img/202407111108328.jpg","_content":"\n# 基本框架\n\n- Process（HDRP project setting）\n- HDRP配置文件和Volume框架\n- **HDRP Lighting System**\n- LightMapping（光照烘培）\n- Material\n- PostProcessing\n- HDRPDebug\n- HDRP Real-Time Ray Tracing\n\n# HDRP Lighting System\n\n## 目的\n\n在HDRP中如何给场景打光\n\n## 流程步骤\n\n1. 场景主要分为四个部分\n   - Cameras\n   - Models\n   - Light&Probes\n   - Volumes\n2. 启用Scene Settings Volume![](https://yin-qin.oss-cn-shanghai.aliyuncs.com/img/202406281522831.png)\n3. 启用Directional Light![](https://yin-qin.oss-cn-shanghai.aliyuncs.com/img/202406281523050.png)\n4. 启用Volume中的自动曝光控制![](https://yin-qin.oss-cn-shanghai.aliyuncs.com/img/202406281524263.png)\n5. 启用所有自己设置的光源\n6. 启用场景中所有的反射探针\n   1. 烘培之前确保参与烘培的物体被标记为Static\n7. 启用场景中的光照探针组\n8. 完成整个场景的光照烘培\n   - 光照贴图烘培\n     1. Environment\n        - 可以使用环境光Volume，前提是Volume必须包含一个sky相关的Override\n     2. Mixed Lighting\n        - 想要烘培全局光照，必须要勾选Baked Global Illumination\n        - shadowmask和Baked Indirect区别是Shaowmask是实时的，并且消耗高\n     3. Lightmapping Setting\n     4. AutoGenerate（一般不建议勾选此项）\n     5. Generate Lighting按钮\n     6. 烘培数据展示区\n   - 实时光线追踪\n9. 增强间接光强度\n   - 启用Scene Settings Volume\n10. 处理阴影和环境光遮蔽、\n    1. 只启用平行光的Shadow map选项，画面中的阴影会比较硬\n    2. 设置阴影效果首先看一下AngularDiameter参数\n    3. 设置接触阴影可以增加阴影细节\n    4. 除了灯光投射的阴影，还可以添加MicroShadows，可以用于调整阴影的透明度\n    5. 最后提娜佳Ambient Occlusion\n11. 添加雾效，在Volume组件中启用Fog重载\n12. 画面抗锯齿处理\n13. 添加后处理Volume组件\n\n## Night_Lighting场景打光步骤\n\n1. 修改Directional Light设置\n   1. 将平行光色温和强度调整为月光的色温和强度\n2. 修改天空盒HDRI图\n3. 修改曝光设置\n4. 修改雾效设置\n5. 修改接触阴影设置\n6. ColorAdjustments颜色设置\n7. 修改白平衡设置\n\n## 光源类型和模式\n\n1. SpotLight\n2. DurectionalLight\n3. PointLight\n4. AreaLight\n5. 自发光\n\n### 制作和使用LightCookie为灯光添加更多细节\n\n## 光照相关的常见问题\n\n### 为什么场景中会出现奇怪的阴影快\n\n### 为什么在相机镜头移动时场景中的阴影会扭曲或闪烁\n\n### 未启用体积光的HighQuality选项，为什么编辑器中的灯光雾效会有那么多噪点\n\n### 启用高质量选项对性能影响到底有多大\n\n## 光源分层\n\n### 光源分层的作用\n\n1. 让光源只照亮场景中指定的物体，并投射阴影\n2. 让光源只照亮指定的物体，但是让其他物体投射阴影\n\n## 使用光照探针\n\n### 为什么要使用光照探针\n\n光照烘培可以为场景中的静态物体烘培间接光照信息，但是如何为场景中的动态物体提供间接光照信息呢？\n\n具体作用：\n\n1. 为静态物体提供间接光照信息\n2. 为场景中那些小的物体提供间接光照信息，如果让这些小物体参与光照贴图烘培，会因为占用光照贴图空间而导致光照贴图尺寸变大，进而导致内存占用升高影响运行性能\n\n对于小物体\n\n1. 启用MeshRenderer组件的Contribute Global Illumination选项，让网格参与全局光烘培\n2. 将ReceiveGlobalillumination（获取全局光的方式）设置为LightProbes，所以网格本身从烘培所得的间接光照信息不会被保存到光照贴图中\n   1. **注意**：在烘培时，将MeshRenderer设置为从Lightmaps获取全局光照信息，待烘培完成再切换成LightProbes，此时光照探针不会起作用\n3. 为场景中的移动物体提供间接光照信息\n\n### 使用光照探针组的基本步骤\n\n1. 创造光照探针组\n2. 通过光照烘培完成间接光的生成\n   1. 要想让光照探针起作用，首先需要完成对整个场景的烘培\n3. 调整光照探针组\n   - 如果调整了光照探针组，就需要重新烘培场景\n   - 如果没有设置场景中的物体从Lightmaps获取全局光照信息，则默认情况下会使用LightProbes来获取间接光照信息\n   - 光照探针摆放有一定的原则，否则容易穿帮\n     - 在明暗交界的地方要多放一些光照探针\n     - 因为接受光照探针间接光的物体会针对离它最近的4个探针进行采样，所以探针之间的间距要合理\n\n### MeshRenderer组件中的Probes选项详解\n\n如何使用MeshRenderer组件的AnchorOverride参数\n\n## 使用ReflectionProbe为场景提供反射信息\n\n### ScreenSpaceReflection（屏幕空间反射）\n\n### Reflection Probe（反射探针）\n\n## 阴影\n\n### 阴影的种类和三种光照模式\n\nHDRP中的阴影可以分为两类\n\n1. 场景中光源投射的阴影\n2. 基于屏幕空间信息计算的阴影","source":"_posts/Unity—HDRP--3：HDRP Lighting System.md","raw":"---\ntitle: Unity—HDRP——3：HDRP Lighting System\ndata: 2024-7-14 19:52:54\nupdated: 2024-7-14\ntags: \n    - TA\n    - Process\n    - Unity\n    - High Definition Render Pipline\ncategories: Unity\ndescription: HDRP光照系统，烘培光照设置和流程，光照组件的介绍\ncover: https://yin-qin.oss-cn-shanghai.aliyuncs.com/img/202407111108328.jpg\n---\n\n# 基本框架\n\n- Process（HDRP project setting）\n- HDRP配置文件和Volume框架\n- **HDRP Lighting System**\n- LightMapping（光照烘培）\n- Material\n- PostProcessing\n- HDRPDebug\n- HDRP Real-Time Ray Tracing\n\n# HDRP Lighting System\n\n## 目的\n\n在HDRP中如何给场景打光\n\n## 流程步骤\n\n1. 场景主要分为四个部分\n   - Cameras\n   - Models\n   - Light&Probes\n   - Volumes\n2. 启用Scene Settings Volume![](https://yin-qin.oss-cn-shanghai.aliyuncs.com/img/202406281522831.png)\n3. 启用Directional Light![](https://yin-qin.oss-cn-shanghai.aliyuncs.com/img/202406281523050.png)\n4. 启用Volume中的自动曝光控制![](https://yin-qin.oss-cn-shanghai.aliyuncs.com/img/202406281524263.png)\n5. 启用所有自己设置的光源\n6. 启用场景中所有的反射探针\n   1. 烘培之前确保参与烘培的物体被标记为Static\n7. 启用场景中的光照探针组\n8. 完成整个场景的光照烘培\n   - 光照贴图烘培\n     1. Environment\n        - 可以使用环境光Volume，前提是Volume必须包含一个sky相关的Override\n     2. Mixed Lighting\n        - 想要烘培全局光照，必须要勾选Baked Global Illumination\n        - shadowmask和Baked Indirect区别是Shaowmask是实时的，并且消耗高\n     3. Lightmapping Setting\n     4. AutoGenerate（一般不建议勾选此项）\n     5. Generate Lighting按钮\n     6. 烘培数据展示区\n   - 实时光线追踪\n9. 增强间接光强度\n   - 启用Scene Settings Volume\n10. 处理阴影和环境光遮蔽、\n    1. 只启用平行光的Shadow map选项，画面中的阴影会比较硬\n    2. 设置阴影效果首先看一下AngularDiameter参数\n    3. 设置接触阴影可以增加阴影细节\n    4. 除了灯光投射的阴影，还可以添加MicroShadows，可以用于调整阴影的透明度\n    5. 最后提娜佳Ambient Occlusion\n11. 添加雾效，在Volume组件中启用Fog重载\n12. 画面抗锯齿处理\n13. 添加后处理Volume组件\n\n## Night_Lighting场景打光步骤\n\n1. 修改Directional Light设置\n   1. 将平行光色温和强度调整为月光的色温和强度\n2. 修改天空盒HDRI图\n3. 修改曝光设置\n4. 修改雾效设置\n5. 修改接触阴影设置\n6. ColorAdjustments颜色设置\n7. 修改白平衡设置\n\n## 光源类型和模式\n\n1. SpotLight\n2. DurectionalLight\n3. PointLight\n4. AreaLight\n5. 自发光\n\n### 制作和使用LightCookie为灯光添加更多细节\n\n## 光照相关的常见问题\n\n### 为什么场景中会出现奇怪的阴影快\n\n### 为什么在相机镜头移动时场景中的阴影会扭曲或闪烁\n\n### 未启用体积光的HighQuality选项，为什么编辑器中的灯光雾效会有那么多噪点\n\n### 启用高质量选项对性能影响到底有多大\n\n## 光源分层\n\n### 光源分层的作用\n\n1. 让光源只照亮场景中指定的物体，并投射阴影\n2. 让光源只照亮指定的物体，但是让其他物体投射阴影\n\n## 使用光照探针\n\n### 为什么要使用光照探针\n\n光照烘培可以为场景中的静态物体烘培间接光照信息，但是如何为场景中的动态物体提供间接光照信息呢？\n\n具体作用：\n\n1. 为静态物体提供间接光照信息\n2. 为场景中那些小的物体提供间接光照信息，如果让这些小物体参与光照贴图烘培，会因为占用光照贴图空间而导致光照贴图尺寸变大，进而导致内存占用升高影响运行性能\n\n对于小物体\n\n1. 启用MeshRenderer组件的Contribute Global Illumination选项，让网格参与全局光烘培\n2. 将ReceiveGlobalillumination（获取全局光的方式）设置为LightProbes，所以网格本身从烘培所得的间接光照信息不会被保存到光照贴图中\n   1. **注意**：在烘培时，将MeshRenderer设置为从Lightmaps获取全局光照信息，待烘培完成再切换成LightProbes，此时光照探针不会起作用\n3. 为场景中的移动物体提供间接光照信息\n\n### 使用光照探针组的基本步骤\n\n1. 创造光照探针组\n2. 通过光照烘培完成间接光的生成\n   1. 要想让光照探针起作用，首先需要完成对整个场景的烘培\n3. 调整光照探针组\n   - 如果调整了光照探针组，就需要重新烘培场景\n   - 如果没有设置场景中的物体从Lightmaps获取全局光照信息，则默认情况下会使用LightProbes来获取间接光照信息\n   - 光照探针摆放有一定的原则，否则容易穿帮\n     - 在明暗交界的地方要多放一些光照探针\n     - 因为接受光照探针间接光的物体会针对离它最近的4个探针进行采样，所以探针之间的间距要合理\n\n### MeshRenderer组件中的Probes选项详解\n\n如何使用MeshRenderer组件的AnchorOverride参数\n\n## 使用ReflectionProbe为场景提供反射信息\n\n### ScreenSpaceReflection（屏幕空间反射）\n\n### Reflection Probe（反射探针）\n\n## 阴影\n\n### 阴影的种类和三种光照模式\n\nHDRP中的阴影可以分为两类\n\n1. 场景中光源投射的阴影\n2. 基于屏幕空间信息计算的阴影","slug":"Unity—HDRP--3：HDRP Lighting System","published":1,"date":"2024-07-11T06:04:07.115Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clyh2ognp000xe0ds4o6c9i0k","content":"<h1 id=\"基本框架\"><a href=\"#基本框架\" class=\"headerlink\" title=\"基本框架\"></a>基本框架</h1><ul>\n<li>Process（HDRP project setting）</li>\n<li>HDRP配置文件和Volume框架</li>\n<li><strong>HDRP Lighting System</strong></li>\n<li>LightMapping（光照烘培）</li>\n<li>Material</li>\n<li>PostProcessing</li>\n<li>HDRPDebug</li>\n<li>HDRP Real-Time Ray Tracing</li>\n</ul>\n<h1 id=\"HDRP-Lighting-System\"><a href=\"#HDRP-Lighting-System\" class=\"headerlink\" title=\"HDRP Lighting System\"></a>HDRP Lighting System</h1><h2 id=\"目的\"><a href=\"#目的\" class=\"headerlink\" title=\"目的\"></a>目的</h2><p>在HDRP中如何给场景打光</p>\n<h2 id=\"流程步骤\"><a href=\"#流程步骤\" class=\"headerlink\" title=\"流程步骤\"></a>流程步骤</h2><ol>\n<li>场景主要分为四个部分<ul>\n<li>Cameras</li>\n<li>Models</li>\n<li>Light&amp;Probes</li>\n<li>Volumes</li>\n</ul>\n</li>\n<li>启用Scene Settings Volume<img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/img/202406281522831.png\" alt=\"\"></li>\n<li>启用Directional Light<img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/img/202406281523050.png\" alt=\"\"></li>\n<li>启用Volume中的自动曝光控制<img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/img/202406281524263.png\" alt=\"\"></li>\n<li>启用所有自己设置的光源</li>\n<li>启用场景中所有的反射探针<ol>\n<li>烘培之前确保参与烘培的物体被标记为Static</li>\n</ol>\n</li>\n<li>启用场景中的光照探针组</li>\n<li>完成整个场景的光照烘培<ul>\n<li>光照贴图烘培<ol>\n<li>Environment<ul>\n<li>可以使用环境光Volume，前提是Volume必须包含一个sky相关的Override</li>\n</ul>\n</li>\n<li>Mixed Lighting<ul>\n<li>想要烘培全局光照，必须要勾选Baked Global Illumination</li>\n<li>shadowmask和Baked Indirect区别是Shaowmask是实时的，并且消耗高</li>\n</ul>\n</li>\n<li>Lightmapping Setting</li>\n<li>AutoGenerate（一般不建议勾选此项）</li>\n<li>Generate Lighting按钮</li>\n<li>烘培数据展示区</li>\n</ol>\n</li>\n<li>实时光线追踪</li>\n</ul>\n</li>\n<li>增强间接光强度<ul>\n<li>启用Scene Settings Volume</li>\n</ul>\n</li>\n<li>处理阴影和环境光遮蔽、<ol>\n<li>只启用平行光的Shadow map选项，画面中的阴影会比较硬</li>\n<li>设置阴影效果首先看一下AngularDiameter参数</li>\n<li>设置接触阴影可以增加阴影细节</li>\n<li>除了灯光投射的阴影，还可以添加MicroShadows，可以用于调整阴影的透明度</li>\n<li>最后提娜佳Ambient Occlusion</li>\n</ol>\n</li>\n<li>添加雾效，在Volume组件中启用Fog重载</li>\n<li>画面抗锯齿处理</li>\n<li>添加后处理Volume组件</li>\n</ol>\n<h2 id=\"Night-Lighting场景打光步骤\"><a href=\"#Night-Lighting场景打光步骤\" class=\"headerlink\" title=\"Night_Lighting场景打光步骤\"></a>Night_Lighting场景打光步骤</h2><ol>\n<li>修改Directional Light设置<ol>\n<li>将平行光色温和强度调整为月光的色温和强度</li>\n</ol>\n</li>\n<li>修改天空盒HDRI图</li>\n<li>修改曝光设置</li>\n<li>修改雾效设置</li>\n<li>修改接触阴影设置</li>\n<li>ColorAdjustments颜色设置</li>\n<li>修改白平衡设置</li>\n</ol>\n<h2 id=\"光源类型和模式\"><a href=\"#光源类型和模式\" class=\"headerlink\" title=\"光源类型和模式\"></a>光源类型和模式</h2><ol>\n<li>SpotLight</li>\n<li>DurectionalLight</li>\n<li>PointLight</li>\n<li>AreaLight</li>\n<li>自发光</li>\n</ol>\n<h3 id=\"制作和使用LightCookie为灯光添加更多细节\"><a href=\"#制作和使用LightCookie为灯光添加更多细节\" class=\"headerlink\" title=\"制作和使用LightCookie为灯光添加更多细节\"></a>制作和使用LightCookie为灯光添加更多细节</h3><h2 id=\"光照相关的常见问题\"><a href=\"#光照相关的常见问题\" class=\"headerlink\" title=\"光照相关的常见问题\"></a>光照相关的常见问题</h2><h3 id=\"为什么场景中会出现奇怪的阴影快\"><a href=\"#为什么场景中会出现奇怪的阴影快\" class=\"headerlink\" title=\"为什么场景中会出现奇怪的阴影快\"></a>为什么场景中会出现奇怪的阴影快</h3><h3 id=\"为什么在相机镜头移动时场景中的阴影会扭曲或闪烁\"><a href=\"#为什么在相机镜头移动时场景中的阴影会扭曲或闪烁\" class=\"headerlink\" title=\"为什么在相机镜头移动时场景中的阴影会扭曲或闪烁\"></a>为什么在相机镜头移动时场景中的阴影会扭曲或闪烁</h3><h3 id=\"未启用体积光的HighQuality选项，为什么编辑器中的灯光雾效会有那么多噪点\"><a href=\"#未启用体积光的HighQuality选项，为什么编辑器中的灯光雾效会有那么多噪点\" class=\"headerlink\" title=\"未启用体积光的HighQuality选项，为什么编辑器中的灯光雾效会有那么多噪点\"></a>未启用体积光的HighQuality选项，为什么编辑器中的灯光雾效会有那么多噪点</h3><h3 id=\"启用高质量选项对性能影响到底有多大\"><a href=\"#启用高质量选项对性能影响到底有多大\" class=\"headerlink\" title=\"启用高质量选项对性能影响到底有多大\"></a>启用高质量选项对性能影响到底有多大</h3><h2 id=\"光源分层\"><a href=\"#光源分层\" class=\"headerlink\" title=\"光源分层\"></a>光源分层</h2><h3 id=\"光源分层的作用\"><a href=\"#光源分层的作用\" class=\"headerlink\" title=\"光源分层的作用\"></a>光源分层的作用</h3><ol>\n<li>让光源只照亮场景中指定的物体，并投射阴影</li>\n<li>让光源只照亮指定的物体，但是让其他物体投射阴影</li>\n</ol>\n<h2 id=\"使用光照探针\"><a href=\"#使用光照探针\" class=\"headerlink\" title=\"使用光照探针\"></a>使用光照探针</h2><h3 id=\"为什么要使用光照探针\"><a href=\"#为什么要使用光照探针\" class=\"headerlink\" title=\"为什么要使用光照探针\"></a>为什么要使用光照探针</h3><p>光照烘培可以为场景中的静态物体烘培间接光照信息，但是如何为场景中的动态物体提供间接光照信息呢？</p>\n<p>具体作用：</p>\n<ol>\n<li>为静态物体提供间接光照信息</li>\n<li>为场景中那些小的物体提供间接光照信息，如果让这些小物体参与光照贴图烘培，会因为占用光照贴图空间而导致光照贴图尺寸变大，进而导致内存占用升高影响运行性能</li>\n</ol>\n<p>对于小物体</p>\n<ol>\n<li>启用MeshRenderer组件的Contribute Global Illumination选项，让网格参与全局光烘培</li>\n<li>将ReceiveGlobalillumination（获取全局光的方式）设置为LightProbes，所以网格本身从烘培所得的间接光照信息不会被保存到光照贴图中<ol>\n<li><strong>注意</strong>：在烘培时，将MeshRenderer设置为从Lightmaps获取全局光照信息，待烘培完成再切换成LightProbes，此时光照探针不会起作用</li>\n</ol>\n</li>\n<li>为场景中的移动物体提供间接光照信息</li>\n</ol>\n<h3 id=\"使用光照探针组的基本步骤\"><a href=\"#使用光照探针组的基本步骤\" class=\"headerlink\" title=\"使用光照探针组的基本步骤\"></a>使用光照探针组的基本步骤</h3><ol>\n<li>创造光照探针组</li>\n<li>通过光照烘培完成间接光的生成<ol>\n<li>要想让光照探针起作用，首先需要完成对整个场景的烘培</li>\n</ol>\n</li>\n<li>调整光照探针组<ul>\n<li>如果调整了光照探针组，就需要重新烘培场景</li>\n<li>如果没有设置场景中的物体从Lightmaps获取全局光照信息，则默认情况下会使用LightProbes来获取间接光照信息</li>\n<li>光照探针摆放有一定的原则，否则容易穿帮<ul>\n<li>在明暗交界的地方要多放一些光照探针</li>\n<li>因为接受光照探针间接光的物体会针对离它最近的4个探针进行采样，所以探针之间的间距要合理</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"MeshRenderer组件中的Probes选项详解\"><a href=\"#MeshRenderer组件中的Probes选项详解\" class=\"headerlink\" title=\"MeshRenderer组件中的Probes选项详解\"></a>MeshRenderer组件中的Probes选项详解</h3><p>如何使用MeshRenderer组件的AnchorOverride参数</p>\n<h2 id=\"使用ReflectionProbe为场景提供反射信息\"><a href=\"#使用ReflectionProbe为场景提供反射信息\" class=\"headerlink\" title=\"使用ReflectionProbe为场景提供反射信息\"></a>使用ReflectionProbe为场景提供反射信息</h2><h3 id=\"ScreenSpaceReflection（屏幕空间反射）\"><a href=\"#ScreenSpaceReflection（屏幕空间反射）\" class=\"headerlink\" title=\"ScreenSpaceReflection（屏幕空间反射）\"></a>ScreenSpaceReflection（屏幕空间反射）</h3><h3 id=\"Reflection-Probe（反射探针）\"><a href=\"#Reflection-Probe（反射探针）\" class=\"headerlink\" title=\"Reflection Probe（反射探针）\"></a>Reflection Probe（反射探针）</h3><h2 id=\"阴影\"><a href=\"#阴影\" class=\"headerlink\" title=\"阴影\"></a>阴影</h2><h3 id=\"阴影的种类和三种光照模式\"><a href=\"#阴影的种类和三种光照模式\" class=\"headerlink\" title=\"阴影的种类和三种光照模式\"></a>阴影的种类和三种光照模式</h3><p>HDRP中的阴影可以分为两类</p>\n<ol>\n<li>场景中光源投射的阴影</li>\n<li>基于屏幕空间信息计算的阴影</li>\n</ol>\n","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"Vue","color":"#b8f0ae","icon":"https://img02.anheyu.com/adminuploads/1/2022/09/25/633001374747b.png"}]}],"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"}]}]}},"cover_type":"img","excerpt":"","more":"<h1 id=\"基本框架\"><a href=\"#基本框架\" class=\"headerlink\" title=\"基本框架\"></a>基本框架</h1><ul>\n<li>Process（HDRP project setting）</li>\n<li>HDRP配置文件和Volume框架</li>\n<li><strong>HDRP Lighting System</strong></li>\n<li>LightMapping（光照烘培）</li>\n<li>Material</li>\n<li>PostProcessing</li>\n<li>HDRPDebug</li>\n<li>HDRP Real-Time Ray Tracing</li>\n</ul>\n<h1 id=\"HDRP-Lighting-System\"><a href=\"#HDRP-Lighting-System\" class=\"headerlink\" title=\"HDRP Lighting System\"></a>HDRP Lighting System</h1><h2 id=\"目的\"><a href=\"#目的\" class=\"headerlink\" title=\"目的\"></a>目的</h2><p>在HDRP中如何给场景打光</p>\n<h2 id=\"流程步骤\"><a href=\"#流程步骤\" class=\"headerlink\" title=\"流程步骤\"></a>流程步骤</h2><ol>\n<li>场景主要分为四个部分<ul>\n<li>Cameras</li>\n<li>Models</li>\n<li>Light&amp;Probes</li>\n<li>Volumes</li>\n</ul>\n</li>\n<li>启用Scene Settings Volume<img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/img/202406281522831.png\" alt=\"\"></li>\n<li>启用Directional Light<img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/img/202406281523050.png\" alt=\"\"></li>\n<li>启用Volume中的自动曝光控制<img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/img/202406281524263.png\" alt=\"\"></li>\n<li>启用所有自己设置的光源</li>\n<li>启用场景中所有的反射探针<ol>\n<li>烘培之前确保参与烘培的物体被标记为Static</li>\n</ol>\n</li>\n<li>启用场景中的光照探针组</li>\n<li>完成整个场景的光照烘培<ul>\n<li>光照贴图烘培<ol>\n<li>Environment<ul>\n<li>可以使用环境光Volume，前提是Volume必须包含一个sky相关的Override</li>\n</ul>\n</li>\n<li>Mixed Lighting<ul>\n<li>想要烘培全局光照，必须要勾选Baked Global Illumination</li>\n<li>shadowmask和Baked Indirect区别是Shaowmask是实时的，并且消耗高</li>\n</ul>\n</li>\n<li>Lightmapping Setting</li>\n<li>AutoGenerate（一般不建议勾选此项）</li>\n<li>Generate Lighting按钮</li>\n<li>烘培数据展示区</li>\n</ol>\n</li>\n<li>实时光线追踪</li>\n</ul>\n</li>\n<li>增强间接光强度<ul>\n<li>启用Scene Settings Volume</li>\n</ul>\n</li>\n<li>处理阴影和环境光遮蔽、<ol>\n<li>只启用平行光的Shadow map选项，画面中的阴影会比较硬</li>\n<li>设置阴影效果首先看一下AngularDiameter参数</li>\n<li>设置接触阴影可以增加阴影细节</li>\n<li>除了灯光投射的阴影，还可以添加MicroShadows，可以用于调整阴影的透明度</li>\n<li>最后提娜佳Ambient Occlusion</li>\n</ol>\n</li>\n<li>添加雾效，在Volume组件中启用Fog重载</li>\n<li>画面抗锯齿处理</li>\n<li>添加后处理Volume组件</li>\n</ol>\n<h2 id=\"Night-Lighting场景打光步骤\"><a href=\"#Night-Lighting场景打光步骤\" class=\"headerlink\" title=\"Night_Lighting场景打光步骤\"></a>Night_Lighting场景打光步骤</h2><ol>\n<li>修改Directional Light设置<ol>\n<li>将平行光色温和强度调整为月光的色温和强度</li>\n</ol>\n</li>\n<li>修改天空盒HDRI图</li>\n<li>修改曝光设置</li>\n<li>修改雾效设置</li>\n<li>修改接触阴影设置</li>\n<li>ColorAdjustments颜色设置</li>\n<li>修改白平衡设置</li>\n</ol>\n<h2 id=\"光源类型和模式\"><a href=\"#光源类型和模式\" class=\"headerlink\" title=\"光源类型和模式\"></a>光源类型和模式</h2><ol>\n<li>SpotLight</li>\n<li>DurectionalLight</li>\n<li>PointLight</li>\n<li>AreaLight</li>\n<li>自发光</li>\n</ol>\n<h3 id=\"制作和使用LightCookie为灯光添加更多细节\"><a href=\"#制作和使用LightCookie为灯光添加更多细节\" class=\"headerlink\" title=\"制作和使用LightCookie为灯光添加更多细节\"></a>制作和使用LightCookie为灯光添加更多细节</h3><h2 id=\"光照相关的常见问题\"><a href=\"#光照相关的常见问题\" class=\"headerlink\" title=\"光照相关的常见问题\"></a>光照相关的常见问题</h2><h3 id=\"为什么场景中会出现奇怪的阴影快\"><a href=\"#为什么场景中会出现奇怪的阴影快\" class=\"headerlink\" title=\"为什么场景中会出现奇怪的阴影快\"></a>为什么场景中会出现奇怪的阴影快</h3><h3 id=\"为什么在相机镜头移动时场景中的阴影会扭曲或闪烁\"><a href=\"#为什么在相机镜头移动时场景中的阴影会扭曲或闪烁\" class=\"headerlink\" title=\"为什么在相机镜头移动时场景中的阴影会扭曲或闪烁\"></a>为什么在相机镜头移动时场景中的阴影会扭曲或闪烁</h3><h3 id=\"未启用体积光的HighQuality选项，为什么编辑器中的灯光雾效会有那么多噪点\"><a href=\"#未启用体积光的HighQuality选项，为什么编辑器中的灯光雾效会有那么多噪点\" class=\"headerlink\" title=\"未启用体积光的HighQuality选项，为什么编辑器中的灯光雾效会有那么多噪点\"></a>未启用体积光的HighQuality选项，为什么编辑器中的灯光雾效会有那么多噪点</h3><h3 id=\"启用高质量选项对性能影响到底有多大\"><a href=\"#启用高质量选项对性能影响到底有多大\" class=\"headerlink\" title=\"启用高质量选项对性能影响到底有多大\"></a>启用高质量选项对性能影响到底有多大</h3><h2 id=\"光源分层\"><a href=\"#光源分层\" class=\"headerlink\" title=\"光源分层\"></a>光源分层</h2><h3 id=\"光源分层的作用\"><a href=\"#光源分层的作用\" class=\"headerlink\" title=\"光源分层的作用\"></a>光源分层的作用</h3><ol>\n<li>让光源只照亮场景中指定的物体，并投射阴影</li>\n<li>让光源只照亮指定的物体，但是让其他物体投射阴影</li>\n</ol>\n<h2 id=\"使用光照探针\"><a href=\"#使用光照探针\" class=\"headerlink\" title=\"使用光照探针\"></a>使用光照探针</h2><h3 id=\"为什么要使用光照探针\"><a href=\"#为什么要使用光照探针\" class=\"headerlink\" title=\"为什么要使用光照探针\"></a>为什么要使用光照探针</h3><p>光照烘培可以为场景中的静态物体烘培间接光照信息，但是如何为场景中的动态物体提供间接光照信息呢？</p>\n<p>具体作用：</p>\n<ol>\n<li>为静态物体提供间接光照信息</li>\n<li>为场景中那些小的物体提供间接光照信息，如果让这些小物体参与光照贴图烘培，会因为占用光照贴图空间而导致光照贴图尺寸变大，进而导致内存占用升高影响运行性能</li>\n</ol>\n<p>对于小物体</p>\n<ol>\n<li>启用MeshRenderer组件的Contribute Global Illumination选项，让网格参与全局光烘培</li>\n<li>将ReceiveGlobalillumination（获取全局光的方式）设置为LightProbes，所以网格本身从烘培所得的间接光照信息不会被保存到光照贴图中<ol>\n<li><strong>注意</strong>：在烘培时，将MeshRenderer设置为从Lightmaps获取全局光照信息，待烘培完成再切换成LightProbes，此时光照探针不会起作用</li>\n</ol>\n</li>\n<li>为场景中的移动物体提供间接光照信息</li>\n</ol>\n<h3 id=\"使用光照探针组的基本步骤\"><a href=\"#使用光照探针组的基本步骤\" class=\"headerlink\" title=\"使用光照探针组的基本步骤\"></a>使用光照探针组的基本步骤</h3><ol>\n<li>创造光照探针组</li>\n<li>通过光照烘培完成间接光的生成<ol>\n<li>要想让光照探针起作用，首先需要完成对整个场景的烘培</li>\n</ol>\n</li>\n<li>调整光照探针组<ul>\n<li>如果调整了光照探针组，就需要重新烘培场景</li>\n<li>如果没有设置场景中的物体从Lightmaps获取全局光照信息，则默认情况下会使用LightProbes来获取间接光照信息</li>\n<li>光照探针摆放有一定的原则，否则容易穿帮<ul>\n<li>在明暗交界的地方要多放一些光照探针</li>\n<li>因为接受光照探针间接光的物体会针对离它最近的4个探针进行采样，所以探针之间的间距要合理</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"MeshRenderer组件中的Probes选项详解\"><a href=\"#MeshRenderer组件中的Probes选项详解\" class=\"headerlink\" title=\"MeshRenderer组件中的Probes选项详解\"></a>MeshRenderer组件中的Probes选项详解</h3><p>如何使用MeshRenderer组件的AnchorOverride参数</p>\n<h2 id=\"使用ReflectionProbe为场景提供反射信息\"><a href=\"#使用ReflectionProbe为场景提供反射信息\" class=\"headerlink\" title=\"使用ReflectionProbe为场景提供反射信息\"></a>使用ReflectionProbe为场景提供反射信息</h2><h3 id=\"ScreenSpaceReflection（屏幕空间反射）\"><a href=\"#ScreenSpaceReflection（屏幕空间反射）\" class=\"headerlink\" title=\"ScreenSpaceReflection（屏幕空间反射）\"></a>ScreenSpaceReflection（屏幕空间反射）</h3><h3 id=\"Reflection-Probe（反射探针）\"><a href=\"#Reflection-Probe（反射探针）\" class=\"headerlink\" title=\"Reflection Probe（反射探针）\"></a>Reflection Probe（反射探针）</h3><h2 id=\"阴影\"><a href=\"#阴影\" class=\"headerlink\" title=\"阴影\"></a>阴影</h2><h3 id=\"阴影的种类和三种光照模式\"><a href=\"#阴影的种类和三种光照模式\" class=\"headerlink\" title=\"阴影的种类和三种光照模式\"></a>阴影的种类和三种光照模式</h3><p>HDRP中的阴影可以分为两类</p>\n<ol>\n<li>场景中光源投射的阴影</li>\n<li>基于屏幕空间信息计算的阴影</li>\n</ol>\n"},{"title":"Unity—HDRP——4：LightMapping（光照烘培）","data":"2024-07-15T11:52:54.000Z","updated":"2024-07-14T16:00:00.000Z","description":"HDRP光照贴图原理介绍","cover":"https://yin-qin.oss-cn-shanghai.aliyuncs.com/img/202407111108328.jpg","_content":"\n# 基本框架\n\n- Process（HDRP project setting）\n- HDRP配置文件和Volume框架\n- HDRP Lighting System\n- **LightMapping（光照烘培）**\n- Material\n- PostProcessing\n- HDRPDebug\n- HDRP Real-Time Ray Tracing\n\n## 摘要\n\n- 什么是光照烘培?\n- 什么是光照贴图？\n- 为什么要用光照贴图？\n\n## 渐进式光照贴图烘培对场景中的模型有什么要求？\n\n1. 模型上不能有重叠的UV\n2. UV之间要有足够的间距以避免渗色现象的发生\n3. 因为使用光照贴图只能烘培静态物体，所以要把需要参与烘培的物体标记为Static\n\n## 进行渐进式光照贴图烘培时烘培出来的是什么？\n\n烘培出来的时光照贴图，光照探针和反射探针\n\n按照不同的LightingMode光照模式，烘培出来的结果是不同的，光照贴图中会包含 间接光照信息，也会包含软阴影和环境光遮蔽的信息。\n\n可以选择两种光照模式\n\n1. BakedIndirect模式\n   1. 如果将场景中的光源设置为Mixed那么这些灯光会给场景提供直接光照，简介光照会被烘培到光照贴图和光照探针中，此模式下，会投射实时阴影\n2. Shadowmask模式\n   1. 与BakedIndirect区别是，能在运行时，将烘培所得到的阴影和实时阴影进行融合，可以获得最高质量的阴影，同时对性能和内存的要求也是最高的\n\n## 光照贴图烘培界面参数详解\n\n## 如何解决光照贴图接缝问题\n\n由于GPU无法在分开的光照贴图之间混合纹理\n\n启用MeshRenderer组件中的StitchSeams选项，勾选会增加烘培时间\n","source":"_posts/Unity—HDRP--4：LightMapping（光照烘培）.md","raw":"---\ntitle: Unity—HDRP——4：LightMapping（光照烘培）\ndata: 2024-7-15 19:52:54\nupdated: 2024-7-15\ntags: \n    - TA\n    - Process\n    - Unity\n    - High Definition Render Pipline\ncategories: Unity\ndescription: HDRP光照贴图原理介绍\ncover: https://yin-qin.oss-cn-shanghai.aliyuncs.com/img/202407111108328.jpg\n---\n\n# 基本框架\n\n- Process（HDRP project setting）\n- HDRP配置文件和Volume框架\n- HDRP Lighting System\n- **LightMapping（光照烘培）**\n- Material\n- PostProcessing\n- HDRPDebug\n- HDRP Real-Time Ray Tracing\n\n## 摘要\n\n- 什么是光照烘培?\n- 什么是光照贴图？\n- 为什么要用光照贴图？\n\n## 渐进式光照贴图烘培对场景中的模型有什么要求？\n\n1. 模型上不能有重叠的UV\n2. UV之间要有足够的间距以避免渗色现象的发生\n3. 因为使用光照贴图只能烘培静态物体，所以要把需要参与烘培的物体标记为Static\n\n## 进行渐进式光照贴图烘培时烘培出来的是什么？\n\n烘培出来的时光照贴图，光照探针和反射探针\n\n按照不同的LightingMode光照模式，烘培出来的结果是不同的，光照贴图中会包含 间接光照信息，也会包含软阴影和环境光遮蔽的信息。\n\n可以选择两种光照模式\n\n1. BakedIndirect模式\n   1. 如果将场景中的光源设置为Mixed那么这些灯光会给场景提供直接光照，简介光照会被烘培到光照贴图和光照探针中，此模式下，会投射实时阴影\n2. Shadowmask模式\n   1. 与BakedIndirect区别是，能在运行时，将烘培所得到的阴影和实时阴影进行融合，可以获得最高质量的阴影，同时对性能和内存的要求也是最高的\n\n## 光照贴图烘培界面参数详解\n\n## 如何解决光照贴图接缝问题\n\n由于GPU无法在分开的光照贴图之间混合纹理\n\n启用MeshRenderer组件中的StitchSeams选项，勾选会增加烘培时间\n","slug":"Unity—HDRP--4：LightMapping（光照烘培）","published":1,"date":"2024-07-11T06:04:07.143Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clyh2ogns0013e0dsagsx4jzi","content":"<h1 id=\"基本框架\"><a href=\"#基本框架\" class=\"headerlink\" title=\"基本框架\"></a>基本框架</h1><ul>\n<li>Process（HDRP project setting）</li>\n<li>HDRP配置文件和Volume框架</li>\n<li>HDRP Lighting System</li>\n<li><strong>LightMapping（光照烘培）</strong></li>\n<li>Material</li>\n<li>PostProcessing</li>\n<li>HDRPDebug</li>\n<li>HDRP Real-Time Ray Tracing</li>\n</ul>\n<h2 id=\"摘要\"><a href=\"#摘要\" class=\"headerlink\" title=\"摘要\"></a>摘要</h2><ul>\n<li>什么是光照烘培?</li>\n<li>什么是光照贴图？</li>\n<li>为什么要用光照贴图？</li>\n</ul>\n<h2 id=\"渐进式光照贴图烘培对场景中的模型有什么要求？\"><a href=\"#渐进式光照贴图烘培对场景中的模型有什么要求？\" class=\"headerlink\" title=\"渐进式光照贴图烘培对场景中的模型有什么要求？\"></a>渐进式光照贴图烘培对场景中的模型有什么要求？</h2><ol>\n<li>模型上不能有重叠的UV</li>\n<li>UV之间要有足够的间距以避免渗色现象的发生</li>\n<li>因为使用光照贴图只能烘培静态物体，所以要把需要参与烘培的物体标记为Static</li>\n</ol>\n<h2 id=\"进行渐进式光照贴图烘培时烘培出来的是什么？\"><a href=\"#进行渐进式光照贴图烘培时烘培出来的是什么？\" class=\"headerlink\" title=\"进行渐进式光照贴图烘培时烘培出来的是什么？\"></a>进行渐进式光照贴图烘培时烘培出来的是什么？</h2><p>烘培出来的时光照贴图，光照探针和反射探针</p>\n<p>按照不同的LightingMode光照模式，烘培出来的结果是不同的，光照贴图中会包含 间接光照信息，也会包含软阴影和环境光遮蔽的信息。</p>\n<p>可以选择两种光照模式</p>\n<ol>\n<li>BakedIndirect模式<ol>\n<li>如果将场景中的光源设置为Mixed那么这些灯光会给场景提供直接光照，简介光照会被烘培到光照贴图和光照探针中，此模式下，会投射实时阴影</li>\n</ol>\n</li>\n<li>Shadowmask模式<ol>\n<li>与BakedIndirect区别是，能在运行时，将烘培所得到的阴影和实时阴影进行融合，可以获得最高质量的阴影，同时对性能和内存的要求也是最高的</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"光照贴图烘培界面参数详解\"><a href=\"#光照贴图烘培界面参数详解\" class=\"headerlink\" title=\"光照贴图烘培界面参数详解\"></a>光照贴图烘培界面参数详解</h2><h2 id=\"如何解决光照贴图接缝问题\"><a href=\"#如何解决光照贴图接缝问题\" class=\"headerlink\" title=\"如何解决光照贴图接缝问题\"></a>如何解决光照贴图接缝问题</h2><p>由于GPU无法在分开的光照贴图之间混合纹理</p>\n<p>启用MeshRenderer组件中的StitchSeams选项，勾选会增加烘培时间</p>\n","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"Vue","color":"#b8f0ae","icon":"https://img02.anheyu.com/adminuploads/1/2022/09/25/633001374747b.png"}]}],"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"}]}]}},"cover_type":"img","excerpt":"","more":"<h1 id=\"基本框架\"><a href=\"#基本框架\" class=\"headerlink\" title=\"基本框架\"></a>基本框架</h1><ul>\n<li>Process（HDRP project setting）</li>\n<li>HDRP配置文件和Volume框架</li>\n<li>HDRP Lighting System</li>\n<li><strong>LightMapping（光照烘培）</strong></li>\n<li>Material</li>\n<li>PostProcessing</li>\n<li>HDRPDebug</li>\n<li>HDRP Real-Time Ray Tracing</li>\n</ul>\n<h2 id=\"摘要\"><a href=\"#摘要\" class=\"headerlink\" title=\"摘要\"></a>摘要</h2><ul>\n<li>什么是光照烘培?</li>\n<li>什么是光照贴图？</li>\n<li>为什么要用光照贴图？</li>\n</ul>\n<h2 id=\"渐进式光照贴图烘培对场景中的模型有什么要求？\"><a href=\"#渐进式光照贴图烘培对场景中的模型有什么要求？\" class=\"headerlink\" title=\"渐进式光照贴图烘培对场景中的模型有什么要求？\"></a>渐进式光照贴图烘培对场景中的模型有什么要求？</h2><ol>\n<li>模型上不能有重叠的UV</li>\n<li>UV之间要有足够的间距以避免渗色现象的发生</li>\n<li>因为使用光照贴图只能烘培静态物体，所以要把需要参与烘培的物体标记为Static</li>\n</ol>\n<h2 id=\"进行渐进式光照贴图烘培时烘培出来的是什么？\"><a href=\"#进行渐进式光照贴图烘培时烘培出来的是什么？\" class=\"headerlink\" title=\"进行渐进式光照贴图烘培时烘培出来的是什么？\"></a>进行渐进式光照贴图烘培时烘培出来的是什么？</h2><p>烘培出来的时光照贴图，光照探针和反射探针</p>\n<p>按照不同的LightingMode光照模式，烘培出来的结果是不同的，光照贴图中会包含 间接光照信息，也会包含软阴影和环境光遮蔽的信息。</p>\n<p>可以选择两种光照模式</p>\n<ol>\n<li>BakedIndirect模式<ol>\n<li>如果将场景中的光源设置为Mixed那么这些灯光会给场景提供直接光照，简介光照会被烘培到光照贴图和光照探针中，此模式下，会投射实时阴影</li>\n</ol>\n</li>\n<li>Shadowmask模式<ol>\n<li>与BakedIndirect区别是，能在运行时，将烘培所得到的阴影和实时阴影进行融合，可以获得最高质量的阴影，同时对性能和内存的要求也是最高的</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"光照贴图烘培界面参数详解\"><a href=\"#光照贴图烘培界面参数详解\" class=\"headerlink\" title=\"光照贴图烘培界面参数详解\"></a>光照贴图烘培界面参数详解</h2><h2 id=\"如何解决光照贴图接缝问题\"><a href=\"#如何解决光照贴图接缝问题\" class=\"headerlink\" title=\"如何解决光照贴图接缝问题\"></a>如何解决光照贴图接缝问题</h2><p>由于GPU无法在分开的光照贴图之间混合纹理</p>\n<p>启用MeshRenderer组件中的StitchSeams选项，勾选会增加烘培时间</p>\n"},{"title":"作品集","data":"2024-07-03T11:52:54.000Z","updated":"2024-07-02T16:00:00.000Z","description":"This is my 作品集","cover":"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202403191721875.png","_content":"\n# 作品集\n\n{% note blue %}\n\n前言：这本作品集是我学习与实践的成果，它记录了我的专业技能与创作思路。每一份作品都代表了我对专业的理解和对品质的追求。希望通过这些精选的作品，能够让您更直观地了解我的实力与潜力。期待有机会为您的团队贡献我的力量。\n\n{% endnote %}\n\n带宽速度不高，加载速度会有一定的影响，经过测试输出的内容还是比较稳定的。\n\n## Logo效果\n\n{% tabs 视频%}\n\n<!-- tab 渲染效果-->\n\n{% videos %}\n{% video https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/LOGO.mp4 %}\n{% endvideos %}\n\n<!-- endtab -->\n\n<!-- tab 细节部分-->\n\n{% tabs 体积光 %}\n<!-- tab 体积光和SSR反射-->\n{% gallery %}\n![2024-4-18 3_07_06](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725272.png)\n\n![image-20240418032736469](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725273.png)\n\n![image-20240418032753632](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725274.png)\n\n{% endgallery %}\n<!-- endtab -->\n\n<!-- tab 代码分析-->\n\n**体积光**\n\n处理：\n\na. 初始化射线、步长、当前位置、衰减率和颜色。\n\nb. 进入一个循环，在循环中：\n\n- 使用噪声纹理和当前位置计算出一个噪声值，这个噪声值乘以密度来控制体积光的分布。\n- 更新衰减率，模拟光线在介质中传播时的衰减。\n- 如果衰减率低于某个阈值，则提前退出循环，因为此时的光线已经非常微弱。\n- 更新当前位置，沿着射线方向前进一个步长。\n- 累加颜色值，这里使用了一个简单的基于高度的雾色模型。\n  c. 将累加的颜色值乘以曝光度，并设置颜色的alpha值为1.0，表示不透明。\n  d. 返回最终的颜色值。\n\n**SSR镜面反射**\n\n1. 计算反射路径\n   - 使用相机到点的向量`V`和水面法线计算出反射方向。\n   - 根据这个反射方向和预设的SSR长度，确定反射光线在世界空间中的终点和远点。\n2. 转换到屏幕空间\n   - 把世界空间的反射路径起点、终点、远点转换为裁剪空间，再进一步转换为屏幕空间坐标。\n3. 快速检查远点\n   - 如果远点在屏幕范围内，检查其深度，如果深度合适，则直接采样该点的颜色作为反射颜色。\n4. 线性追踪\n   - 从屏幕空间的起点开始，沿着反射路径逐步前进。\n   - 在每一步，检查当前点的屏幕空间坐标是否在屏幕范围内，以及当前点的深度是否比之前记录的深度更近。\n   - 如果找到一个有效的交点（即深度比之前记录的近），则记录这个交点的屏幕空间坐标。\n5. 采样反射颜色\n   - 如果有有效的交点，根据交点的屏幕空间坐标采样颜色，并乘以一个基于视角和法线夹角的衰减因子。\n   - 如果没有有效的交点，但远点检查成功，则使用远点的颜色。\n   - 如果都没有成功，则反射颜色可能保持为初始化的零值或预设的默认值。\n\n**LOGO模型**\n\n1. 设计Logo模型\n   - 初步构思Logo形状与风格\n   - 完成Logo的初步设计\n2. 为Logo增加视觉效果\n   - 添加扰动效果，赋予Logo动态感\n   - 融入反射效果，提升Logo的光泽与立体感\n   - 点缀星星效果，使Logo更加璀璨\n   - 添加**虚拟光效果**，模拟点光源增加一个光照效果，跟随小球运动实现实时渲染\n3. 让Logo动起来\n   - 添加运动效果，使Logo更生动\n4. 增加环境元素\n   - 在Logo周围添加飘动的小球和旋转的圆环，营造活泼、动感的氛围\n\n<!-- endtab -->\n\n{% endtabs %}\n\n\n\n<!-- endtab -->\n\n<!-- tab 部分源代码展示-->\n\n**Logo模型的ASE代码**![image-20240418034245510](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725275.png)\n\n**体积光部分代码**\n\n```\n//AABB\n bool intersectAABB(float3 rayOrigin, float3 rayDir, float3 boxMin,\n                               float3 boxMax, out float2 tNearFar)\n            {\n                float3 tMin = (boxMin - rayOrigin) / rayDir;\n                float3 tMax = (boxMax - rayOrigin) / rayDir;\n                float3 t1 = min(tMin, tMax);\n                float3 t2 = max(tMin, tMax);\n                float tNear = max(max(t1.x, t1.y), t1.z);\n                float tFar = min(min(t2.x, t2.y), t2.z);\n                tNearFar = float2(tNear, tFar);\n\n                return tFar > tNear;\n            }\n\n\n//光线步进\nUNITY_LOOP\nfor (float k = 0; k < vlSamples; k++)\n{\n    float f = saturate((k + rand()) / vlSamples);\n    float3 p = lerp(startPos, endPos, f);\n\n    //射线与平面求交\n    float distance;\n    // float3 lightDir = normalize(LightPos - p);\n    // iPlane(p,L,float4(0,-1,0,0.5),distance);\n    intersectPlane(float3(0, -1, 0), float3(0, 0.5, 0), p, L, distance);\n    float3 hitPos = p + L * distance;\n\n    //白色体积光\n    float3 caustic = GetCaustic(hitPos.xz);\n    //*hsv2rgb(float3((p.y+_RainbowOffset + dot(L,-rayDir))*_RainbowScale+0.5,_RainbowIntensity,1));//*spectral_zucconi6(p.y+0.5);\n    //彩色体积光\n    float noise = tex2D(_Noise, hitPos.xz).r;\n    noise = lerp(1, 1.3, noise);\n    float3 causticColorful = 5 * GetCaustic(hitPos.xz) *\n        hsv2rgb(float3(\n        (p.y + _RainbowOffset + dot(L, -rayDir) * 0.1) * _RainbowScale * noise + 0.5,\n        _RainbowIntensity, 1)); \n    float rinbowMask = tex2D(_RainbowMask, hitPos.xz * 3);\n    caustic = lerp(caustic, causticColorful*1.5, rinbowMask) * 1.5;\n    // caustic = (causticColorful) * 1.5;\n\n    vlLight += caustic * add;\n}\n\n//体积光 核心算法 =======================================================\n\nfloat height = input.posOS.y + 0.5;\nfloat noise = tex2D(_Noise, input.posOS.xz).r;\n\nvlLight = vlLight * smoothstep(0.2, 1.1 + noise, height) * 20;\nvlLight = vlLight * multipleOctaves(height, cosTheta);\n\nfloat3 color = lerp(_Color1, _Color2, height) * 0.5 + vlLight; \n\nfloat alpha = exp(-rayMaxDistance * _Density);\n```\n\n**SSR镜面部分代码**\n\n```\n    //远处的反射 RayMarch 无法Hit到\n    float fade = pow(1-dot(normalize(V),waterNormal),1 );//fresnel\n    // 最远端在相机视口内\n    UNITY_BRANCH if((far_ScreenPixelNdcZ).y<1)\n    {\n\n        float farDepth =  GetDepth(far_ScreenPixelNdcZ.xy);\n        farDepth = LinearEyeDepth(farDepth);\n        UNITY_BRANCH if(abs(farDepth)<SSRLength)\n        {\n            // SSRColor =  GetSceneColor(far_ScreenPixelNdcZ.xy)*fade*float4(1,0,0,0);\n            SSRColor = GetSceneColor(far_ScreenPixelNdcZ.xy)*fade;\n        }\n        else\n        {\n            SSRColor.w = 1;\n        }\n    }\n    UNITY_LOOP\n    for (int n=1;n<MaxLingearStep;n++)\n    {\n        Ray += Step;\n        //如果测试点跑到 视口外面去了，那么停止for循环\n        UNITY_BRANCH if(Ray.z<0 || Ray.z>1 || Ray.x<0 || Ray.x>1 || Ray.y<0 || Ray.y>1)\n        {\n            break;\n        }\n        float Depth = GetDepth(Ray.xy);\n        //  上一次深度<Depth<这一次深度\n        // if(Depth + _PerPixelCompareBias >Ray.z && Ray.z <Depth +_PerPixelDepthBias )\n        if(Ray.z < Depth  && Depth < LastDepth)\n        {\n            isHit = true;\n            hitUV = Ray.xy;\n            break;\n        }\n        LastDepth =Ray.z;\n    }\n    if(isHit)\n    {\n        SSRColor =  GetSceneColor(hitUV)*fade;\n    }\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n## 视差卡片\n\n{% tabs 视差卡片%}\n\n<!-- tab 渲染效果-->\n\n{% tabs 视差卡片%}\n\n<!-- tab 多巴胺女孩-->\n\n{% videos, 2 %}\n\n{% video https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/parallax4.mp4 %}\n{% video https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/Parallax1.mp4 %}\n\n{% endvideos %}\n\n<!-- endtab -->\n\n<!-- tab 模特橱窗-->\n\n{% videos, 2 %}\n\n{% video https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/parallax3.mp4 %}\n{% video https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/parallax2.mp4 %}\n\n{% endvideos %}\n\n<!-- endtab -->\n\n<!-- tab 模板测试3D效果-->\n\n{% videos %}\n\n{% video https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/TemplentTest.mp4 %}\n\n{% endvideos %}\n\n<!-- endtab -->\n\n<!-- tab 深度测试滤镜效果-->\n\n{% gallery %}\n\n![2024-4-16 10_17_29](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725276.png)\n\n{% endgallery %}\n\n<!-- endtab -->\n\n{% endtabs %}\n\n<!-- endtab -->\n\n<!-- tab 细节部分-->\n\n## **视差效果算法**\n\n![](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725277.png)\n\n### 计算视角与法线的夹角余弦值\n\n通过计算`ViewTS`与z轴的点积（dot product）来得到夹角的余弦值。\n\n**1.计算视差长度**\n\n使用`Depth`除以夹角的余弦值来计算视差效果的长度。\n\n**2.计算偏移纹理坐标**\n\n根据`ViewTS`和视差长度来计算出偏移后的纹理坐标。\n\n**3.采样纹理**\n\n使用偏移后的纹理坐标从`_Map`中采样颜色。\n\n### **橱窗效果**\n\n**1.生成深度图**\n\n使用Stable Diffusion技术，开始制作深度图。\n\n选择一种方法生成深度图：\n\n使用具有浮雕效果的lora技术：通过lora处理原始2D图像，强调图像中的轮廓和细节，从而生成初始的深度信息。\n\n或者，利用controlNet插件：这个插件可以分析图像中的空间关系和物体层次，生成更为精确的深度图。\n\n**2.调整深度图**\n\n打开Photoshop或其他图像处理软件。\n\n导入生成的深度图。\n\n调整深度图的明度，以确保深度信息的准确性和视觉效果的协调性。\n\n**3.应用视差效果** \n\n将调整后的深度图应用于原始2D图像上，使用视差算法根据深度信息对图像进行分层处理。\n\n调整视差效果的参数，以达到理想的3D橱窗效果。这些参数可能包括视差强度、分层数量等。\n\n4.**最终调整与输出**\n\n对生成的3D橱窗效果进行最后的调整和优化，确保整体视觉效果的自然和协调。\n\n导出最终的3D橱窗效果图像，准备用于展示或分享。\n\n## **贴图制作**\n\n多巴胺女孩和模特均由Sdable Diffusion制作，背景则是ps制作\n\n主要步骤：\n\n加载stable diffusion环境，选择大模型（猴人3D重制 V10.safetensors）\n\n参数配置\n\n![](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725279.png)\n\n![](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725278.png)\n\n再添加想要的提示词就能得到想要的图片啦\n\n### 高光和流光效果\n\n高光效果可通过Blinn-Phong模型中的dot(N,H)实现，或通过光晕函数模拟，结合全局虚拟点光源和HSV色彩模型，呈现绚丽色彩。而流光效果则可采用Luminance函数或遮罩贴图来精准定位流光的动感部位。\n\n## 模板测试\n\n**1.设置蒙版的属性**\n\n```\nZWrite off//需要关闭深度写入，否则在渲染透明物体的时候会出错，透明物体会修改深度缓冲区\n\n//其中_ID是指可以通过蒙版显示的模型ID\nStencil{\n      Ref[_ID]//在模板缓存区中存储一个蒙版测试的ID\n      Comp always//设置这个ID的属性为可通过\n      Pass replace \n}  \n```\n\n**2.给模型设置ID**\n\n```\nStencil {\n      Ref [_ID]\n      Comp equal//模板测试将检查模板缓冲区中当前像素位置的值是否等于 Ref 设定的参考值（_ID）。如果相等，则测试通过；如果不等，则测试失败。\n}\n```\n\n**深度测试滤镜效果**\n\n给物体添加两个pass，一个是正常显示的pass，另一个是滤镜效果的pass\n\n滤镜效果的pass属性\n\n```\nBlend SrcAlpha One\nZTest Greater //核心\n//这是深度测试（Z-Testing）的设置。深度测试用于确定哪些像素应该被绘制到屏幕上。\nGreater 表示只有当当前像素的深度值大于深度缓冲区中的值时，才会绘制该像素。这通常用于实现一些特殊效果，如阴影或某些类型的贴图。\n在正常情况下，深度测试通常设置为 Less 或 Lequal（小于或等于），以确保更近的物体遮挡更远的物体。但在某些特殊情况下，如实现阴影效果时，Greater 测试可能很有用。\nZWrite off\nCull Back //节省性能\n```\n\n<!-- endtab -->\n\n<!-- tab 部分源代码展示-->\n\n\n\n**效果实现代码**\n\n```\n  //视差算法实现代码\n  float4 Parallax(in float2 uv,in float3 ViewTS,in float Depth,sampler2D _Map,float4 _Map_ST,in float Scale)\n  {\n      uv = uv* _Map_ST.xy*Scale+_Map_ST.zw  ;\n\n      float CosAngle = dot(ViewTS,float3(0,0,1));\n      float LengthAB = Depth/CosAngle;\n\n      float3 UvA = float3(uv,0);\n      float3 UvB = UvA + ViewTS*LengthAB;\n\n      float4 Parallax = tex2D(_Map,saturate(UvB.xy));\n      return Parallax;\n }\n//贴图混合\n if(DepthMap+_BodyDepth > 0)\n {\n    FinalDisplay = lerp(linesmap,body,body.a);\n  \n    FinalDisplay = lerp(background,FinalDisplay,FinalDisplay.a);\n     \n }\nelse\n{\n    FinalDisplay =lerp(background,body,body.a);\n   FinalDisplay =lerp(FinalDisplay,linesmap,linesmap.a);\n                    \n}\n//高光与颜色\nfloat3 hsvcolor =  pow(specularcolor * HSVToRGB(float3(uv.x*_LinesColorLenght+_LinesColor,1,1)).xyzz,_LinesColorPowScale.x)*_LinesColorPowScale.y;\n            linesmap = linesmap.a*float4(hsvcolor,1)*_LinesTint ;\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n## 仿原神卡通渲染\n\n{% tabs 仿原神卡通渲染%}\n\n<!-- tab 渲染效果-->\n\n{% videos %}\n{% video https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/mmd.mp4 %}\n{% endvideos %}\n\n{% tabs 视差卡片%}\n\n<!-- tab 基本颜色-->\n\n![2024-4-16 8_05_11](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725280.png)\n\n<!-- endtab -->\n\n<!-- tab LightMap.r;//金属高光部位-->\n\n![2024-4-16 8_05_46](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725281.png)\n\n<!-- endtab -->\n\n<!-- tab LightMap.g;//光照偏移量，混合常暗区域（AO）;  -->\n\n![2024-4-16 8_06_00](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725282.png)\n\n<!-- endtab -->\n\n<!-- tab **LightMap.a>_TestLayerNumber;//材质枚举**-->\n\n{% gallery %}\n\n![2024-4-16 8_07_22](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725283.png)\n\n![2024-4-16 8_07_29](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725284.png)\n\n![2024-4-16 8_07_36](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725285.png)\n\n![2024-4-16 8_07_49](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725286.png)\n\n![2024-4-16 8_07_54](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725287.png)\n\n{% endgallery %}\n\n<!-- endtab -->\n\n<!-- tab 采样金属度贴图-->\n\n![2024-4-16 8_09_07](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725288.png)\n\n<!-- endtab -->\n\n<!-- tab 漫反射-->\n\n![2024-4-16 8_09_38](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725289.png)\n\n<!-- endtab -->\n\n<!-- tab 高光-->\n\n![2024-4-16 8_10_10](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725290.png)\n\n<!-- endtab -->\n\n<!-- tab 环境光-->\n\n![2024-4-18 6_44_50](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725291.png)\n\n<!-- endtab -->\n\n{% endtabs %}\n\n<!-- endtab -->\n\n<!-- tab 细节部分-->\n\n## NPR仿原神渲染\n\n\n\n**1. 准备资源**\n\n收集并准备好所有必要的贴图，如纹理贴图、光照贴图等。\n\n**2. 添加环境光**\n\n- 应用Half Lambert光照模型。\n\n**3. 明暗处理**\n\n- 使用`smoothstep`函数，通过设定合适的阈值，实现模型表面明暗区域的过渡。\n- 结合二分搜索或其他优化算法，快速而准确地确定明暗交界线，从而生成更具二次元风格的阴影效果。\n\n**4. 材质与颜色处理**\n\n- 利用光照贴图的alpha通道来识别不同材质区域，这样可以为每个区域应用不同的颜色处理方案。\n- 通过ramp贴图技术，根据光照方向和表面法线，为模型表面添加二次元风格的颜色效果，使色彩更加丰富和生动。\n\n**5. 高光处理**\n\n- 采用Blinn-Phong光照模型来分别模拟金属和非金属的高光反射效果，为模型增加真实感和立体感。\n- 通过提取光照贴图的R通道信息，强调金属部分的高光反射。\n\n**6. 阴影混合**\n\n- 将前面步骤中生成的阴影效果进行混合和调整，以增强模型的深度和层次感。\n- 根据需要调整阴影的密度、颜色和位置，以达到最佳的视觉效果。\n\n**7. 添加描边效果**\n\n- 在模型的边缘添加明显的描边效果，以突出角色的轮廓和特征。\n\n## MMD制作\n\n1.场景布置\n\n**背景采样与颜色混合**\n\n根据输入的纹理坐标（`i.ase_texcoord2.xy`）和背景纹理的变换参数（`_BackGround_ST`），计算背景纹理的采样坐标`uv_BackGround`。\n\n从背景纹理中采样颜色，并根据一系列参数（如背景颜色、星星亮度等）进行混合，得到初始的颜色值。\n\n**雾效处理**\n\n通过一系列的计算，包括标准化、距离计算和clamp操作，来确定雾效的影响程度。\n\n使用`smoothstep`函数来平滑地过渡雾效的影响区域。\n\n2.动作载入\n\n准备好vmd动作文件，使用unity的MMD4插件，将PXM模型文件和vmd文件处理成FBX模型，使用动画控制器添加动作效果，在模型中添加组件\n\n3.音频载入\n\n使用videosourse组件添加相匹配的音频文件\n\n<!-- endtab -->\n\n<!-- tab 部分源代码展示-->\n\n```\n//=======漫反射=======//\n  float lambert = saturate(NL);\n  float halfLambert = pow(lambert * 0.5 + 0.5, 2);\n  float halfLambertStep = smoothstep(0.423, 0.460, halfLambert);\n\n  float rampU = clamp(smoothstep(0.2, 0.4, halfLambert), 0.005, 0.995);//阴影部分中的深浅是在0.2到0.4之间过渡\n  float2 dayRampUV = float2(rampU, 1 - dayRampV);\n  float2 nightRampUV = float2(rampU, 1 - nightRampV);\n  float3 rampColor = lerp(tex2D(_RampMap, nightRampUV).rgb, tex2D(_RampMap, dayRampUV).rgb, _IsDay);//利用_isDay插值白天与黑夜的阴影颜色\n  float3 shadowColor = lerp(BaseMap, BaseMap * rampColor, _LightThreshold) ;//* _ShaodwColor.rgb\n\n  float3 diffuse = lerp(shadowColor, BaseMap, halfLambertStep);//明部到阴影是在0.423到0.460之间过渡的\n  diffuse = lerp(shadowColor, diffuse, saturate(RampOffsetMask * 2));//将ILM贴图的g通道乘2 用saturate函数将超过1的部分去掉，混合常暗区域（AO）\n\n  diffuse = lerp(diffuse, BaseMap, saturate(RampOffsetMask - 0.5) * 2);//将ILM贴图的g通道减0.5乘2 用saturate函数将小于0的部分去掉，混合常亮部分（眼睛）\n  diffuse = diffuse+diffuse* _DiffuseColor.rgb*_LightColor0; //* _DiffuseColor.rgb;\n\n//=======高光=======//\n  // //高光反射\n  float blinnPhong = step(0, NL) * pow(max(NH, 0), _MetallicStepSpecularWidth);\n  float3 hairSpec = tex2D(_HairSpecMap, i.uv).rgb * blinnPhong * _HairSpecIntensity * BaseMap;\n  float3 nonMetallicSpec = step(1.01 - blinnPhong, _MetallicStepSpecularWidth) * specIntensity * _NonMetallicSpecIntensity + hairSpec;//BlinnPhong取反做step用来限制非金属高光的区域\n  float3 metallicSpec = blinnPhong * _MetallicStepSpecularWidth * halfLambertStep * BaseMap * _MetallicSpecIntensity;\n\n  //计算金属、高光项\n  float isMetal = step( 0.5,specIntensity);\n\n  float3 specular = lerp(metallicSpec, nonMetallicSpec, isMetal)*_SpecularColor.rgb;\n  float3 metallic = lerp(0, metallicIndensity, isMetal) * BaseMap * _MetallicIntensity;\n\n\n  //混合\n  float3 finalColor = diffuse  + metallic +specular;\n//=======环境边缘光反射=======//\n  fixed fresnel = 1.0 - dot(N, V);\n  fresnel = lerp(fresnel, 2.0 - fresnel, step(1, fresnel));//由于开启了双面显示，当显示出来的面片为背面时，需要取2.0 - fresnel\n  fresnel = smoothstep(_FresnelMin, _FresnelMax, fresnel);\n  fixed3 reflectDir = reflect( - V, N);//反射光线方向\n  //环境反射粗糙度\n  float roughness = lerp(0.0, 0.95, saturate(_Roughness));\n  roughness = roughness * (1.7 - 0.7 * roughness);\n  float mipLevel = roughness * 6.0;\n  //EnvironmentHDR贴图\n  half4 cubemapColor = texCUBElod(_EnvironmentMap, float4(reflectDir, mipLevel));\n  half3 environmentColor = DecodeHDR(cubemapColor, _EnvironmentMap_HDR);\n  half3 environment = environmentColor * fresnel * _EnvironmentIntensity;\n  \n  //发射阴影\n  UNITY_LIGHT_ATTENUATION(atten,  i,  i.worldPosition);\n  \n  \n  //添加描边pass\n  V2FData vert(MeshData v)\n  {\n      V2FData o;\n      v.vertex.xyz += v.tangent.xyz *_OulineScale*0.01 * v.vertexColor.g ; //用顶点色的alpha通道控制描边粗细\n      o.pos = UnityObjectToClipPos(v.vertex);\n      o.color = v.vertexColor;\n      return o;\n  }\n```\n\n**场景代码**\n\n![image-20240418100248875](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404181009622.png)\n\n<!-- endtab -->\n\n{% endtabs %}\n\n## 体积云\n\n{% tabs 体积云%}\n\n<!-- tab 渲染效果-->\n\n{% videos %}\n{% video https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/VolumeCloud.mp4 %}\n{% endvideos %}\n\n<!-- endtab -->\n\n<!-- tab 细节部分-->\n\n**主光线追踪循环**\n\n- 对于每条从摄像机发出的光线，进行固定步数的追踪（由`RaySteps`控制）。\n- 在每一步，计算当前光线位置，并评估该位置的云密度和形状（通过调用`clouds`函数得到符号距离场SDF和密度）。\n- 如果当前位置在云内部（SDF为负且密度大于0），则执行次级光线追踪来模拟光源对云的影响：\n  - 沿着光源方向进行另一次光线追踪（由`LightSteps`控制）。\n  - 在每一步中，评估当前光源光线位置处的云密度和形状。\n  - 累积光学深度，用于后续的光照计算。\n- 计算环境光照和直接光照对云的影响，得到当前位置的光照能量。\n- 根据云的密度和光的吸收系数，更新光线的穿透率。\n- 将计算得到的光照能量和穿透率累加到散射结果中。\n\n循环结束处理\n\n- 在完成所有光线追踪步骤后，根据一个全局的光强参数调整累积的光能量。\n- 返回最终的散射结果，包括累积的光能量和穿透比率。这个结果可以用于后续的渲染流程，如颜色混合或透明度调整。\n\n**3D贴图制作**\n\n1.物体shader 使用**VFACE** 判断模正反 给予不同的颜色\n\n2.shader 中调整裁剪clip的值，对模型进行切片,并使用相机将每片拍下来保存为Texture2D 数组\n\n3.将保存的Texture2D数组 生成为Texture3D\n\n4.将生成完的Texture3D 重新载入另一个shader进行模糊，再次切片 合成导出。\n\n<!-- endtab -->\n\n<!-- tab 部分源代码展示-->\n\n```\nUNITY_LOOP\nfor (int i = 0; i < RaySteps; ++i)\n{\n    float3 currentPos = begin + depth * dir;\n    float sdf, density;\n    clouds(currentPos, sdf, density);\n    // Inside\n    if (sdf < 0 && density > 0)\n    {\n        //沿着 光源方向，进行二次 RayMarching\n        float3 beginPos2 = currentPos;\n        float opticalDepth = 0;\n        float t2 = 0;\n        UNITY_LOOP\n        for (int j = 0; j < LightSteps; ++j)\n        {\n            float3 currentPos2 = beginPos2 + t2 * L;\n            float sdf2, density2;\n            clouds(currentPos2, sdf2, density2);\n            if (sdf2 < 0)\n            {\n                opticalDepth += LightStep * density2;\n            }\n\n            t2 += max(LightStep, sdf2);\n            if (any(currentPos2 < -0.5) || any(currentPos2 > 0.5)) break;\n            //跑到sdf形状外面去了\n            // if(sdf2>0.1) break; \n        }\n\n        // 模拟环境光照\n        float3 ambient = 20*_LightColor0 * lerp(_AmbientColor1, _AmbientColor2, (currentPos.y*0.5 + 0.5)) * _AmbientIntensity* lerp(1,density,_AmbientDensity);\n        float3 lightEnergy = 20*_LightColor0 * multipleOctaves(opticalDepth, cosTheta) * 3.14 * phase ;\n        float3 currentColor = ambient + lightEnergy;\n\n        float3 transmittance = exp(-step* _Absorption * density);\n\n        //体积云 最核心的光照算法，就是这两行\n        ScatteringResult.xyz += currentColor * (1.0 - transmittance) * ScatteringResult.w;\n        ScatteringResult.w *= transmittance;\n    }\n    // 每次至少向前步进的距离\n    depth += max(sdf, step);\n    if (any(currentPos < -0.55) || any(currentPos > 0.55)) break;\n}\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n## 动态曲面细分\n\n{% tabs 动态曲面细分%}\n\n<!-- tab 渲染效果-->\n\n{% videos %}\n{% video https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/Tessellation.mp4 %}\n{% endvideos %}\n\n<!-- endtab -->\n\n<!-- tab 细节部分-->\n\n动态效果\n\n1. 初始化（Start方法）\n   - 脚本在开始时首先通过`Camera.main`获取主摄像机的引用，并存储在`mainCamera`变量中。\n   - 接着，它调用`CreateRT`方法来创建三个渲染纹理：`TempRT`, `PrevRT`, `CurrentRT`。这些渲染纹理将用于后续的图像处理和效果应用。\n   - 初始化`DrawMat`和`SnowMat`两个材质，并将它们分别与`DrawShader`和`SnowShader`着色器相关联。\n   - 最后，它将当前对象的渲染器的纹理设置为`CurrentRT`，这意味着该对象将显示`CurrentRT`中的内容。\n2. 绘制准备（每帧Update方法之前）\n   - 在每帧更新之前，系统已经准备好了所有必要的资源，包括摄像机、渲染纹理和着色器材质。\n3. 用户交互与绘制（Update方法中的射线检测部分）\n   - 在每一帧中，脚本首先检查用户是否按下了鼠标左键。\n   - 如果按下，脚本通过`mainCamera`执行一个从摄像机位置发射并经过鼠标在屏幕上的位置的射线。\n   - 如果这个射线与场景中的任何物体相交（即发生了碰撞），则记录碰撞点的纹理坐标。\n   - 使用记录的纹理坐标和预设的绘制半径，调用`DrawAt`方法来在`CurrentRT`的相应位置上“绘制”一个效果（可能是足迹或其他图形）。\n4. 图像处理效果（Update方法中的计算部分）\n   - 紧接着，脚本设置效果的衰减速度（`AttenSpeed`），这可能影响速度。\n   - 使用`SnowMat`和两个渲染纹理（`PrevRT`和`CurrentRT`）来计算累积效果。这里`PrevRT`保存了上一帧的状态，而`CurrentRT`保存了当前帧的状态。\n   - 通过`Graphics.Blit`方法，将处理后的图像输出到`TempRT`中，这个临时渲染纹理现在包含了更新后的效果。\n5. 渲染纹理交换（Update方法的最后部分）\n   - 为了在下一帧中保留当前帧的状态，脚本执行一系列渲染纹理的交换操作。\n   - 首先，将`TempRT`的内容复制到`PrevRT`中，以便在下一帧中作为上一帧的数据使用。\n   - 然后，将`CurrentRT`和`PrevRT`的引用交换，这样`CurrentRT`现在就包含了最新的效果，而`PrevRT`保存了前一帧的效果。\n6. 渲染与显示\n   - 随着每帧的更新，对象的渲染器将显示`CurrentRT`中的内容，这是最新计算出的效果。\n   - 用户将继续看到根据他们的交互效果的累积与消融而动态变化的场景。\n\n<!-- endtab -->\n\n<!-- tab 部分源代码展示-->\n\n曲面细分步骤\n\n1. 常量外壳着色器（Constant Hull Shader, `ConstantHS`）\n   - 此阶段计算整个曲面的细分级别。它接收原始的控制点（这里是三角形的三个顶点）作为输入，并基于这些控制点计算出一个细分因子（`fac`）。\n   - 在这个例子中，细分因子是根据纹理采样结果和某些预设参数（如`_maxVal`, `_minVal`, `_factor`）通过`smoothstep`函数动态计算的。\n   - 计算出细分因子后，它会被应用到三角形的每条边和内部，决定曲面将被细分成多少个小三角形。\n2. 外壳着色器（Hull Shader, `hullProgram`）\n   - 在常量外壳着色器之后，外壳着色器为每个细分后的控制点（这里是每个原始控制点的细分版本）计算输出数据。\n   - 这个阶段主要为每个控制点准备如世界位置、纹理坐标、法线等必要的插值数据，这些数据将在后续的域着色器中使用。\n3. 曲面细分\n   - 基于常量外壳着色器计算出的细分因子，硬件会执行实际的曲面细分操作，生成更多的三角形来逼近原始曲面。\n4. 域着色器（Domain Shader, `domainProgram`）\n   - 域着色器运行在细分后的每个小三角形上。它接收由外壳着色器准备的插值数据和细分后小三角形的重心坐标作为输入。\n   - 使用这些输入数据，域着色器计算出每个细分三角形的顶点属性，如位置、纹理坐标、法线等。\n   - 这些顶点属性是通过原始控制点的属性进行线性插值得到的。\n5. 几何着色器/光栅化\n   - 在某些情况下，曲面细分之后可能还会有一个几何着色器阶段，用于进一步处理细分后的几何图形。\n   - 然后，这些几何数据将被光栅化，转换为屏幕空间的像素，以供像素着色器处理。\n6. 像素着色器\n   - 最后，在像素着色器阶段，将处理光栅化后的像素，应用纹理、光照等效果，并最终输出到屏幕上。\n\n```\n//vert顶点程序之后调用，计算细分前的三角形顶点信息\n\t\t\tTessOut hullProgram(InputPatch<v2t, 3> i, uint idx : SV_OutputControlPointID)\n\t\t\t{\n\t\t\t\tTessOut o;\n\t\t\t\to.worldPos = i[idx].worldPos;\n\t\t\t\to.uv = i[idx].uv;\n\t\t\t\to.normalWS = i[idx].normalWS;\n\t\t\t\to.normalOS = i[idx].normalOS;\n\t\t\t\to.pos = i[idx].pos;\n\t\t\t\to.tangent = i[idx].tangent;\n\t\t\t\to.bitangent = i[idx].bitangent;\n\t\t\t\treturn o;\n\t\t\t}\n\n\t\t\t//指定每个边的细分段数和内部细分段数\n\t\t\tTessParam ConstantHS(InputPatch<v2t, 3> i, uint id : SV_PrimitiveID)\n\t\t\t{\n\t\t\t\tTessParam o;\n\t\t\t\tfloat2 uv =(i[0].uv+i[1].uv+i[2].uv)/3;\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tfloat4 worldPos = (i[0].worldPos + i[1].worldPos + i[2].worldPos) / 3;\n\t\t\t\tfloat4 pos = (i[0].pos + i[1].pos + i[2].pos) / 3;//\n\n\t\t\t\tfloat4 tex = tex2Dlod(_MainTex,float4(uv,0,0))+(1-pos.y);\n\t\t\t\t\n\t\t\t\tfloat smoothstepResult = smoothstep(_maxVal,_minVal , tex);\n\t\t\t\t\n\t\t\t\tfloat fac = max((1.0 - smoothstepResult)*_factor, 1);\n\t\t\t\t\n\t\t\t\t//由于我这里是根据指定的中心点和半径范围来动态算细分段数，所以才有这个计算，不然可以直接指定变量来设置。\n\t\t\t\to.EdgeTess[0] = fac;\n\t\t\t\to.EdgeTess[1] = fac;\n\t\t\t\to.EdgeTess[2] = fac;\n\t\t\t\to.InsideTess = fac;\n\t\t\t\treturn o;\n\t\t\t}\n\n\t\t\t//在domainProgram前必须设置domain参数，不然会报错\n\t\t\t[domain(\"tri\")]\n\t\t\t//细分之后，把信息传到frag片段程序\n\t\t\tt2f domainProgram(TessParam tessParam, float3 bary : SV_DomainLocation, const OutputPatch<TessOut, 3> i)\n\t\t\t{\n\t\t\t\tt2f o;\t\t\t\t\n\t\t\t\t//线性转换\n\t\t\t\to.worldPos = i[0].worldPos * bary.x + i[1].worldPos * bary.y + i[2].worldPos * bary.z;\n\t\t\t\to.clipPos = UnityWorldToClipPos(o.worldPos);\n\t\t\t\tfloat2 uv = i[0].uv * bary.x + i[1].uv * bary.y + i[2].uv * bary.z;\n\t\t\t\to.uv = uv;\n\t\t\t\to.pos = i[0].pos* bary.x+ i[1].pos * bary.y + i[2].pos * bary.z;\n\t\t\t\to.normalWS = i[0].normalWS* bary.x+ i[1].normalWS * bary.y + i[2].normalWS* bary.z;\n\t\t\t\to.normalOS = i[0].normalOS* bary.x+ i[1].normalOS * bary.y + i[2].normalOS* bary.z;\n\t\t\t\to.tangent = i[0].tangent* bary.x+ i[1].tangent * bary.y + i[2].tangent* bary.z; \n\t\t\t\to.bitangent = i[0].bitangent* bary.x+ i[1].bitangent * bary.y + i[2].bitangent* bary.z;\n\t\t\t\n\t\t\t\treturn o;\n\t\t\t}\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n## 后处理shader\n\n{% tabs 后处理效果%}\n\n<!-- tab 渲染效果-->\n\n{% tabs 后处理效果展示%}\n\n<!-- tab 黑白漫画效果-->\n\n![2024-4-16 11_10_11](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240934874.png)\n\n<!-- endtab -->\n\n<!-- tab 暗角效果-->\n\n![2024-4-16 11_10_45](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240940392.png)\n\n<!-- endtab -->\n\n<!-- tab 扰动效果-->\n\n![2024-4-16 11_10_57](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240934876.png)\n\n<!-- endtab -->\n\n<!-- tab 油画效果-->\n\n![2024-4-16 11_11_03](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240934877.png)\n\n<!-- endtab -->\n\n<!-- tab 模糊效果-->\n\n![2024-4-16 11_11_13](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240934878.png)\n\n<!-- endtab -->\n\n{% endtabs %}\n\n<!-- endtab -->\n\n<!-- tab 部分源代码展示-->\n\n```\n           float3 Oil(float2 uv)\n            {\n                float4 normalmap = tex2D(_OilNormalMap,uv);\n                UnpackNormal(normalmap);\n\n                float2 Coloruv = uv + normalmap.xy*_OilIndensity  * 0.01;\n\n                float3 Color = tex2D(_MainTex,Coloruv);\n\n                float3 hsv = RGBToHSV(Color);\n                Color.rgb = HSVToRGB(hsv + float3(0,0.29,-0.07));\n\n                // normalmap = pow(normalmap,_OilRange) * _OilIndensity;\n\n                \n                return Color;\n            }\n\n            float3 Vague(float2 uv)\n            {\n                \n                float4 View = float4(0,0,0,0);\n\n                for(int x = -_VagueLevel;x <=_VagueLevel;x++)\n                {\n                    for(int y = -_VagueLevel;y<=_VagueLevel;y++)\n                    {\n                        float2 offset = float2(x*_VagueScale,y*_VagueScale)*0.001;\n                        View += tex2D(_MainTex,uv + offset);\n                    }\n                }\n                View /= (_VagueLevel * 2 +1) * (_VagueLevel * 2 + 1);\n\n                return View.xyz;\n            }\n\n\n            float3 Cartoon(float2 uv)\n            {\n                float2 Cartoonuv = uv;\n\n                Cartoonuv = Cartoonuv*_NoisePowScaleUVScale.z;\n                \n                float3 Color = tex2D(_MainTex,uv);\n                float3 Noise = tex2D(_NoiseMap,Cartoonuv);\n                \n             \n                Noise = pow(Noise,_NoisePowScaleUVScale.x)*_NoisePowScaleUVScale.y;\n                if(_ChangeLight)\n                {\n                    Color  =  Color+Noise;\n                    Color = Color.r > Luminance(_luminanceVale);                    \n                }\n                else\n                {\n                    if(Color.r <  Luminance(_luminanceVale))\n                    {\n                        Color += Noise;\n                    }\n                        \n                }\n                        \n                return Color.r;\n            }\n\n\n            float3 DackCorner(float2 uv)\n            {\n                float3 Color = tex2D(_MainTex,uv);\n                float2 Center=float2(0.5,0.5);\n                \n\n                float Range = saturate(_DackRange - distance(Center,uv));\n\n                Range = saturate(pow(Range,_DackPowScale.x) * _DackPowScale.y);\n\n                return Color*Range;\n            }\n\n            float3 Disturbance(float2 uv)\n            {\n                \n              \n                float3 disturbancemap = tex2D(_DisturbanceMap,(uv + float2(_DisturbanceDirecter.x,_DisturbanceDirecter.y)*_Time*_DisturbanceSpeed) *_DisturbanceIndensity*0.01);\n                \n                float2 disturbanceuv;\n                disturbanceuv = uv + _DisturbanceRange*disturbancemap;\n\n                float3 Color = tex2D(_MainTex,disturbanceuv);\n\n                return Color;\n            }\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n## 水墨风格shader\n\n{% tabs 水墨风格片%}\n\n<!-- tab 渲染效果-->\n\n{% videos %}\n{% video https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/Ink.mp4 %}\n{% endvideos %}\n\n<!-- endtab -->\n\n<!-- tab 细节部分-->\n\n1. 处理光照信息\n   - 首先，对输入的法线进行归一化。\n   - 获取场景中的主光源信息，包括光源方向和阴影衰减。\n2. 应用噪声扰动\n   - 使用噪声纹理（`_InteriorNoise`）对输入的纹理坐标进行扰动，得到一个噪声值。\n   - 结合另一个纹理（`_StrokeTex`）和一些调整参数，对原始的纹理坐标进行修改，得到一个新的坐标。\n3. 限制坐标范围\n   - 确保新坐标的值不超过某个上限（如0.95），并进行范围限制，使其在0到1之间。\n4. 执行高斯模糊\n   - 初始化一个用于累加的颜色变量。\n   - 在新坐标周围按照高斯分布采样一个颜色纹理（`_Ramp`），对每个采样点的颜色进行加权累加，以实现模糊效果。\n5. 合成最终颜色\n   - 将高斯模糊后的颜色作为最终的颜色输出（在这个特定的代码版本中，阴影效果被注释掉了，所以不考虑阴影衰减）。\n\n<!-- endtab -->\n\n<!-- tab 部分源代码展示-->\n\n```\n  float4 burn = tex2D(_InteriorNoise, i.uv);\n  // a little bit disturbance on normal vector\n  float diff =  dot(worldNormal, worldLightDir);\n  diff = pow((diff * 0.5 + 0.5),_darkPow);\n  float2 k = tex2D(_StrokeTex, i.uv).xy;\n  float2 cuv = float2(diff, diff) + k * burn.xy * _InteriorNoiseLevel;\n  // return burn;\n\n  // This iniminate the bias of the uv movement?\n  if (cuv.x > 0.95)\n  {\n    cuv.x = 0.95;\n    cuv.y = 1;\n  }\n  if (cuv.y >  0.95)\n  {\n    cuv.x = 0.95;\n    cuv.y = 1;\n  }\n  cuv = clamp(cuv, 0, 1);\n\n  //Guassian Blur\n  float4 sum = float4(0.0, 0.0, 0.0, 0.0);\n          float2 tc = cuv;\n          //blur radius in pixels\n          float blur = radius/resolution/4;\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n## 风格化水面\n\n{% tabs 风格化水面%}\n\n<!-- tab 渲染效果-->\n\n{% videos %}\n{% video https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/Water.mp4 %}\n{% endvideos %}\n\n{% gallery %}\n\n![2024-4-24 9_05_55](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240934879.png)\n\n![2024-4-24 9_08_51](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240934880.png)\n\n![2024-4-24 9_09_09](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240934881.png)\n\n![2024-4-24 9_13_36](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240934882.png)\n\n![2024-4-24 9_13_55](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240934883.png)\n\n![2024-4-24 9_14_29](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240934884.png)\n\n{% endgallery %}\n\n<!-- endtab -->\n\n<!-- tab 细节部分-->\n\n波浪效果\n\n- 通过引入时间依赖的扰动函数，在顶点着色器中动态调整顶点位置，创造出逼真的波浪起伏效果。\n\n 反射效果\n\n- 利用屏幕空间反射（SSR）或平面反射（PR）技术，实现水面上的高质量反射。通过添加适当的模糊效果，进一步提升SSR的视觉效果，增加场景深度感。\n\n 泡沫、涟漪与焦散\n\n- 应用焦散贴图，模拟光线折射和反射效果，形成焦散光斑。同时，通过动态调整贴图的UV坐标，增添生动的泡沫和涟漪效果。\n\n光照效果\n\n- 采用Half Lambert光照模型增强漫反射效果。\n- 结合Blinn-Phong高光模型，模拟真实的高光反射，提升水面的视觉质感。\n\n<!-- endtab -->\n\n<!-- tab 部分源代码展示-->\n\n```\n //===================== Foam 边缘水花=======================================================================\n#ifdef USE_FOAM\n    // return _NoiseMap.Sample(sampler_NoiseMap,  input.positionWS.xz*0.1 + float2(_Time.x*2,0));\n    float foamDistance = 1- saturate(depthDistance/2);\n    //从中间往 岸边动\n    float foamDynamic = 0.5* step( _FoamWidth,frac(foamDistance - _Time.y*0.1*_FoamSpeed + noise.r*0.0325)) * foamDistance*foamDistance;\n\n    //浪花衰减\n    foamDynamic = _EnableDynamicFoam*foamDynamic* smoothstep( _FoamFadeDistance ,1,foamDistance);\n    float foamStatic =  0.5 *step( _FoamWidth,frac(foamDistance  + noise.r*0.03525)) * foamDistance*foamDistance;\n    float foam = max(foamDynamic,foamStatic);\n\n    //加点噪音举出\n    float foamNoise = SAMPLE_TEXTURE2D(_FoamNoiseMap, sampler_FoamNoiseMap,positionWS.xz*_FoamNoiseMap_ST.xy);\n    foamNoise = saturate( pow(foamNoise,_FoamNoisePowScaleVec.x) *_FoamNoisePowScaleVec.y);\n\n    finalColor += foam*LightLum*_FoamColor*foamNoise* saturate(dot(N,V));\n\n#endif\n\n//===================== Caustic 模拟焦散 =================================\n//用深度图的世界坐标采样 CausticMap 模拟其在水中晃动的感觉\n//贴图焦散\n\n#ifndef  USE_PROCEDURAL_CAUSTIC\n    float4 caustic = SAMPLE_TEXTURE2D(_CausticMap, sampler_CausticMap, depthWorldPosition.xz*0.2*_CausticMap_ST.xy+distortionUV*5);\n    // float4 caustic = SAMPLE_TEXTURE2D(_CausticMap, sampler_CausticMap, positionWS.xz*0.2*_CausticMap_ST.xy+distortionUV*5);\n#else\n//程序化焦散\n    float4 caustic =GetCaustic(depthWorldPosition*0.4*_CausticUVScale+distortionUV.xyy*5 + float3(0,_Time.x,0)).xyzz;\n#endif\n\ncaustic *= smoothstep(_CausticFade,1, (1-distortionDistanceFade) )*_CausticIntensity*NL01;\nfinalColor += caustic*LightLum* mainLight.shadowAttenuation;\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n## 森林遗迹\n\n{% tabs 森林遗迹%}\n\n<!-- tab 渲染效果-->\n\n{% videos %}\n{% video https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/forest.mp4 %}\n{% endvideos %}\n\n<!-- endtab -->\n\n{% endtabs %}\n\n## 工具脚本制作\n\n{% tabs 视差卡片%}\n\n<!-- tab mesh合并工具-->\n\n```\npublic class MeshMergerEditor : EditorWindow  \n{  \n    [MenuItem(\"Tools/Merge Meshes\")]  \n    private static void MergeSelectedMeshes()  \n    {  \n        // 获取当前选中的GameObject  \n        GameObject[] selectedObjects = Selection.gameObjects;  \n        List<Mesh> meshesToMerge = new List<Mesh>();  \n  \n        // 遍历选中的GameObject，获取它们的MeshFilter组件中的网格  \n        foreach (GameObject obj in selectedObjects)  \n        {  \n            MeshFilter meshFilter = obj.GetComponent<MeshFilter>();  \n            if (meshFilter != null)  \n            {  \n                meshesToMerge.Add(meshFilter.sharedMesh);  \n            }  \n        }  \n  \n        // 如果没有选中任何网格或者选中的GameObject没有MeshFilter组件，则返回  \n        if (meshesToMerge.Count == 0)  \n        {  \n            Debug.LogError(\"No meshes selected to merge.\");  \n            return;  \n        }  \n  \n        // Prepare combine instances  \n        CombineInstance[] combineInstances = new CombineInstance[meshesToMerge.Count];  \n        for (int i = 0; i < meshesToMerge.Count; i++)  \n        {  \n            combineInstances[i].mesh = meshesToMerge[i];  \n            combineInstances[i].transform = Matrix4x4.identity;  \n        }  \n  \n        // Create a new mesh to hold the combined meshes  \n        Mesh combinedMesh = new Mesh();  \n        combinedMesh.CombineMeshes(combineInstances);  \n        combinedMesh.name = \"MergedMesh_\" + System.DateTime.Now.ToString(\"yyyyMMddHHmmss\");  \n  \n        // Create a new GameObject to hold the merged mesh  \n        GameObject mergedMeshObject = new GameObject(\"MergedMeshObject\");  \n        mergedMeshObject.AddComponent<MeshFilter>().mesh = combinedMesh;  \n        mergedMeshObject.AddComponent<MeshRenderer>(); // Optionally add a MeshRenderer  \n  \n        // Place the merged mesh object at the world origin by default  \n        mergedMeshObject.transform.position = Vector3.zero;  \n  \n        // Select the new merged mesh object in the Hierarchy view  \n        Selection.activeObject = mergedMeshObject;  \n  \n        // Optionally, you can save the mesh as an asset  \n        string path = EditorUtility.SaveFilePanel(\"Save Merged Mesh\", \"\", combinedMesh.name + \".mesh\", \"mesh\");  \n        if (!string.IsNullOrEmpty(path))  \n        {  \n            AssetDatabase.CreateAsset(combinedMesh, path);  \n            AssetDatabase.SaveAssets();  \n            AssetDatabase.Refresh();  \n        }  \n    }  \n}\n```\n\n<!-- endtab -->\n\n<!-- tab 3D贴图制作工具-->\n\n```\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEditor;\nusing UnityEngine;\n[ExecuteInEditMode]\npublic class Render3DTexture : MonoBehaviour {\n\n    public Vector3 Size = Vector3.one;\n    public Vector3 Offset = Vector3.zero;\n\n    public Vector3Int TextureSize = new Vector3Int(256,256,256);\n\n    private Camera renderCam;\n\n    private RenderTexture renderTexture;\n\n    private Texture3D volumeTex;\n\n    public Material SliceMat;\n\n    public Material BlurMat;\n\n    public bool Blur = false;\n\n\n\n    //public List<Texture2D> textureArray = new List<Texture2D>();\n\n    [Range(0,1.0f)]\n    public float ClipValueRange = 0;\n    private float ClipValue = -0.5f;\n    [Tooltip(\"输出路径\")]\n    public string OutputPath = \"testAsset1.asset\";\n\n\n    /// <summary>\n    /// 生成相机\n    /// </summary>\n    private void NewCam()\n    {\n        GameObject cam = new GameObject(\"TempCam\");\n\n        cam.transform.position = transform.position + Size.y *0.51f *Vector3.up +Offset;\n\n        Vector3 localEuler = cam.transform.localEulerAngles;\n\n        localEuler.x = 90;\n        localEuler.y = 180;\n\n        cam.transform.localEulerAngles = localEuler;\n\n        renderCam = cam.AddComponent<Camera>();\n\n        renderCam.orthographic = true;\n\n        renderCam.orthographicSize = Size.x*0.5f;\n\n        renderCam.nearClipPlane = 0.0001f;\n        renderCam.farClipPlane = 100;\n\n        renderCam.clearFlags = CameraClearFlags.SolidColor;\n\n        renderCam.backgroundColor = Color.black;\n\n        renderTexture = CreateRT(TextureSize.x, TextureSize.z);\n\n        renderCam.targetTexture = renderTexture;\n\n    }\n\n    public void StartRender()\n    {\n        NewCam();\n\n        volumeTex = new Texture3D(TextureSize.x, TextureSize.y, TextureSize.z,TextureFormat.RFloat,false);\n\n        RenderSlice();\n    }\n\n    public void RenderSlice()\n    {\n\n        //渲染范围\n        Vector3 center = transform.position;\n        float min = -Size.y * 0.5f + Offset.y + center.y;\n        float max = Size.y * 0.5f + Offset.y + center.y;\n\n        ClipValue = min;\n\n        Color[] colors = new Color[TextureSize.x * TextureSize.y * TextureSize.z];\n\n        int layerCount = TextureSize.x * TextureSize.z;\n\n        for (int layer = 0; layer < TextureSize.y; layer++)\n        {\n            renderCam.Render();\n\n            ClipValue += (max - min) / TextureSize.y;\n\n            float progress = (float)layer / TextureSize.y;\n\n            bool isCancel = EditorUtility.DisplayCancelableProgressBar(\"正在执行..\",string.Format(\"生成3DTexture中... {0:f2}%\", progress*100), progress);\n\n            if (SliceMat != null)SliceMat.SetFloat(\"_ClipValue\", ClipValue);\n\n            Texture2D sliceTex = RenderTexture2Texture2D(renderTexture);\n\n\n            int index = 0;\n            //拷贝颜色\n            for (int z = 0; z < TextureSize.z; z++)\n                for (int x = 0; x < TextureSize.x; x++)\n                {\n                    //XY ->XZ\n                    index = x + z * TextureSize.y * TextureSize.x+layer* TextureSize.x;\n                    colors[index] = sliceTex.GetPixel(x, z);\n                }\n            //渲染完成或者取消时关闭进度条\n            if (layer >= TextureSize.y - 1 || isCancel)\n            {\n                EditorUtility.ClearProgressBar();\n\n                if (isCancel)\n                {\n                    DestroyImmediate(renderCam.gameObject);\n                    renderTexture.Release();\n\n                    return;\n                }\n            }\n        }\n\n        volumeTex.SetPixels(colors);\n        volumeTex.Apply();\n        if (Blur)\n        {\n            volumeTex = BlurTexture(volumeTex);\n        }\n        string filePath = \"Assets/\"+ OutputPath;\n        try\n        {\n            AssetDatabase.DeleteAsset(filePath);\n            AssetDatabase.CreateAsset(volumeTex, filePath);\n        }\n        catch (Exception ex)\n        {\n            Debug.LogError(ex.Message);\n        }\n        DestroyImmediate(renderCam.gameObject);\n        renderTexture.Release();\n        renderTexture = null;\n        UnityEditor.AssetDatabase.SaveAssets();\n        AssetDatabase.Refresh();\n    }\n    /// <summary>\n    /// Renderer转成Texture2D\n    /// </summary>\n    /// <param name=\"rt\"></param>\n    /// <returns></returns>\n    public Texture2D RenderTexture2Texture2D(RenderTexture rt)\n    {\n        RenderTexture preRT = RenderTexture.active;\n        RenderTexture.active = rt;\n        Texture2D tex = new Texture2D(rt.width, rt.height, TextureFormat.ARGB32, false);\n        tex.ReadPixels(new Rect(0, 0, rt.width, rt.height), 0, 0);\n        tex.Apply();\n        RenderTexture.active = preRT;\n        return tex;\n    }\n\n    public void OnDrawGizmos()\n    {\n        Gizmos.DrawWireCube(this.transform.position+Offset, Size);\n    }\n\n    public void OnDestory()\n    {\n        renderTexture.Release();\n    }\n\n    public Texture3D BlurTexture(Texture3D tex)\n    {\n        for (int i = 0; i < 2; i++)\n        {\n            Color[] colors = new Color[TextureSize.x * TextureSize.y * TextureSize.z];\n\n            int index = 0;\n\n            for (int layer = 0; layer < TextureSize.y; layer++)\n            {\n                BlurMat.SetTexture(\"_VolumeTex\", tex);\n                BlurMat.SetFloat(\"_offset\", layer * 1.0f / TextureSize.y);\n                Debug.Log(layer * 1.0f / TextureSize.y);\n\n                RenderTexture rt = new RenderTexture(TextureSize.x, TextureSize.z, 24, RenderTextureFormat.ARGB32);\n\n                Graphics.Blit(null, rt, BlurMat);\n\n                Texture2D sliceTex = RenderTexture2Texture2D(rt);\n\n                //拷贝颜色\n                for (int z = 0; z < TextureSize.z; z++)\n                    for (int x = 0; x < TextureSize.x; x++)\n                    {\n                        //XY ->XZ\n                        index = x + z * TextureSize.y * TextureSize.x + layer * TextureSize.x;\n                        colors[index] = sliceTex.GetPixel(x, z);\n                    }\n            }\n\n            tex.SetPixels(colors);\n            tex.Apply();\n        }\n        return tex;\n    }\n\n    private RenderTexture CreateRT(int width, int height)\n    {\n        RenderTexture rt = new RenderTexture(width, height, 16);\n        rt.format = RenderTextureFormat.ARGBFloat;\n        rt.wrapMode = TextureWrapMode.Repeat;\n        rt.filterMode = FilterMode.Point;\n        rt.Create();\n        return rt;\n    }\n    \n    private void Update()\n    {\n        if (SliceMat == null)\n        {\n            SliceMat = GetComponent<Renderer>().sharedMaterial;\n        }\n        if (SliceMat != null)\n        {\n            float min = -Size.y * 0.5f + Offset.y+transform.position.y;\n            float max = Size.y * 0.5f + Offset.y +transform.position.y;\n            float value = Mathf.Lerp(min, max, ClipValueRange);\n            SliceMat.SetFloat(\"_ClipValue\", value);\n        }\n\n    }\n}\n\n```\n\n<!-- endtab -->\n\n<!-- tab 动态贴图制作工具-->\n\n```\nusing System.Collections;\nusing System.Collections.Generic;\nusing Palmmedia.ReportGenerator.Core.Parser.Analysis;\nusing UnityEngine;\n\npublic class Interactive : MonoBehaviour\n{\n\n    public Camera mainCamera;\n\n    public RenderTexture TempRT;\n    \n    \n    public Shader DrawShader;\n\n    private Material DrawMat;\n    public int TextureSize = 512;\n\n    [Range(0,1.0f)]\n    public float DrawRadius = 0.5f;\n\n    \n    public RenderTexture PrevRT;//上一帧RT\n    //public RenderTexture CurrentRT;//当前帧RT\n    public RenderTexture CurrentRT;\n    public Shader SnowShader;\n    private Material SnowMat;\n        \n    [Range(0,1)]\n    public float AttenSpeed = 0.5f;\n    \n    \n    // Start is called before the first frame update\n    void Start()\n    {\n        mainCamera = Camera.main.GetComponent<Camera>();\n        CurrentRT = CreateRT();\n        PrevRT = CreateRT();\n        TempRT = CreateRT();\n\n        DrawMat = new Material(DrawShader);\n        SnowMat = new Material(SnowShader);\n\n        GetComponent<Renderer>().material.mainTexture = CurrentRT;\n    }\n\n    public RenderTexture CreateRT()\n    {\n        RenderTexture rt = new RenderTexture(TextureSize, TextureSize, 0, RenderTextureFormat.RFloat);\n        rt.Create();\n        return rt;\n    }\n\n\n    private void DrawAt(float x,float y, float radius)\n    {\n        //原来的贴图\n        DrawMat.SetTexture(\"_SourceTex\",CurrentRT);\n        //绘制的大小和位置\n        DrawMat.SetVector(\"_Pos\",new Vector4(x,y,radius));\n        //输出\n        Graphics.Blit(null,TempRT,DrawMat);\n        //进行交换\n        RenderTexture rt = TempRT;\n        TempRT = CurrentRT;\n        CurrentRT = rt;\n    }\n    \n    // Update is called once per frame\n    void Update()\n    {\n        Shader.SetGlobalFloat(\"_AttenSpeed\",AttenSpeed);\n        //射线检测\n        if (Input.GetMouseButton(0))\n        {\n            //鼠标左键按下时进行检测\n            Ray ray = mainCamera.ScreenPointToRay(Input.mousePosition);\n            //获取碰撞信息\n            RaycastHit hit;\n            if (Physics.Raycast(ray,out hit))\n            {\n                //绘制\n                DrawAt(hit.textureCoord.x, hit.textureCoord.y, DrawRadius);\n            }\n\n        }\n        \n        //计算\n        SnowMat.SetTexture(\"_PrevRT\",PrevRT);\n        SnowMat.SetTexture(\"_CurrentRT\",CurrentRT);\n        Graphics.Blit(null,TempRT,SnowMat);\n        //交换RT\n        Graphics.Blit(TempRT,PrevRT);\n        RenderTexture rt = PrevRT;\n        PrevRT = CurrentRT;\n        CurrentRT = rt;\n\n    }\n}\n\n```\n\n<!-- endtab -->\n\n<!-- tab 镜子工具-->\n\n```\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.Rendering;\n\n\n[ExecuteInEditMode]\npublic class PlanarReflection : MonoBehaviour {\n    public LayerMask _reflectionMask = -1;\n    public bool _reflectSkybox = false;\n    Color _clearColor = Color.black;\n    public int m_TextureSize = 1024;\n\n    const string _reflectionSampler = \"_ReflectionTex\";\n    public float _clipPlaneOffset = 0.07F;\n\n    Vector3 _oldpos;\n    Camera _reflectionCamera;\n    RenderTexture _bluredReflectionTexture;\n    Material _sharedMaterial;\n\n    public bool _blurOn = true;\n\n       \n\n    [Range(0.0f, 5.0f)]\n    public float _blurSize = 1;\n    public int _blurIterations = 2;\n    public float _downsample = 1;\n\n#if UNITY_EDITOR\n    bool _oldBlurOn;\n    float _oldBlurSize;\n#endif\n\n    private Shader _blurShader;\n    private Material _blurMaterial;\n\n    private static bool s_InsideWater;\n    private RenderTexture rt;\n\n    Material BlurMaterial {\n        get {\n            if (_blurMaterial == null) {\n                _blurMaterial = new Material(_blurShader);\n                return _blurMaterial;\n            }\n            return _blurMaterial;\n        }\n    }\n\n#if UNITY_EDITOR\n    void Awake() {\n        _oldBlurOn = _blurOn;\n        _oldBlurSize = _blurSize;\n\n    }\n#endif\n\n    void Start() {\n        _sharedMaterial = GetComponent<MeshRenderer>().sharedMaterial;\n        if (_blurShader == null)\n            _blurShader = Shader.Find(\"Hidden/SimpleBlur\");\n    }\n\n\n    Camera CreateReflectionCameraFor(Camera cam) {\n        String reflName = gameObject.name + \"Reflection\" + cam.name;\n        GameObject go = new GameObject(reflName);\n        go.hideFlags = HideFlags.HideAndDontSave;\n        Camera reflectCamera = go.AddComponent<Camera>();\n\n        reflectCamera.backgroundColor = _clearColor;\n        reflectCamera.clearFlags = _reflectSkybox ? CameraClearFlags.Skybox : CameraClearFlags.SolidColor;\n\n        SetStandardCameraParameter(reflectCamera, _reflectionMask);\n\n        if (!reflectCamera.targetTexture) {\n            reflectCamera.targetTexture = CreateTexture();\n        }\n\n        return reflectCamera;\n    }\n\n    void SetStandardCameraParameter(Camera cam, LayerMask mask) {\n        cam.cullingMask = mask;\n        cam.backgroundColor = Color.black;\n        cam.enabled = false;\n    }\n\n    RenderTexture CreateTexture() {\n#if UNITY_EDITOR\n        //RenderTexture rt = new RenderTexture(Mathf.FloorToInt(Screen.width), Mathf.FloorToInt(Screen.height * 0.5f), 16);\n        rt = new RenderTexture(m_TextureSize, m_TextureSize, 16);\n        \n#else\n        //RenderTexture rt = new RenderTexture(Mathf.FloorToInt(Screen.width * 0.5f), Mathf.FloorToInt(Screen.height * 0.5f), 16);\n        RenderTexture rt = new RenderTexture(m_TextureSize,m_TextureSize, 16);\n\n#endif\n        rt.hideFlags = HideFlags.DontSave;\n        return rt;\n    }\n\n    void OnWillRenderObject() {\n        Camera currentCam = Camera.current;\n        if (!currentCam) {\n            return;\n        }\n\n#if !UNITY_EDITOR\n        if (!currentCam.gameObject.CompareTag(\"MainCamera\"))\n            return;\n#endif\n\n#if UNITY_EDITOR\n        if (!_bluredReflectionTexture)\n            _bluredReflectionTexture = CreateTexture();\n#else\n        if(_blurOn) {\n            if (!_bluredReflectionTexture)\n                _bluredReflectionTexture = CreateTexture();\n        }\n#endif\n\n        if (s_InsideWater) {\n            return;\n        }\n        s_InsideWater = true;\n\n\n        if (!_reflectionCamera) {\n            _reflectionCamera = CreateReflectionCameraFor(currentCam);\n        }\n\n        RenderReflectionFor(currentCam, _reflectionCamera);\n\n        if (_reflectionCamera && _sharedMaterial) {\n            if (_blurOn) {\n                PostProcessTexture(currentCam, _reflectionCamera.targetTexture, _bluredReflectionTexture);\n                _sharedMaterial.SetTexture(_reflectionSampler, _bluredReflectionTexture);\n            } else {\n                _sharedMaterial.SetTexture(_reflectionSampler, _reflectionCamera.targetTexture);\n            }\n        }\n\n        s_InsideWater = false;\n    }\n\n#if UNITY_EDITOR\n    bool _blurParamChanged;\n    void Update() {\n        if (_blurParamChanged) {\n            _oldBlurOn = _blurOn;\n            _oldBlurSize = _blurSize;\n        }\n\n        if (_blurOn != _oldBlurOn || _blurSize != _oldBlurSize) {\n            _blurParamChanged = true;\n        }\n\n    }\n#endif\n\n    void RenderReflectionFor(Camera cam, Camera reflectCamera) {\n        if (!reflectCamera) {\n            return;\n        }\n\n        if (_sharedMaterial && !_sharedMaterial.HasProperty(_reflectionSampler)) {\n            return;\n        }\n\n        reflectCamera.cullingMask = _reflectionMask;\n\n        SaneCameraSettings(reflectCamera);\n\n        reflectCamera.backgroundColor = _clearColor;\n        reflectCamera.clearFlags = _reflectSkybox ? CameraClearFlags.Skybox : CameraClearFlags.SolidColor;\n        if (_reflectSkybox) {\n            if (cam.gameObject.GetComponent(typeof(Skybox))) {\n                Skybox sb = (Skybox)reflectCamera.gameObject.GetComponent(typeof(Skybox));\n                if (!sb) {\n                    sb = (Skybox)reflectCamera.gameObject.AddComponent(typeof(Skybox));\n                }\n                sb.material = ((Skybox)cam.GetComponent(typeof(Skybox))).material;\n            }\n        }\n\n        bool isInvertCulling = GL.invertCulling;\n        GL.invertCulling = true;\n\n        Transform reflectiveSurface = transform; //waterHeight;\n\n        Vector3 eulerA = cam.transform.eulerAngles;\n\n        reflectCamera.transform.eulerAngles = new Vector3(-eulerA.x, eulerA.y, eulerA.z);\n        reflectCamera.transform.position = cam.transform.position;\n\n        Vector3 pos = reflectiveSurface.transform.position;\n        pos.y = reflectiveSurface.position.y;\n        Vector3 normal = reflectiveSurface.transform.up;\n        float d = -Vector3.Dot(normal, pos) - _clipPlaneOffset;\n        Vector4 reflectionPlane = new Vector4(normal.x, normal.y, normal.z, d);\n\n        Matrix4x4 reflection = Matrix4x4.zero;\n        reflection = CalculateReflectionMatrix(reflection, reflectionPlane);\n        _oldpos = cam.transform.position;\n        Vector3 newpos = reflection.MultiplyPoint(_oldpos);\n\n        reflectCamera.worldToCameraMatrix = cam.worldToCameraMatrix * reflection;\n\n        Vector4 clipPlane = CameraSpacePlane(reflectCamera, pos, normal, 1.0f);\n\n        Matrix4x4 projection = cam.projectionMatrix;\n        projection = CalculateObliqueMatrix(projection, clipPlane);\n        reflectCamera.projectionMatrix = projection;\n\n        reflectCamera.transform.position = newpos;\n        Vector3 euler = cam.transform.eulerAngles;\n        reflectCamera.transform.eulerAngles = new Vector3(-euler.x, euler.y, euler.z);\n\n        reflectCamera.Render();\n\n        GL.invertCulling = isInvertCulling;\n    }\n\n\n    void SaneCameraSettings(Camera helperCam) {\n        helperCam.depthTextureMode = DepthTextureMode.None;\n        helperCam.backgroundColor = Color.black;\n        helperCam.clearFlags = CameraClearFlags.SolidColor;\n        helperCam.renderingPath = RenderingPath.Forward;\n    }\n\n\n    static Matrix4x4 CalculateObliqueMatrix(Matrix4x4 projection, Vector4 clipPlane) {\n        Vector4 q = projection.inverse * new Vector4(\n            Sgn(clipPlane.x),\n            Sgn(clipPlane.y),\n            1.0F,\n            1.0F\n            );\n        Vector4 c = clipPlane * (2.0F / (Vector4.Dot(clipPlane, q)));\n        // third row = clip plane - fourth row\n        projection[2] = c.x - projection[3];\n        projection[6] = c.y - projection[7];\n        projection[10] = c.z - projection[11];\n        projection[14] = c.w - projection[15];\n\n        return projection;\n    }\n\n\n    static Matrix4x4 CalculateReflectionMatrix(Matrix4x4 reflectionMat, Vector4 plane) {\n        reflectionMat.m00 = (1.0F - 2.0F * plane[0] * plane[0]);\n        reflectionMat.m01 = (-2.0F * plane[0] * plane[1]);\n        reflectionMat.m02 = (-2.0F * plane[0] * plane[2]);\n        reflectionMat.m03 = (-2.0F * plane[3] * plane[0]);\n\n        reflectionMat.m10 = (-2.0F * plane[1] * plane[0]);\n        reflectionMat.m11 = (1.0F - 2.0F * plane[1] * plane[1]);\n        reflectionMat.m12 = (-2.0F * plane[1] * plane[2]);\n        reflectionMat.m13 = (-2.0F * plane[3] * plane[1]);\n\n        reflectionMat.m20 = (-2.0F * plane[2] * plane[0]);\n        reflectionMat.m21 = (-2.0F * plane[2] * plane[1]);\n        reflectionMat.m22 = (1.0F - 2.0F * plane[2] * plane[2]);\n        reflectionMat.m23 = (-2.0F * plane[3] * plane[2]);\n\n        reflectionMat.m30 = 0.0F;\n        reflectionMat.m31 = 0.0F;\n        reflectionMat.m32 = 0.0F;\n        reflectionMat.m33 = 1.0F;\n\n        return reflectionMat;\n    }\n\n    static float Sgn(float a) {\n        if (a > 0.0F) {\n            return 1.0F;\n        }\n        if (a < 0.0F) {\n            return -1.0F;\n        }\n        return 0.0F;\n    }\n\n    Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign) {\n        Vector3 offsetPos = pos + normal * _clipPlaneOffset;\n        Matrix4x4 m = cam.worldToCameraMatrix;\n        Vector3 cpos = m.MultiplyPoint(offsetPos);\n        Vector3 cnormal = m.MultiplyVector(normal).normalized * sideSign;\n\n        return new Vector4(cnormal.x, cnormal.y, cnormal.z, -Vector3.Dot(cpos, cnormal));\n    }\n\n    private Dictionary<Camera, CommandBuffer> _cameras = new Dictionary<Camera, CommandBuffer>();\n\n    void PostProcessTexture(Camera cam, RenderTexture source, RenderTexture dest)\n    {\n      \n#if UNITY_EDITOR\n        if (_blurParamChanged)\n        {\n            if (_cameras.ContainsKey(cam))\n                cam.RemoveCommandBuffer(CameraEvent.BeforeForwardOpaque, _cameras[cam]);\n            _cameras.Remove(cam);\n        }\n#endif\n       \n        if (_cameras.ContainsKey(cam))\n            return;\n\n        CommandBuffer buf = new CommandBuffer();\n        buf.name = \"Blur Reflection Texture\";\n        _cameras[cam] = buf; \n        float width = source.width;\n        float height = source.height;\n        int rtW = Mathf.RoundToInt(width / _downsample);\n        int rtH = Mathf.RoundToInt(height / _downsample);\n\n        int blurredID = Shader.PropertyToID(\"_Temp1\");\n        int blurredID2 = Shader.PropertyToID(\"_Temp2\");\n        buf.GetTemporaryRT(blurredID, rtW, rtH, 0, FilterMode.Bilinear, source.format);\n        buf.GetTemporaryRT(blurredID2, rtW, rtH, 0, FilterMode.Bilinear, source.format);\n\n        buf.Blit((Texture)source, blurredID);\n        for (int i = 0; i < _blurIterations; i++)\n        {\n            float iterationOffs = (i * 1.0f);\n            buf.SetGlobalFloat(\"_Offset\", iterationOffs / _downsample + _blurSize);\n            buf.Blit(blurredID, blurredID2, BlurMaterial, 0);\n            buf.Blit(blurredID2, blurredID, BlurMaterial, 0);\n        }\n        buf.Blit(blurredID, dest);\n\n        buf.ReleaseTemporaryRT(blurredID);\n        buf.ReleaseTemporaryRT(blurredID2);\n\n        cam.AddCommandBuffer(CameraEvent.BeforeForwardOpaque, buf);\n    }\n\n}\n```\n\n<!-- endtab -->\n\n<!-- tab 运镜工具-->\n\n```\nusing System.Collections.Generic;  \nusing UnityEngine;  \n  \npublic class CameraMovement : MonoBehaviour  \n{  \n    public List<Transform> pathPoints;  \n    public float moveSpeed = 2.0f;  \n    public float rotationSpeed = 30.0f;  \n    private int currentIndex = 0;  \n    private Transform target;  \n    private bool isMoving = false;  \n  \n    private void Start()  \n    {  \n        if (pathPoints != null && pathPoints.Count > 0)  \n        {  \n            target = pathPoints[currentIndex];  \n        }  \n    }  \n  \n    private void Update()  \n    {  \n        // 检查是否按下空格键来启动或停止相机运动  \n        if (Input.GetKeyDown(KeyCode.Space))  \n        {  \n            isMoving = !isMoving;  \n        }  \n  \n        if (!isMoving || target == null) return;  \n  \n        Vector3 directionToTarget = (target.position - transform.position).normalized;  \n        transform.Translate(directionToTarget * moveSpeed * Time.deltaTime, Space.World);  \n  \n        if (Vector3.Distance(transform.position, target.position) < 0.1f)  \n        {  \n            currentIndex = (currentIndex + 1) % pathPoints.Count;  \n            target = pathPoints[currentIndex];  \n  \n            Quaternion targetRotation = Quaternion.LookRotation(target.position - transform.position);  \n            transform.rotation = Quaternion.RotateTowards(transform.rotation, targetRotation, rotationSpeed * Time.deltaTime);  \n        }  \n    }  \n}\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n","source":"_posts/作品集.md","raw":"---\ntitle: 作品集\ndata: 2024-7-3 19:52:54\nupdated: 2024-7-3\ntags: \n    - TA\n    - Creation\ncategories: Creation\ndescription: This is my 作品集\ncover: https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202403191721875.png\n---\n\n# 作品集\n\n{% note blue %}\n\n前言：这本作品集是我学习与实践的成果，它记录了我的专业技能与创作思路。每一份作品都代表了我对专业的理解和对品质的追求。希望通过这些精选的作品，能够让您更直观地了解我的实力与潜力。期待有机会为您的团队贡献我的力量。\n\n{% endnote %}\n\n带宽速度不高，加载速度会有一定的影响，经过测试输出的内容还是比较稳定的。\n\n## Logo效果\n\n{% tabs 视频%}\n\n<!-- tab 渲染效果-->\n\n{% videos %}\n{% video https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/LOGO.mp4 %}\n{% endvideos %}\n\n<!-- endtab -->\n\n<!-- tab 细节部分-->\n\n{% tabs 体积光 %}\n<!-- tab 体积光和SSR反射-->\n{% gallery %}\n![2024-4-18 3_07_06](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725272.png)\n\n![image-20240418032736469](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725273.png)\n\n![image-20240418032753632](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725274.png)\n\n{% endgallery %}\n<!-- endtab -->\n\n<!-- tab 代码分析-->\n\n**体积光**\n\n处理：\n\na. 初始化射线、步长、当前位置、衰减率和颜色。\n\nb. 进入一个循环，在循环中：\n\n- 使用噪声纹理和当前位置计算出一个噪声值，这个噪声值乘以密度来控制体积光的分布。\n- 更新衰减率，模拟光线在介质中传播时的衰减。\n- 如果衰减率低于某个阈值，则提前退出循环，因为此时的光线已经非常微弱。\n- 更新当前位置，沿着射线方向前进一个步长。\n- 累加颜色值，这里使用了一个简单的基于高度的雾色模型。\n  c. 将累加的颜色值乘以曝光度，并设置颜色的alpha值为1.0，表示不透明。\n  d. 返回最终的颜色值。\n\n**SSR镜面反射**\n\n1. 计算反射路径\n   - 使用相机到点的向量`V`和水面法线计算出反射方向。\n   - 根据这个反射方向和预设的SSR长度，确定反射光线在世界空间中的终点和远点。\n2. 转换到屏幕空间\n   - 把世界空间的反射路径起点、终点、远点转换为裁剪空间，再进一步转换为屏幕空间坐标。\n3. 快速检查远点\n   - 如果远点在屏幕范围内，检查其深度，如果深度合适，则直接采样该点的颜色作为反射颜色。\n4. 线性追踪\n   - 从屏幕空间的起点开始，沿着反射路径逐步前进。\n   - 在每一步，检查当前点的屏幕空间坐标是否在屏幕范围内，以及当前点的深度是否比之前记录的深度更近。\n   - 如果找到一个有效的交点（即深度比之前记录的近），则记录这个交点的屏幕空间坐标。\n5. 采样反射颜色\n   - 如果有有效的交点，根据交点的屏幕空间坐标采样颜色，并乘以一个基于视角和法线夹角的衰减因子。\n   - 如果没有有效的交点，但远点检查成功，则使用远点的颜色。\n   - 如果都没有成功，则反射颜色可能保持为初始化的零值或预设的默认值。\n\n**LOGO模型**\n\n1. 设计Logo模型\n   - 初步构思Logo形状与风格\n   - 完成Logo的初步设计\n2. 为Logo增加视觉效果\n   - 添加扰动效果，赋予Logo动态感\n   - 融入反射效果，提升Logo的光泽与立体感\n   - 点缀星星效果，使Logo更加璀璨\n   - 添加**虚拟光效果**，模拟点光源增加一个光照效果，跟随小球运动实现实时渲染\n3. 让Logo动起来\n   - 添加运动效果，使Logo更生动\n4. 增加环境元素\n   - 在Logo周围添加飘动的小球和旋转的圆环，营造活泼、动感的氛围\n\n<!-- endtab -->\n\n{% endtabs %}\n\n\n\n<!-- endtab -->\n\n<!-- tab 部分源代码展示-->\n\n**Logo模型的ASE代码**![image-20240418034245510](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725275.png)\n\n**体积光部分代码**\n\n```\n//AABB\n bool intersectAABB(float3 rayOrigin, float3 rayDir, float3 boxMin,\n                               float3 boxMax, out float2 tNearFar)\n            {\n                float3 tMin = (boxMin - rayOrigin) / rayDir;\n                float3 tMax = (boxMax - rayOrigin) / rayDir;\n                float3 t1 = min(tMin, tMax);\n                float3 t2 = max(tMin, tMax);\n                float tNear = max(max(t1.x, t1.y), t1.z);\n                float tFar = min(min(t2.x, t2.y), t2.z);\n                tNearFar = float2(tNear, tFar);\n\n                return tFar > tNear;\n            }\n\n\n//光线步进\nUNITY_LOOP\nfor (float k = 0; k < vlSamples; k++)\n{\n    float f = saturate((k + rand()) / vlSamples);\n    float3 p = lerp(startPos, endPos, f);\n\n    //射线与平面求交\n    float distance;\n    // float3 lightDir = normalize(LightPos - p);\n    // iPlane(p,L,float4(0,-1,0,0.5),distance);\n    intersectPlane(float3(0, -1, 0), float3(0, 0.5, 0), p, L, distance);\n    float3 hitPos = p + L * distance;\n\n    //白色体积光\n    float3 caustic = GetCaustic(hitPos.xz);\n    //*hsv2rgb(float3((p.y+_RainbowOffset + dot(L,-rayDir))*_RainbowScale+0.5,_RainbowIntensity,1));//*spectral_zucconi6(p.y+0.5);\n    //彩色体积光\n    float noise = tex2D(_Noise, hitPos.xz).r;\n    noise = lerp(1, 1.3, noise);\n    float3 causticColorful = 5 * GetCaustic(hitPos.xz) *\n        hsv2rgb(float3(\n        (p.y + _RainbowOffset + dot(L, -rayDir) * 0.1) * _RainbowScale * noise + 0.5,\n        _RainbowIntensity, 1)); \n    float rinbowMask = tex2D(_RainbowMask, hitPos.xz * 3);\n    caustic = lerp(caustic, causticColorful*1.5, rinbowMask) * 1.5;\n    // caustic = (causticColorful) * 1.5;\n\n    vlLight += caustic * add;\n}\n\n//体积光 核心算法 =======================================================\n\nfloat height = input.posOS.y + 0.5;\nfloat noise = tex2D(_Noise, input.posOS.xz).r;\n\nvlLight = vlLight * smoothstep(0.2, 1.1 + noise, height) * 20;\nvlLight = vlLight * multipleOctaves(height, cosTheta);\n\nfloat3 color = lerp(_Color1, _Color2, height) * 0.5 + vlLight; \n\nfloat alpha = exp(-rayMaxDistance * _Density);\n```\n\n**SSR镜面部分代码**\n\n```\n    //远处的反射 RayMarch 无法Hit到\n    float fade = pow(1-dot(normalize(V),waterNormal),1 );//fresnel\n    // 最远端在相机视口内\n    UNITY_BRANCH if((far_ScreenPixelNdcZ).y<1)\n    {\n\n        float farDepth =  GetDepth(far_ScreenPixelNdcZ.xy);\n        farDepth = LinearEyeDepth(farDepth);\n        UNITY_BRANCH if(abs(farDepth)<SSRLength)\n        {\n            // SSRColor =  GetSceneColor(far_ScreenPixelNdcZ.xy)*fade*float4(1,0,0,0);\n            SSRColor = GetSceneColor(far_ScreenPixelNdcZ.xy)*fade;\n        }\n        else\n        {\n            SSRColor.w = 1;\n        }\n    }\n    UNITY_LOOP\n    for (int n=1;n<MaxLingearStep;n++)\n    {\n        Ray += Step;\n        //如果测试点跑到 视口外面去了，那么停止for循环\n        UNITY_BRANCH if(Ray.z<0 || Ray.z>1 || Ray.x<0 || Ray.x>1 || Ray.y<0 || Ray.y>1)\n        {\n            break;\n        }\n        float Depth = GetDepth(Ray.xy);\n        //  上一次深度<Depth<这一次深度\n        // if(Depth + _PerPixelCompareBias >Ray.z && Ray.z <Depth +_PerPixelDepthBias )\n        if(Ray.z < Depth  && Depth < LastDepth)\n        {\n            isHit = true;\n            hitUV = Ray.xy;\n            break;\n        }\n        LastDepth =Ray.z;\n    }\n    if(isHit)\n    {\n        SSRColor =  GetSceneColor(hitUV)*fade;\n    }\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n## 视差卡片\n\n{% tabs 视差卡片%}\n\n<!-- tab 渲染效果-->\n\n{% tabs 视差卡片%}\n\n<!-- tab 多巴胺女孩-->\n\n{% videos, 2 %}\n\n{% video https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/parallax4.mp4 %}\n{% video https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/Parallax1.mp4 %}\n\n{% endvideos %}\n\n<!-- endtab -->\n\n<!-- tab 模特橱窗-->\n\n{% videos, 2 %}\n\n{% video https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/parallax3.mp4 %}\n{% video https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/parallax2.mp4 %}\n\n{% endvideos %}\n\n<!-- endtab -->\n\n<!-- tab 模板测试3D效果-->\n\n{% videos %}\n\n{% video https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/TemplentTest.mp4 %}\n\n{% endvideos %}\n\n<!-- endtab -->\n\n<!-- tab 深度测试滤镜效果-->\n\n{% gallery %}\n\n![2024-4-16 10_17_29](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725276.png)\n\n{% endgallery %}\n\n<!-- endtab -->\n\n{% endtabs %}\n\n<!-- endtab -->\n\n<!-- tab 细节部分-->\n\n## **视差效果算法**\n\n![](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725277.png)\n\n### 计算视角与法线的夹角余弦值\n\n通过计算`ViewTS`与z轴的点积（dot product）来得到夹角的余弦值。\n\n**1.计算视差长度**\n\n使用`Depth`除以夹角的余弦值来计算视差效果的长度。\n\n**2.计算偏移纹理坐标**\n\n根据`ViewTS`和视差长度来计算出偏移后的纹理坐标。\n\n**3.采样纹理**\n\n使用偏移后的纹理坐标从`_Map`中采样颜色。\n\n### **橱窗效果**\n\n**1.生成深度图**\n\n使用Stable Diffusion技术，开始制作深度图。\n\n选择一种方法生成深度图：\n\n使用具有浮雕效果的lora技术：通过lora处理原始2D图像，强调图像中的轮廓和细节，从而生成初始的深度信息。\n\n或者，利用controlNet插件：这个插件可以分析图像中的空间关系和物体层次，生成更为精确的深度图。\n\n**2.调整深度图**\n\n打开Photoshop或其他图像处理软件。\n\n导入生成的深度图。\n\n调整深度图的明度，以确保深度信息的准确性和视觉效果的协调性。\n\n**3.应用视差效果** \n\n将调整后的深度图应用于原始2D图像上，使用视差算法根据深度信息对图像进行分层处理。\n\n调整视差效果的参数，以达到理想的3D橱窗效果。这些参数可能包括视差强度、分层数量等。\n\n4.**最终调整与输出**\n\n对生成的3D橱窗效果进行最后的调整和优化，确保整体视觉效果的自然和协调。\n\n导出最终的3D橱窗效果图像，准备用于展示或分享。\n\n## **贴图制作**\n\n多巴胺女孩和模特均由Sdable Diffusion制作，背景则是ps制作\n\n主要步骤：\n\n加载stable diffusion环境，选择大模型（猴人3D重制 V10.safetensors）\n\n参数配置\n\n![](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725279.png)\n\n![](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725278.png)\n\n再添加想要的提示词就能得到想要的图片啦\n\n### 高光和流光效果\n\n高光效果可通过Blinn-Phong模型中的dot(N,H)实现，或通过光晕函数模拟，结合全局虚拟点光源和HSV色彩模型，呈现绚丽色彩。而流光效果则可采用Luminance函数或遮罩贴图来精准定位流光的动感部位。\n\n## 模板测试\n\n**1.设置蒙版的属性**\n\n```\nZWrite off//需要关闭深度写入，否则在渲染透明物体的时候会出错，透明物体会修改深度缓冲区\n\n//其中_ID是指可以通过蒙版显示的模型ID\nStencil{\n      Ref[_ID]//在模板缓存区中存储一个蒙版测试的ID\n      Comp always//设置这个ID的属性为可通过\n      Pass replace \n}  \n```\n\n**2.给模型设置ID**\n\n```\nStencil {\n      Ref [_ID]\n      Comp equal//模板测试将检查模板缓冲区中当前像素位置的值是否等于 Ref 设定的参考值（_ID）。如果相等，则测试通过；如果不等，则测试失败。\n}\n```\n\n**深度测试滤镜效果**\n\n给物体添加两个pass，一个是正常显示的pass，另一个是滤镜效果的pass\n\n滤镜效果的pass属性\n\n```\nBlend SrcAlpha One\nZTest Greater //核心\n//这是深度测试（Z-Testing）的设置。深度测试用于确定哪些像素应该被绘制到屏幕上。\nGreater 表示只有当当前像素的深度值大于深度缓冲区中的值时，才会绘制该像素。这通常用于实现一些特殊效果，如阴影或某些类型的贴图。\n在正常情况下，深度测试通常设置为 Less 或 Lequal（小于或等于），以确保更近的物体遮挡更远的物体。但在某些特殊情况下，如实现阴影效果时，Greater 测试可能很有用。\nZWrite off\nCull Back //节省性能\n```\n\n<!-- endtab -->\n\n<!-- tab 部分源代码展示-->\n\n\n\n**效果实现代码**\n\n```\n  //视差算法实现代码\n  float4 Parallax(in float2 uv,in float3 ViewTS,in float Depth,sampler2D _Map,float4 _Map_ST,in float Scale)\n  {\n      uv = uv* _Map_ST.xy*Scale+_Map_ST.zw  ;\n\n      float CosAngle = dot(ViewTS,float3(0,0,1));\n      float LengthAB = Depth/CosAngle;\n\n      float3 UvA = float3(uv,0);\n      float3 UvB = UvA + ViewTS*LengthAB;\n\n      float4 Parallax = tex2D(_Map,saturate(UvB.xy));\n      return Parallax;\n }\n//贴图混合\n if(DepthMap+_BodyDepth > 0)\n {\n    FinalDisplay = lerp(linesmap,body,body.a);\n  \n    FinalDisplay = lerp(background,FinalDisplay,FinalDisplay.a);\n     \n }\nelse\n{\n    FinalDisplay =lerp(background,body,body.a);\n   FinalDisplay =lerp(FinalDisplay,linesmap,linesmap.a);\n                    \n}\n//高光与颜色\nfloat3 hsvcolor =  pow(specularcolor * HSVToRGB(float3(uv.x*_LinesColorLenght+_LinesColor,1,1)).xyzz,_LinesColorPowScale.x)*_LinesColorPowScale.y;\n            linesmap = linesmap.a*float4(hsvcolor,1)*_LinesTint ;\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n## 仿原神卡通渲染\n\n{% tabs 仿原神卡通渲染%}\n\n<!-- tab 渲染效果-->\n\n{% videos %}\n{% video https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/mmd.mp4 %}\n{% endvideos %}\n\n{% tabs 视差卡片%}\n\n<!-- tab 基本颜色-->\n\n![2024-4-16 8_05_11](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725280.png)\n\n<!-- endtab -->\n\n<!-- tab LightMap.r;//金属高光部位-->\n\n![2024-4-16 8_05_46](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725281.png)\n\n<!-- endtab -->\n\n<!-- tab LightMap.g;//光照偏移量，混合常暗区域（AO）;  -->\n\n![2024-4-16 8_06_00](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725282.png)\n\n<!-- endtab -->\n\n<!-- tab **LightMap.a>_TestLayerNumber;//材质枚举**-->\n\n{% gallery %}\n\n![2024-4-16 8_07_22](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725283.png)\n\n![2024-4-16 8_07_29](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725284.png)\n\n![2024-4-16 8_07_36](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725285.png)\n\n![2024-4-16 8_07_49](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725286.png)\n\n![2024-4-16 8_07_54](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725287.png)\n\n{% endgallery %}\n\n<!-- endtab -->\n\n<!-- tab 采样金属度贴图-->\n\n![2024-4-16 8_09_07](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725288.png)\n\n<!-- endtab -->\n\n<!-- tab 漫反射-->\n\n![2024-4-16 8_09_38](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725289.png)\n\n<!-- endtab -->\n\n<!-- tab 高光-->\n\n![2024-4-16 8_10_10](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725290.png)\n\n<!-- endtab -->\n\n<!-- tab 环境光-->\n\n![2024-4-18 6_44_50](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725291.png)\n\n<!-- endtab -->\n\n{% endtabs %}\n\n<!-- endtab -->\n\n<!-- tab 细节部分-->\n\n## NPR仿原神渲染\n\n\n\n**1. 准备资源**\n\n收集并准备好所有必要的贴图，如纹理贴图、光照贴图等。\n\n**2. 添加环境光**\n\n- 应用Half Lambert光照模型。\n\n**3. 明暗处理**\n\n- 使用`smoothstep`函数，通过设定合适的阈值，实现模型表面明暗区域的过渡。\n- 结合二分搜索或其他优化算法，快速而准确地确定明暗交界线，从而生成更具二次元风格的阴影效果。\n\n**4. 材质与颜色处理**\n\n- 利用光照贴图的alpha通道来识别不同材质区域，这样可以为每个区域应用不同的颜色处理方案。\n- 通过ramp贴图技术，根据光照方向和表面法线，为模型表面添加二次元风格的颜色效果，使色彩更加丰富和生动。\n\n**5. 高光处理**\n\n- 采用Blinn-Phong光照模型来分别模拟金属和非金属的高光反射效果，为模型增加真实感和立体感。\n- 通过提取光照贴图的R通道信息，强调金属部分的高光反射。\n\n**6. 阴影混合**\n\n- 将前面步骤中生成的阴影效果进行混合和调整，以增强模型的深度和层次感。\n- 根据需要调整阴影的密度、颜色和位置，以达到最佳的视觉效果。\n\n**7. 添加描边效果**\n\n- 在模型的边缘添加明显的描边效果，以突出角色的轮廓和特征。\n\n## MMD制作\n\n1.场景布置\n\n**背景采样与颜色混合**\n\n根据输入的纹理坐标（`i.ase_texcoord2.xy`）和背景纹理的变换参数（`_BackGround_ST`），计算背景纹理的采样坐标`uv_BackGround`。\n\n从背景纹理中采样颜色，并根据一系列参数（如背景颜色、星星亮度等）进行混合，得到初始的颜色值。\n\n**雾效处理**\n\n通过一系列的计算，包括标准化、距离计算和clamp操作，来确定雾效的影响程度。\n\n使用`smoothstep`函数来平滑地过渡雾效的影响区域。\n\n2.动作载入\n\n准备好vmd动作文件，使用unity的MMD4插件，将PXM模型文件和vmd文件处理成FBX模型，使用动画控制器添加动作效果，在模型中添加组件\n\n3.音频载入\n\n使用videosourse组件添加相匹配的音频文件\n\n<!-- endtab -->\n\n<!-- tab 部分源代码展示-->\n\n```\n//=======漫反射=======//\n  float lambert = saturate(NL);\n  float halfLambert = pow(lambert * 0.5 + 0.5, 2);\n  float halfLambertStep = smoothstep(0.423, 0.460, halfLambert);\n\n  float rampU = clamp(smoothstep(0.2, 0.4, halfLambert), 0.005, 0.995);//阴影部分中的深浅是在0.2到0.4之间过渡\n  float2 dayRampUV = float2(rampU, 1 - dayRampV);\n  float2 nightRampUV = float2(rampU, 1 - nightRampV);\n  float3 rampColor = lerp(tex2D(_RampMap, nightRampUV).rgb, tex2D(_RampMap, dayRampUV).rgb, _IsDay);//利用_isDay插值白天与黑夜的阴影颜色\n  float3 shadowColor = lerp(BaseMap, BaseMap * rampColor, _LightThreshold) ;//* _ShaodwColor.rgb\n\n  float3 diffuse = lerp(shadowColor, BaseMap, halfLambertStep);//明部到阴影是在0.423到0.460之间过渡的\n  diffuse = lerp(shadowColor, diffuse, saturate(RampOffsetMask * 2));//将ILM贴图的g通道乘2 用saturate函数将超过1的部分去掉，混合常暗区域（AO）\n\n  diffuse = lerp(diffuse, BaseMap, saturate(RampOffsetMask - 0.5) * 2);//将ILM贴图的g通道减0.5乘2 用saturate函数将小于0的部分去掉，混合常亮部分（眼睛）\n  diffuse = diffuse+diffuse* _DiffuseColor.rgb*_LightColor0; //* _DiffuseColor.rgb;\n\n//=======高光=======//\n  // //高光反射\n  float blinnPhong = step(0, NL) * pow(max(NH, 0), _MetallicStepSpecularWidth);\n  float3 hairSpec = tex2D(_HairSpecMap, i.uv).rgb * blinnPhong * _HairSpecIntensity * BaseMap;\n  float3 nonMetallicSpec = step(1.01 - blinnPhong, _MetallicStepSpecularWidth) * specIntensity * _NonMetallicSpecIntensity + hairSpec;//BlinnPhong取反做step用来限制非金属高光的区域\n  float3 metallicSpec = blinnPhong * _MetallicStepSpecularWidth * halfLambertStep * BaseMap * _MetallicSpecIntensity;\n\n  //计算金属、高光项\n  float isMetal = step( 0.5,specIntensity);\n\n  float3 specular = lerp(metallicSpec, nonMetallicSpec, isMetal)*_SpecularColor.rgb;\n  float3 metallic = lerp(0, metallicIndensity, isMetal) * BaseMap * _MetallicIntensity;\n\n\n  //混合\n  float3 finalColor = diffuse  + metallic +specular;\n//=======环境边缘光反射=======//\n  fixed fresnel = 1.0 - dot(N, V);\n  fresnel = lerp(fresnel, 2.0 - fresnel, step(1, fresnel));//由于开启了双面显示，当显示出来的面片为背面时，需要取2.0 - fresnel\n  fresnel = smoothstep(_FresnelMin, _FresnelMax, fresnel);\n  fixed3 reflectDir = reflect( - V, N);//反射光线方向\n  //环境反射粗糙度\n  float roughness = lerp(0.0, 0.95, saturate(_Roughness));\n  roughness = roughness * (1.7 - 0.7 * roughness);\n  float mipLevel = roughness * 6.0;\n  //EnvironmentHDR贴图\n  half4 cubemapColor = texCUBElod(_EnvironmentMap, float4(reflectDir, mipLevel));\n  half3 environmentColor = DecodeHDR(cubemapColor, _EnvironmentMap_HDR);\n  half3 environment = environmentColor * fresnel * _EnvironmentIntensity;\n  \n  //发射阴影\n  UNITY_LIGHT_ATTENUATION(atten,  i,  i.worldPosition);\n  \n  \n  //添加描边pass\n  V2FData vert(MeshData v)\n  {\n      V2FData o;\n      v.vertex.xyz += v.tangent.xyz *_OulineScale*0.01 * v.vertexColor.g ; //用顶点色的alpha通道控制描边粗细\n      o.pos = UnityObjectToClipPos(v.vertex);\n      o.color = v.vertexColor;\n      return o;\n  }\n```\n\n**场景代码**\n\n![image-20240418100248875](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404181009622.png)\n\n<!-- endtab -->\n\n{% endtabs %}\n\n## 体积云\n\n{% tabs 体积云%}\n\n<!-- tab 渲染效果-->\n\n{% videos %}\n{% video https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/VolumeCloud.mp4 %}\n{% endvideos %}\n\n<!-- endtab -->\n\n<!-- tab 细节部分-->\n\n**主光线追踪循环**\n\n- 对于每条从摄像机发出的光线，进行固定步数的追踪（由`RaySteps`控制）。\n- 在每一步，计算当前光线位置，并评估该位置的云密度和形状（通过调用`clouds`函数得到符号距离场SDF和密度）。\n- 如果当前位置在云内部（SDF为负且密度大于0），则执行次级光线追踪来模拟光源对云的影响：\n  - 沿着光源方向进行另一次光线追踪（由`LightSteps`控制）。\n  - 在每一步中，评估当前光源光线位置处的云密度和形状。\n  - 累积光学深度，用于后续的光照计算。\n- 计算环境光照和直接光照对云的影响，得到当前位置的光照能量。\n- 根据云的密度和光的吸收系数，更新光线的穿透率。\n- 将计算得到的光照能量和穿透率累加到散射结果中。\n\n循环结束处理\n\n- 在完成所有光线追踪步骤后，根据一个全局的光强参数调整累积的光能量。\n- 返回最终的散射结果，包括累积的光能量和穿透比率。这个结果可以用于后续的渲染流程，如颜色混合或透明度调整。\n\n**3D贴图制作**\n\n1.物体shader 使用**VFACE** 判断模正反 给予不同的颜色\n\n2.shader 中调整裁剪clip的值，对模型进行切片,并使用相机将每片拍下来保存为Texture2D 数组\n\n3.将保存的Texture2D数组 生成为Texture3D\n\n4.将生成完的Texture3D 重新载入另一个shader进行模糊，再次切片 合成导出。\n\n<!-- endtab -->\n\n<!-- tab 部分源代码展示-->\n\n```\nUNITY_LOOP\nfor (int i = 0; i < RaySteps; ++i)\n{\n    float3 currentPos = begin + depth * dir;\n    float sdf, density;\n    clouds(currentPos, sdf, density);\n    // Inside\n    if (sdf < 0 && density > 0)\n    {\n        //沿着 光源方向，进行二次 RayMarching\n        float3 beginPos2 = currentPos;\n        float opticalDepth = 0;\n        float t2 = 0;\n        UNITY_LOOP\n        for (int j = 0; j < LightSteps; ++j)\n        {\n            float3 currentPos2 = beginPos2 + t2 * L;\n            float sdf2, density2;\n            clouds(currentPos2, sdf2, density2);\n            if (sdf2 < 0)\n            {\n                opticalDepth += LightStep * density2;\n            }\n\n            t2 += max(LightStep, sdf2);\n            if (any(currentPos2 < -0.5) || any(currentPos2 > 0.5)) break;\n            //跑到sdf形状外面去了\n            // if(sdf2>0.1) break; \n        }\n\n        // 模拟环境光照\n        float3 ambient = 20*_LightColor0 * lerp(_AmbientColor1, _AmbientColor2, (currentPos.y*0.5 + 0.5)) * _AmbientIntensity* lerp(1,density,_AmbientDensity);\n        float3 lightEnergy = 20*_LightColor0 * multipleOctaves(opticalDepth, cosTheta) * 3.14 * phase ;\n        float3 currentColor = ambient + lightEnergy;\n\n        float3 transmittance = exp(-step* _Absorption * density);\n\n        //体积云 最核心的光照算法，就是这两行\n        ScatteringResult.xyz += currentColor * (1.0 - transmittance) * ScatteringResult.w;\n        ScatteringResult.w *= transmittance;\n    }\n    // 每次至少向前步进的距离\n    depth += max(sdf, step);\n    if (any(currentPos < -0.55) || any(currentPos > 0.55)) break;\n}\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n## 动态曲面细分\n\n{% tabs 动态曲面细分%}\n\n<!-- tab 渲染效果-->\n\n{% videos %}\n{% video https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/Tessellation.mp4 %}\n{% endvideos %}\n\n<!-- endtab -->\n\n<!-- tab 细节部分-->\n\n动态效果\n\n1. 初始化（Start方法）\n   - 脚本在开始时首先通过`Camera.main`获取主摄像机的引用，并存储在`mainCamera`变量中。\n   - 接着，它调用`CreateRT`方法来创建三个渲染纹理：`TempRT`, `PrevRT`, `CurrentRT`。这些渲染纹理将用于后续的图像处理和效果应用。\n   - 初始化`DrawMat`和`SnowMat`两个材质，并将它们分别与`DrawShader`和`SnowShader`着色器相关联。\n   - 最后，它将当前对象的渲染器的纹理设置为`CurrentRT`，这意味着该对象将显示`CurrentRT`中的内容。\n2. 绘制准备（每帧Update方法之前）\n   - 在每帧更新之前，系统已经准备好了所有必要的资源，包括摄像机、渲染纹理和着色器材质。\n3. 用户交互与绘制（Update方法中的射线检测部分）\n   - 在每一帧中，脚本首先检查用户是否按下了鼠标左键。\n   - 如果按下，脚本通过`mainCamera`执行一个从摄像机位置发射并经过鼠标在屏幕上的位置的射线。\n   - 如果这个射线与场景中的任何物体相交（即发生了碰撞），则记录碰撞点的纹理坐标。\n   - 使用记录的纹理坐标和预设的绘制半径，调用`DrawAt`方法来在`CurrentRT`的相应位置上“绘制”一个效果（可能是足迹或其他图形）。\n4. 图像处理效果（Update方法中的计算部分）\n   - 紧接着，脚本设置效果的衰减速度（`AttenSpeed`），这可能影响速度。\n   - 使用`SnowMat`和两个渲染纹理（`PrevRT`和`CurrentRT`）来计算累积效果。这里`PrevRT`保存了上一帧的状态，而`CurrentRT`保存了当前帧的状态。\n   - 通过`Graphics.Blit`方法，将处理后的图像输出到`TempRT`中，这个临时渲染纹理现在包含了更新后的效果。\n5. 渲染纹理交换（Update方法的最后部分）\n   - 为了在下一帧中保留当前帧的状态，脚本执行一系列渲染纹理的交换操作。\n   - 首先，将`TempRT`的内容复制到`PrevRT`中，以便在下一帧中作为上一帧的数据使用。\n   - 然后，将`CurrentRT`和`PrevRT`的引用交换，这样`CurrentRT`现在就包含了最新的效果，而`PrevRT`保存了前一帧的效果。\n6. 渲染与显示\n   - 随着每帧的更新，对象的渲染器将显示`CurrentRT`中的内容，这是最新计算出的效果。\n   - 用户将继续看到根据他们的交互效果的累积与消融而动态变化的场景。\n\n<!-- endtab -->\n\n<!-- tab 部分源代码展示-->\n\n曲面细分步骤\n\n1. 常量外壳着色器（Constant Hull Shader, `ConstantHS`）\n   - 此阶段计算整个曲面的细分级别。它接收原始的控制点（这里是三角形的三个顶点）作为输入，并基于这些控制点计算出一个细分因子（`fac`）。\n   - 在这个例子中，细分因子是根据纹理采样结果和某些预设参数（如`_maxVal`, `_minVal`, `_factor`）通过`smoothstep`函数动态计算的。\n   - 计算出细分因子后，它会被应用到三角形的每条边和内部，决定曲面将被细分成多少个小三角形。\n2. 外壳着色器（Hull Shader, `hullProgram`）\n   - 在常量外壳着色器之后，外壳着色器为每个细分后的控制点（这里是每个原始控制点的细分版本）计算输出数据。\n   - 这个阶段主要为每个控制点准备如世界位置、纹理坐标、法线等必要的插值数据，这些数据将在后续的域着色器中使用。\n3. 曲面细分\n   - 基于常量外壳着色器计算出的细分因子，硬件会执行实际的曲面细分操作，生成更多的三角形来逼近原始曲面。\n4. 域着色器（Domain Shader, `domainProgram`）\n   - 域着色器运行在细分后的每个小三角形上。它接收由外壳着色器准备的插值数据和细分后小三角形的重心坐标作为输入。\n   - 使用这些输入数据，域着色器计算出每个细分三角形的顶点属性，如位置、纹理坐标、法线等。\n   - 这些顶点属性是通过原始控制点的属性进行线性插值得到的。\n5. 几何着色器/光栅化\n   - 在某些情况下，曲面细分之后可能还会有一个几何着色器阶段，用于进一步处理细分后的几何图形。\n   - 然后，这些几何数据将被光栅化，转换为屏幕空间的像素，以供像素着色器处理。\n6. 像素着色器\n   - 最后，在像素着色器阶段，将处理光栅化后的像素，应用纹理、光照等效果，并最终输出到屏幕上。\n\n```\n//vert顶点程序之后调用，计算细分前的三角形顶点信息\n\t\t\tTessOut hullProgram(InputPatch<v2t, 3> i, uint idx : SV_OutputControlPointID)\n\t\t\t{\n\t\t\t\tTessOut o;\n\t\t\t\to.worldPos = i[idx].worldPos;\n\t\t\t\to.uv = i[idx].uv;\n\t\t\t\to.normalWS = i[idx].normalWS;\n\t\t\t\to.normalOS = i[idx].normalOS;\n\t\t\t\to.pos = i[idx].pos;\n\t\t\t\to.tangent = i[idx].tangent;\n\t\t\t\to.bitangent = i[idx].bitangent;\n\t\t\t\treturn o;\n\t\t\t}\n\n\t\t\t//指定每个边的细分段数和内部细分段数\n\t\t\tTessParam ConstantHS(InputPatch<v2t, 3> i, uint id : SV_PrimitiveID)\n\t\t\t{\n\t\t\t\tTessParam o;\n\t\t\t\tfloat2 uv =(i[0].uv+i[1].uv+i[2].uv)/3;\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tfloat4 worldPos = (i[0].worldPos + i[1].worldPos + i[2].worldPos) / 3;\n\t\t\t\tfloat4 pos = (i[0].pos + i[1].pos + i[2].pos) / 3;//\n\n\t\t\t\tfloat4 tex = tex2Dlod(_MainTex,float4(uv,0,0))+(1-pos.y);\n\t\t\t\t\n\t\t\t\tfloat smoothstepResult = smoothstep(_maxVal,_minVal , tex);\n\t\t\t\t\n\t\t\t\tfloat fac = max((1.0 - smoothstepResult)*_factor, 1);\n\t\t\t\t\n\t\t\t\t//由于我这里是根据指定的中心点和半径范围来动态算细分段数，所以才有这个计算，不然可以直接指定变量来设置。\n\t\t\t\to.EdgeTess[0] = fac;\n\t\t\t\to.EdgeTess[1] = fac;\n\t\t\t\to.EdgeTess[2] = fac;\n\t\t\t\to.InsideTess = fac;\n\t\t\t\treturn o;\n\t\t\t}\n\n\t\t\t//在domainProgram前必须设置domain参数，不然会报错\n\t\t\t[domain(\"tri\")]\n\t\t\t//细分之后，把信息传到frag片段程序\n\t\t\tt2f domainProgram(TessParam tessParam, float3 bary : SV_DomainLocation, const OutputPatch<TessOut, 3> i)\n\t\t\t{\n\t\t\t\tt2f o;\t\t\t\t\n\t\t\t\t//线性转换\n\t\t\t\to.worldPos = i[0].worldPos * bary.x + i[1].worldPos * bary.y + i[2].worldPos * bary.z;\n\t\t\t\to.clipPos = UnityWorldToClipPos(o.worldPos);\n\t\t\t\tfloat2 uv = i[0].uv * bary.x + i[1].uv * bary.y + i[2].uv * bary.z;\n\t\t\t\to.uv = uv;\n\t\t\t\to.pos = i[0].pos* bary.x+ i[1].pos * bary.y + i[2].pos * bary.z;\n\t\t\t\to.normalWS = i[0].normalWS* bary.x+ i[1].normalWS * bary.y + i[2].normalWS* bary.z;\n\t\t\t\to.normalOS = i[0].normalOS* bary.x+ i[1].normalOS * bary.y + i[2].normalOS* bary.z;\n\t\t\t\to.tangent = i[0].tangent* bary.x+ i[1].tangent * bary.y + i[2].tangent* bary.z; \n\t\t\t\to.bitangent = i[0].bitangent* bary.x+ i[1].bitangent * bary.y + i[2].bitangent* bary.z;\n\t\t\t\n\t\t\t\treturn o;\n\t\t\t}\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n## 后处理shader\n\n{% tabs 后处理效果%}\n\n<!-- tab 渲染效果-->\n\n{% tabs 后处理效果展示%}\n\n<!-- tab 黑白漫画效果-->\n\n![2024-4-16 11_10_11](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240934874.png)\n\n<!-- endtab -->\n\n<!-- tab 暗角效果-->\n\n![2024-4-16 11_10_45](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240940392.png)\n\n<!-- endtab -->\n\n<!-- tab 扰动效果-->\n\n![2024-4-16 11_10_57](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240934876.png)\n\n<!-- endtab -->\n\n<!-- tab 油画效果-->\n\n![2024-4-16 11_11_03](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240934877.png)\n\n<!-- endtab -->\n\n<!-- tab 模糊效果-->\n\n![2024-4-16 11_11_13](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240934878.png)\n\n<!-- endtab -->\n\n{% endtabs %}\n\n<!-- endtab -->\n\n<!-- tab 部分源代码展示-->\n\n```\n           float3 Oil(float2 uv)\n            {\n                float4 normalmap = tex2D(_OilNormalMap,uv);\n                UnpackNormal(normalmap);\n\n                float2 Coloruv = uv + normalmap.xy*_OilIndensity  * 0.01;\n\n                float3 Color = tex2D(_MainTex,Coloruv);\n\n                float3 hsv = RGBToHSV(Color);\n                Color.rgb = HSVToRGB(hsv + float3(0,0.29,-0.07));\n\n                // normalmap = pow(normalmap,_OilRange) * _OilIndensity;\n\n                \n                return Color;\n            }\n\n            float3 Vague(float2 uv)\n            {\n                \n                float4 View = float4(0,0,0,0);\n\n                for(int x = -_VagueLevel;x <=_VagueLevel;x++)\n                {\n                    for(int y = -_VagueLevel;y<=_VagueLevel;y++)\n                    {\n                        float2 offset = float2(x*_VagueScale,y*_VagueScale)*0.001;\n                        View += tex2D(_MainTex,uv + offset);\n                    }\n                }\n                View /= (_VagueLevel * 2 +1) * (_VagueLevel * 2 + 1);\n\n                return View.xyz;\n            }\n\n\n            float3 Cartoon(float2 uv)\n            {\n                float2 Cartoonuv = uv;\n\n                Cartoonuv = Cartoonuv*_NoisePowScaleUVScale.z;\n                \n                float3 Color = tex2D(_MainTex,uv);\n                float3 Noise = tex2D(_NoiseMap,Cartoonuv);\n                \n             \n                Noise = pow(Noise,_NoisePowScaleUVScale.x)*_NoisePowScaleUVScale.y;\n                if(_ChangeLight)\n                {\n                    Color  =  Color+Noise;\n                    Color = Color.r > Luminance(_luminanceVale);                    \n                }\n                else\n                {\n                    if(Color.r <  Luminance(_luminanceVale))\n                    {\n                        Color += Noise;\n                    }\n                        \n                }\n                        \n                return Color.r;\n            }\n\n\n            float3 DackCorner(float2 uv)\n            {\n                float3 Color = tex2D(_MainTex,uv);\n                float2 Center=float2(0.5,0.5);\n                \n\n                float Range = saturate(_DackRange - distance(Center,uv));\n\n                Range = saturate(pow(Range,_DackPowScale.x) * _DackPowScale.y);\n\n                return Color*Range;\n            }\n\n            float3 Disturbance(float2 uv)\n            {\n                \n              \n                float3 disturbancemap = tex2D(_DisturbanceMap,(uv + float2(_DisturbanceDirecter.x,_DisturbanceDirecter.y)*_Time*_DisturbanceSpeed) *_DisturbanceIndensity*0.01);\n                \n                float2 disturbanceuv;\n                disturbanceuv = uv + _DisturbanceRange*disturbancemap;\n\n                float3 Color = tex2D(_MainTex,disturbanceuv);\n\n                return Color;\n            }\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n## 水墨风格shader\n\n{% tabs 水墨风格片%}\n\n<!-- tab 渲染效果-->\n\n{% videos %}\n{% video https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/Ink.mp4 %}\n{% endvideos %}\n\n<!-- endtab -->\n\n<!-- tab 细节部分-->\n\n1. 处理光照信息\n   - 首先，对输入的法线进行归一化。\n   - 获取场景中的主光源信息，包括光源方向和阴影衰减。\n2. 应用噪声扰动\n   - 使用噪声纹理（`_InteriorNoise`）对输入的纹理坐标进行扰动，得到一个噪声值。\n   - 结合另一个纹理（`_StrokeTex`）和一些调整参数，对原始的纹理坐标进行修改，得到一个新的坐标。\n3. 限制坐标范围\n   - 确保新坐标的值不超过某个上限（如0.95），并进行范围限制，使其在0到1之间。\n4. 执行高斯模糊\n   - 初始化一个用于累加的颜色变量。\n   - 在新坐标周围按照高斯分布采样一个颜色纹理（`_Ramp`），对每个采样点的颜色进行加权累加，以实现模糊效果。\n5. 合成最终颜色\n   - 将高斯模糊后的颜色作为最终的颜色输出（在这个特定的代码版本中，阴影效果被注释掉了，所以不考虑阴影衰减）。\n\n<!-- endtab -->\n\n<!-- tab 部分源代码展示-->\n\n```\n  float4 burn = tex2D(_InteriorNoise, i.uv);\n  // a little bit disturbance on normal vector\n  float diff =  dot(worldNormal, worldLightDir);\n  diff = pow((diff * 0.5 + 0.5),_darkPow);\n  float2 k = tex2D(_StrokeTex, i.uv).xy;\n  float2 cuv = float2(diff, diff) + k * burn.xy * _InteriorNoiseLevel;\n  // return burn;\n\n  // This iniminate the bias of the uv movement?\n  if (cuv.x > 0.95)\n  {\n    cuv.x = 0.95;\n    cuv.y = 1;\n  }\n  if (cuv.y >  0.95)\n  {\n    cuv.x = 0.95;\n    cuv.y = 1;\n  }\n  cuv = clamp(cuv, 0, 1);\n\n  //Guassian Blur\n  float4 sum = float4(0.0, 0.0, 0.0, 0.0);\n          float2 tc = cuv;\n          //blur radius in pixels\n          float blur = radius/resolution/4;\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n## 风格化水面\n\n{% tabs 风格化水面%}\n\n<!-- tab 渲染效果-->\n\n{% videos %}\n{% video https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/Water.mp4 %}\n{% endvideos %}\n\n{% gallery %}\n\n![2024-4-24 9_05_55](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240934879.png)\n\n![2024-4-24 9_08_51](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240934880.png)\n\n![2024-4-24 9_09_09](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240934881.png)\n\n![2024-4-24 9_13_36](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240934882.png)\n\n![2024-4-24 9_13_55](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240934883.png)\n\n![2024-4-24 9_14_29](https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240934884.png)\n\n{% endgallery %}\n\n<!-- endtab -->\n\n<!-- tab 细节部分-->\n\n波浪效果\n\n- 通过引入时间依赖的扰动函数，在顶点着色器中动态调整顶点位置，创造出逼真的波浪起伏效果。\n\n 反射效果\n\n- 利用屏幕空间反射（SSR）或平面反射（PR）技术，实现水面上的高质量反射。通过添加适当的模糊效果，进一步提升SSR的视觉效果，增加场景深度感。\n\n 泡沫、涟漪与焦散\n\n- 应用焦散贴图，模拟光线折射和反射效果，形成焦散光斑。同时，通过动态调整贴图的UV坐标，增添生动的泡沫和涟漪效果。\n\n光照效果\n\n- 采用Half Lambert光照模型增强漫反射效果。\n- 结合Blinn-Phong高光模型，模拟真实的高光反射，提升水面的视觉质感。\n\n<!-- endtab -->\n\n<!-- tab 部分源代码展示-->\n\n```\n //===================== Foam 边缘水花=======================================================================\n#ifdef USE_FOAM\n    // return _NoiseMap.Sample(sampler_NoiseMap,  input.positionWS.xz*0.1 + float2(_Time.x*2,0));\n    float foamDistance = 1- saturate(depthDistance/2);\n    //从中间往 岸边动\n    float foamDynamic = 0.5* step( _FoamWidth,frac(foamDistance - _Time.y*0.1*_FoamSpeed + noise.r*0.0325)) * foamDistance*foamDistance;\n\n    //浪花衰减\n    foamDynamic = _EnableDynamicFoam*foamDynamic* smoothstep( _FoamFadeDistance ,1,foamDistance);\n    float foamStatic =  0.5 *step( _FoamWidth,frac(foamDistance  + noise.r*0.03525)) * foamDistance*foamDistance;\n    float foam = max(foamDynamic,foamStatic);\n\n    //加点噪音举出\n    float foamNoise = SAMPLE_TEXTURE2D(_FoamNoiseMap, sampler_FoamNoiseMap,positionWS.xz*_FoamNoiseMap_ST.xy);\n    foamNoise = saturate( pow(foamNoise,_FoamNoisePowScaleVec.x) *_FoamNoisePowScaleVec.y);\n\n    finalColor += foam*LightLum*_FoamColor*foamNoise* saturate(dot(N,V));\n\n#endif\n\n//===================== Caustic 模拟焦散 =================================\n//用深度图的世界坐标采样 CausticMap 模拟其在水中晃动的感觉\n//贴图焦散\n\n#ifndef  USE_PROCEDURAL_CAUSTIC\n    float4 caustic = SAMPLE_TEXTURE2D(_CausticMap, sampler_CausticMap, depthWorldPosition.xz*0.2*_CausticMap_ST.xy+distortionUV*5);\n    // float4 caustic = SAMPLE_TEXTURE2D(_CausticMap, sampler_CausticMap, positionWS.xz*0.2*_CausticMap_ST.xy+distortionUV*5);\n#else\n//程序化焦散\n    float4 caustic =GetCaustic(depthWorldPosition*0.4*_CausticUVScale+distortionUV.xyy*5 + float3(0,_Time.x,0)).xyzz;\n#endif\n\ncaustic *= smoothstep(_CausticFade,1, (1-distortionDistanceFade) )*_CausticIntensity*NL01;\nfinalColor += caustic*LightLum* mainLight.shadowAttenuation;\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n## 森林遗迹\n\n{% tabs 森林遗迹%}\n\n<!-- tab 渲染效果-->\n\n{% videos %}\n{% video https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/forest.mp4 %}\n{% endvideos %}\n\n<!-- endtab -->\n\n{% endtabs %}\n\n## 工具脚本制作\n\n{% tabs 视差卡片%}\n\n<!-- tab mesh合并工具-->\n\n```\npublic class MeshMergerEditor : EditorWindow  \n{  \n    [MenuItem(\"Tools/Merge Meshes\")]  \n    private static void MergeSelectedMeshes()  \n    {  \n        // 获取当前选中的GameObject  \n        GameObject[] selectedObjects = Selection.gameObjects;  \n        List<Mesh> meshesToMerge = new List<Mesh>();  \n  \n        // 遍历选中的GameObject，获取它们的MeshFilter组件中的网格  \n        foreach (GameObject obj in selectedObjects)  \n        {  \n            MeshFilter meshFilter = obj.GetComponent<MeshFilter>();  \n            if (meshFilter != null)  \n            {  \n                meshesToMerge.Add(meshFilter.sharedMesh);  \n            }  \n        }  \n  \n        // 如果没有选中任何网格或者选中的GameObject没有MeshFilter组件，则返回  \n        if (meshesToMerge.Count == 0)  \n        {  \n            Debug.LogError(\"No meshes selected to merge.\");  \n            return;  \n        }  \n  \n        // Prepare combine instances  \n        CombineInstance[] combineInstances = new CombineInstance[meshesToMerge.Count];  \n        for (int i = 0; i < meshesToMerge.Count; i++)  \n        {  \n            combineInstances[i].mesh = meshesToMerge[i];  \n            combineInstances[i].transform = Matrix4x4.identity;  \n        }  \n  \n        // Create a new mesh to hold the combined meshes  \n        Mesh combinedMesh = new Mesh();  \n        combinedMesh.CombineMeshes(combineInstances);  \n        combinedMesh.name = \"MergedMesh_\" + System.DateTime.Now.ToString(\"yyyyMMddHHmmss\");  \n  \n        // Create a new GameObject to hold the merged mesh  \n        GameObject mergedMeshObject = new GameObject(\"MergedMeshObject\");  \n        mergedMeshObject.AddComponent<MeshFilter>().mesh = combinedMesh;  \n        mergedMeshObject.AddComponent<MeshRenderer>(); // Optionally add a MeshRenderer  \n  \n        // Place the merged mesh object at the world origin by default  \n        mergedMeshObject.transform.position = Vector3.zero;  \n  \n        // Select the new merged mesh object in the Hierarchy view  \n        Selection.activeObject = mergedMeshObject;  \n  \n        // Optionally, you can save the mesh as an asset  \n        string path = EditorUtility.SaveFilePanel(\"Save Merged Mesh\", \"\", combinedMesh.name + \".mesh\", \"mesh\");  \n        if (!string.IsNullOrEmpty(path))  \n        {  \n            AssetDatabase.CreateAsset(combinedMesh, path);  \n            AssetDatabase.SaveAssets();  \n            AssetDatabase.Refresh();  \n        }  \n    }  \n}\n```\n\n<!-- endtab -->\n\n<!-- tab 3D贴图制作工具-->\n\n```\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEditor;\nusing UnityEngine;\n[ExecuteInEditMode]\npublic class Render3DTexture : MonoBehaviour {\n\n    public Vector3 Size = Vector3.one;\n    public Vector3 Offset = Vector3.zero;\n\n    public Vector3Int TextureSize = new Vector3Int(256,256,256);\n\n    private Camera renderCam;\n\n    private RenderTexture renderTexture;\n\n    private Texture3D volumeTex;\n\n    public Material SliceMat;\n\n    public Material BlurMat;\n\n    public bool Blur = false;\n\n\n\n    //public List<Texture2D> textureArray = new List<Texture2D>();\n\n    [Range(0,1.0f)]\n    public float ClipValueRange = 0;\n    private float ClipValue = -0.5f;\n    [Tooltip(\"输出路径\")]\n    public string OutputPath = \"testAsset1.asset\";\n\n\n    /// <summary>\n    /// 生成相机\n    /// </summary>\n    private void NewCam()\n    {\n        GameObject cam = new GameObject(\"TempCam\");\n\n        cam.transform.position = transform.position + Size.y *0.51f *Vector3.up +Offset;\n\n        Vector3 localEuler = cam.transform.localEulerAngles;\n\n        localEuler.x = 90;\n        localEuler.y = 180;\n\n        cam.transform.localEulerAngles = localEuler;\n\n        renderCam = cam.AddComponent<Camera>();\n\n        renderCam.orthographic = true;\n\n        renderCam.orthographicSize = Size.x*0.5f;\n\n        renderCam.nearClipPlane = 0.0001f;\n        renderCam.farClipPlane = 100;\n\n        renderCam.clearFlags = CameraClearFlags.SolidColor;\n\n        renderCam.backgroundColor = Color.black;\n\n        renderTexture = CreateRT(TextureSize.x, TextureSize.z);\n\n        renderCam.targetTexture = renderTexture;\n\n    }\n\n    public void StartRender()\n    {\n        NewCam();\n\n        volumeTex = new Texture3D(TextureSize.x, TextureSize.y, TextureSize.z,TextureFormat.RFloat,false);\n\n        RenderSlice();\n    }\n\n    public void RenderSlice()\n    {\n\n        //渲染范围\n        Vector3 center = transform.position;\n        float min = -Size.y * 0.5f + Offset.y + center.y;\n        float max = Size.y * 0.5f + Offset.y + center.y;\n\n        ClipValue = min;\n\n        Color[] colors = new Color[TextureSize.x * TextureSize.y * TextureSize.z];\n\n        int layerCount = TextureSize.x * TextureSize.z;\n\n        for (int layer = 0; layer < TextureSize.y; layer++)\n        {\n            renderCam.Render();\n\n            ClipValue += (max - min) / TextureSize.y;\n\n            float progress = (float)layer / TextureSize.y;\n\n            bool isCancel = EditorUtility.DisplayCancelableProgressBar(\"正在执行..\",string.Format(\"生成3DTexture中... {0:f2}%\", progress*100), progress);\n\n            if (SliceMat != null)SliceMat.SetFloat(\"_ClipValue\", ClipValue);\n\n            Texture2D sliceTex = RenderTexture2Texture2D(renderTexture);\n\n\n            int index = 0;\n            //拷贝颜色\n            for (int z = 0; z < TextureSize.z; z++)\n                for (int x = 0; x < TextureSize.x; x++)\n                {\n                    //XY ->XZ\n                    index = x + z * TextureSize.y * TextureSize.x+layer* TextureSize.x;\n                    colors[index] = sliceTex.GetPixel(x, z);\n                }\n            //渲染完成或者取消时关闭进度条\n            if (layer >= TextureSize.y - 1 || isCancel)\n            {\n                EditorUtility.ClearProgressBar();\n\n                if (isCancel)\n                {\n                    DestroyImmediate(renderCam.gameObject);\n                    renderTexture.Release();\n\n                    return;\n                }\n            }\n        }\n\n        volumeTex.SetPixels(colors);\n        volumeTex.Apply();\n        if (Blur)\n        {\n            volumeTex = BlurTexture(volumeTex);\n        }\n        string filePath = \"Assets/\"+ OutputPath;\n        try\n        {\n            AssetDatabase.DeleteAsset(filePath);\n            AssetDatabase.CreateAsset(volumeTex, filePath);\n        }\n        catch (Exception ex)\n        {\n            Debug.LogError(ex.Message);\n        }\n        DestroyImmediate(renderCam.gameObject);\n        renderTexture.Release();\n        renderTexture = null;\n        UnityEditor.AssetDatabase.SaveAssets();\n        AssetDatabase.Refresh();\n    }\n    /// <summary>\n    /// Renderer转成Texture2D\n    /// </summary>\n    /// <param name=\"rt\"></param>\n    /// <returns></returns>\n    public Texture2D RenderTexture2Texture2D(RenderTexture rt)\n    {\n        RenderTexture preRT = RenderTexture.active;\n        RenderTexture.active = rt;\n        Texture2D tex = new Texture2D(rt.width, rt.height, TextureFormat.ARGB32, false);\n        tex.ReadPixels(new Rect(0, 0, rt.width, rt.height), 0, 0);\n        tex.Apply();\n        RenderTexture.active = preRT;\n        return tex;\n    }\n\n    public void OnDrawGizmos()\n    {\n        Gizmos.DrawWireCube(this.transform.position+Offset, Size);\n    }\n\n    public void OnDestory()\n    {\n        renderTexture.Release();\n    }\n\n    public Texture3D BlurTexture(Texture3D tex)\n    {\n        for (int i = 0; i < 2; i++)\n        {\n            Color[] colors = new Color[TextureSize.x * TextureSize.y * TextureSize.z];\n\n            int index = 0;\n\n            for (int layer = 0; layer < TextureSize.y; layer++)\n            {\n                BlurMat.SetTexture(\"_VolumeTex\", tex);\n                BlurMat.SetFloat(\"_offset\", layer * 1.0f / TextureSize.y);\n                Debug.Log(layer * 1.0f / TextureSize.y);\n\n                RenderTexture rt = new RenderTexture(TextureSize.x, TextureSize.z, 24, RenderTextureFormat.ARGB32);\n\n                Graphics.Blit(null, rt, BlurMat);\n\n                Texture2D sliceTex = RenderTexture2Texture2D(rt);\n\n                //拷贝颜色\n                for (int z = 0; z < TextureSize.z; z++)\n                    for (int x = 0; x < TextureSize.x; x++)\n                    {\n                        //XY ->XZ\n                        index = x + z * TextureSize.y * TextureSize.x + layer * TextureSize.x;\n                        colors[index] = sliceTex.GetPixel(x, z);\n                    }\n            }\n\n            tex.SetPixels(colors);\n            tex.Apply();\n        }\n        return tex;\n    }\n\n    private RenderTexture CreateRT(int width, int height)\n    {\n        RenderTexture rt = new RenderTexture(width, height, 16);\n        rt.format = RenderTextureFormat.ARGBFloat;\n        rt.wrapMode = TextureWrapMode.Repeat;\n        rt.filterMode = FilterMode.Point;\n        rt.Create();\n        return rt;\n    }\n    \n    private void Update()\n    {\n        if (SliceMat == null)\n        {\n            SliceMat = GetComponent<Renderer>().sharedMaterial;\n        }\n        if (SliceMat != null)\n        {\n            float min = -Size.y * 0.5f + Offset.y+transform.position.y;\n            float max = Size.y * 0.5f + Offset.y +transform.position.y;\n            float value = Mathf.Lerp(min, max, ClipValueRange);\n            SliceMat.SetFloat(\"_ClipValue\", value);\n        }\n\n    }\n}\n\n```\n\n<!-- endtab -->\n\n<!-- tab 动态贴图制作工具-->\n\n```\nusing System.Collections;\nusing System.Collections.Generic;\nusing Palmmedia.ReportGenerator.Core.Parser.Analysis;\nusing UnityEngine;\n\npublic class Interactive : MonoBehaviour\n{\n\n    public Camera mainCamera;\n\n    public RenderTexture TempRT;\n    \n    \n    public Shader DrawShader;\n\n    private Material DrawMat;\n    public int TextureSize = 512;\n\n    [Range(0,1.0f)]\n    public float DrawRadius = 0.5f;\n\n    \n    public RenderTexture PrevRT;//上一帧RT\n    //public RenderTexture CurrentRT;//当前帧RT\n    public RenderTexture CurrentRT;\n    public Shader SnowShader;\n    private Material SnowMat;\n        \n    [Range(0,1)]\n    public float AttenSpeed = 0.5f;\n    \n    \n    // Start is called before the first frame update\n    void Start()\n    {\n        mainCamera = Camera.main.GetComponent<Camera>();\n        CurrentRT = CreateRT();\n        PrevRT = CreateRT();\n        TempRT = CreateRT();\n\n        DrawMat = new Material(DrawShader);\n        SnowMat = new Material(SnowShader);\n\n        GetComponent<Renderer>().material.mainTexture = CurrentRT;\n    }\n\n    public RenderTexture CreateRT()\n    {\n        RenderTexture rt = new RenderTexture(TextureSize, TextureSize, 0, RenderTextureFormat.RFloat);\n        rt.Create();\n        return rt;\n    }\n\n\n    private void DrawAt(float x,float y, float radius)\n    {\n        //原来的贴图\n        DrawMat.SetTexture(\"_SourceTex\",CurrentRT);\n        //绘制的大小和位置\n        DrawMat.SetVector(\"_Pos\",new Vector4(x,y,radius));\n        //输出\n        Graphics.Blit(null,TempRT,DrawMat);\n        //进行交换\n        RenderTexture rt = TempRT;\n        TempRT = CurrentRT;\n        CurrentRT = rt;\n    }\n    \n    // Update is called once per frame\n    void Update()\n    {\n        Shader.SetGlobalFloat(\"_AttenSpeed\",AttenSpeed);\n        //射线检测\n        if (Input.GetMouseButton(0))\n        {\n            //鼠标左键按下时进行检测\n            Ray ray = mainCamera.ScreenPointToRay(Input.mousePosition);\n            //获取碰撞信息\n            RaycastHit hit;\n            if (Physics.Raycast(ray,out hit))\n            {\n                //绘制\n                DrawAt(hit.textureCoord.x, hit.textureCoord.y, DrawRadius);\n            }\n\n        }\n        \n        //计算\n        SnowMat.SetTexture(\"_PrevRT\",PrevRT);\n        SnowMat.SetTexture(\"_CurrentRT\",CurrentRT);\n        Graphics.Blit(null,TempRT,SnowMat);\n        //交换RT\n        Graphics.Blit(TempRT,PrevRT);\n        RenderTexture rt = PrevRT;\n        PrevRT = CurrentRT;\n        CurrentRT = rt;\n\n    }\n}\n\n```\n\n<!-- endtab -->\n\n<!-- tab 镜子工具-->\n\n```\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.Rendering;\n\n\n[ExecuteInEditMode]\npublic class PlanarReflection : MonoBehaviour {\n    public LayerMask _reflectionMask = -1;\n    public bool _reflectSkybox = false;\n    Color _clearColor = Color.black;\n    public int m_TextureSize = 1024;\n\n    const string _reflectionSampler = \"_ReflectionTex\";\n    public float _clipPlaneOffset = 0.07F;\n\n    Vector3 _oldpos;\n    Camera _reflectionCamera;\n    RenderTexture _bluredReflectionTexture;\n    Material _sharedMaterial;\n\n    public bool _blurOn = true;\n\n       \n\n    [Range(0.0f, 5.0f)]\n    public float _blurSize = 1;\n    public int _blurIterations = 2;\n    public float _downsample = 1;\n\n#if UNITY_EDITOR\n    bool _oldBlurOn;\n    float _oldBlurSize;\n#endif\n\n    private Shader _blurShader;\n    private Material _blurMaterial;\n\n    private static bool s_InsideWater;\n    private RenderTexture rt;\n\n    Material BlurMaterial {\n        get {\n            if (_blurMaterial == null) {\n                _blurMaterial = new Material(_blurShader);\n                return _blurMaterial;\n            }\n            return _blurMaterial;\n        }\n    }\n\n#if UNITY_EDITOR\n    void Awake() {\n        _oldBlurOn = _blurOn;\n        _oldBlurSize = _blurSize;\n\n    }\n#endif\n\n    void Start() {\n        _sharedMaterial = GetComponent<MeshRenderer>().sharedMaterial;\n        if (_blurShader == null)\n            _blurShader = Shader.Find(\"Hidden/SimpleBlur\");\n    }\n\n\n    Camera CreateReflectionCameraFor(Camera cam) {\n        String reflName = gameObject.name + \"Reflection\" + cam.name;\n        GameObject go = new GameObject(reflName);\n        go.hideFlags = HideFlags.HideAndDontSave;\n        Camera reflectCamera = go.AddComponent<Camera>();\n\n        reflectCamera.backgroundColor = _clearColor;\n        reflectCamera.clearFlags = _reflectSkybox ? CameraClearFlags.Skybox : CameraClearFlags.SolidColor;\n\n        SetStandardCameraParameter(reflectCamera, _reflectionMask);\n\n        if (!reflectCamera.targetTexture) {\n            reflectCamera.targetTexture = CreateTexture();\n        }\n\n        return reflectCamera;\n    }\n\n    void SetStandardCameraParameter(Camera cam, LayerMask mask) {\n        cam.cullingMask = mask;\n        cam.backgroundColor = Color.black;\n        cam.enabled = false;\n    }\n\n    RenderTexture CreateTexture() {\n#if UNITY_EDITOR\n        //RenderTexture rt = new RenderTexture(Mathf.FloorToInt(Screen.width), Mathf.FloorToInt(Screen.height * 0.5f), 16);\n        rt = new RenderTexture(m_TextureSize, m_TextureSize, 16);\n        \n#else\n        //RenderTexture rt = new RenderTexture(Mathf.FloorToInt(Screen.width * 0.5f), Mathf.FloorToInt(Screen.height * 0.5f), 16);\n        RenderTexture rt = new RenderTexture(m_TextureSize,m_TextureSize, 16);\n\n#endif\n        rt.hideFlags = HideFlags.DontSave;\n        return rt;\n    }\n\n    void OnWillRenderObject() {\n        Camera currentCam = Camera.current;\n        if (!currentCam) {\n            return;\n        }\n\n#if !UNITY_EDITOR\n        if (!currentCam.gameObject.CompareTag(\"MainCamera\"))\n            return;\n#endif\n\n#if UNITY_EDITOR\n        if (!_bluredReflectionTexture)\n            _bluredReflectionTexture = CreateTexture();\n#else\n        if(_blurOn) {\n            if (!_bluredReflectionTexture)\n                _bluredReflectionTexture = CreateTexture();\n        }\n#endif\n\n        if (s_InsideWater) {\n            return;\n        }\n        s_InsideWater = true;\n\n\n        if (!_reflectionCamera) {\n            _reflectionCamera = CreateReflectionCameraFor(currentCam);\n        }\n\n        RenderReflectionFor(currentCam, _reflectionCamera);\n\n        if (_reflectionCamera && _sharedMaterial) {\n            if (_blurOn) {\n                PostProcessTexture(currentCam, _reflectionCamera.targetTexture, _bluredReflectionTexture);\n                _sharedMaterial.SetTexture(_reflectionSampler, _bluredReflectionTexture);\n            } else {\n                _sharedMaterial.SetTexture(_reflectionSampler, _reflectionCamera.targetTexture);\n            }\n        }\n\n        s_InsideWater = false;\n    }\n\n#if UNITY_EDITOR\n    bool _blurParamChanged;\n    void Update() {\n        if (_blurParamChanged) {\n            _oldBlurOn = _blurOn;\n            _oldBlurSize = _blurSize;\n        }\n\n        if (_blurOn != _oldBlurOn || _blurSize != _oldBlurSize) {\n            _blurParamChanged = true;\n        }\n\n    }\n#endif\n\n    void RenderReflectionFor(Camera cam, Camera reflectCamera) {\n        if (!reflectCamera) {\n            return;\n        }\n\n        if (_sharedMaterial && !_sharedMaterial.HasProperty(_reflectionSampler)) {\n            return;\n        }\n\n        reflectCamera.cullingMask = _reflectionMask;\n\n        SaneCameraSettings(reflectCamera);\n\n        reflectCamera.backgroundColor = _clearColor;\n        reflectCamera.clearFlags = _reflectSkybox ? CameraClearFlags.Skybox : CameraClearFlags.SolidColor;\n        if (_reflectSkybox) {\n            if (cam.gameObject.GetComponent(typeof(Skybox))) {\n                Skybox sb = (Skybox)reflectCamera.gameObject.GetComponent(typeof(Skybox));\n                if (!sb) {\n                    sb = (Skybox)reflectCamera.gameObject.AddComponent(typeof(Skybox));\n                }\n                sb.material = ((Skybox)cam.GetComponent(typeof(Skybox))).material;\n            }\n        }\n\n        bool isInvertCulling = GL.invertCulling;\n        GL.invertCulling = true;\n\n        Transform reflectiveSurface = transform; //waterHeight;\n\n        Vector3 eulerA = cam.transform.eulerAngles;\n\n        reflectCamera.transform.eulerAngles = new Vector3(-eulerA.x, eulerA.y, eulerA.z);\n        reflectCamera.transform.position = cam.transform.position;\n\n        Vector3 pos = reflectiveSurface.transform.position;\n        pos.y = reflectiveSurface.position.y;\n        Vector3 normal = reflectiveSurface.transform.up;\n        float d = -Vector3.Dot(normal, pos) - _clipPlaneOffset;\n        Vector4 reflectionPlane = new Vector4(normal.x, normal.y, normal.z, d);\n\n        Matrix4x4 reflection = Matrix4x4.zero;\n        reflection = CalculateReflectionMatrix(reflection, reflectionPlane);\n        _oldpos = cam.transform.position;\n        Vector3 newpos = reflection.MultiplyPoint(_oldpos);\n\n        reflectCamera.worldToCameraMatrix = cam.worldToCameraMatrix * reflection;\n\n        Vector4 clipPlane = CameraSpacePlane(reflectCamera, pos, normal, 1.0f);\n\n        Matrix4x4 projection = cam.projectionMatrix;\n        projection = CalculateObliqueMatrix(projection, clipPlane);\n        reflectCamera.projectionMatrix = projection;\n\n        reflectCamera.transform.position = newpos;\n        Vector3 euler = cam.transform.eulerAngles;\n        reflectCamera.transform.eulerAngles = new Vector3(-euler.x, euler.y, euler.z);\n\n        reflectCamera.Render();\n\n        GL.invertCulling = isInvertCulling;\n    }\n\n\n    void SaneCameraSettings(Camera helperCam) {\n        helperCam.depthTextureMode = DepthTextureMode.None;\n        helperCam.backgroundColor = Color.black;\n        helperCam.clearFlags = CameraClearFlags.SolidColor;\n        helperCam.renderingPath = RenderingPath.Forward;\n    }\n\n\n    static Matrix4x4 CalculateObliqueMatrix(Matrix4x4 projection, Vector4 clipPlane) {\n        Vector4 q = projection.inverse * new Vector4(\n            Sgn(clipPlane.x),\n            Sgn(clipPlane.y),\n            1.0F,\n            1.0F\n            );\n        Vector4 c = clipPlane * (2.0F / (Vector4.Dot(clipPlane, q)));\n        // third row = clip plane - fourth row\n        projection[2] = c.x - projection[3];\n        projection[6] = c.y - projection[7];\n        projection[10] = c.z - projection[11];\n        projection[14] = c.w - projection[15];\n\n        return projection;\n    }\n\n\n    static Matrix4x4 CalculateReflectionMatrix(Matrix4x4 reflectionMat, Vector4 plane) {\n        reflectionMat.m00 = (1.0F - 2.0F * plane[0] * plane[0]);\n        reflectionMat.m01 = (-2.0F * plane[0] * plane[1]);\n        reflectionMat.m02 = (-2.0F * plane[0] * plane[2]);\n        reflectionMat.m03 = (-2.0F * plane[3] * plane[0]);\n\n        reflectionMat.m10 = (-2.0F * plane[1] * plane[0]);\n        reflectionMat.m11 = (1.0F - 2.0F * plane[1] * plane[1]);\n        reflectionMat.m12 = (-2.0F * plane[1] * plane[2]);\n        reflectionMat.m13 = (-2.0F * plane[3] * plane[1]);\n\n        reflectionMat.m20 = (-2.0F * plane[2] * plane[0]);\n        reflectionMat.m21 = (-2.0F * plane[2] * plane[1]);\n        reflectionMat.m22 = (1.0F - 2.0F * plane[2] * plane[2]);\n        reflectionMat.m23 = (-2.0F * plane[3] * plane[2]);\n\n        reflectionMat.m30 = 0.0F;\n        reflectionMat.m31 = 0.0F;\n        reflectionMat.m32 = 0.0F;\n        reflectionMat.m33 = 1.0F;\n\n        return reflectionMat;\n    }\n\n    static float Sgn(float a) {\n        if (a > 0.0F) {\n            return 1.0F;\n        }\n        if (a < 0.0F) {\n            return -1.0F;\n        }\n        return 0.0F;\n    }\n\n    Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign) {\n        Vector3 offsetPos = pos + normal * _clipPlaneOffset;\n        Matrix4x4 m = cam.worldToCameraMatrix;\n        Vector3 cpos = m.MultiplyPoint(offsetPos);\n        Vector3 cnormal = m.MultiplyVector(normal).normalized * sideSign;\n\n        return new Vector4(cnormal.x, cnormal.y, cnormal.z, -Vector3.Dot(cpos, cnormal));\n    }\n\n    private Dictionary<Camera, CommandBuffer> _cameras = new Dictionary<Camera, CommandBuffer>();\n\n    void PostProcessTexture(Camera cam, RenderTexture source, RenderTexture dest)\n    {\n      \n#if UNITY_EDITOR\n        if (_blurParamChanged)\n        {\n            if (_cameras.ContainsKey(cam))\n                cam.RemoveCommandBuffer(CameraEvent.BeforeForwardOpaque, _cameras[cam]);\n            _cameras.Remove(cam);\n        }\n#endif\n       \n        if (_cameras.ContainsKey(cam))\n            return;\n\n        CommandBuffer buf = new CommandBuffer();\n        buf.name = \"Blur Reflection Texture\";\n        _cameras[cam] = buf; \n        float width = source.width;\n        float height = source.height;\n        int rtW = Mathf.RoundToInt(width / _downsample);\n        int rtH = Mathf.RoundToInt(height / _downsample);\n\n        int blurredID = Shader.PropertyToID(\"_Temp1\");\n        int blurredID2 = Shader.PropertyToID(\"_Temp2\");\n        buf.GetTemporaryRT(blurredID, rtW, rtH, 0, FilterMode.Bilinear, source.format);\n        buf.GetTemporaryRT(blurredID2, rtW, rtH, 0, FilterMode.Bilinear, source.format);\n\n        buf.Blit((Texture)source, blurredID);\n        for (int i = 0; i < _blurIterations; i++)\n        {\n            float iterationOffs = (i * 1.0f);\n            buf.SetGlobalFloat(\"_Offset\", iterationOffs / _downsample + _blurSize);\n            buf.Blit(blurredID, blurredID2, BlurMaterial, 0);\n            buf.Blit(blurredID2, blurredID, BlurMaterial, 0);\n        }\n        buf.Blit(blurredID, dest);\n\n        buf.ReleaseTemporaryRT(blurredID);\n        buf.ReleaseTemporaryRT(blurredID2);\n\n        cam.AddCommandBuffer(CameraEvent.BeforeForwardOpaque, buf);\n    }\n\n}\n```\n\n<!-- endtab -->\n\n<!-- tab 运镜工具-->\n\n```\nusing System.Collections.Generic;  \nusing UnityEngine;  \n  \npublic class CameraMovement : MonoBehaviour  \n{  \n    public List<Transform> pathPoints;  \n    public float moveSpeed = 2.0f;  \n    public float rotationSpeed = 30.0f;  \n    private int currentIndex = 0;  \n    private Transform target;  \n    private bool isMoving = false;  \n  \n    private void Start()  \n    {  \n        if (pathPoints != null && pathPoints.Count > 0)  \n        {  \n            target = pathPoints[currentIndex];  \n        }  \n    }  \n  \n    private void Update()  \n    {  \n        // 检查是否按下空格键来启动或停止相机运动  \n        if (Input.GetKeyDown(KeyCode.Space))  \n        {  \n            isMoving = !isMoving;  \n        }  \n  \n        if (!isMoving || target == null) return;  \n  \n        Vector3 directionToTarget = (target.position - transform.position).normalized;  \n        transform.Translate(directionToTarget * moveSpeed * Time.deltaTime, Space.World);  \n  \n        if (Vector3.Distance(transform.position, target.position) < 0.1f)  \n        {  \n            currentIndex = (currentIndex + 1) % pathPoints.Count;  \n            target = pathPoints[currentIndex];  \n  \n            Quaternion targetRotation = Quaternion.LookRotation(target.position - transform.position);  \n            transform.rotation = Quaternion.RotateTowards(transform.rotation, targetRotation, rotationSpeed * Time.deltaTime);  \n        }  \n    }  \n}\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n","slug":"作品集","published":1,"date":"2024-07-11T06:04:07.408Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clyh2ognt0016e0ds0htle7vc","content":"<h1 id=\"作品集\"><a href=\"#作品集\" class=\"headerlink\" title=\"作品集\"></a>作品集</h1><div class=\"note blue flat\"><p>前言：这本作品集是我学习与实践的成果，它记录了我的专业技能与创作思路。每一份作品都代表了我对专业的理解和对品质的追求。希望通过这些精选的作品，能够让您更直观地了解我的实力与潜力。期待有机会为您的团队贡献我的力量。</p>\n</div>\n<p>带宽速度不高，加载速度会有一定的影响，经过测试输出的内容还是比较稳定的。</p>\n<h2 id=\"Logo效果\"><a href=\"#Logo效果\" class=\"headerlink\" title=\"Logo效果\"></a>Logo效果</h2><div class=\"tabs\" id=\"视频\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"视频-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"视频-2\">细节部分</button><button type=\"button\" class=\"tab \" data-href=\"视频-3\">部分源代码展示</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"视频-1\"><div class=\"videos\"><div class=\"video\"><video controls preload><source src='https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/LOGO.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div></div></div><div class=\"tab-item-content\" id=\"视频-2\"><div class=\"tabs\" id=\"体积光\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"体积光-1\">体积光和SSR反射</button><button type=\"button\" class=\"tab \" data-href=\"体积光-2\">代码分析</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"体积光-1\"><div class=\"gallery-container\" data-type=\"data\" data-button=\"\">\n      <div class=\"gallery-data\">[{\"url\":\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725272.png\",\"alt\":\"2024-4-18 3_07_06\"},{\"url\":\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725273.png\",\"alt\":\"image-20240418032736469\"},{\"url\":\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725274.png\",\"alt\":\"image-20240418032753632\"}]</div>\n      <div class=\"gallery-items\">\n      </div>\n    </div></div><div class=\"tab-item-content\" id=\"体积光-2\"><p><strong>体积光</strong></p>\n<p>处理：</p>\n<p>a. 初始化射线、步长、当前位置、衰减率和颜色。</p>\n<p>b. 进入一个循环，在循环中：</p>\n<ul>\n<li>使用噪声纹理和当前位置计算出一个噪声值，这个噪声值乘以密度来控制体积光的分布。</li>\n<li>更新衰减率，模拟光线在介质中传播时的衰减。</li>\n<li>如果衰减率低于某个阈值，则提前退出循环，因为此时的光线已经非常微弱。</li>\n<li>更新当前位置，沿着射线方向前进一个步长。</li>\n<li>累加颜色值，这里使用了一个简单的基于高度的雾色模型。<br>c. 将累加的颜色值乘以曝光度，并设置颜色的alpha值为1.0，表示不透明。<br>d. 返回最终的颜色值。</li>\n</ul>\n<p><strong>SSR镜面反射</strong></p>\n<ol>\n<li>计算反射路径<ul>\n<li>使用相机到点的向量<code>V</code>和水面法线计算出反射方向。</li>\n<li>根据这个反射方向和预设的SSR长度，确定反射光线在世界空间中的终点和远点。</li>\n</ul>\n</li>\n<li>转换到屏幕空间<ul>\n<li>把世界空间的反射路径起点、终点、远点转换为裁剪空间，再进一步转换为屏幕空间坐标。</li>\n</ul>\n</li>\n<li>快速检查远点<ul>\n<li>如果远点在屏幕范围内，检查其深度，如果深度合适，则直接采样该点的颜色作为反射颜色。</li>\n</ul>\n</li>\n<li>线性追踪<ul>\n<li>从屏幕空间的起点开始，沿着反射路径逐步前进。</li>\n<li>在每一步，检查当前点的屏幕空间坐标是否在屏幕范围内，以及当前点的深度是否比之前记录的深度更近。</li>\n<li>如果找到一个有效的交点（即深度比之前记录的近），则记录这个交点的屏幕空间坐标。</li>\n</ul>\n</li>\n<li>采样反射颜色<ul>\n<li>如果有有效的交点，根据交点的屏幕空间坐标采样颜色，并乘以一个基于视角和法线夹角的衰减因子。</li>\n<li>如果没有有效的交点，但远点检查成功，则使用远点的颜色。</li>\n<li>如果都没有成功，则反射颜色可能保持为初始化的零值或预设的默认值。</li>\n</ul>\n</li>\n</ol>\n<p><strong>LOGO模型</strong></p>\n<ol>\n<li>设计Logo模型<ul>\n<li>初步构思Logo形状与风格</li>\n<li>完成Logo的初步设计</li>\n</ul>\n</li>\n<li>为Logo增加视觉效果<ul>\n<li>添加扰动效果，赋予Logo动态感</li>\n<li>融入反射效果，提升Logo的光泽与立体感</li>\n<li>点缀星星效果，使Logo更加璀璨</li>\n<li>添加<strong>虚拟光效果</strong>，模拟点光源增加一个光照效果，跟随小球运动实现实时渲染</li>\n</ul>\n</li>\n<li>让Logo动起来<ul>\n<li>添加运动效果，使Logo更生动</li>\n</ul>\n</li>\n<li>增加环境元素<ul>\n<li>在Logo周围添加飘动的小球和旋转的圆环，营造活泼、动感的氛围</li>\n</ul>\n</li>\n</ol></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div><div class=\"tab-item-content\" id=\"视频-3\"><p><p><strong>Logo模型的ASE代码</strong><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725275.png\" alt=\"image-20240418034245510\"></p></p>\n<p><p><strong>体积光部分代码</strong></p><br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//AABB</span><br><span class=\"line\"> bool intersectAABB(float3 rayOrigin, float3 rayDir, float3 boxMin,</span><br><span class=\"line\">                               float3 boxMax, out float2 tNearFar)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                float3 tMin = (boxMin - rayOrigin) / rayDir;</span><br><span class=\"line\">                float3 tMax = (boxMax - rayOrigin) / rayDir;</span><br><span class=\"line\">                float3 t1 = min(tMin, tMax);</span><br><span class=\"line\">                float3 t2 = max(tMin, tMax);</span><br><span class=\"line\">                float tNear = max(max(t1.x, t1.y), t1.z);</span><br><span class=\"line\">                float tFar = min(min(t2.x, t2.y), t2.z);</span><br><span class=\"line\">                tNearFar = float2(tNear, tFar);</span><br><span class=\"line\"></span><br><span class=\"line\">                return tFar &gt; tNear;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">//光线步进</span><br><span class=\"line\">UNITY_LOOP</span><br><span class=\"line\">for (float k = 0; k &lt; vlSamples; k++)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    float f = saturate((k + rand()) / vlSamples);</span><br><span class=\"line\">    float3 p = lerp(startPos, endPos, f);</span><br><span class=\"line\"></span><br><span class=\"line\">    //射线与平面求交</span><br><span class=\"line\">    float distance;</span><br><span class=\"line\">    // float3 lightDir = normalize(LightPos - p);</span><br><span class=\"line\">    // iPlane(p,L,float4(0,-1,0,0.5),distance);</span><br><span class=\"line\">    intersectPlane(float3(0, -1, 0), float3(0, 0.5, 0), p, L, distance);</span><br><span class=\"line\">    float3 hitPos = p + L * distance;</span><br><span class=\"line\"></span><br><span class=\"line\">    //白色体积光</span><br><span class=\"line\">    float3 caustic = GetCaustic(hitPos.xz);</span><br><span class=\"line\">    //*hsv2rgb(float3((p.y+_RainbowOffset + dot(L,-rayDir))*_RainbowScale+0.5,_RainbowIntensity,1));//*spectral_zucconi6(p.y+0.5);</span><br><span class=\"line\">    //彩色体积光</span><br><span class=\"line\">    float noise = tex2D(_Noise, hitPos.xz).r;</span><br><span class=\"line\">    noise = lerp(1, 1.3, noise);</span><br><span class=\"line\">    float3 causticColorful = 5 * GetCaustic(hitPos.xz) *</span><br><span class=\"line\">        hsv2rgb(float3(</span><br><span class=\"line\">        (p.y + _RainbowOffset + dot(L, -rayDir) * 0.1) * _RainbowScale * noise + 0.5,</span><br><span class=\"line\">        _RainbowIntensity, 1)); </span><br><span class=\"line\">    float rinbowMask = tex2D(_RainbowMask, hitPos.xz * 3);</span><br><span class=\"line\">    caustic = lerp(caustic, causticColorful*1.5, rinbowMask) * 1.5;</span><br><span class=\"line\">    // caustic = (causticColorful) * 1.5;</span><br><span class=\"line\"></span><br><span class=\"line\">    vlLight += caustic * add;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//体积光 核心算法 =======================================================</span><br><span class=\"line\"></span><br><span class=\"line\">float height = input.posOS.y + 0.5;</span><br><span class=\"line\">float noise = tex2D(_Noise, input.posOS.xz).r;</span><br><span class=\"line\"></span><br><span class=\"line\">vlLight = vlLight * smoothstep(0.2, 1.1 + noise, height) * 20;</span><br><span class=\"line\">vlLight = vlLight * multipleOctaves(height, cosTheta);</span><br><span class=\"line\"></span><br><span class=\"line\">float3 color = lerp(_Color1, _Color2, height) * 0.5 + vlLight; </span><br><span class=\"line\"></span><br><span class=\"line\">float alpha = exp(-rayMaxDistance * _Density);</span><br></pre></td></tr></table></figure></p>\n<p><p><strong>SSR镜面部分代码</strong></p><br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//远处的反射 RayMarch 无法Hit到</span><br><span class=\"line\">float fade = pow(1-dot(normalize(V),waterNormal),1 );//fresnel</span><br><span class=\"line\">// 最远端在相机视口内</span><br><span class=\"line\">UNITY_BRANCH if((far_ScreenPixelNdcZ).y&lt;1)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    float farDepth =  GetDepth(far_ScreenPixelNdcZ.xy);</span><br><span class=\"line\">    farDepth = LinearEyeDepth(farDepth);</span><br><span class=\"line\">    UNITY_BRANCH if(abs(farDepth)&lt;SSRLength)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        // SSRColor =  GetSceneColor(far_ScreenPixelNdcZ.xy)*fade*float4(1,0,0,0);</span><br><span class=\"line\">        SSRColor = GetSceneColor(far_ScreenPixelNdcZ.xy)*fade;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    else</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        SSRColor.w = 1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">UNITY_LOOP</span><br><span class=\"line\">for (int n=1;n&lt;MaxLingearStep;n++)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Ray += Step;</span><br><span class=\"line\">    //如果测试点跑到 视口外面去了，那么停止for循环</span><br><span class=\"line\">    UNITY_BRANCH if(Ray.z&lt;0 || Ray.z&gt;1 || Ray.x&lt;0 || Ray.x&gt;1 || Ray.y&lt;0 || Ray.y&gt;1)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        break;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    float Depth = GetDepth(Ray.xy);</span><br><span class=\"line\">    //  上一次深度&lt;Depth&lt;这一次深度</span><br><span class=\"line\">    // if(Depth + _PerPixelCompareBias &gt;Ray.z &amp;&amp; Ray.z &lt;Depth +_PerPixelDepthBias )</span><br><span class=\"line\">    if(Ray.z &lt; Depth  &amp;&amp; Depth &lt; LastDepth)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        isHit = true;</span><br><span class=\"line\">        hitUV = Ray.xy;</span><br><span class=\"line\">        break;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    LastDepth =Ray.z;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">if(isHit)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    SSRColor =  GetSceneColor(hitUV)*fade;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h2 id=\"视差卡片\"><a href=\"#视差卡片\" class=\"headerlink\" title=\"视差卡片\"></a>视差卡片</h2><div class=\"tabs\" id=\"视差卡片\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"视差卡片-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"视差卡片-2\">细节部分</button><button type=\"button\" class=\"tab \" data-href=\"视差卡片-3\">部分源代码展示</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"视差卡片-1\"><div class=\"tabs\" id=\"视差卡片\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"视差卡片-1\">多巴胺女孩</button><button type=\"button\" class=\"tab \" data-href=\"视差卡片-2\">模特橱窗</button><button type=\"button\" class=\"tab \" data-href=\"视差卡片-3\">模板测试3D效果</button><button type=\"button\" class=\"tab \" data-href=\"视差卡片-4\">深度测试滤镜效果</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"视差卡片-1\"><div class=\"videos\" col='2'>\n<div class=\"video\"><video controls preload><source src='https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/parallax4.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>\n<div class=\"video\"><video controls preload><source src='https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/Parallax1.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>\n</div></div><div class=\"tab-item-content\" id=\"视差卡片-2\"><div class=\"videos\" col='2'>\n<div class=\"video\"><video controls preload><source src='https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/parallax3.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>\n<div class=\"video\"><video controls preload><source src='https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/parallax2.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>\n</div></div><div class=\"tab-item-content\" id=\"视差卡片-3\"><div class=\"videos\">\n<div class=\"video\"><video controls preload><source src='https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/TemplentTest.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>\n</div></div><div class=\"tab-item-content\" id=\"视差卡片-4\"><div class=\"gallery-container\" data-type=\"data\" data-button=\"\">\n      <div class=\"gallery-data\">[{\"url\":\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725276.png\",\"alt\":\"2024-4-16 10_17_29\"}]</div>\n      <div class=\"gallery-items\">\n      </div>\n    </div></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div><div class=\"tab-item-content\" id=\"视差卡片-2\"><p><h2 id=\"视差效果算法\"><a href=\"#视差效果算法\" class=\"headerlink\" title=\"视差效果算法\"></a><strong>视差效果算法</strong></h2><p><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725277.png\" alt=\"\"></p></p>\n<p><h3 id=\"计算视角与法线的夹角余弦值\"><a href=\"#计算视角与法线的夹角余弦值\" class=\"headerlink\" title=\"计算视角与法线的夹角余弦值\"></a>计算视角与法线的夹角余弦值</h3><p>通过计算<code>ViewTS</code>与z轴的点积（dot product）来得到夹角的余弦值。</p></p>\n<p><p><strong>1.计算视差长度</strong></p></p>\n<p><p>使用<code>Depth</code>除以夹角的余弦值来计算视差效果的长度。</p></p>\n<p><p><strong>2.计算偏移纹理坐标</strong></p></p>\n<p><p>根据<code>ViewTS</code>和视差长度来计算出偏移后的纹理坐标。</p></p>\n<p><p><strong>3.采样纹理</strong></p></p>\n<p><p>使用偏移后的纹理坐标从<code>_Map</code>中采样颜色。</p></p>\n<p><h3 id=\"橱窗效果\"><a href=\"#橱窗效果\" class=\"headerlink\" title=\"橱窗效果\"></a><strong>橱窗效果</strong></h3><p><strong>1.生成深度图</strong></p></p>\n<p><p>使用Stable Diffusion技术，开始制作深度图。</p></p>\n<p><p>选择一种方法生成深度图：</p></p>\n<p><p>使用具有浮雕效果的lora技术：通过lora处理原始2D图像，强调图像中的轮廓和细节，从而生成初始的深度信息。</p></p>\n<p><p>或者，利用controlNet插件：这个插件可以分析图像中的空间关系和物体层次，生成更为精确的深度图。</p></p>\n<p><p><strong>2.调整深度图</strong></p></p>\n<p><p>打开Photoshop或其他图像处理软件。</p></p>\n<p><p>导入生成的深度图。</p></p>\n<p><p>调整深度图的明度，以确保深度信息的准确性和视觉效果的协调性。</p></p>\n<p><p><strong>3.应用视差效果</strong> </p></p>\n<p><p>将调整后的深度图应用于原始2D图像上，使用视差算法根据深度信息对图像进行分层处理。</p></p>\n<p><p>调整视差效果的参数，以达到理想的3D橱窗效果。这些参数可能包括视差强度、分层数量等。</p></p>\n<p><p>4.<strong>最终调整与输出</strong></p></p>\n<p><p>对生成的3D橱窗效果进行最后的调整和优化，确保整体视觉效果的自然和协调。</p></p>\n<p><p>导出最终的3D橱窗效果图像，准备用于展示或分享。</p></p>\n<p><h2 id=\"贴图制作\"><a href=\"#贴图制作\" class=\"headerlink\" title=\"贴图制作\"></a><strong>贴图制作</strong></h2><p>多巴胺女孩和模特均由Sdable Diffusion制作，背景则是ps制作</p></p>\n<p><p>主要步骤：</p></p>\n<p><p>加载stable diffusion环境，选择大模型（猴人3D重制 V10.safetensors）</p></p>\n<p><p>参数配置</p></p>\n<p><p><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725279.png\" alt=\"\"></p></p>\n<p><p><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725278.png\" alt=\"\"></p></p>\n<p><p>再添加想要的提示词就能得到想要的图片啦</p></p>\n<p><h3 id=\"高光和流光效果\"><a href=\"#高光和流光效果\" class=\"headerlink\" title=\"高光和流光效果\"></a>高光和流光效果</h3><p>高光效果可通过Blinn-Phong模型中的dot(N,H)实现，或通过光晕函数模拟，结合全局虚拟点光源和HSV色彩模型，呈现绚丽色彩。而流光效果则可采用Luminance函数或遮罩贴图来精准定位流光的动感部位。</p></p>\n<p><h2 id=\"模板测试\"><a href=\"#模板测试\" class=\"headerlink\" title=\"模板测试\"></a>模板测试</h2><p><strong>1.设置蒙版的属性</strong></p><br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ZWrite off//需要关闭深度写入，否则在渲染透明物体的时候会出错，透明物体会修改深度缓冲区</span><br><span class=\"line\"></span><br><span class=\"line\">//其中_ID是指可以通过蒙版显示的模型ID</span><br><span class=\"line\">Stencil&#123;</span><br><span class=\"line\">      Ref[_ID]//在模板缓存区中存储一个蒙版测试的ID</span><br><span class=\"line\">      Comp always//设置这个ID的属性为可通过</span><br><span class=\"line\">      Pass replace </span><br><span class=\"line\">&#125;  </span><br></pre></td></tr></table></figure></p>\n<p><p><strong>2.给模型设置ID</strong></p><br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Stencil &#123;</span><br><span class=\"line\">      Ref [_ID]</span><br><span class=\"line\">      Comp equal//模板测试将检查模板缓冲区中当前像素位置的值是否等于 Ref 设定的参考值（_ID）。如果相等，则测试通过；如果不等，则测试失败。</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><p><strong>深度测试滤镜效果</strong></p></p>\n<p><p>给物体添加两个pass，一个是正常显示的pass，另一个是滤镜效果的pass</p></p>\n<p><p>滤镜效果的pass属性</p><br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Blend SrcAlpha One</span><br><span class=\"line\">ZTest Greater //核心</span><br><span class=\"line\">//这是深度测试（Z-Testing）的设置。深度测试用于确定哪些像素应该被绘制到屏幕上。</span><br><span class=\"line\">Greater 表示只有当当前像素的深度值大于深度缓冲区中的值时，才会绘制该像素。这通常用于实现一些特殊效果，如阴影或某些类型的贴图。</span><br><span class=\"line\">在正常情况下，深度测试通常设置为 Less 或 Lequal（小于或等于），以确保更近的物体遮挡更远的物体。但在某些特殊情况下，如实现阴影效果时，Greater 测试可能很有用。</span><br><span class=\"line\">ZWrite off</span><br><span class=\"line\">Cull Back //节省性能</span><br></pre></td></tr></table></figure></p></div><div class=\"tab-item-content\" id=\"视差卡片-3\"><p><p><strong>效果实现代码</strong></p><br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  //视差算法实现代码</span><br><span class=\"line\">  float4 Parallax(in float2 uv,in float3 ViewTS,in float Depth,sampler2D _Map,float4 _Map_ST,in float Scale)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">      uv = uv* _Map_ST.xy*Scale+_Map_ST.zw  ;</span><br><span class=\"line\"></span><br><span class=\"line\">      float CosAngle = dot(ViewTS,float3(0,0,1));</span><br><span class=\"line\">      float LengthAB = Depth/CosAngle;</span><br><span class=\"line\"></span><br><span class=\"line\">      float3 UvA = float3(uv,0);</span><br><span class=\"line\">      float3 UvB = UvA + ViewTS*LengthAB;</span><br><span class=\"line\"></span><br><span class=\"line\">      float4 Parallax = tex2D(_Map,saturate(UvB.xy));</span><br><span class=\"line\">      return Parallax;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">//贴图混合</span><br><span class=\"line\"> if(DepthMap+_BodyDepth &gt; 0)</span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">    FinalDisplay = lerp(linesmap,body,body.a);</span><br><span class=\"line\">  </span><br><span class=\"line\">    FinalDisplay = lerp(background,FinalDisplay,FinalDisplay.a);</span><br><span class=\"line\">     </span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">else</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    FinalDisplay =lerp(background,body,body.a);</span><br><span class=\"line\">   FinalDisplay =lerp(FinalDisplay,linesmap,linesmap.a);</span><br><span class=\"line\">                    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//高光与颜色</span><br><span class=\"line\">float3 hsvcolor =  pow(specularcolor * HSVToRGB(float3(uv.x*_LinesColorLenght+_LinesColor,1,1)).xyzz,_LinesColorPowScale.x)*_LinesColorPowScale.y;</span><br><span class=\"line\">            linesmap = linesmap.a*float4(hsvcolor,1)*_LinesTint ;</span><br></pre></td></tr></table></figure></p></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h2 id=\"仿原神卡通渲染\"><a href=\"#仿原神卡通渲染\" class=\"headerlink\" title=\"仿原神卡通渲染\"></a>仿原神卡通渲染</h2><div class=\"tabs\" id=\"仿原神卡通渲染\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"仿原神卡通渲染-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"仿原神卡通渲染-2\">细节部分</button><button type=\"button\" class=\"tab \" data-href=\"仿原神卡通渲染-3\">部分源代码展示</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"仿原神卡通渲染-1\"><div class=\"videos\"><div class=\"video\"><video controls preload><source src='https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/mmd.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div></div>\n\n<div class=\"tabs\" id=\"视差卡片\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"视差卡片-1\">基本颜色</button><button type=\"button\" class=\"tab \" data-href=\"视差卡片-2\">LightMap.r;//金属高光部位</button><button type=\"button\" class=\"tab \" data-href=\"视差卡片-3\">LightMap.g;//光照偏移量，混合常暗区域（AO）;</button><button type=\"button\" class=\"tab \" data-href=\"视差卡片-4\">**LightMap.a>_TestLayerNumber;//材质枚举**</button><button type=\"button\" class=\"tab \" data-href=\"视差卡片-5\">采样金属度贴图</button><button type=\"button\" class=\"tab \" data-href=\"视差卡片-6\">漫反射</button><button type=\"button\" class=\"tab \" data-href=\"视差卡片-7\">高光</button><button type=\"button\" class=\"tab \" data-href=\"视差卡片-8\">环境光</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"视差卡片-1\"><p><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725280.png\" alt=\"2024-4-16 8_05_11\"></p></div><div class=\"tab-item-content\" id=\"视差卡片-2\"><p><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725281.png\" alt=\"2024-4-16 8_05_46\"></p></div><div class=\"tab-item-content\" id=\"视差卡片-3\"><p><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725282.png\" alt=\"2024-4-16 8_06_00\"></p></div><div class=\"tab-item-content\" id=\"视差卡片-4\"><div class=\"gallery-container\" data-type=\"data\" data-button=\"\">\n      <div class=\"gallery-data\">[{\"url\":\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725283.png\",\"alt\":\"2024-4-16 8_07_22\"},{\"url\":\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725284.png\",\"alt\":\"2024-4-16 8_07_29\"},{\"url\":\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725285.png\",\"alt\":\"2024-4-16 8_07_36\"},{\"url\":\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725286.png\",\"alt\":\"2024-4-16 8_07_49\"},{\"url\":\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725287.png\",\"alt\":\"2024-4-16 8_07_54\"}]</div>\n      <div class=\"gallery-items\">\n      </div>\n    </div></div><div class=\"tab-item-content\" id=\"视差卡片-5\"><p><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725288.png\" alt=\"2024-4-16 8_09_07\"></p></div><div class=\"tab-item-content\" id=\"视差卡片-6\"><p><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725289.png\" alt=\"2024-4-16 8_09_38\"></p></div><div class=\"tab-item-content\" id=\"视差卡片-7\"><p><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725290.png\" alt=\"2024-4-16 8_10_10\"></p></div><div class=\"tab-item-content\" id=\"视差卡片-8\"><p><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725291.png\" alt=\"2024-4-18 6_44_50\"></p></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div><div class=\"tab-item-content\" id=\"仿原神卡通渲染-2\"><p><h2 id=\"NPR仿原神渲染\"><a href=\"#NPR仿原神渲染\" class=\"headerlink\" title=\"NPR仿原神渲染\"></a>NPR仿原神渲染</h2><p><strong>1. 准备资源</strong></p></p>\n<p>收集并准备好所有必要的贴图，如纹理贴图、光照贴图等。</p>\n<p><strong>2. 添加环境光</strong></p>\n<ul>\n<li>应用Half Lambert光照模型。</li>\n</ul>\n<p><strong>3. 明暗处理</strong></p>\n<ul>\n<li>使用<code>smoothstep</code>函数，通过设定合适的阈值，实现模型表面明暗区域的过渡。</li>\n<li>结合二分搜索或其他优化算法，快速而准确地确定明暗交界线，从而生成更具二次元风格的阴影效果。</li>\n</ul>\n<p><strong>4. 材质与颜色处理</strong></p>\n<ul>\n<li>利用光照贴图的alpha通道来识别不同材质区域，这样可以为每个区域应用不同的颜色处理方案。</li>\n<li>通过ramp贴图技术，根据光照方向和表面法线，为模型表面添加二次元风格的颜色效果，使色彩更加丰富和生动。</li>\n</ul>\n<p><strong>5. 高光处理</strong></p>\n<ul>\n<li>采用Blinn-Phong光照模型来分别模拟金属和非金属的高光反射效果，为模型增加真实感和立体感。</li>\n<li>通过提取光照贴图的R通道信息，强调金属部分的高光反射。</li>\n</ul>\n<p><strong>6. 阴影混合</strong></p>\n<ul>\n<li>将前面步骤中生成的阴影效果进行混合和调整，以增强模型的深度和层次感。</li>\n<li>根据需要调整阴影的密度、颜色和位置，以达到最佳的视觉效果。</li>\n</ul>\n<p><strong>7. 添加描边效果</strong></p>\n<ul>\n<li>在模型的边缘添加明显的描边效果，以突出角色的轮廓和特征。</li>\n</ul>\n<h2 id=\"MMD制作\"><a href=\"#MMD制作\" class=\"headerlink\" title=\"MMD制作\"></a>MMD制作</h2><p>1.场景布置</p>\n<p><strong>背景采样与颜色混合</strong></p>\n<p>根据输入的纹理坐标（<code>i.ase_texcoord2.xy</code>）和背景纹理的变换参数（<code>_BackGround_ST</code>），计算背景纹理的采样坐标<code>uv_BackGround</code>。</p>\n<p>从背景纹理中采样颜色，并根据一系列参数（如背景颜色、星星亮度等）进行混合，得到初始的颜色值。</p>\n<p><strong>雾效处理</strong></p>\n<p>通过一系列的计算，包括标准化、距离计算和clamp操作，来确定雾效的影响程度。</p>\n<p>使用<code>smoothstep</code>函数来平滑地过渡雾效的影响区域。</p>\n<p>2.动作载入</p>\n<p>准备好vmd动作文件，使用unity的MMD4插件，将PXM模型文件和vmd文件处理成FBX模型，使用动画控制器添加动作效果，在模型中添加组件</p>\n<p>3.音频载入</p>\n<p>使用videosourse组件添加相匹配的音频文件</p></div><div class=\"tab-item-content\" id=\"仿原神卡通渲染-3\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//=======漫反射=======//</span><br><span class=\"line\">  float lambert = saturate(NL);</span><br><span class=\"line\">  float halfLambert = pow(lambert * 0.5 + 0.5, 2);</span><br><span class=\"line\">  float halfLambertStep = smoothstep(0.423, 0.460, halfLambert);</span><br><span class=\"line\"></span><br><span class=\"line\">  float rampU = clamp(smoothstep(0.2, 0.4, halfLambert), 0.005, 0.995);//阴影部分中的深浅是在0.2到0.4之间过渡</span><br><span class=\"line\">  float2 dayRampUV = float2(rampU, 1 - dayRampV);</span><br><span class=\"line\">  float2 nightRampUV = float2(rampU, 1 - nightRampV);</span><br><span class=\"line\">  float3 rampColor = lerp(tex2D(_RampMap, nightRampUV).rgb, tex2D(_RampMap, dayRampUV).rgb, _IsDay);//利用_isDay插值白天与黑夜的阴影颜色</span><br><span class=\"line\">  float3 shadowColor = lerp(BaseMap, BaseMap * rampColor, _LightThreshold) ;//* _ShaodwColor.rgb</span><br><span class=\"line\"></span><br><span class=\"line\">  float3 diffuse = lerp(shadowColor, BaseMap, halfLambertStep);//明部到阴影是在0.423到0.460之间过渡的</span><br><span class=\"line\">  diffuse = lerp(shadowColor, diffuse, saturate(RampOffsetMask * 2));//将ILM贴图的g通道乘2 用saturate函数将超过1的部分去掉，混合常暗区域（AO）</span><br><span class=\"line\"></span><br><span class=\"line\">  diffuse = lerp(diffuse, BaseMap, saturate(RampOffsetMask - 0.5) * 2);//将ILM贴图的g通道减0.5乘2 用saturate函数将小于0的部分去掉，混合常亮部分（眼睛）</span><br><span class=\"line\">  diffuse = diffuse+diffuse* _DiffuseColor.rgb*_LightColor0; //* _DiffuseColor.rgb;</span><br><span class=\"line\"></span><br><span class=\"line\">//=======高光=======//</span><br><span class=\"line\">  // //高光反射</span><br><span class=\"line\">  float blinnPhong = step(0, NL) * pow(max(NH, 0), _MetallicStepSpecularWidth);</span><br><span class=\"line\">  float3 hairSpec = tex2D(_HairSpecMap, i.uv).rgb * blinnPhong * _HairSpecIntensity * BaseMap;</span><br><span class=\"line\">  float3 nonMetallicSpec = step(1.01 - blinnPhong, _MetallicStepSpecularWidth) * specIntensity * _NonMetallicSpecIntensity + hairSpec;//BlinnPhong取反做step用来限制非金属高光的区域</span><br><span class=\"line\">  float3 metallicSpec = blinnPhong * _MetallicStepSpecularWidth * halfLambertStep * BaseMap * _MetallicSpecIntensity;</span><br><span class=\"line\"></span><br><span class=\"line\">  //计算金属、高光项</span><br><span class=\"line\">  float isMetal = step( 0.5,specIntensity);</span><br><span class=\"line\"></span><br><span class=\"line\">  float3 specular = lerp(metallicSpec, nonMetallicSpec, isMetal)*_SpecularColor.rgb;</span><br><span class=\"line\">  float3 metallic = lerp(0, metallicIndensity, isMetal) * BaseMap * _MetallicIntensity;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  //混合</span><br><span class=\"line\">  float3 finalColor = diffuse  + metallic +specular;</span><br><span class=\"line\">//=======环境边缘光反射=======//</span><br><span class=\"line\">  fixed fresnel = 1.0 - dot(N, V);</span><br><span class=\"line\">  fresnel = lerp(fresnel, 2.0 - fresnel, step(1, fresnel));//由于开启了双面显示，当显示出来的面片为背面时，需要取2.0 - fresnel</span><br><span class=\"line\">  fresnel = smoothstep(_FresnelMin, _FresnelMax, fresnel);</span><br><span class=\"line\">  fixed3 reflectDir = reflect( - V, N);//反射光线方向</span><br><span class=\"line\">  //环境反射粗糙度</span><br><span class=\"line\">  float roughness = lerp(0.0, 0.95, saturate(_Roughness));</span><br><span class=\"line\">  roughness = roughness * (1.7 - 0.7 * roughness);</span><br><span class=\"line\">  float mipLevel = roughness * 6.0;</span><br><span class=\"line\">  //EnvironmentHDR贴图</span><br><span class=\"line\">  half4 cubemapColor = texCUBElod(_EnvironmentMap, float4(reflectDir, mipLevel));</span><br><span class=\"line\">  half3 environmentColor = DecodeHDR(cubemapColor, _EnvironmentMap_HDR);</span><br><span class=\"line\">  half3 environment = environmentColor * fresnel * _EnvironmentIntensity;</span><br><span class=\"line\">  </span><br><span class=\"line\">  //发射阴影</span><br><span class=\"line\">  UNITY_LIGHT_ATTENUATION(atten,  i,  i.worldPosition);</span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\">  //添加描边pass</span><br><span class=\"line\">  V2FData vert(MeshData v)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">      V2FData o;</span><br><span class=\"line\">      v.vertex.xyz += v.tangent.xyz *_OulineScale*0.01 * v.vertexColor.g ; //用顶点色的alpha通道控制描边粗细</span><br><span class=\"line\">      o.pos = UnityObjectToClipPos(v.vertex);</span><br><span class=\"line\">      o.color = v.vertexColor;</span><br><span class=\"line\">      return o;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p><strong>场景代码</strong></p>\n<p><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404181009622.png\" alt=\"image-20240418100248875\"></p></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h2 id=\"体积云\"><a href=\"#体积云\" class=\"headerlink\" title=\"体积云\"></a>体积云</h2><div class=\"tabs\" id=\"体积云\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"体积云-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"体积云-2\">细节部分</button><button type=\"button\" class=\"tab \" data-href=\"体积云-3\">部分源代码展示</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"体积云-1\"><div class=\"videos\"><div class=\"video\"><video controls preload><source src='https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/VolumeCloud.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div></div></div><div class=\"tab-item-content\" id=\"体积云-2\"><p><strong>主光线追踪循环</strong></p>\n<ul>\n<li>对于每条从摄像机发出的光线，进行固定步数的追踪（由<code>RaySteps</code>控制）。</li>\n<li>在每一步，计算当前光线位置，并评估该位置的云密度和形状（通过调用<code>clouds</code>函数得到符号距离场SDF和密度）。</li>\n<li>如果当前位置在云内部（SDF为负且密度大于0），则执行次级光线追踪来模拟光源对云的影响：<ul>\n<li>沿着光源方向进行另一次光线追踪（由<code>LightSteps</code>控制）。</li>\n<li>在每一步中，评估当前光源光线位置处的云密度和形状。</li>\n<li>累积光学深度，用于后续的光照计算。</li>\n</ul>\n</li>\n<li>计算环境光照和直接光照对云的影响，得到当前位置的光照能量。</li>\n<li>根据云的密度和光的吸收系数，更新光线的穿透率。</li>\n<li>将计算得到的光照能量和穿透率累加到散射结果中。</li>\n</ul>\n<p>循环结束处理</p>\n<ul>\n<li>在完成所有光线追踪步骤后，根据一个全局的光强参数调整累积的光能量。</li>\n<li>返回最终的散射结果，包括累积的光能量和穿透比率。这个结果可以用于后续的渲染流程，如颜色混合或透明度调整。</li>\n</ul>\n<p><strong>3D贴图制作</strong></p>\n<p>1.物体shader 使用<strong>VFACE</strong> 判断模正反 给予不同的颜色</p>\n<p>2.shader 中调整裁剪clip的值，对模型进行切片,并使用相机将每片拍下来保存为Texture2D 数组</p>\n<p>3.将保存的Texture2D数组 生成为Texture3D</p>\n<p>4.将生成完的Texture3D 重新载入另一个shader进行模糊，再次切片 合成导出。</p></div><div class=\"tab-item-content\" id=\"体积云-3\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">UNITY_LOOP</span><br><span class=\"line\">for (int i = 0; i &lt; RaySteps; ++i)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    float3 currentPos = begin + depth * dir;</span><br><span class=\"line\">    float sdf, density;</span><br><span class=\"line\">    clouds(currentPos, sdf, density);</span><br><span class=\"line\">    // Inside</span><br><span class=\"line\">    if (sdf &lt; 0 &amp;&amp; density &gt; 0)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        //沿着 光源方向，进行二次 RayMarching</span><br><span class=\"line\">        float3 beginPos2 = currentPos;</span><br><span class=\"line\">        float opticalDepth = 0;</span><br><span class=\"line\">        float t2 = 0;</span><br><span class=\"line\">        UNITY_LOOP</span><br><span class=\"line\">        for (int j = 0; j &lt; LightSteps; ++j)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            float3 currentPos2 = beginPos2 + t2 * L;</span><br><span class=\"line\">            float sdf2, density2;</span><br><span class=\"line\">            clouds(currentPos2, sdf2, density2);</span><br><span class=\"line\">            if (sdf2 &lt; 0)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                opticalDepth += LightStep * density2;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            t2 += max(LightStep, sdf2);</span><br><span class=\"line\">            if (any(currentPos2 &lt; -0.5) || any(currentPos2 &gt; 0.5)) break;</span><br><span class=\"line\">            //跑到sdf形状外面去了</span><br><span class=\"line\">            // if(sdf2&gt;0.1) break; </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        // 模拟环境光照</span><br><span class=\"line\">        float3 ambient = 20*_LightColor0 * lerp(_AmbientColor1, _AmbientColor2, (currentPos.y*0.5 + 0.5)) * _AmbientIntensity* lerp(1,density,_AmbientDensity);</span><br><span class=\"line\">        float3 lightEnergy = 20*_LightColor0 * multipleOctaves(opticalDepth, cosTheta) * 3.14 * phase ;</span><br><span class=\"line\">        float3 currentColor = ambient + lightEnergy;</span><br><span class=\"line\"></span><br><span class=\"line\">        float3 transmittance = exp(-step* _Absorption * density);</span><br><span class=\"line\"></span><br><span class=\"line\">        //体积云 最核心的光照算法，就是这两行</span><br><span class=\"line\">        ScatteringResult.xyz += currentColor * (1.0 - transmittance) * ScatteringResult.w;</span><br><span class=\"line\">        ScatteringResult.w *= transmittance;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    // 每次至少向前步进的距离</span><br><span class=\"line\">    depth += max(sdf, step);</span><br><span class=\"line\">    if (any(currentPos &lt; -0.55) || any(currentPos &gt; 0.55)) break;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h2 id=\"动态曲面细分\"><a href=\"#动态曲面细分\" class=\"headerlink\" title=\"动态曲面细分\"></a>动态曲面细分</h2><div class=\"tabs\" id=\"动态曲面细分\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"动态曲面细分-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"动态曲面细分-2\">细节部分</button><button type=\"button\" class=\"tab \" data-href=\"动态曲面细分-3\">部分源代码展示</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"动态曲面细分-1\"><div class=\"videos\"><div class=\"video\"><video controls preload><source src='https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/Tessellation.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div></div></div><div class=\"tab-item-content\" id=\"动态曲面细分-2\"><p>动态效果</p>\n<ol>\n<li>初始化（Start方法）<ul>\n<li>脚本在开始时首先通过<code>Camera.main</code>获取主摄像机的引用，并存储在<code>mainCamera</code>变量中。</li>\n<li>接着，它调用<code>CreateRT</code>方法来创建三个渲染纹理：<code>TempRT</code>, <code>PrevRT</code>, <code>CurrentRT</code>。这些渲染纹理将用于后续的图像处理和效果应用。</li>\n<li>初始化<code>DrawMat</code>和<code>SnowMat</code>两个材质，并将它们分别与<code>DrawShader</code>和<code>SnowShader</code>着色器相关联。</li>\n<li>最后，它将当前对象的渲染器的纹理设置为<code>CurrentRT</code>，这意味着该对象将显示<code>CurrentRT</code>中的内容。</li>\n</ul>\n</li>\n<li>绘制准备（每帧Update方法之前）<ul>\n<li>在每帧更新之前，系统已经准备好了所有必要的资源，包括摄像机、渲染纹理和着色器材质。</li>\n</ul>\n</li>\n<li>用户交互与绘制（Update方法中的射线检测部分）<ul>\n<li>在每一帧中，脚本首先检查用户是否按下了鼠标左键。</li>\n<li>如果按下，脚本通过<code>mainCamera</code>执行一个从摄像机位置发射并经过鼠标在屏幕上的位置的射线。</li>\n<li>如果这个射线与场景中的任何物体相交（即发生了碰撞），则记录碰撞点的纹理坐标。</li>\n<li>使用记录的纹理坐标和预设的绘制半径，调用<code>DrawAt</code>方法来在<code>CurrentRT</code>的相应位置上“绘制”一个效果（可能是足迹或其他图形）。</li>\n</ul>\n</li>\n<li>图像处理效果（Update方法中的计算部分）<ul>\n<li>紧接着，脚本设置效果的衰减速度（<code>AttenSpeed</code>），这可能影响速度。</li>\n<li>使用<code>SnowMat</code>和两个渲染纹理（<code>PrevRT</code>和<code>CurrentRT</code>）来计算累积效果。这里<code>PrevRT</code>保存了上一帧的状态，而<code>CurrentRT</code>保存了当前帧的状态。</li>\n<li>通过<code>Graphics.Blit</code>方法，将处理后的图像输出到<code>TempRT</code>中，这个临时渲染纹理现在包含了更新后的效果。</li>\n</ul>\n</li>\n<li>渲染纹理交换（Update方法的最后部分）<ul>\n<li>为了在下一帧中保留当前帧的状态，脚本执行一系列渲染纹理的交换操作。</li>\n<li>首先，将<code>TempRT</code>的内容复制到<code>PrevRT</code>中，以便在下一帧中作为上一帧的数据使用。</li>\n<li>然后，将<code>CurrentRT</code>和<code>PrevRT</code>的引用交换，这样<code>CurrentRT</code>现在就包含了最新的效果，而<code>PrevRT</code>保存了前一帧的效果。</li>\n</ul>\n</li>\n<li>渲染与显示<ul>\n<li>随着每帧的更新，对象的渲染器将显示<code>CurrentRT</code>中的内容，这是最新计算出的效果。</li>\n<li>用户将继续看到根据他们的交互效果的累积与消融而动态变化的场景。</li>\n</ul>\n</li>\n</ol></div><div class=\"tab-item-content\" id=\"动态曲面细分-3\"><p>曲面细分步骤</p>\n<ol>\n<li>常量外壳着色器（Constant Hull Shader, <code>ConstantHS</code>）<ul>\n<li>此阶段计算整个曲面的细分级别。它接收原始的控制点（这里是三角形的三个顶点）作为输入，并基于这些控制点计算出一个细分因子（<code>fac</code>）。</li>\n<li>在这个例子中，细分因子是根据纹理采样结果和某些预设参数（如<code>_maxVal</code>, <code>_minVal</code>, <code>_factor</code>）通过<code>smoothstep</code>函数动态计算的。</li>\n<li>计算出细分因子后，它会被应用到三角形的每条边和内部，决定曲面将被细分成多少个小三角形。</li>\n</ul>\n</li>\n<li>外壳着色器（Hull Shader, <code>hullProgram</code>）<ul>\n<li>在常量外壳着色器之后，外壳着色器为每个细分后的控制点（这里是每个原始控制点的细分版本）计算输出数据。</li>\n<li>这个阶段主要为每个控制点准备如世界位置、纹理坐标、法线等必要的插值数据，这些数据将在后续的域着色器中使用。</li>\n</ul>\n</li>\n<li>曲面细分<ul>\n<li>基于常量外壳着色器计算出的细分因子，硬件会执行实际的曲面细分操作，生成更多的三角形来逼近原始曲面。</li>\n</ul>\n</li>\n<li>域着色器（Domain Shader, <code>domainProgram</code>）<ul>\n<li>域着色器运行在细分后的每个小三角形上。它接收由外壳着色器准备的插值数据和细分后小三角形的重心坐标作为输入。</li>\n<li>使用这些输入数据，域着色器计算出每个细分三角形的顶点属性，如位置、纹理坐标、法线等。</li>\n<li>这些顶点属性是通过原始控制点的属性进行线性插值得到的。</li>\n</ul>\n</li>\n<li>几何着色器/光栅化<ul>\n<li>在某些情况下，曲面细分之后可能还会有一个几何着色器阶段，用于进一步处理细分后的几何图形。</li>\n<li>然后，这些几何数据将被光栅化，转换为屏幕空间的像素，以供像素着色器处理。</li>\n</ul>\n</li>\n<li>像素着色器<ul>\n<li>最后，在像素着色器阶段，将处理光栅化后的像素，应用纹理、光照等效果，并最终输出到屏幕上。</li>\n</ul>\n</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//vert顶点程序之后调用，计算细分前的三角形顶点信息</span><br><span class=\"line\">\t\t\tTessOut hullProgram(InputPatch&lt;v2t, 3&gt; i, uint idx : SV_OutputControlPointID)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tTessOut o;</span><br><span class=\"line\">\t\t\t\to.worldPos = i[idx].worldPos;</span><br><span class=\"line\">\t\t\t\to.uv = i[idx].uv;</span><br><span class=\"line\">\t\t\t\to.normalWS = i[idx].normalWS;</span><br><span class=\"line\">\t\t\t\to.normalOS = i[idx].normalOS;</span><br><span class=\"line\">\t\t\t\to.pos = i[idx].pos;</span><br><span class=\"line\">\t\t\t\to.tangent = i[idx].tangent;</span><br><span class=\"line\">\t\t\t\to.bitangent = i[idx].bitangent;</span><br><span class=\"line\">\t\t\t\treturn o;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t//指定每个边的细分段数和内部细分段数</span><br><span class=\"line\">\t\t\tTessParam ConstantHS(InputPatch&lt;v2t, 3&gt; i, uint id : SV_PrimitiveID)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tTessParam o;</span><br><span class=\"line\">\t\t\t\tfloat2 uv =(i[0].uv+i[1].uv+i[2].uv)/3;</span><br><span class=\"line\">\t\t\t\t</span><br><span class=\"line\">\t\t\t\t</span><br><span class=\"line\">\t\t\t\tfloat4 worldPos = (i[0].worldPos + i[1].worldPos + i[2].worldPos) / 3;</span><br><span class=\"line\">\t\t\t\tfloat4 pos = (i[0].pos + i[1].pos + i[2].pos) / 3;//</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\tfloat4 tex = tex2Dlod(_MainTex,float4(uv,0,0))+(1-pos.y);</span><br><span class=\"line\">\t\t\t\t</span><br><span class=\"line\">\t\t\t\tfloat smoothstepResult = smoothstep(_maxVal,_minVal , tex);</span><br><span class=\"line\">\t\t\t\t</span><br><span class=\"line\">\t\t\t\tfloat fac = max((1.0 - smoothstepResult)*_factor, 1);</span><br><span class=\"line\">\t\t\t\t</span><br><span class=\"line\">\t\t\t\t//由于我这里是根据指定的中心点和半径范围来动态算细分段数，所以才有这个计算，不然可以直接指定变量来设置。</span><br><span class=\"line\">\t\t\t\to.EdgeTess[0] = fac;</span><br><span class=\"line\">\t\t\t\to.EdgeTess[1] = fac;</span><br><span class=\"line\">\t\t\t\to.EdgeTess[2] = fac;</span><br><span class=\"line\">\t\t\t\to.InsideTess = fac;</span><br><span class=\"line\">\t\t\t\treturn o;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t//在domainProgram前必须设置domain参数，不然会报错</span><br><span class=\"line\">\t\t\t[domain(&quot;tri&quot;)]</span><br><span class=\"line\">\t\t\t//细分之后，把信息传到frag片段程序</span><br><span class=\"line\">\t\t\tt2f domainProgram(TessParam tessParam, float3 bary : SV_DomainLocation, const OutputPatch&lt;TessOut, 3&gt; i)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tt2f o;\t\t\t\t</span><br><span class=\"line\">\t\t\t\t//线性转换</span><br><span class=\"line\">\t\t\t\to.worldPos = i[0].worldPos * bary.x + i[1].worldPos * bary.y + i[2].worldPos * bary.z;</span><br><span class=\"line\">\t\t\t\to.clipPos = UnityWorldToClipPos(o.worldPos);</span><br><span class=\"line\">\t\t\t\tfloat2 uv = i[0].uv * bary.x + i[1].uv * bary.y + i[2].uv * bary.z;</span><br><span class=\"line\">\t\t\t\to.uv = uv;</span><br><span class=\"line\">\t\t\t\to.pos = i[0].pos* bary.x+ i[1].pos * bary.y + i[2].pos * bary.z;</span><br><span class=\"line\">\t\t\t\to.normalWS = i[0].normalWS* bary.x+ i[1].normalWS * bary.y + i[2].normalWS* bary.z;</span><br><span class=\"line\">\t\t\t\to.normalOS = i[0].normalOS* bary.x+ i[1].normalOS * bary.y + i[2].normalOS* bary.z;</span><br><span class=\"line\">\t\t\t\to.tangent = i[0].tangent* bary.x+ i[1].tangent * bary.y + i[2].tangent* bary.z; </span><br><span class=\"line\">\t\t\t\to.bitangent = i[0].bitangent* bary.x+ i[1].bitangent * bary.y + i[2].bitangent* bary.z;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t\treturn o;</span><br><span class=\"line\">\t\t\t&#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h2 id=\"后处理shader\"><a href=\"#后处理shader\" class=\"headerlink\" title=\"后处理shader\"></a>后处理shader</h2><div class=\"tabs\" id=\"后处理效果\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"后处理效果-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"后处理效果-2\">部分源代码展示</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"后处理效果-1\"><div class=\"tabs\" id=\"后处理效果展示\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"后处理效果展示-1\">黑白漫画效果</button><button type=\"button\" class=\"tab \" data-href=\"后处理效果展示-2\">暗角效果</button><button type=\"button\" class=\"tab \" data-href=\"后处理效果展示-3\">扰动效果</button><button type=\"button\" class=\"tab \" data-href=\"后处理效果展示-4\">油画效果</button><button type=\"button\" class=\"tab \" data-href=\"后处理效果展示-5\">模糊效果</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"后处理效果展示-1\"><p><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240934874.png\" alt=\"2024-4-16 11_10_11\"></p></div><div class=\"tab-item-content\" id=\"后处理效果展示-2\"><p><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240940392.png\" alt=\"2024-4-16 11_10_45\"></p></div><div class=\"tab-item-content\" id=\"后处理效果展示-3\"><p><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240934876.png\" alt=\"2024-4-16 11_10_57\"></p></div><div class=\"tab-item-content\" id=\"后处理效果展示-4\"><p><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240934877.png\" alt=\"2024-4-16 11_11_03\"></p></div><div class=\"tab-item-content\" id=\"后处理效果展示-5\"><p><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240934878.png\" alt=\"2024-4-16 11_11_13\"></p></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div><div class=\"tab-item-content\" id=\"后处理效果-2\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">float3 Oil(float2 uv)</span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">     float4 normalmap = tex2D(_OilNormalMap,uv);</span><br><span class=\"line\">     UnpackNormal(normalmap);</span><br><span class=\"line\"></span><br><span class=\"line\">     float2 Coloruv = uv + normalmap.xy*_OilIndensity  * 0.01;</span><br><span class=\"line\"></span><br><span class=\"line\">     float3 Color = tex2D(_MainTex,Coloruv);</span><br><span class=\"line\"></span><br><span class=\"line\">     float3 hsv = RGBToHSV(Color);</span><br><span class=\"line\">     Color.rgb = HSVToRGB(hsv + float3(0,0.29,-0.07));</span><br><span class=\"line\"></span><br><span class=\"line\">     // normalmap = pow(normalmap,_OilRange) * _OilIndensity;</span><br><span class=\"line\"></span><br><span class=\"line\">     </span><br><span class=\"line\">     return Color;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> float3 Vague(float2 uv)</span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">     </span><br><span class=\"line\">     float4 View = float4(0,0,0,0);</span><br><span class=\"line\"></span><br><span class=\"line\">     for(int x = -_VagueLevel;x &lt;=_VagueLevel;x++)</span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         for(int y = -_VagueLevel;y&lt;=_VagueLevel;y++)</span><br><span class=\"line\">         &#123;</span><br><span class=\"line\">             float2 offset = float2(x*_VagueScale,y*_VagueScale)*0.001;</span><br><span class=\"line\">             View += tex2D(_MainTex,uv + offset);</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     View /= (_VagueLevel * 2 +1) * (_VagueLevel * 2 + 1);</span><br><span class=\"line\"></span><br><span class=\"line\">     return View.xyz;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> float3 Cartoon(float2 uv)</span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">     float2 Cartoonuv = uv;</span><br><span class=\"line\"></span><br><span class=\"line\">     Cartoonuv = Cartoonuv*_NoisePowScaleUVScale.z;</span><br><span class=\"line\">     </span><br><span class=\"line\">     float3 Color = tex2D(_MainTex,uv);</span><br><span class=\"line\">     float3 Noise = tex2D(_NoiseMap,Cartoonuv);</span><br><span class=\"line\">     </span><br><span class=\"line\">  </span><br><span class=\"line\">     Noise = pow(Noise,_NoisePowScaleUVScale.x)*_NoisePowScaleUVScale.y;</span><br><span class=\"line\">     if(_ChangeLight)</span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         Color  =  Color+Noise;</span><br><span class=\"line\">         Color = Color.r &gt; Luminance(_luminanceVale);                    </span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     else</span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         if(Color.r &lt;  Luminance(_luminanceVale))</span><br><span class=\"line\">         &#123;</span><br><span class=\"line\">             Color += Noise;</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">             </span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">             </span><br><span class=\"line\">     return Color.r;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> float3 DackCorner(float2 uv)</span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">     float3 Color = tex2D(_MainTex,uv);</span><br><span class=\"line\">     float2 Center=float2(0.5,0.5);</span><br><span class=\"line\">     </span><br><span class=\"line\"></span><br><span class=\"line\">     float Range = saturate(_DackRange - distance(Center,uv));</span><br><span class=\"line\"></span><br><span class=\"line\">     Range = saturate(pow(Range,_DackPowScale.x) * _DackPowScale.y);</span><br><span class=\"line\"></span><br><span class=\"line\">     return Color*Range;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> float3 Disturbance(float2 uv)</span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">     </span><br><span class=\"line\">   </span><br><span class=\"line\">     float3 disturbancemap = tex2D(_DisturbanceMap,(uv + float2(_DisturbanceDirecter.x,_DisturbanceDirecter.y)*_Time*_DisturbanceSpeed) *_DisturbanceIndensity*0.01);</span><br><span class=\"line\">     </span><br><span class=\"line\">     float2 disturbanceuv;</span><br><span class=\"line\">     disturbanceuv = uv + _DisturbanceRange*disturbancemap;</span><br><span class=\"line\"></span><br><span class=\"line\">     float3 Color = tex2D(_MainTex,disturbanceuv);</span><br><span class=\"line\"></span><br><span class=\"line\">     return Color;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h2 id=\"水墨风格shader\"><a href=\"#水墨风格shader\" class=\"headerlink\" title=\"水墨风格shader\"></a>水墨风格shader</h2><div class=\"tabs\" id=\"水墨风格片\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"水墨风格片-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"水墨风格片-2\">细节部分</button><button type=\"button\" class=\"tab \" data-href=\"水墨风格片-3\">部分源代码展示</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"水墨风格片-1\"><div class=\"videos\"><div class=\"video\"><video controls preload><source src='https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/Ink.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div></div></div><div class=\"tab-item-content\" id=\"水墨风格片-2\"><ol>\n<li>处理光照信息<ul>\n<li>首先，对输入的法线进行归一化。</li>\n<li>获取场景中的主光源信息，包括光源方向和阴影衰减。</li>\n</ul>\n</li>\n<li>应用噪声扰动<ul>\n<li>使用噪声纹理（<code>_InteriorNoise</code>）对输入的纹理坐标进行扰动，得到一个噪声值。</li>\n<li>结合另一个纹理（<code>_StrokeTex</code>）和一些调整参数，对原始的纹理坐标进行修改，得到一个新的坐标。</li>\n</ul>\n</li>\n<li>限制坐标范围<ul>\n<li>确保新坐标的值不超过某个上限（如0.95），并进行范围限制，使其在0到1之间。</li>\n</ul>\n</li>\n<li>执行高斯模糊<ul>\n<li>初始化一个用于累加的颜色变量。</li>\n<li>在新坐标周围按照高斯分布采样一个颜色纹理（<code>_Ramp</code>），对每个采样点的颜色进行加权累加，以实现模糊效果。</li>\n</ul>\n</li>\n<li>合成最终颜色<ul>\n<li>将高斯模糊后的颜色作为最终的颜色输出（在这个特定的代码版本中，阴影效果被注释掉了，所以不考虑阴影衰减）。</li>\n</ul>\n</li>\n</ol></div><div class=\"tab-item-content\" id=\"水墨风格片-3\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">float4 burn = tex2D(_InteriorNoise, i.uv);</span><br><span class=\"line\">// a little bit disturbance on normal vector</span><br><span class=\"line\">float diff =  dot(worldNormal, worldLightDir);</span><br><span class=\"line\">diff = pow((diff * 0.5 + 0.5),_darkPow);</span><br><span class=\"line\">float2 k = tex2D(_StrokeTex, i.uv).xy;</span><br><span class=\"line\">float2 cuv = float2(diff, diff) + k * burn.xy * _InteriorNoiseLevel;</span><br><span class=\"line\">// return burn;</span><br><span class=\"line\"></span><br><span class=\"line\">// This iniminate the bias of the uv movement?</span><br><span class=\"line\">if (cuv.x &gt; 0.95)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  cuv.x = 0.95;</span><br><span class=\"line\">  cuv.y = 1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">if (cuv.y &gt;  0.95)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  cuv.x = 0.95;</span><br><span class=\"line\">  cuv.y = 1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">cuv = clamp(cuv, 0, 1);</span><br><span class=\"line\"></span><br><span class=\"line\">//Guassian Blur</span><br><span class=\"line\">float4 sum = float4(0.0, 0.0, 0.0, 0.0);</span><br><span class=\"line\">        float2 tc = cuv;</span><br><span class=\"line\">        //blur radius in pixels</span><br><span class=\"line\">        float blur = radius/resolution/4;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h2 id=\"风格化水面\"><a href=\"#风格化水面\" class=\"headerlink\" title=\"风格化水面\"></a>风格化水面</h2><div class=\"tabs\" id=\"风格化水面\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"风格化水面-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"风格化水面-2\">细节部分</button><button type=\"button\" class=\"tab \" data-href=\"风格化水面-3\">部分源代码展示</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"风格化水面-1\"><div class=\"videos\"><div class=\"video\"><video controls preload><source src='https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/Water.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div></div>\n\n<div class=\"gallery-container\" data-type=\"data\" data-button=\"\">\n      <div class=\"gallery-data\">[{\"url\":\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240934879.png\",\"alt\":\"2024-4-24 9_05_55\"},{\"url\":\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240934880.png\",\"alt\":\"2024-4-24 9_08_51\"},{\"url\":\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240934881.png\",\"alt\":\"2024-4-24 9_09_09\"},{\"url\":\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240934882.png\",\"alt\":\"2024-4-24 9_13_36\"},{\"url\":\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240934883.png\",\"alt\":\"2024-4-24 9_13_55\"},{\"url\":\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240934884.png\",\"alt\":\"2024-4-24 9_14_29\"}]</div>\n      <div class=\"gallery-items\">\n      </div>\n    </div></div><div class=\"tab-item-content\" id=\"风格化水面-2\"><p>波浪效果</p>\n<ul>\n<li><p>通过引入时间依赖的扰动函数，在顶点着色器中动态调整顶点位置，创造出逼真的波浪起伏效果。</p>\n<p>反射效果</p>\n</li>\n<li><p>利用屏幕空间反射（SSR）或平面反射（PR）技术，实现水面上的高质量反射。通过添加适当的模糊效果，进一步提升SSR的视觉效果，增加场景深度感。</p>\n<p>泡沫、涟漪与焦散</p>\n</li>\n<li><p>应用焦散贴图，模拟光线折射和反射效果，形成焦散光斑。同时，通过动态调整贴图的UV坐标，增添生动的泡沫和涟漪效果。</p>\n</li>\n</ul>\n<p>光照效果</p>\n<ul>\n<li>采用Half Lambert光照模型增强漫反射效果。</li>\n<li>结合Blinn-Phong高光模型，模拟真实的高光反射，提升水面的视觉质感。</li>\n</ul></div><div class=\"tab-item-content\" id=\"风格化水面-3\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> //===================== Foam 边缘水花=======================================================================</span><br><span class=\"line\">#ifdef USE_FOAM</span><br><span class=\"line\">    // return _NoiseMap.Sample(sampler_NoiseMap,  input.positionWS.xz*0.1 + float2(_Time.x*2,0));</span><br><span class=\"line\">    float foamDistance = 1- saturate(depthDistance/2);</span><br><span class=\"line\">    //从中间往 岸边动</span><br><span class=\"line\">    float foamDynamic = 0.5* step( _FoamWidth,frac(foamDistance - _Time.y*0.1*_FoamSpeed + noise.r*0.0325)) * foamDistance*foamDistance;</span><br><span class=\"line\"></span><br><span class=\"line\">    //浪花衰减</span><br><span class=\"line\">    foamDynamic = _EnableDynamicFoam*foamDynamic* smoothstep( _FoamFadeDistance ,1,foamDistance);</span><br><span class=\"line\">    float foamStatic =  0.5 *step( _FoamWidth,frac(foamDistance  + noise.r*0.03525)) * foamDistance*foamDistance;</span><br><span class=\"line\">    float foam = max(foamDynamic,foamStatic);</span><br><span class=\"line\"></span><br><span class=\"line\">    //加点噪音举出</span><br><span class=\"line\">    float foamNoise = SAMPLE_TEXTURE2D(_FoamNoiseMap, sampler_FoamNoiseMap,positionWS.xz*_FoamNoiseMap_ST.xy);</span><br><span class=\"line\">    foamNoise = saturate( pow(foamNoise,_FoamNoisePowScaleVec.x) *_FoamNoisePowScaleVec.y);</span><br><span class=\"line\"></span><br><span class=\"line\">    finalColor += foam*LightLum*_FoamColor*foamNoise* saturate(dot(N,V));</span><br><span class=\"line\"></span><br><span class=\"line\">#endif</span><br><span class=\"line\"></span><br><span class=\"line\">//===================== Caustic 模拟焦散 =================================</span><br><span class=\"line\">//用深度图的世界坐标采样 CausticMap 模拟其在水中晃动的感觉</span><br><span class=\"line\">//贴图焦散</span><br><span class=\"line\"></span><br><span class=\"line\">#ifndef  USE_PROCEDURAL_CAUSTIC</span><br><span class=\"line\">    float4 caustic = SAMPLE_TEXTURE2D(_CausticMap, sampler_CausticMap, depthWorldPosition.xz*0.2*_CausticMap_ST.xy+distortionUV*5);</span><br><span class=\"line\">    // float4 caustic = SAMPLE_TEXTURE2D(_CausticMap, sampler_CausticMap, positionWS.xz*0.2*_CausticMap_ST.xy+distortionUV*5);</span><br><span class=\"line\">#else</span><br><span class=\"line\">//程序化焦散</span><br><span class=\"line\">    float4 caustic =GetCaustic(depthWorldPosition*0.4*_CausticUVScale+distortionUV.xyy*5 + float3(0,_Time.x,0)).xyzz;</span><br><span class=\"line\">#endif</span><br><span class=\"line\"></span><br><span class=\"line\">caustic *= smoothstep(_CausticFade,1, (1-distortionDistanceFade) )*_CausticIntensity*NL01;</span><br><span class=\"line\">finalColor += caustic*LightLum* mainLight.shadowAttenuation;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h2 id=\"森林遗迹\"><a href=\"#森林遗迹\" class=\"headerlink\" title=\"森林遗迹\"></a>森林遗迹</h2><div class=\"tabs\" id=\"森林遗迹\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"森林遗迹-1\">渲染效果</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"森林遗迹-1\"><div class=\"videos\"><div class=\"video\"><video controls preload><source src='https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/forest.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div></div></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h2 id=\"工具脚本制作\"><a href=\"#工具脚本制作\" class=\"headerlink\" title=\"工具脚本制作\"></a>工具脚本制作</h2><div class=\"tabs\" id=\"视差卡片\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"视差卡片-1\">mesh合并工具</button><button type=\"button\" class=\"tab \" data-href=\"视差卡片-2\">3D贴图制作工具</button><button type=\"button\" class=\"tab \" data-href=\"视差卡片-3\">动态贴图制作工具</button><button type=\"button\" class=\"tab \" data-href=\"视差卡片-4\">镜子工具</button><button type=\"button\" class=\"tab \" data-href=\"视差卡片-5\">运镜工具</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"视差卡片-1\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class MeshMergerEditor : EditorWindow  </span><br><span class=\"line\">&#123;  </span><br><span class=\"line\">    [MenuItem(&quot;Tools/Merge Meshes&quot;)]  </span><br><span class=\"line\">    private static void MergeSelectedMeshes()  </span><br><span class=\"line\">    &#123;  </span><br><span class=\"line\">        // 获取当前选中的GameObject  </span><br><span class=\"line\">        GameObject[] selectedObjects = Selection.gameObjects;  </span><br><span class=\"line\">        List&lt;Mesh&gt; meshesToMerge = new List&lt;Mesh&gt;();  </span><br><span class=\"line\">  </span><br><span class=\"line\">        // 遍历选中的GameObject，获取它们的MeshFilter组件中的网格  </span><br><span class=\"line\">        foreach (GameObject obj in selectedObjects)  </span><br><span class=\"line\">        &#123;  </span><br><span class=\"line\">            MeshFilter meshFilter = obj.GetComponent&lt;MeshFilter&gt;();  </span><br><span class=\"line\">            if (meshFilter != null)  </span><br><span class=\"line\">            &#123;  </span><br><span class=\"line\">                meshesToMerge.Add(meshFilter.sharedMesh);  </span><br><span class=\"line\">            &#125;  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">        // 如果没有选中任何网格或者选中的GameObject没有MeshFilter组件，则返回  </span><br><span class=\"line\">        if (meshesToMerge.Count == 0)  </span><br><span class=\"line\">        &#123;  </span><br><span class=\"line\">            Debug.LogError(&quot;No meshes selected to merge.&quot;);  </span><br><span class=\"line\">            return;  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">        // Prepare combine instances  </span><br><span class=\"line\">        CombineInstance[] combineInstances = new CombineInstance[meshesToMerge.Count];  </span><br><span class=\"line\">        for (int i = 0; i &lt; meshesToMerge.Count; i++)  </span><br><span class=\"line\">        &#123;  </span><br><span class=\"line\">            combineInstances[i].mesh = meshesToMerge[i];  </span><br><span class=\"line\">            combineInstances[i].transform = Matrix4x4.identity;  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">        // Create a new mesh to hold the combined meshes  </span><br><span class=\"line\">        Mesh combinedMesh = new Mesh();  </span><br><span class=\"line\">        combinedMesh.CombineMeshes(combineInstances);  </span><br><span class=\"line\">        combinedMesh.name = &quot;MergedMesh_&quot; + System.DateTime.Now.ToString(&quot;yyyyMMddHHmmss&quot;);  </span><br><span class=\"line\">  </span><br><span class=\"line\">        // Create a new GameObject to hold the merged mesh  </span><br><span class=\"line\">        GameObject mergedMeshObject = new GameObject(&quot;MergedMeshObject&quot;);  </span><br><span class=\"line\">        mergedMeshObject.AddComponent&lt;MeshFilter&gt;().mesh = combinedMesh;  </span><br><span class=\"line\">        mergedMeshObject.AddComponent&lt;MeshRenderer&gt;(); // Optionally add a MeshRenderer  </span><br><span class=\"line\">  </span><br><span class=\"line\">        // Place the merged mesh object at the world origin by default  </span><br><span class=\"line\">        mergedMeshObject.transform.position = Vector3.zero;  </span><br><span class=\"line\">  </span><br><span class=\"line\">        // Select the new merged mesh object in the Hierarchy view  </span><br><span class=\"line\">        Selection.activeObject = mergedMeshObject;  </span><br><span class=\"line\">  </span><br><span class=\"line\">        // Optionally, you can save the mesh as an asset  </span><br><span class=\"line\">        string path = EditorUtility.SaveFilePanel(&quot;Save Merged Mesh&quot;, &quot;&quot;, combinedMesh.name + &quot;.mesh&quot;, &quot;mesh&quot;);  </span><br><span class=\"line\">        if (!string.IsNullOrEmpty(path))  </span><br><span class=\"line\">        &#123;  </span><br><span class=\"line\">            AssetDatabase.CreateAsset(combinedMesh, path);  </span><br><span class=\"line\">            AssetDatabase.SaveAssets();  </span><br><span class=\"line\">            AssetDatabase.Refresh();  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div><div class=\"tab-item-content\" id=\"视差卡片-2\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">using System;</span><br><span class=\"line\">using System.Collections;</span><br><span class=\"line\">using System.Collections.Generic;</span><br><span class=\"line\">using UnityEditor;</span><br><span class=\"line\">using UnityEngine;</span><br><span class=\"line\">[ExecuteInEditMode]</span><br><span class=\"line\">public class Render3DTexture : MonoBehaviour &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    public Vector3 Size = Vector3.one;</span><br><span class=\"line\">    public Vector3 Offset = Vector3.zero;</span><br><span class=\"line\"></span><br><span class=\"line\">    public Vector3Int TextureSize = new Vector3Int(256,256,256);</span><br><span class=\"line\"></span><br><span class=\"line\">    private Camera renderCam;</span><br><span class=\"line\"></span><br><span class=\"line\">    private RenderTexture renderTexture;</span><br><span class=\"line\"></span><br><span class=\"line\">    private Texture3D volumeTex;</span><br><span class=\"line\"></span><br><span class=\"line\">    public Material SliceMat;</span><br><span class=\"line\"></span><br><span class=\"line\">    public Material BlurMat;</span><br><span class=\"line\"></span><br><span class=\"line\">    public bool Blur = false;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    //public List&lt;Texture2D&gt; textureArray = new List&lt;Texture2D&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    [Range(0,1.0f)]</span><br><span class=\"line\">    public float ClipValueRange = 0;</span><br><span class=\"line\">    private float ClipValue = -0.5f;</span><br><span class=\"line\">    [Tooltip(&quot;输出路径&quot;)]</span><br><span class=\"line\">    public string OutputPath = &quot;testAsset1.asset&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    /// &lt;summary&gt;</span><br><span class=\"line\">    /// 生成相机</span><br><span class=\"line\">    /// &lt;/summary&gt;</span><br><span class=\"line\">    private void NewCam()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        GameObject cam = new GameObject(&quot;TempCam&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">        cam.transform.position = transform.position + Size.y *0.51f *Vector3.up +Offset;</span><br><span class=\"line\"></span><br><span class=\"line\">        Vector3 localEuler = cam.transform.localEulerAngles;</span><br><span class=\"line\"></span><br><span class=\"line\">        localEuler.x = 90;</span><br><span class=\"line\">        localEuler.y = 180;</span><br><span class=\"line\"></span><br><span class=\"line\">        cam.transform.localEulerAngles = localEuler;</span><br><span class=\"line\"></span><br><span class=\"line\">        renderCam = cam.AddComponent&lt;Camera&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">        renderCam.orthographic = true;</span><br><span class=\"line\"></span><br><span class=\"line\">        renderCam.orthographicSize = Size.x*0.5f;</span><br><span class=\"line\"></span><br><span class=\"line\">        renderCam.nearClipPlane = 0.0001f;</span><br><span class=\"line\">        renderCam.farClipPlane = 100;</span><br><span class=\"line\"></span><br><span class=\"line\">        renderCam.clearFlags = CameraClearFlags.SolidColor;</span><br><span class=\"line\"></span><br><span class=\"line\">        renderCam.backgroundColor = Color.black;</span><br><span class=\"line\"></span><br><span class=\"line\">        renderTexture = CreateRT(TextureSize.x, TextureSize.z);</span><br><span class=\"line\"></span><br><span class=\"line\">        renderCam.targetTexture = renderTexture;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public void StartRender()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        NewCam();</span><br><span class=\"line\"></span><br><span class=\"line\">        volumeTex = new Texture3D(TextureSize.x, TextureSize.y, TextureSize.z,TextureFormat.RFloat,false);</span><br><span class=\"line\"></span><br><span class=\"line\">        RenderSlice();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public void RenderSlice()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        //渲染范围</span><br><span class=\"line\">        Vector3 center = transform.position;</span><br><span class=\"line\">        float min = -Size.y * 0.5f + Offset.y + center.y;</span><br><span class=\"line\">        float max = Size.y * 0.5f + Offset.y + center.y;</span><br><span class=\"line\"></span><br><span class=\"line\">        ClipValue = min;</span><br><span class=\"line\"></span><br><span class=\"line\">        Color[] colors = new Color[TextureSize.x * TextureSize.y * TextureSize.z];</span><br><span class=\"line\"></span><br><span class=\"line\">        int layerCount = TextureSize.x * TextureSize.z;</span><br><span class=\"line\"></span><br><span class=\"line\">        for (int layer = 0; layer &lt; TextureSize.y; layer++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            renderCam.Render();</span><br><span class=\"line\"></span><br><span class=\"line\">            ClipValue += (max - min) / TextureSize.y;</span><br><span class=\"line\"></span><br><span class=\"line\">            float progress = (float)layer / TextureSize.y;</span><br><span class=\"line\"></span><br><span class=\"line\">            bool isCancel = EditorUtility.DisplayCancelableProgressBar(&quot;正在执行..&quot;,string.Format(&quot;生成3DTexture中... &#123;0:f2&#125;%&quot;, progress*100), progress);</span><br><span class=\"line\"></span><br><span class=\"line\">            if (SliceMat != null)SliceMat.SetFloat(&quot;_ClipValue&quot;, ClipValue);</span><br><span class=\"line\"></span><br><span class=\"line\">            Texture2D sliceTex = RenderTexture2Texture2D(renderTexture);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            int index = 0;</span><br><span class=\"line\">            //拷贝颜色</span><br><span class=\"line\">            for (int z = 0; z &lt; TextureSize.z; z++)</span><br><span class=\"line\">                for (int x = 0; x &lt; TextureSize.x; x++)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    //XY -&gt;XZ</span><br><span class=\"line\">                    index = x + z * TextureSize.y * TextureSize.x+layer* TextureSize.x;</span><br><span class=\"line\">                    colors[index] = sliceTex.GetPixel(x, z);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            //渲染完成或者取消时关闭进度条</span><br><span class=\"line\">            if (layer &gt;= TextureSize.y - 1 || isCancel)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                EditorUtility.ClearProgressBar();</span><br><span class=\"line\"></span><br><span class=\"line\">                if (isCancel)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    DestroyImmediate(renderCam.gameObject);</span><br><span class=\"line\">                    renderTexture.Release();</span><br><span class=\"line\"></span><br><span class=\"line\">                    return;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        volumeTex.SetPixels(colors);</span><br><span class=\"line\">        volumeTex.Apply();</span><br><span class=\"line\">        if (Blur)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            volumeTex = BlurTexture(volumeTex);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        string filePath = &quot;Assets/&quot;+ OutputPath;</span><br><span class=\"line\">        try</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            AssetDatabase.DeleteAsset(filePath);</span><br><span class=\"line\">            AssetDatabase.CreateAsset(volumeTex, filePath);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        catch (Exception ex)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Debug.LogError(ex.Message);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        DestroyImmediate(renderCam.gameObject);</span><br><span class=\"line\">        renderTexture.Release();</span><br><span class=\"line\">        renderTexture = null;</span><br><span class=\"line\">        UnityEditor.AssetDatabase.SaveAssets();</span><br><span class=\"line\">        AssetDatabase.Refresh();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    /// &lt;summary&gt;</span><br><span class=\"line\">    /// Renderer转成Texture2D</span><br><span class=\"line\">    /// &lt;/summary&gt;</span><br><span class=\"line\">    /// &lt;param name=&quot;rt&quot;&gt;&lt;/param&gt;</span><br><span class=\"line\">    /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class=\"line\">    public Texture2D RenderTexture2Texture2D(RenderTexture rt)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        RenderTexture preRT = RenderTexture.active;</span><br><span class=\"line\">        RenderTexture.active = rt;</span><br><span class=\"line\">        Texture2D tex = new Texture2D(rt.width, rt.height, TextureFormat.ARGB32, false);</span><br><span class=\"line\">        tex.ReadPixels(new Rect(0, 0, rt.width, rt.height), 0, 0);</span><br><span class=\"line\">        tex.Apply();</span><br><span class=\"line\">        RenderTexture.active = preRT;</span><br><span class=\"line\">        return tex;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public void OnDrawGizmos()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Gizmos.DrawWireCube(this.transform.position+Offset, Size);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public void OnDestory()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        renderTexture.Release();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public Texture3D BlurTexture(Texture3D tex)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        for (int i = 0; i &lt; 2; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Color[] colors = new Color[TextureSize.x * TextureSize.y * TextureSize.z];</span><br><span class=\"line\"></span><br><span class=\"line\">            int index = 0;</span><br><span class=\"line\"></span><br><span class=\"line\">            for (int layer = 0; layer &lt; TextureSize.y; layer++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                BlurMat.SetTexture(&quot;_VolumeTex&quot;, tex);</span><br><span class=\"line\">                BlurMat.SetFloat(&quot;_offset&quot;, layer * 1.0f / TextureSize.y);</span><br><span class=\"line\">                Debug.Log(layer * 1.0f / TextureSize.y);</span><br><span class=\"line\"></span><br><span class=\"line\">                RenderTexture rt = new RenderTexture(TextureSize.x, TextureSize.z, 24, RenderTextureFormat.ARGB32);</span><br><span class=\"line\"></span><br><span class=\"line\">                Graphics.Blit(null, rt, BlurMat);</span><br><span class=\"line\"></span><br><span class=\"line\">                Texture2D sliceTex = RenderTexture2Texture2D(rt);</span><br><span class=\"line\"></span><br><span class=\"line\">                //拷贝颜色</span><br><span class=\"line\">                for (int z = 0; z &lt; TextureSize.z; z++)</span><br><span class=\"line\">                    for (int x = 0; x &lt; TextureSize.x; x++)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        //XY -&gt;XZ</span><br><span class=\"line\">                        index = x + z * TextureSize.y * TextureSize.x + layer * TextureSize.x;</span><br><span class=\"line\">                        colors[index] = sliceTex.GetPixel(x, z);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            tex.SetPixels(colors);</span><br><span class=\"line\">            tex.Apply();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return tex;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    private RenderTexture CreateRT(int width, int height)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        RenderTexture rt = new RenderTexture(width, height, 16);</span><br><span class=\"line\">        rt.format = RenderTextureFormat.ARGBFloat;</span><br><span class=\"line\">        rt.wrapMode = TextureWrapMode.Repeat;</span><br><span class=\"line\">        rt.filterMode = FilterMode.Point;</span><br><span class=\"line\">        rt.Create();</span><br><span class=\"line\">        return rt;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    private void Update()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if (SliceMat == null)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            SliceMat = GetComponent&lt;Renderer&gt;().sharedMaterial;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if (SliceMat != null)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            float min = -Size.y * 0.5f + Offset.y+transform.position.y;</span><br><span class=\"line\">            float max = Size.y * 0.5f + Offset.y +transform.position.y;</span><br><span class=\"line\">            float value = Mathf.Lerp(min, max, ClipValueRange);</span><br><span class=\"line\">            SliceMat.SetFloat(&quot;_ClipValue&quot;, value);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div><div class=\"tab-item-content\" id=\"视差卡片-3\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">using System.Collections;</span><br><span class=\"line\">using System.Collections.Generic;</span><br><span class=\"line\">using Palmmedia.ReportGenerator.Core.Parser.Analysis;</span><br><span class=\"line\">using UnityEngine;</span><br><span class=\"line\"></span><br><span class=\"line\">public class Interactive : MonoBehaviour</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    public Camera mainCamera;</span><br><span class=\"line\"></span><br><span class=\"line\">    public RenderTexture TempRT;</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    public Shader DrawShader;</span><br><span class=\"line\"></span><br><span class=\"line\">    private Material DrawMat;</span><br><span class=\"line\">    public int TextureSize = 512;</span><br><span class=\"line\"></span><br><span class=\"line\">    [Range(0,1.0f)]</span><br><span class=\"line\">    public float DrawRadius = 0.5f;</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\">    public RenderTexture PrevRT;//上一帧RT</span><br><span class=\"line\">    //public RenderTexture CurrentRT;//当前帧RT</span><br><span class=\"line\">    public RenderTexture CurrentRT;</span><br><span class=\"line\">    public Shader SnowShader;</span><br><span class=\"line\">    private Material SnowMat;</span><br><span class=\"line\">        </span><br><span class=\"line\">    [Range(0,1)]</span><br><span class=\"line\">    public float AttenSpeed = 0.5f;</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    // Start is called before the first frame update</span><br><span class=\"line\">    void Start()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        mainCamera = Camera.main.GetComponent&lt;Camera&gt;();</span><br><span class=\"line\">        CurrentRT = CreateRT();</span><br><span class=\"line\">        PrevRT = CreateRT();</span><br><span class=\"line\">        TempRT = CreateRT();</span><br><span class=\"line\"></span><br><span class=\"line\">        DrawMat = new Material(DrawShader);</span><br><span class=\"line\">        SnowMat = new Material(SnowShader);</span><br><span class=\"line\"></span><br><span class=\"line\">        GetComponent&lt;Renderer&gt;().material.mainTexture = CurrentRT;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public RenderTexture CreateRT()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        RenderTexture rt = new RenderTexture(TextureSize, TextureSize, 0, RenderTextureFormat.RFloat);</span><br><span class=\"line\">        rt.Create();</span><br><span class=\"line\">        return rt;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    private void DrawAt(float x,float y, float radius)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        //原来的贴图</span><br><span class=\"line\">        DrawMat.SetTexture(&quot;_SourceTex&quot;,CurrentRT);</span><br><span class=\"line\">        //绘制的大小和位置</span><br><span class=\"line\">        DrawMat.SetVector(&quot;_Pos&quot;,new Vector4(x,y,radius));</span><br><span class=\"line\">        //输出</span><br><span class=\"line\">        Graphics.Blit(null,TempRT,DrawMat);</span><br><span class=\"line\">        //进行交换</span><br><span class=\"line\">        RenderTexture rt = TempRT;</span><br><span class=\"line\">        TempRT = CurrentRT;</span><br><span class=\"line\">        CurrentRT = rt;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    // Update is called once per frame</span><br><span class=\"line\">    void Update()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Shader.SetGlobalFloat(&quot;_AttenSpeed&quot;,AttenSpeed);</span><br><span class=\"line\">        //射线检测</span><br><span class=\"line\">        if (Input.GetMouseButton(0))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //鼠标左键按下时进行检测</span><br><span class=\"line\">            Ray ray = mainCamera.ScreenPointToRay(Input.mousePosition);</span><br><span class=\"line\">            //获取碰撞信息</span><br><span class=\"line\">            RaycastHit hit;</span><br><span class=\"line\">            if (Physics.Raycast(ray,out hit))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                //绘制</span><br><span class=\"line\">                DrawAt(hit.textureCoord.x, hit.textureCoord.y, DrawRadius);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        //计算</span><br><span class=\"line\">        SnowMat.SetTexture(&quot;_PrevRT&quot;,PrevRT);</span><br><span class=\"line\">        SnowMat.SetTexture(&quot;_CurrentRT&quot;,CurrentRT);</span><br><span class=\"line\">        Graphics.Blit(null,TempRT,SnowMat);</span><br><span class=\"line\">        //交换RT</span><br><span class=\"line\">        Graphics.Blit(TempRT,PrevRT);</span><br><span class=\"line\">        RenderTexture rt = PrevRT;</span><br><span class=\"line\">        PrevRT = CurrentRT;</span><br><span class=\"line\">        CurrentRT = rt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div><div class=\"tab-item-content\" id=\"视差卡片-4\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">using System;</span><br><span class=\"line\">using System.Collections;</span><br><span class=\"line\">using System.Collections.Generic;</span><br><span class=\"line\">using UnityEngine;</span><br><span class=\"line\">using UnityEngine.Rendering;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[ExecuteInEditMode]</span><br><span class=\"line\">public class PlanarReflection : MonoBehaviour &#123;</span><br><span class=\"line\">    public LayerMask _reflectionMask = -1;</span><br><span class=\"line\">    public bool _reflectSkybox = false;</span><br><span class=\"line\">    Color _clearColor = Color.black;</span><br><span class=\"line\">    public int m_TextureSize = 1024;</span><br><span class=\"line\"></span><br><span class=\"line\">    const string _reflectionSampler = &quot;_ReflectionTex&quot;;</span><br><span class=\"line\">    public float _clipPlaneOffset = 0.07F;</span><br><span class=\"line\"></span><br><span class=\"line\">    Vector3 _oldpos;</span><br><span class=\"line\">    Camera _reflectionCamera;</span><br><span class=\"line\">    RenderTexture _bluredReflectionTexture;</span><br><span class=\"line\">    Material _sharedMaterial;</span><br><span class=\"line\"></span><br><span class=\"line\">    public bool _blurOn = true;</span><br><span class=\"line\"></span><br><span class=\"line\">       </span><br><span class=\"line\"></span><br><span class=\"line\">    [Range(0.0f, 5.0f)]</span><br><span class=\"line\">    public float _blurSize = 1;</span><br><span class=\"line\">    public int _blurIterations = 2;</span><br><span class=\"line\">    public float _downsample = 1;</span><br><span class=\"line\"></span><br><span class=\"line\">#if UNITY_EDITOR</span><br><span class=\"line\">    bool _oldBlurOn;</span><br><span class=\"line\">    float _oldBlurSize;</span><br><span class=\"line\">#endif</span><br><span class=\"line\"></span><br><span class=\"line\">    private Shader _blurShader;</span><br><span class=\"line\">    private Material _blurMaterial;</span><br><span class=\"line\"></span><br><span class=\"line\">    private static bool s_InsideWater;</span><br><span class=\"line\">    private RenderTexture rt;</span><br><span class=\"line\"></span><br><span class=\"line\">    Material BlurMaterial &#123;</span><br><span class=\"line\">        get &#123;</span><br><span class=\"line\">            if (_blurMaterial == null) &#123;</span><br><span class=\"line\">                _blurMaterial = new Material(_blurShader);</span><br><span class=\"line\">                return _blurMaterial;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            return _blurMaterial;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">#if UNITY_EDITOR</span><br><span class=\"line\">    void Awake() &#123;</span><br><span class=\"line\">        _oldBlurOn = _blurOn;</span><br><span class=\"line\">        _oldBlurSize = _blurSize;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">#endif</span><br><span class=\"line\"></span><br><span class=\"line\">    void Start() &#123;</span><br><span class=\"line\">        _sharedMaterial = GetComponent&lt;MeshRenderer&gt;().sharedMaterial;</span><br><span class=\"line\">        if (_blurShader == null)</span><br><span class=\"line\">            _blurShader = Shader.Find(&quot;Hidden/SimpleBlur&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    Camera CreateReflectionCameraFor(Camera cam) &#123;</span><br><span class=\"line\">        String reflName = gameObject.name + &quot;Reflection&quot; + cam.name;</span><br><span class=\"line\">        GameObject go = new GameObject(reflName);</span><br><span class=\"line\">        go.hideFlags = HideFlags.HideAndDontSave;</span><br><span class=\"line\">        Camera reflectCamera = go.AddComponent&lt;Camera&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">        reflectCamera.backgroundColor = _clearColor;</span><br><span class=\"line\">        reflectCamera.clearFlags = _reflectSkybox ? CameraClearFlags.Skybox : CameraClearFlags.SolidColor;</span><br><span class=\"line\"></span><br><span class=\"line\">        SetStandardCameraParameter(reflectCamera, _reflectionMask);</span><br><span class=\"line\"></span><br><span class=\"line\">        if (!reflectCamera.targetTexture) &#123;</span><br><span class=\"line\">            reflectCamera.targetTexture = CreateTexture();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        return reflectCamera;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    void SetStandardCameraParameter(Camera cam, LayerMask mask) &#123;</span><br><span class=\"line\">        cam.cullingMask = mask;</span><br><span class=\"line\">        cam.backgroundColor = Color.black;</span><br><span class=\"line\">        cam.enabled = false;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    RenderTexture CreateTexture() &#123;</span><br><span class=\"line\">#if UNITY_EDITOR</span><br><span class=\"line\">        //RenderTexture rt = new RenderTexture(Mathf.FloorToInt(Screen.width), Mathf.FloorToInt(Screen.height * 0.5f), 16);</span><br><span class=\"line\">        rt = new RenderTexture(m_TextureSize, m_TextureSize, 16);</span><br><span class=\"line\">        </span><br><span class=\"line\">#else</span><br><span class=\"line\">        //RenderTexture rt = new RenderTexture(Mathf.FloorToInt(Screen.width * 0.5f), Mathf.FloorToInt(Screen.height * 0.5f), 16);</span><br><span class=\"line\">        RenderTexture rt = new RenderTexture(m_TextureSize,m_TextureSize, 16);</span><br><span class=\"line\"></span><br><span class=\"line\">#endif</span><br><span class=\"line\">        rt.hideFlags = HideFlags.DontSave;</span><br><span class=\"line\">        return rt;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    void OnWillRenderObject() &#123;</span><br><span class=\"line\">        Camera currentCam = Camera.current;</span><br><span class=\"line\">        if (!currentCam) &#123;</span><br><span class=\"line\">            return;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">#if !UNITY_EDITOR</span><br><span class=\"line\">        if (!currentCam.gameObject.CompareTag(&quot;MainCamera&quot;))</span><br><span class=\"line\">            return;</span><br><span class=\"line\">#endif</span><br><span class=\"line\"></span><br><span class=\"line\">#if UNITY_EDITOR</span><br><span class=\"line\">        if (!_bluredReflectionTexture)</span><br><span class=\"line\">            _bluredReflectionTexture = CreateTexture();</span><br><span class=\"line\">#else</span><br><span class=\"line\">        if(_blurOn) &#123;</span><br><span class=\"line\">            if (!_bluredReflectionTexture)</span><br><span class=\"line\">                _bluredReflectionTexture = CreateTexture();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">#endif</span><br><span class=\"line\"></span><br><span class=\"line\">        if (s_InsideWater) &#123;</span><br><span class=\"line\">            return;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        s_InsideWater = true;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        if (!_reflectionCamera) &#123;</span><br><span class=\"line\">            _reflectionCamera = CreateReflectionCameraFor(currentCam);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        RenderReflectionFor(currentCam, _reflectionCamera);</span><br><span class=\"line\"></span><br><span class=\"line\">        if (_reflectionCamera &amp;&amp; _sharedMaterial) &#123;</span><br><span class=\"line\">            if (_blurOn) &#123;</span><br><span class=\"line\">                PostProcessTexture(currentCam, _reflectionCamera.targetTexture, _bluredReflectionTexture);</span><br><span class=\"line\">                _sharedMaterial.SetTexture(_reflectionSampler, _bluredReflectionTexture);</span><br><span class=\"line\">            &#125; else &#123;</span><br><span class=\"line\">                _sharedMaterial.SetTexture(_reflectionSampler, _reflectionCamera.targetTexture);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        s_InsideWater = false;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">#if UNITY_EDITOR</span><br><span class=\"line\">    bool _blurParamChanged;</span><br><span class=\"line\">    void Update() &#123;</span><br><span class=\"line\">        if (_blurParamChanged) &#123;</span><br><span class=\"line\">            _oldBlurOn = _blurOn;</span><br><span class=\"line\">            _oldBlurSize = _blurSize;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        if (_blurOn != _oldBlurOn || _blurSize != _oldBlurSize) &#123;</span><br><span class=\"line\">            _blurParamChanged = true;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">#endif</span><br><span class=\"line\"></span><br><span class=\"line\">    void RenderReflectionFor(Camera cam, Camera reflectCamera) &#123;</span><br><span class=\"line\">        if (!reflectCamera) &#123;</span><br><span class=\"line\">            return;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        if (_sharedMaterial &amp;&amp; !_sharedMaterial.HasProperty(_reflectionSampler)) &#123;</span><br><span class=\"line\">            return;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        reflectCamera.cullingMask = _reflectionMask;</span><br><span class=\"line\"></span><br><span class=\"line\">        SaneCameraSettings(reflectCamera);</span><br><span class=\"line\"></span><br><span class=\"line\">        reflectCamera.backgroundColor = _clearColor;</span><br><span class=\"line\">        reflectCamera.clearFlags = _reflectSkybox ? CameraClearFlags.Skybox : CameraClearFlags.SolidColor;</span><br><span class=\"line\">        if (_reflectSkybox) &#123;</span><br><span class=\"line\">            if (cam.gameObject.GetComponent(typeof(Skybox))) &#123;</span><br><span class=\"line\">                Skybox sb = (Skybox)reflectCamera.gameObject.GetComponent(typeof(Skybox));</span><br><span class=\"line\">                if (!sb) &#123;</span><br><span class=\"line\">                    sb = (Skybox)reflectCamera.gameObject.AddComponent(typeof(Skybox));</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                sb.material = ((Skybox)cam.GetComponent(typeof(Skybox))).material;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        bool isInvertCulling = GL.invertCulling;</span><br><span class=\"line\">        GL.invertCulling = true;</span><br><span class=\"line\"></span><br><span class=\"line\">        Transform reflectiveSurface = transform; //waterHeight;</span><br><span class=\"line\"></span><br><span class=\"line\">        Vector3 eulerA = cam.transform.eulerAngles;</span><br><span class=\"line\"></span><br><span class=\"line\">        reflectCamera.transform.eulerAngles = new Vector3(-eulerA.x, eulerA.y, eulerA.z);</span><br><span class=\"line\">        reflectCamera.transform.position = cam.transform.position;</span><br><span class=\"line\"></span><br><span class=\"line\">        Vector3 pos = reflectiveSurface.transform.position;</span><br><span class=\"line\">        pos.y = reflectiveSurface.position.y;</span><br><span class=\"line\">        Vector3 normal = reflectiveSurface.transform.up;</span><br><span class=\"line\">        float d = -Vector3.Dot(normal, pos) - _clipPlaneOffset;</span><br><span class=\"line\">        Vector4 reflectionPlane = new Vector4(normal.x, normal.y, normal.z, d);</span><br><span class=\"line\"></span><br><span class=\"line\">        Matrix4x4 reflection = Matrix4x4.zero;</span><br><span class=\"line\">        reflection = CalculateReflectionMatrix(reflection, reflectionPlane);</span><br><span class=\"line\">        _oldpos = cam.transform.position;</span><br><span class=\"line\">        Vector3 newpos = reflection.MultiplyPoint(_oldpos);</span><br><span class=\"line\"></span><br><span class=\"line\">        reflectCamera.worldToCameraMatrix = cam.worldToCameraMatrix * reflection;</span><br><span class=\"line\"></span><br><span class=\"line\">        Vector4 clipPlane = CameraSpacePlane(reflectCamera, pos, normal, 1.0f);</span><br><span class=\"line\"></span><br><span class=\"line\">        Matrix4x4 projection = cam.projectionMatrix;</span><br><span class=\"line\">        projection = CalculateObliqueMatrix(projection, clipPlane);</span><br><span class=\"line\">        reflectCamera.projectionMatrix = projection;</span><br><span class=\"line\"></span><br><span class=\"line\">        reflectCamera.transform.position = newpos;</span><br><span class=\"line\">        Vector3 euler = cam.transform.eulerAngles;</span><br><span class=\"line\">        reflectCamera.transform.eulerAngles = new Vector3(-euler.x, euler.y, euler.z);</span><br><span class=\"line\"></span><br><span class=\"line\">        reflectCamera.Render();</span><br><span class=\"line\"></span><br><span class=\"line\">        GL.invertCulling = isInvertCulling;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    void SaneCameraSettings(Camera helperCam) &#123;</span><br><span class=\"line\">        helperCam.depthTextureMode = DepthTextureMode.None;</span><br><span class=\"line\">        helperCam.backgroundColor = Color.black;</span><br><span class=\"line\">        helperCam.clearFlags = CameraClearFlags.SolidColor;</span><br><span class=\"line\">        helperCam.renderingPath = RenderingPath.Forward;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    static Matrix4x4 CalculateObliqueMatrix(Matrix4x4 projection, Vector4 clipPlane) &#123;</span><br><span class=\"line\">        Vector4 q = projection.inverse * new Vector4(</span><br><span class=\"line\">            Sgn(clipPlane.x),</span><br><span class=\"line\">            Sgn(clipPlane.y),</span><br><span class=\"line\">            1.0F,</span><br><span class=\"line\">            1.0F</span><br><span class=\"line\">            );</span><br><span class=\"line\">        Vector4 c = clipPlane * (2.0F / (Vector4.Dot(clipPlane, q)));</span><br><span class=\"line\">        // third row = clip plane - fourth row</span><br><span class=\"line\">        projection[2] = c.x - projection[3];</span><br><span class=\"line\">        projection[6] = c.y - projection[7];</span><br><span class=\"line\">        projection[10] = c.z - projection[11];</span><br><span class=\"line\">        projection[14] = c.w - projection[15];</span><br><span class=\"line\"></span><br><span class=\"line\">        return projection;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    static Matrix4x4 CalculateReflectionMatrix(Matrix4x4 reflectionMat, Vector4 plane) &#123;</span><br><span class=\"line\">        reflectionMat.m00 = (1.0F - 2.0F * plane[0] * plane[0]);</span><br><span class=\"line\">        reflectionMat.m01 = (-2.0F * plane[0] * plane[1]);</span><br><span class=\"line\">        reflectionMat.m02 = (-2.0F * plane[0] * plane[2]);</span><br><span class=\"line\">        reflectionMat.m03 = (-2.0F * plane[3] * plane[0]);</span><br><span class=\"line\"></span><br><span class=\"line\">        reflectionMat.m10 = (-2.0F * plane[1] * plane[0]);</span><br><span class=\"line\">        reflectionMat.m11 = (1.0F - 2.0F * plane[1] * plane[1]);</span><br><span class=\"line\">        reflectionMat.m12 = (-2.0F * plane[1] * plane[2]);</span><br><span class=\"line\">        reflectionMat.m13 = (-2.0F * plane[3] * plane[1]);</span><br><span class=\"line\"></span><br><span class=\"line\">        reflectionMat.m20 = (-2.0F * plane[2] * plane[0]);</span><br><span class=\"line\">        reflectionMat.m21 = (-2.0F * plane[2] * plane[1]);</span><br><span class=\"line\">        reflectionMat.m22 = (1.0F - 2.0F * plane[2] * plane[2]);</span><br><span class=\"line\">        reflectionMat.m23 = (-2.0F * plane[3] * plane[2]);</span><br><span class=\"line\"></span><br><span class=\"line\">        reflectionMat.m30 = 0.0F;</span><br><span class=\"line\">        reflectionMat.m31 = 0.0F;</span><br><span class=\"line\">        reflectionMat.m32 = 0.0F;</span><br><span class=\"line\">        reflectionMat.m33 = 1.0F;</span><br><span class=\"line\"></span><br><span class=\"line\">        return reflectionMat;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    static float Sgn(float a) &#123;</span><br><span class=\"line\">        if (a &gt; 0.0F) &#123;</span><br><span class=\"line\">            return 1.0F;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if (a &lt; 0.0F) &#123;</span><br><span class=\"line\">            return -1.0F;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return 0.0F;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign) &#123;</span><br><span class=\"line\">        Vector3 offsetPos = pos + normal * _clipPlaneOffset;</span><br><span class=\"line\">        Matrix4x4 m = cam.worldToCameraMatrix;</span><br><span class=\"line\">        Vector3 cpos = m.MultiplyPoint(offsetPos);</span><br><span class=\"line\">        Vector3 cnormal = m.MultiplyVector(normal).normalized * sideSign;</span><br><span class=\"line\"></span><br><span class=\"line\">        return new Vector4(cnormal.x, cnormal.y, cnormal.z, -Vector3.Dot(cpos, cnormal));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    private Dictionary&lt;Camera, CommandBuffer&gt; _cameras = new Dictionary&lt;Camera, CommandBuffer&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    void PostProcessTexture(Camera cam, RenderTexture source, RenderTexture dest)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      </span><br><span class=\"line\">#if UNITY_EDITOR</span><br><span class=\"line\">        if (_blurParamChanged)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if (_cameras.ContainsKey(cam))</span><br><span class=\"line\">                cam.RemoveCommandBuffer(CameraEvent.BeforeForwardOpaque, _cameras[cam]);</span><br><span class=\"line\">            _cameras.Remove(cam);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">#endif</span><br><span class=\"line\">       </span><br><span class=\"line\">        if (_cameras.ContainsKey(cam))</span><br><span class=\"line\">            return;</span><br><span class=\"line\"></span><br><span class=\"line\">        CommandBuffer buf = new CommandBuffer();</span><br><span class=\"line\">        buf.name = &quot;Blur Reflection Texture&quot;;</span><br><span class=\"line\">        _cameras[cam] = buf; </span><br><span class=\"line\">        float width = source.width;</span><br><span class=\"line\">        float height = source.height;</span><br><span class=\"line\">        int rtW = Mathf.RoundToInt(width / _downsample);</span><br><span class=\"line\">        int rtH = Mathf.RoundToInt(height / _downsample);</span><br><span class=\"line\"></span><br><span class=\"line\">        int blurredID = Shader.PropertyToID(&quot;_Temp1&quot;);</span><br><span class=\"line\">        int blurredID2 = Shader.PropertyToID(&quot;_Temp2&quot;);</span><br><span class=\"line\">        buf.GetTemporaryRT(blurredID, rtW, rtH, 0, FilterMode.Bilinear, source.format);</span><br><span class=\"line\">        buf.GetTemporaryRT(blurredID2, rtW, rtH, 0, FilterMode.Bilinear, source.format);</span><br><span class=\"line\"></span><br><span class=\"line\">        buf.Blit((Texture)source, blurredID);</span><br><span class=\"line\">        for (int i = 0; i &lt; _blurIterations; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            float iterationOffs = (i * 1.0f);</span><br><span class=\"line\">            buf.SetGlobalFloat(&quot;_Offset&quot;, iterationOffs / _downsample + _blurSize);</span><br><span class=\"line\">            buf.Blit(blurredID, blurredID2, BlurMaterial, 0);</span><br><span class=\"line\">            buf.Blit(blurredID2, blurredID, BlurMaterial, 0);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        buf.Blit(blurredID, dest);</span><br><span class=\"line\"></span><br><span class=\"line\">        buf.ReleaseTemporaryRT(blurredID);</span><br><span class=\"line\">        buf.ReleaseTemporaryRT(blurredID2);</span><br><span class=\"line\"></span><br><span class=\"line\">        cam.AddCommandBuffer(CameraEvent.BeforeForwardOpaque, buf);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div><div class=\"tab-item-content\" id=\"视差卡片-5\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">using System.Collections.Generic;  </span><br><span class=\"line\">using UnityEngine;  </span><br><span class=\"line\">  </span><br><span class=\"line\">public class CameraMovement : MonoBehaviour  </span><br><span class=\"line\">&#123;  </span><br><span class=\"line\">    public List&lt;Transform&gt; pathPoints;  </span><br><span class=\"line\">    public float moveSpeed = 2.0f;  </span><br><span class=\"line\">    public float rotationSpeed = 30.0f;  </span><br><span class=\"line\">    private int currentIndex = 0;  </span><br><span class=\"line\">    private Transform target;  </span><br><span class=\"line\">    private bool isMoving = false;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    private void Start()  </span><br><span class=\"line\">    &#123;  </span><br><span class=\"line\">        if (pathPoints != null &amp;&amp; pathPoints.Count &gt; 0)  </span><br><span class=\"line\">        &#123;  </span><br><span class=\"line\">            target = pathPoints[currentIndex];  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    private void Update()  </span><br><span class=\"line\">    &#123;  </span><br><span class=\"line\">        // 检查是否按下空格键来启动或停止相机运动  </span><br><span class=\"line\">        if (Input.GetKeyDown(KeyCode.Space))  </span><br><span class=\"line\">        &#123;  </span><br><span class=\"line\">            isMoving = !isMoving;  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">        if (!isMoving || target == null) return;  </span><br><span class=\"line\">  </span><br><span class=\"line\">        Vector3 directionToTarget = (target.position - transform.position).normalized;  </span><br><span class=\"line\">        transform.Translate(directionToTarget * moveSpeed * Time.deltaTime, Space.World);  </span><br><span class=\"line\">  </span><br><span class=\"line\">        if (Vector3.Distance(transform.position, target.position) &lt; 0.1f)  </span><br><span class=\"line\">        &#123;  </span><br><span class=\"line\">            currentIndex = (currentIndex + 1) % pathPoints.Count;  </span><br><span class=\"line\">            target = pathPoints[currentIndex];  </span><br><span class=\"line\">  </span><br><span class=\"line\">            Quaternion targetRotation = Quaternion.LookRotation(target.position - transform.position);  </span><br><span class=\"line\">            transform.rotation = Quaternion.RotateTowards(transform.rotation, targetRotation, rotationSpeed * Time.deltaTime);  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"Vue","color":"#b8f0ae","icon":"https://img02.anheyu.com/adminuploads/1/2022/09/25/633001374747b.png"}]}],"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"}]}]}},"cover_type":"img","excerpt":"","more":"<h1 id=\"作品集\"><a href=\"#作品集\" class=\"headerlink\" title=\"作品集\"></a>作品集</h1><div class=\"note blue flat\"><p>前言：这本作品集是我学习与实践的成果，它记录了我的专业技能与创作思路。每一份作品都代表了我对专业的理解和对品质的追求。希望通过这些精选的作品，能够让您更直观地了解我的实力与潜力。期待有机会为您的团队贡献我的力量。</p>\n</div>\n<p>带宽速度不高，加载速度会有一定的影响，经过测试输出的内容还是比较稳定的。</p>\n<h2 id=\"Logo效果\"><a href=\"#Logo效果\" class=\"headerlink\" title=\"Logo效果\"></a>Logo效果</h2><div class=\"tabs\" id=\"视频\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"视频-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"视频-2\">细节部分</button><button type=\"button\" class=\"tab \" data-href=\"视频-3\">部分源代码展示</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"视频-1\"><div class=\"videos\"><div class=\"video\"><video controls preload><source src='https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/LOGO.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div></div></div><div class=\"tab-item-content\" id=\"视频-2\"><div class=\"tabs\" id=\"体积光\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"体积光-1\">体积光和SSR反射</button><button type=\"button\" class=\"tab \" data-href=\"体积光-2\">代码分析</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"体积光-1\"><div class=\"gallery-container\" data-type=\"data\" data-button=\"\">\n      <div class=\"gallery-data\">[{\"url\":\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725272.png\",\"alt\":\"2024-4-18 3_07_06\"},{\"url\":\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725273.png\",\"alt\":\"image-20240418032736469\"},{\"url\":\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725274.png\",\"alt\":\"image-20240418032753632\"}]</div>\n      <div class=\"gallery-items\">\n      </div>\n    </div></div><div class=\"tab-item-content\" id=\"体积光-2\"><p><strong>体积光</strong></p>\n<p>处理：</p>\n<p>a. 初始化射线、步长、当前位置、衰减率和颜色。</p>\n<p>b. 进入一个循环，在循环中：</p>\n<ul>\n<li>使用噪声纹理和当前位置计算出一个噪声值，这个噪声值乘以密度来控制体积光的分布。</li>\n<li>更新衰减率，模拟光线在介质中传播时的衰减。</li>\n<li>如果衰减率低于某个阈值，则提前退出循环，因为此时的光线已经非常微弱。</li>\n<li>更新当前位置，沿着射线方向前进一个步长。</li>\n<li>累加颜色值，这里使用了一个简单的基于高度的雾色模型。<br>c. 将累加的颜色值乘以曝光度，并设置颜色的alpha值为1.0，表示不透明。<br>d. 返回最终的颜色值。</li>\n</ul>\n<p><strong>SSR镜面反射</strong></p>\n<ol>\n<li>计算反射路径<ul>\n<li>使用相机到点的向量<code>V</code>和水面法线计算出反射方向。</li>\n<li>根据这个反射方向和预设的SSR长度，确定反射光线在世界空间中的终点和远点。</li>\n</ul>\n</li>\n<li>转换到屏幕空间<ul>\n<li>把世界空间的反射路径起点、终点、远点转换为裁剪空间，再进一步转换为屏幕空间坐标。</li>\n</ul>\n</li>\n<li>快速检查远点<ul>\n<li>如果远点在屏幕范围内，检查其深度，如果深度合适，则直接采样该点的颜色作为反射颜色。</li>\n</ul>\n</li>\n<li>线性追踪<ul>\n<li>从屏幕空间的起点开始，沿着反射路径逐步前进。</li>\n<li>在每一步，检查当前点的屏幕空间坐标是否在屏幕范围内，以及当前点的深度是否比之前记录的深度更近。</li>\n<li>如果找到一个有效的交点（即深度比之前记录的近），则记录这个交点的屏幕空间坐标。</li>\n</ul>\n</li>\n<li>采样反射颜色<ul>\n<li>如果有有效的交点，根据交点的屏幕空间坐标采样颜色，并乘以一个基于视角和法线夹角的衰减因子。</li>\n<li>如果没有有效的交点，但远点检查成功，则使用远点的颜色。</li>\n<li>如果都没有成功，则反射颜色可能保持为初始化的零值或预设的默认值。</li>\n</ul>\n</li>\n</ol>\n<p><strong>LOGO模型</strong></p>\n<ol>\n<li>设计Logo模型<ul>\n<li>初步构思Logo形状与风格</li>\n<li>完成Logo的初步设计</li>\n</ul>\n</li>\n<li>为Logo增加视觉效果<ul>\n<li>添加扰动效果，赋予Logo动态感</li>\n<li>融入反射效果，提升Logo的光泽与立体感</li>\n<li>点缀星星效果，使Logo更加璀璨</li>\n<li>添加<strong>虚拟光效果</strong>，模拟点光源增加一个光照效果，跟随小球运动实现实时渲染</li>\n</ul>\n</li>\n<li>让Logo动起来<ul>\n<li>添加运动效果，使Logo更生动</li>\n</ul>\n</li>\n<li>增加环境元素<ul>\n<li>在Logo周围添加飘动的小球和旋转的圆环，营造活泼、动感的氛围</li>\n</ul>\n</li>\n</ol></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div><div class=\"tab-item-content\" id=\"视频-3\"><p><p><strong>Logo模型的ASE代码</strong><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725275.png\" alt=\"image-20240418034245510\"></p></p>\n<p><p><strong>体积光部分代码</strong></p><br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//AABB</span><br><span class=\"line\"> bool intersectAABB(float3 rayOrigin, float3 rayDir, float3 boxMin,</span><br><span class=\"line\">                               float3 boxMax, out float2 tNearFar)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                float3 tMin = (boxMin - rayOrigin) / rayDir;</span><br><span class=\"line\">                float3 tMax = (boxMax - rayOrigin) / rayDir;</span><br><span class=\"line\">                float3 t1 = min(tMin, tMax);</span><br><span class=\"line\">                float3 t2 = max(tMin, tMax);</span><br><span class=\"line\">                float tNear = max(max(t1.x, t1.y), t1.z);</span><br><span class=\"line\">                float tFar = min(min(t2.x, t2.y), t2.z);</span><br><span class=\"line\">                tNearFar = float2(tNear, tFar);</span><br><span class=\"line\"></span><br><span class=\"line\">                return tFar &gt; tNear;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">//光线步进</span><br><span class=\"line\">UNITY_LOOP</span><br><span class=\"line\">for (float k = 0; k &lt; vlSamples; k++)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    float f = saturate((k + rand()) / vlSamples);</span><br><span class=\"line\">    float3 p = lerp(startPos, endPos, f);</span><br><span class=\"line\"></span><br><span class=\"line\">    //射线与平面求交</span><br><span class=\"line\">    float distance;</span><br><span class=\"line\">    // float3 lightDir = normalize(LightPos - p);</span><br><span class=\"line\">    // iPlane(p,L,float4(0,-1,0,0.5),distance);</span><br><span class=\"line\">    intersectPlane(float3(0, -1, 0), float3(0, 0.5, 0), p, L, distance);</span><br><span class=\"line\">    float3 hitPos = p + L * distance;</span><br><span class=\"line\"></span><br><span class=\"line\">    //白色体积光</span><br><span class=\"line\">    float3 caustic = GetCaustic(hitPos.xz);</span><br><span class=\"line\">    //*hsv2rgb(float3((p.y+_RainbowOffset + dot(L,-rayDir))*_RainbowScale+0.5,_RainbowIntensity,1));//*spectral_zucconi6(p.y+0.5);</span><br><span class=\"line\">    //彩色体积光</span><br><span class=\"line\">    float noise = tex2D(_Noise, hitPos.xz).r;</span><br><span class=\"line\">    noise = lerp(1, 1.3, noise);</span><br><span class=\"line\">    float3 causticColorful = 5 * GetCaustic(hitPos.xz) *</span><br><span class=\"line\">        hsv2rgb(float3(</span><br><span class=\"line\">        (p.y + _RainbowOffset + dot(L, -rayDir) * 0.1) * _RainbowScale * noise + 0.5,</span><br><span class=\"line\">        _RainbowIntensity, 1)); </span><br><span class=\"line\">    float rinbowMask = tex2D(_RainbowMask, hitPos.xz * 3);</span><br><span class=\"line\">    caustic = lerp(caustic, causticColorful*1.5, rinbowMask) * 1.5;</span><br><span class=\"line\">    // caustic = (causticColorful) * 1.5;</span><br><span class=\"line\"></span><br><span class=\"line\">    vlLight += caustic * add;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//体积光 核心算法 =======================================================</span><br><span class=\"line\"></span><br><span class=\"line\">float height = input.posOS.y + 0.5;</span><br><span class=\"line\">float noise = tex2D(_Noise, input.posOS.xz).r;</span><br><span class=\"line\"></span><br><span class=\"line\">vlLight = vlLight * smoothstep(0.2, 1.1 + noise, height) * 20;</span><br><span class=\"line\">vlLight = vlLight * multipleOctaves(height, cosTheta);</span><br><span class=\"line\"></span><br><span class=\"line\">float3 color = lerp(_Color1, _Color2, height) * 0.5 + vlLight; </span><br><span class=\"line\"></span><br><span class=\"line\">float alpha = exp(-rayMaxDistance * _Density);</span><br></pre></td></tr></table></figure></p>\n<p><p><strong>SSR镜面部分代码</strong></p><br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//远处的反射 RayMarch 无法Hit到</span><br><span class=\"line\">float fade = pow(1-dot(normalize(V),waterNormal),1 );//fresnel</span><br><span class=\"line\">// 最远端在相机视口内</span><br><span class=\"line\">UNITY_BRANCH if((far_ScreenPixelNdcZ).y&lt;1)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    float farDepth =  GetDepth(far_ScreenPixelNdcZ.xy);</span><br><span class=\"line\">    farDepth = LinearEyeDepth(farDepth);</span><br><span class=\"line\">    UNITY_BRANCH if(abs(farDepth)&lt;SSRLength)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        // SSRColor =  GetSceneColor(far_ScreenPixelNdcZ.xy)*fade*float4(1,0,0,0);</span><br><span class=\"line\">        SSRColor = GetSceneColor(far_ScreenPixelNdcZ.xy)*fade;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    else</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        SSRColor.w = 1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">UNITY_LOOP</span><br><span class=\"line\">for (int n=1;n&lt;MaxLingearStep;n++)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Ray += Step;</span><br><span class=\"line\">    //如果测试点跑到 视口外面去了，那么停止for循环</span><br><span class=\"line\">    UNITY_BRANCH if(Ray.z&lt;0 || Ray.z&gt;1 || Ray.x&lt;0 || Ray.x&gt;1 || Ray.y&lt;0 || Ray.y&gt;1)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        break;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    float Depth = GetDepth(Ray.xy);</span><br><span class=\"line\">    //  上一次深度&lt;Depth&lt;这一次深度</span><br><span class=\"line\">    // if(Depth + _PerPixelCompareBias &gt;Ray.z &amp;&amp; Ray.z &lt;Depth +_PerPixelDepthBias )</span><br><span class=\"line\">    if(Ray.z &lt; Depth  &amp;&amp; Depth &lt; LastDepth)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        isHit = true;</span><br><span class=\"line\">        hitUV = Ray.xy;</span><br><span class=\"line\">        break;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    LastDepth =Ray.z;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">if(isHit)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    SSRColor =  GetSceneColor(hitUV)*fade;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h2 id=\"视差卡片\"><a href=\"#视差卡片\" class=\"headerlink\" title=\"视差卡片\"></a>视差卡片</h2><div class=\"tabs\" id=\"视差卡片\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"视差卡片-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"视差卡片-2\">细节部分</button><button type=\"button\" class=\"tab \" data-href=\"视差卡片-3\">部分源代码展示</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"视差卡片-1\"><div class=\"tabs\" id=\"视差卡片\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"视差卡片-1\">多巴胺女孩</button><button type=\"button\" class=\"tab \" data-href=\"视差卡片-2\">模特橱窗</button><button type=\"button\" class=\"tab \" data-href=\"视差卡片-3\">模板测试3D效果</button><button type=\"button\" class=\"tab \" data-href=\"视差卡片-4\">深度测试滤镜效果</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"视差卡片-1\"><div class=\"videos\" col='2'>\n<div class=\"video\"><video controls preload><source src='https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/parallax4.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>\n<div class=\"video\"><video controls preload><source src='https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/Parallax1.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>\n</div></div><div class=\"tab-item-content\" id=\"视差卡片-2\"><div class=\"videos\" col='2'>\n<div class=\"video\"><video controls preload><source src='https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/parallax3.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>\n<div class=\"video\"><video controls preload><source src='https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/parallax2.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>\n</div></div><div class=\"tab-item-content\" id=\"视差卡片-3\"><div class=\"videos\">\n<div class=\"video\"><video controls preload><source src='https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/TemplentTest.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>\n</div></div><div class=\"tab-item-content\" id=\"视差卡片-4\"><div class=\"gallery-container\" data-type=\"data\" data-button=\"\">\n      <div class=\"gallery-data\">[{\"url\":\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725276.png\",\"alt\":\"2024-4-16 10_17_29\"}]</div>\n      <div class=\"gallery-items\">\n      </div>\n    </div></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div><div class=\"tab-item-content\" id=\"视差卡片-2\"><p><h2 id=\"视差效果算法\"><a href=\"#视差效果算法\" class=\"headerlink\" title=\"视差效果算法\"></a><strong>视差效果算法</strong></h2><p><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725277.png\" alt=\"\"></p></p>\n<p><h3 id=\"计算视角与法线的夹角余弦值\"><a href=\"#计算视角与法线的夹角余弦值\" class=\"headerlink\" title=\"计算视角与法线的夹角余弦值\"></a>计算视角与法线的夹角余弦值</h3><p>通过计算<code>ViewTS</code>与z轴的点积（dot product）来得到夹角的余弦值。</p></p>\n<p><p><strong>1.计算视差长度</strong></p></p>\n<p><p>使用<code>Depth</code>除以夹角的余弦值来计算视差效果的长度。</p></p>\n<p><p><strong>2.计算偏移纹理坐标</strong></p></p>\n<p><p>根据<code>ViewTS</code>和视差长度来计算出偏移后的纹理坐标。</p></p>\n<p><p><strong>3.采样纹理</strong></p></p>\n<p><p>使用偏移后的纹理坐标从<code>_Map</code>中采样颜色。</p></p>\n<p><h3 id=\"橱窗效果\"><a href=\"#橱窗效果\" class=\"headerlink\" title=\"橱窗效果\"></a><strong>橱窗效果</strong></h3><p><strong>1.生成深度图</strong></p></p>\n<p><p>使用Stable Diffusion技术，开始制作深度图。</p></p>\n<p><p>选择一种方法生成深度图：</p></p>\n<p><p>使用具有浮雕效果的lora技术：通过lora处理原始2D图像，强调图像中的轮廓和细节，从而生成初始的深度信息。</p></p>\n<p><p>或者，利用controlNet插件：这个插件可以分析图像中的空间关系和物体层次，生成更为精确的深度图。</p></p>\n<p><p><strong>2.调整深度图</strong></p></p>\n<p><p>打开Photoshop或其他图像处理软件。</p></p>\n<p><p>导入生成的深度图。</p></p>\n<p><p>调整深度图的明度，以确保深度信息的准确性和视觉效果的协调性。</p></p>\n<p><p><strong>3.应用视差效果</strong> </p></p>\n<p><p>将调整后的深度图应用于原始2D图像上，使用视差算法根据深度信息对图像进行分层处理。</p></p>\n<p><p>调整视差效果的参数，以达到理想的3D橱窗效果。这些参数可能包括视差强度、分层数量等。</p></p>\n<p><p>4.<strong>最终调整与输出</strong></p></p>\n<p><p>对生成的3D橱窗效果进行最后的调整和优化，确保整体视觉效果的自然和协调。</p></p>\n<p><p>导出最终的3D橱窗效果图像，准备用于展示或分享。</p></p>\n<p><h2 id=\"贴图制作\"><a href=\"#贴图制作\" class=\"headerlink\" title=\"贴图制作\"></a><strong>贴图制作</strong></h2><p>多巴胺女孩和模特均由Sdable Diffusion制作，背景则是ps制作</p></p>\n<p><p>主要步骤：</p></p>\n<p><p>加载stable diffusion环境，选择大模型（猴人3D重制 V10.safetensors）</p></p>\n<p><p>参数配置</p></p>\n<p><p><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725279.png\" alt=\"\"></p></p>\n<p><p><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725278.png\" alt=\"\"></p></p>\n<p><p>再添加想要的提示词就能得到想要的图片啦</p></p>\n<p><h3 id=\"高光和流光效果\"><a href=\"#高光和流光效果\" class=\"headerlink\" title=\"高光和流光效果\"></a>高光和流光效果</h3><p>高光效果可通过Blinn-Phong模型中的dot(N,H)实现，或通过光晕函数模拟，结合全局虚拟点光源和HSV色彩模型，呈现绚丽色彩。而流光效果则可采用Luminance函数或遮罩贴图来精准定位流光的动感部位。</p></p>\n<p><h2 id=\"模板测试\"><a href=\"#模板测试\" class=\"headerlink\" title=\"模板测试\"></a>模板测试</h2><p><strong>1.设置蒙版的属性</strong></p><br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ZWrite off//需要关闭深度写入，否则在渲染透明物体的时候会出错，透明物体会修改深度缓冲区</span><br><span class=\"line\"></span><br><span class=\"line\">//其中_ID是指可以通过蒙版显示的模型ID</span><br><span class=\"line\">Stencil&#123;</span><br><span class=\"line\">      Ref[_ID]//在模板缓存区中存储一个蒙版测试的ID</span><br><span class=\"line\">      Comp always//设置这个ID的属性为可通过</span><br><span class=\"line\">      Pass replace </span><br><span class=\"line\">&#125;  </span><br></pre></td></tr></table></figure></p>\n<p><p><strong>2.给模型设置ID</strong></p><br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Stencil &#123;</span><br><span class=\"line\">      Ref [_ID]</span><br><span class=\"line\">      Comp equal//模板测试将检查模板缓冲区中当前像素位置的值是否等于 Ref 设定的参考值（_ID）。如果相等，则测试通过；如果不等，则测试失败。</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><p><strong>深度测试滤镜效果</strong></p></p>\n<p><p>给物体添加两个pass，一个是正常显示的pass，另一个是滤镜效果的pass</p></p>\n<p><p>滤镜效果的pass属性</p><br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Blend SrcAlpha One</span><br><span class=\"line\">ZTest Greater //核心</span><br><span class=\"line\">//这是深度测试（Z-Testing）的设置。深度测试用于确定哪些像素应该被绘制到屏幕上。</span><br><span class=\"line\">Greater 表示只有当当前像素的深度值大于深度缓冲区中的值时，才会绘制该像素。这通常用于实现一些特殊效果，如阴影或某些类型的贴图。</span><br><span class=\"line\">在正常情况下，深度测试通常设置为 Less 或 Lequal（小于或等于），以确保更近的物体遮挡更远的物体。但在某些特殊情况下，如实现阴影效果时，Greater 测试可能很有用。</span><br><span class=\"line\">ZWrite off</span><br><span class=\"line\">Cull Back //节省性能</span><br></pre></td></tr></table></figure></p></div><div class=\"tab-item-content\" id=\"视差卡片-3\"><p><p><strong>效果实现代码</strong></p><br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  //视差算法实现代码</span><br><span class=\"line\">  float4 Parallax(in float2 uv,in float3 ViewTS,in float Depth,sampler2D _Map,float4 _Map_ST,in float Scale)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">      uv = uv* _Map_ST.xy*Scale+_Map_ST.zw  ;</span><br><span class=\"line\"></span><br><span class=\"line\">      float CosAngle = dot(ViewTS,float3(0,0,1));</span><br><span class=\"line\">      float LengthAB = Depth/CosAngle;</span><br><span class=\"line\"></span><br><span class=\"line\">      float3 UvA = float3(uv,0);</span><br><span class=\"line\">      float3 UvB = UvA + ViewTS*LengthAB;</span><br><span class=\"line\"></span><br><span class=\"line\">      float4 Parallax = tex2D(_Map,saturate(UvB.xy));</span><br><span class=\"line\">      return Parallax;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">//贴图混合</span><br><span class=\"line\"> if(DepthMap+_BodyDepth &gt; 0)</span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">    FinalDisplay = lerp(linesmap,body,body.a);</span><br><span class=\"line\">  </span><br><span class=\"line\">    FinalDisplay = lerp(background,FinalDisplay,FinalDisplay.a);</span><br><span class=\"line\">     </span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">else</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    FinalDisplay =lerp(background,body,body.a);</span><br><span class=\"line\">   FinalDisplay =lerp(FinalDisplay,linesmap,linesmap.a);</span><br><span class=\"line\">                    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//高光与颜色</span><br><span class=\"line\">float3 hsvcolor =  pow(specularcolor * HSVToRGB(float3(uv.x*_LinesColorLenght+_LinesColor,1,1)).xyzz,_LinesColorPowScale.x)*_LinesColorPowScale.y;</span><br><span class=\"line\">            linesmap = linesmap.a*float4(hsvcolor,1)*_LinesTint ;</span><br></pre></td></tr></table></figure></p></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h2 id=\"仿原神卡通渲染\"><a href=\"#仿原神卡通渲染\" class=\"headerlink\" title=\"仿原神卡通渲染\"></a>仿原神卡通渲染</h2><div class=\"tabs\" id=\"仿原神卡通渲染\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"仿原神卡通渲染-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"仿原神卡通渲染-2\">细节部分</button><button type=\"button\" class=\"tab \" data-href=\"仿原神卡通渲染-3\">部分源代码展示</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"仿原神卡通渲染-1\"><div class=\"videos\"><div class=\"video\"><video controls preload><source src='https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/mmd.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div></div>\n\n<div class=\"tabs\" id=\"视差卡片\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"视差卡片-1\">基本颜色</button><button type=\"button\" class=\"tab \" data-href=\"视差卡片-2\">LightMap.r;//金属高光部位</button><button type=\"button\" class=\"tab \" data-href=\"视差卡片-3\">LightMap.g;//光照偏移量，混合常暗区域（AO）;</button><button type=\"button\" class=\"tab \" data-href=\"视差卡片-4\">**LightMap.a>_TestLayerNumber;//材质枚举**</button><button type=\"button\" class=\"tab \" data-href=\"视差卡片-5\">采样金属度贴图</button><button type=\"button\" class=\"tab \" data-href=\"视差卡片-6\">漫反射</button><button type=\"button\" class=\"tab \" data-href=\"视差卡片-7\">高光</button><button type=\"button\" class=\"tab \" data-href=\"视差卡片-8\">环境光</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"视差卡片-1\"><p><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725280.png\" alt=\"2024-4-16 8_05_11\"></p></div><div class=\"tab-item-content\" id=\"视差卡片-2\"><p><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725281.png\" alt=\"2024-4-16 8_05_46\"></p></div><div class=\"tab-item-content\" id=\"视差卡片-3\"><p><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725282.png\" alt=\"2024-4-16 8_06_00\"></p></div><div class=\"tab-item-content\" id=\"视差卡片-4\"><div class=\"gallery-container\" data-type=\"data\" data-button=\"\">\n      <div class=\"gallery-data\">[{\"url\":\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725283.png\",\"alt\":\"2024-4-16 8_07_22\"},{\"url\":\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725284.png\",\"alt\":\"2024-4-16 8_07_29\"},{\"url\":\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725285.png\",\"alt\":\"2024-4-16 8_07_36\"},{\"url\":\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725286.png\",\"alt\":\"2024-4-16 8_07_49\"},{\"url\":\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725287.png\",\"alt\":\"2024-4-16 8_07_54\"}]</div>\n      <div class=\"gallery-items\">\n      </div>\n    </div></div><div class=\"tab-item-content\" id=\"视差卡片-5\"><p><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725288.png\" alt=\"2024-4-16 8_09_07\"></p></div><div class=\"tab-item-content\" id=\"视差卡片-6\"><p><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725289.png\" alt=\"2024-4-16 8_09_38\"></p></div><div class=\"tab-item-content\" id=\"视差卡片-7\"><p><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725290.png\" alt=\"2024-4-16 8_10_10\"></p></div><div class=\"tab-item-content\" id=\"视差卡片-8\"><p><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404180725291.png\" alt=\"2024-4-18 6_44_50\"></p></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div><div class=\"tab-item-content\" id=\"仿原神卡通渲染-2\"><p><h2 id=\"NPR仿原神渲染\"><a href=\"#NPR仿原神渲染\" class=\"headerlink\" title=\"NPR仿原神渲染\"></a>NPR仿原神渲染</h2><p><strong>1. 准备资源</strong></p></p>\n<p>收集并准备好所有必要的贴图，如纹理贴图、光照贴图等。</p>\n<p><strong>2. 添加环境光</strong></p>\n<ul>\n<li>应用Half Lambert光照模型。</li>\n</ul>\n<p><strong>3. 明暗处理</strong></p>\n<ul>\n<li>使用<code>smoothstep</code>函数，通过设定合适的阈值，实现模型表面明暗区域的过渡。</li>\n<li>结合二分搜索或其他优化算法，快速而准确地确定明暗交界线，从而生成更具二次元风格的阴影效果。</li>\n</ul>\n<p><strong>4. 材质与颜色处理</strong></p>\n<ul>\n<li>利用光照贴图的alpha通道来识别不同材质区域，这样可以为每个区域应用不同的颜色处理方案。</li>\n<li>通过ramp贴图技术，根据光照方向和表面法线，为模型表面添加二次元风格的颜色效果，使色彩更加丰富和生动。</li>\n</ul>\n<p><strong>5. 高光处理</strong></p>\n<ul>\n<li>采用Blinn-Phong光照模型来分别模拟金属和非金属的高光反射效果，为模型增加真实感和立体感。</li>\n<li>通过提取光照贴图的R通道信息，强调金属部分的高光反射。</li>\n</ul>\n<p><strong>6. 阴影混合</strong></p>\n<ul>\n<li>将前面步骤中生成的阴影效果进行混合和调整，以增强模型的深度和层次感。</li>\n<li>根据需要调整阴影的密度、颜色和位置，以达到最佳的视觉效果。</li>\n</ul>\n<p><strong>7. 添加描边效果</strong></p>\n<ul>\n<li>在模型的边缘添加明显的描边效果，以突出角色的轮廓和特征。</li>\n</ul>\n<h2 id=\"MMD制作\"><a href=\"#MMD制作\" class=\"headerlink\" title=\"MMD制作\"></a>MMD制作</h2><p>1.场景布置</p>\n<p><strong>背景采样与颜色混合</strong></p>\n<p>根据输入的纹理坐标（<code>i.ase_texcoord2.xy</code>）和背景纹理的变换参数（<code>_BackGround_ST</code>），计算背景纹理的采样坐标<code>uv_BackGround</code>。</p>\n<p>从背景纹理中采样颜色，并根据一系列参数（如背景颜色、星星亮度等）进行混合，得到初始的颜色值。</p>\n<p><strong>雾效处理</strong></p>\n<p>通过一系列的计算，包括标准化、距离计算和clamp操作，来确定雾效的影响程度。</p>\n<p>使用<code>smoothstep</code>函数来平滑地过渡雾效的影响区域。</p>\n<p>2.动作载入</p>\n<p>准备好vmd动作文件，使用unity的MMD4插件，将PXM模型文件和vmd文件处理成FBX模型，使用动画控制器添加动作效果，在模型中添加组件</p>\n<p>3.音频载入</p>\n<p>使用videosourse组件添加相匹配的音频文件</p></div><div class=\"tab-item-content\" id=\"仿原神卡通渲染-3\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//=======漫反射=======//</span><br><span class=\"line\">  float lambert = saturate(NL);</span><br><span class=\"line\">  float halfLambert = pow(lambert * 0.5 + 0.5, 2);</span><br><span class=\"line\">  float halfLambertStep = smoothstep(0.423, 0.460, halfLambert);</span><br><span class=\"line\"></span><br><span class=\"line\">  float rampU = clamp(smoothstep(0.2, 0.4, halfLambert), 0.005, 0.995);//阴影部分中的深浅是在0.2到0.4之间过渡</span><br><span class=\"line\">  float2 dayRampUV = float2(rampU, 1 - dayRampV);</span><br><span class=\"line\">  float2 nightRampUV = float2(rampU, 1 - nightRampV);</span><br><span class=\"line\">  float3 rampColor = lerp(tex2D(_RampMap, nightRampUV).rgb, tex2D(_RampMap, dayRampUV).rgb, _IsDay);//利用_isDay插值白天与黑夜的阴影颜色</span><br><span class=\"line\">  float3 shadowColor = lerp(BaseMap, BaseMap * rampColor, _LightThreshold) ;//* _ShaodwColor.rgb</span><br><span class=\"line\"></span><br><span class=\"line\">  float3 diffuse = lerp(shadowColor, BaseMap, halfLambertStep);//明部到阴影是在0.423到0.460之间过渡的</span><br><span class=\"line\">  diffuse = lerp(shadowColor, diffuse, saturate(RampOffsetMask * 2));//将ILM贴图的g通道乘2 用saturate函数将超过1的部分去掉，混合常暗区域（AO）</span><br><span class=\"line\"></span><br><span class=\"line\">  diffuse = lerp(diffuse, BaseMap, saturate(RampOffsetMask - 0.5) * 2);//将ILM贴图的g通道减0.5乘2 用saturate函数将小于0的部分去掉，混合常亮部分（眼睛）</span><br><span class=\"line\">  diffuse = diffuse+diffuse* _DiffuseColor.rgb*_LightColor0; //* _DiffuseColor.rgb;</span><br><span class=\"line\"></span><br><span class=\"line\">//=======高光=======//</span><br><span class=\"line\">  // //高光反射</span><br><span class=\"line\">  float blinnPhong = step(0, NL) * pow(max(NH, 0), _MetallicStepSpecularWidth);</span><br><span class=\"line\">  float3 hairSpec = tex2D(_HairSpecMap, i.uv).rgb * blinnPhong * _HairSpecIntensity * BaseMap;</span><br><span class=\"line\">  float3 nonMetallicSpec = step(1.01 - blinnPhong, _MetallicStepSpecularWidth) * specIntensity * _NonMetallicSpecIntensity + hairSpec;//BlinnPhong取反做step用来限制非金属高光的区域</span><br><span class=\"line\">  float3 metallicSpec = blinnPhong * _MetallicStepSpecularWidth * halfLambertStep * BaseMap * _MetallicSpecIntensity;</span><br><span class=\"line\"></span><br><span class=\"line\">  //计算金属、高光项</span><br><span class=\"line\">  float isMetal = step( 0.5,specIntensity);</span><br><span class=\"line\"></span><br><span class=\"line\">  float3 specular = lerp(metallicSpec, nonMetallicSpec, isMetal)*_SpecularColor.rgb;</span><br><span class=\"line\">  float3 metallic = lerp(0, metallicIndensity, isMetal) * BaseMap * _MetallicIntensity;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  //混合</span><br><span class=\"line\">  float3 finalColor = diffuse  + metallic +specular;</span><br><span class=\"line\">//=======环境边缘光反射=======//</span><br><span class=\"line\">  fixed fresnel = 1.0 - dot(N, V);</span><br><span class=\"line\">  fresnel = lerp(fresnel, 2.0 - fresnel, step(1, fresnel));//由于开启了双面显示，当显示出来的面片为背面时，需要取2.0 - fresnel</span><br><span class=\"line\">  fresnel = smoothstep(_FresnelMin, _FresnelMax, fresnel);</span><br><span class=\"line\">  fixed3 reflectDir = reflect( - V, N);//反射光线方向</span><br><span class=\"line\">  //环境反射粗糙度</span><br><span class=\"line\">  float roughness = lerp(0.0, 0.95, saturate(_Roughness));</span><br><span class=\"line\">  roughness = roughness * (1.7 - 0.7 * roughness);</span><br><span class=\"line\">  float mipLevel = roughness * 6.0;</span><br><span class=\"line\">  //EnvironmentHDR贴图</span><br><span class=\"line\">  half4 cubemapColor = texCUBElod(_EnvironmentMap, float4(reflectDir, mipLevel));</span><br><span class=\"line\">  half3 environmentColor = DecodeHDR(cubemapColor, _EnvironmentMap_HDR);</span><br><span class=\"line\">  half3 environment = environmentColor * fresnel * _EnvironmentIntensity;</span><br><span class=\"line\">  </span><br><span class=\"line\">  //发射阴影</span><br><span class=\"line\">  UNITY_LIGHT_ATTENUATION(atten,  i,  i.worldPosition);</span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\">  //添加描边pass</span><br><span class=\"line\">  V2FData vert(MeshData v)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">      V2FData o;</span><br><span class=\"line\">      v.vertex.xyz += v.tangent.xyz *_OulineScale*0.01 * v.vertexColor.g ; //用顶点色的alpha通道控制描边粗细</span><br><span class=\"line\">      o.pos = UnityObjectToClipPos(v.vertex);</span><br><span class=\"line\">      o.color = v.vertexColor;</span><br><span class=\"line\">      return o;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p><strong>场景代码</strong></p>\n<p><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404181009622.png\" alt=\"image-20240418100248875\"></p></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h2 id=\"体积云\"><a href=\"#体积云\" class=\"headerlink\" title=\"体积云\"></a>体积云</h2><div class=\"tabs\" id=\"体积云\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"体积云-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"体积云-2\">细节部分</button><button type=\"button\" class=\"tab \" data-href=\"体积云-3\">部分源代码展示</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"体积云-1\"><div class=\"videos\"><div class=\"video\"><video controls preload><source src='https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/VolumeCloud.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div></div></div><div class=\"tab-item-content\" id=\"体积云-2\"><p><strong>主光线追踪循环</strong></p>\n<ul>\n<li>对于每条从摄像机发出的光线，进行固定步数的追踪（由<code>RaySteps</code>控制）。</li>\n<li>在每一步，计算当前光线位置，并评估该位置的云密度和形状（通过调用<code>clouds</code>函数得到符号距离场SDF和密度）。</li>\n<li>如果当前位置在云内部（SDF为负且密度大于0），则执行次级光线追踪来模拟光源对云的影响：<ul>\n<li>沿着光源方向进行另一次光线追踪（由<code>LightSteps</code>控制）。</li>\n<li>在每一步中，评估当前光源光线位置处的云密度和形状。</li>\n<li>累积光学深度，用于后续的光照计算。</li>\n</ul>\n</li>\n<li>计算环境光照和直接光照对云的影响，得到当前位置的光照能量。</li>\n<li>根据云的密度和光的吸收系数，更新光线的穿透率。</li>\n<li>将计算得到的光照能量和穿透率累加到散射结果中。</li>\n</ul>\n<p>循环结束处理</p>\n<ul>\n<li>在完成所有光线追踪步骤后，根据一个全局的光强参数调整累积的光能量。</li>\n<li>返回最终的散射结果，包括累积的光能量和穿透比率。这个结果可以用于后续的渲染流程，如颜色混合或透明度调整。</li>\n</ul>\n<p><strong>3D贴图制作</strong></p>\n<p>1.物体shader 使用<strong>VFACE</strong> 判断模正反 给予不同的颜色</p>\n<p>2.shader 中调整裁剪clip的值，对模型进行切片,并使用相机将每片拍下来保存为Texture2D 数组</p>\n<p>3.将保存的Texture2D数组 生成为Texture3D</p>\n<p>4.将生成完的Texture3D 重新载入另一个shader进行模糊，再次切片 合成导出。</p></div><div class=\"tab-item-content\" id=\"体积云-3\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">UNITY_LOOP</span><br><span class=\"line\">for (int i = 0; i &lt; RaySteps; ++i)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    float3 currentPos = begin + depth * dir;</span><br><span class=\"line\">    float sdf, density;</span><br><span class=\"line\">    clouds(currentPos, sdf, density);</span><br><span class=\"line\">    // Inside</span><br><span class=\"line\">    if (sdf &lt; 0 &amp;&amp; density &gt; 0)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        //沿着 光源方向，进行二次 RayMarching</span><br><span class=\"line\">        float3 beginPos2 = currentPos;</span><br><span class=\"line\">        float opticalDepth = 0;</span><br><span class=\"line\">        float t2 = 0;</span><br><span class=\"line\">        UNITY_LOOP</span><br><span class=\"line\">        for (int j = 0; j &lt; LightSteps; ++j)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            float3 currentPos2 = beginPos2 + t2 * L;</span><br><span class=\"line\">            float sdf2, density2;</span><br><span class=\"line\">            clouds(currentPos2, sdf2, density2);</span><br><span class=\"line\">            if (sdf2 &lt; 0)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                opticalDepth += LightStep * density2;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            t2 += max(LightStep, sdf2);</span><br><span class=\"line\">            if (any(currentPos2 &lt; -0.5) || any(currentPos2 &gt; 0.5)) break;</span><br><span class=\"line\">            //跑到sdf形状外面去了</span><br><span class=\"line\">            // if(sdf2&gt;0.1) break; </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        // 模拟环境光照</span><br><span class=\"line\">        float3 ambient = 20*_LightColor0 * lerp(_AmbientColor1, _AmbientColor2, (currentPos.y*0.5 + 0.5)) * _AmbientIntensity* lerp(1,density,_AmbientDensity);</span><br><span class=\"line\">        float3 lightEnergy = 20*_LightColor0 * multipleOctaves(opticalDepth, cosTheta) * 3.14 * phase ;</span><br><span class=\"line\">        float3 currentColor = ambient + lightEnergy;</span><br><span class=\"line\"></span><br><span class=\"line\">        float3 transmittance = exp(-step* _Absorption * density);</span><br><span class=\"line\"></span><br><span class=\"line\">        //体积云 最核心的光照算法，就是这两行</span><br><span class=\"line\">        ScatteringResult.xyz += currentColor * (1.0 - transmittance) * ScatteringResult.w;</span><br><span class=\"line\">        ScatteringResult.w *= transmittance;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    // 每次至少向前步进的距离</span><br><span class=\"line\">    depth += max(sdf, step);</span><br><span class=\"line\">    if (any(currentPos &lt; -0.55) || any(currentPos &gt; 0.55)) break;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h2 id=\"动态曲面细分\"><a href=\"#动态曲面细分\" class=\"headerlink\" title=\"动态曲面细分\"></a>动态曲面细分</h2><div class=\"tabs\" id=\"动态曲面细分\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"动态曲面细分-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"动态曲面细分-2\">细节部分</button><button type=\"button\" class=\"tab \" data-href=\"动态曲面细分-3\">部分源代码展示</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"动态曲面细分-1\"><div class=\"videos\"><div class=\"video\"><video controls preload><source src='https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/Tessellation.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div></div></div><div class=\"tab-item-content\" id=\"动态曲面细分-2\"><p>动态效果</p>\n<ol>\n<li>初始化（Start方法）<ul>\n<li>脚本在开始时首先通过<code>Camera.main</code>获取主摄像机的引用，并存储在<code>mainCamera</code>变量中。</li>\n<li>接着，它调用<code>CreateRT</code>方法来创建三个渲染纹理：<code>TempRT</code>, <code>PrevRT</code>, <code>CurrentRT</code>。这些渲染纹理将用于后续的图像处理和效果应用。</li>\n<li>初始化<code>DrawMat</code>和<code>SnowMat</code>两个材质，并将它们分别与<code>DrawShader</code>和<code>SnowShader</code>着色器相关联。</li>\n<li>最后，它将当前对象的渲染器的纹理设置为<code>CurrentRT</code>，这意味着该对象将显示<code>CurrentRT</code>中的内容。</li>\n</ul>\n</li>\n<li>绘制准备（每帧Update方法之前）<ul>\n<li>在每帧更新之前，系统已经准备好了所有必要的资源，包括摄像机、渲染纹理和着色器材质。</li>\n</ul>\n</li>\n<li>用户交互与绘制（Update方法中的射线检测部分）<ul>\n<li>在每一帧中，脚本首先检查用户是否按下了鼠标左键。</li>\n<li>如果按下，脚本通过<code>mainCamera</code>执行一个从摄像机位置发射并经过鼠标在屏幕上的位置的射线。</li>\n<li>如果这个射线与场景中的任何物体相交（即发生了碰撞），则记录碰撞点的纹理坐标。</li>\n<li>使用记录的纹理坐标和预设的绘制半径，调用<code>DrawAt</code>方法来在<code>CurrentRT</code>的相应位置上“绘制”一个效果（可能是足迹或其他图形）。</li>\n</ul>\n</li>\n<li>图像处理效果（Update方法中的计算部分）<ul>\n<li>紧接着，脚本设置效果的衰减速度（<code>AttenSpeed</code>），这可能影响速度。</li>\n<li>使用<code>SnowMat</code>和两个渲染纹理（<code>PrevRT</code>和<code>CurrentRT</code>）来计算累积效果。这里<code>PrevRT</code>保存了上一帧的状态，而<code>CurrentRT</code>保存了当前帧的状态。</li>\n<li>通过<code>Graphics.Blit</code>方法，将处理后的图像输出到<code>TempRT</code>中，这个临时渲染纹理现在包含了更新后的效果。</li>\n</ul>\n</li>\n<li>渲染纹理交换（Update方法的最后部分）<ul>\n<li>为了在下一帧中保留当前帧的状态，脚本执行一系列渲染纹理的交换操作。</li>\n<li>首先，将<code>TempRT</code>的内容复制到<code>PrevRT</code>中，以便在下一帧中作为上一帧的数据使用。</li>\n<li>然后，将<code>CurrentRT</code>和<code>PrevRT</code>的引用交换，这样<code>CurrentRT</code>现在就包含了最新的效果，而<code>PrevRT</code>保存了前一帧的效果。</li>\n</ul>\n</li>\n<li>渲染与显示<ul>\n<li>随着每帧的更新，对象的渲染器将显示<code>CurrentRT</code>中的内容，这是最新计算出的效果。</li>\n<li>用户将继续看到根据他们的交互效果的累积与消融而动态变化的场景。</li>\n</ul>\n</li>\n</ol></div><div class=\"tab-item-content\" id=\"动态曲面细分-3\"><p>曲面细分步骤</p>\n<ol>\n<li>常量外壳着色器（Constant Hull Shader, <code>ConstantHS</code>）<ul>\n<li>此阶段计算整个曲面的细分级别。它接收原始的控制点（这里是三角形的三个顶点）作为输入，并基于这些控制点计算出一个细分因子（<code>fac</code>）。</li>\n<li>在这个例子中，细分因子是根据纹理采样结果和某些预设参数（如<code>_maxVal</code>, <code>_minVal</code>, <code>_factor</code>）通过<code>smoothstep</code>函数动态计算的。</li>\n<li>计算出细分因子后，它会被应用到三角形的每条边和内部，决定曲面将被细分成多少个小三角形。</li>\n</ul>\n</li>\n<li>外壳着色器（Hull Shader, <code>hullProgram</code>）<ul>\n<li>在常量外壳着色器之后，外壳着色器为每个细分后的控制点（这里是每个原始控制点的细分版本）计算输出数据。</li>\n<li>这个阶段主要为每个控制点准备如世界位置、纹理坐标、法线等必要的插值数据，这些数据将在后续的域着色器中使用。</li>\n</ul>\n</li>\n<li>曲面细分<ul>\n<li>基于常量外壳着色器计算出的细分因子，硬件会执行实际的曲面细分操作，生成更多的三角形来逼近原始曲面。</li>\n</ul>\n</li>\n<li>域着色器（Domain Shader, <code>domainProgram</code>）<ul>\n<li>域着色器运行在细分后的每个小三角形上。它接收由外壳着色器准备的插值数据和细分后小三角形的重心坐标作为输入。</li>\n<li>使用这些输入数据，域着色器计算出每个细分三角形的顶点属性，如位置、纹理坐标、法线等。</li>\n<li>这些顶点属性是通过原始控制点的属性进行线性插值得到的。</li>\n</ul>\n</li>\n<li>几何着色器/光栅化<ul>\n<li>在某些情况下，曲面细分之后可能还会有一个几何着色器阶段，用于进一步处理细分后的几何图形。</li>\n<li>然后，这些几何数据将被光栅化，转换为屏幕空间的像素，以供像素着色器处理。</li>\n</ul>\n</li>\n<li>像素着色器<ul>\n<li>最后，在像素着色器阶段，将处理光栅化后的像素，应用纹理、光照等效果，并最终输出到屏幕上。</li>\n</ul>\n</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//vert顶点程序之后调用，计算细分前的三角形顶点信息</span><br><span class=\"line\">\t\t\tTessOut hullProgram(InputPatch&lt;v2t, 3&gt; i, uint idx : SV_OutputControlPointID)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tTessOut o;</span><br><span class=\"line\">\t\t\t\to.worldPos = i[idx].worldPos;</span><br><span class=\"line\">\t\t\t\to.uv = i[idx].uv;</span><br><span class=\"line\">\t\t\t\to.normalWS = i[idx].normalWS;</span><br><span class=\"line\">\t\t\t\to.normalOS = i[idx].normalOS;</span><br><span class=\"line\">\t\t\t\to.pos = i[idx].pos;</span><br><span class=\"line\">\t\t\t\to.tangent = i[idx].tangent;</span><br><span class=\"line\">\t\t\t\to.bitangent = i[idx].bitangent;</span><br><span class=\"line\">\t\t\t\treturn o;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t//指定每个边的细分段数和内部细分段数</span><br><span class=\"line\">\t\t\tTessParam ConstantHS(InputPatch&lt;v2t, 3&gt; i, uint id : SV_PrimitiveID)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tTessParam o;</span><br><span class=\"line\">\t\t\t\tfloat2 uv =(i[0].uv+i[1].uv+i[2].uv)/3;</span><br><span class=\"line\">\t\t\t\t</span><br><span class=\"line\">\t\t\t\t</span><br><span class=\"line\">\t\t\t\tfloat4 worldPos = (i[0].worldPos + i[1].worldPos + i[2].worldPos) / 3;</span><br><span class=\"line\">\t\t\t\tfloat4 pos = (i[0].pos + i[1].pos + i[2].pos) / 3;//</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\tfloat4 tex = tex2Dlod(_MainTex,float4(uv,0,0))+(1-pos.y);</span><br><span class=\"line\">\t\t\t\t</span><br><span class=\"line\">\t\t\t\tfloat smoothstepResult = smoothstep(_maxVal,_minVal , tex);</span><br><span class=\"line\">\t\t\t\t</span><br><span class=\"line\">\t\t\t\tfloat fac = max((1.0 - smoothstepResult)*_factor, 1);</span><br><span class=\"line\">\t\t\t\t</span><br><span class=\"line\">\t\t\t\t//由于我这里是根据指定的中心点和半径范围来动态算细分段数，所以才有这个计算，不然可以直接指定变量来设置。</span><br><span class=\"line\">\t\t\t\to.EdgeTess[0] = fac;</span><br><span class=\"line\">\t\t\t\to.EdgeTess[1] = fac;</span><br><span class=\"line\">\t\t\t\to.EdgeTess[2] = fac;</span><br><span class=\"line\">\t\t\t\to.InsideTess = fac;</span><br><span class=\"line\">\t\t\t\treturn o;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t//在domainProgram前必须设置domain参数，不然会报错</span><br><span class=\"line\">\t\t\t[domain(&quot;tri&quot;)]</span><br><span class=\"line\">\t\t\t//细分之后，把信息传到frag片段程序</span><br><span class=\"line\">\t\t\tt2f domainProgram(TessParam tessParam, float3 bary : SV_DomainLocation, const OutputPatch&lt;TessOut, 3&gt; i)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tt2f o;\t\t\t\t</span><br><span class=\"line\">\t\t\t\t//线性转换</span><br><span class=\"line\">\t\t\t\to.worldPos = i[0].worldPos * bary.x + i[1].worldPos * bary.y + i[2].worldPos * bary.z;</span><br><span class=\"line\">\t\t\t\to.clipPos = UnityWorldToClipPos(o.worldPos);</span><br><span class=\"line\">\t\t\t\tfloat2 uv = i[0].uv * bary.x + i[1].uv * bary.y + i[2].uv * bary.z;</span><br><span class=\"line\">\t\t\t\to.uv = uv;</span><br><span class=\"line\">\t\t\t\to.pos = i[0].pos* bary.x+ i[1].pos * bary.y + i[2].pos * bary.z;</span><br><span class=\"line\">\t\t\t\to.normalWS = i[0].normalWS* bary.x+ i[1].normalWS * bary.y + i[2].normalWS* bary.z;</span><br><span class=\"line\">\t\t\t\to.normalOS = i[0].normalOS* bary.x+ i[1].normalOS * bary.y + i[2].normalOS* bary.z;</span><br><span class=\"line\">\t\t\t\to.tangent = i[0].tangent* bary.x+ i[1].tangent * bary.y + i[2].tangent* bary.z; </span><br><span class=\"line\">\t\t\t\to.bitangent = i[0].bitangent* bary.x+ i[1].bitangent * bary.y + i[2].bitangent* bary.z;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t\treturn o;</span><br><span class=\"line\">\t\t\t&#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h2 id=\"后处理shader\"><a href=\"#后处理shader\" class=\"headerlink\" title=\"后处理shader\"></a>后处理shader</h2><div class=\"tabs\" id=\"后处理效果\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"后处理效果-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"后处理效果-2\">部分源代码展示</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"后处理效果-1\"><div class=\"tabs\" id=\"后处理效果展示\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"后处理效果展示-1\">黑白漫画效果</button><button type=\"button\" class=\"tab \" data-href=\"后处理效果展示-2\">暗角效果</button><button type=\"button\" class=\"tab \" data-href=\"后处理效果展示-3\">扰动效果</button><button type=\"button\" class=\"tab \" data-href=\"后处理效果展示-4\">油画效果</button><button type=\"button\" class=\"tab \" data-href=\"后处理效果展示-5\">模糊效果</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"后处理效果展示-1\"><p><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240934874.png\" alt=\"2024-4-16 11_10_11\"></p></div><div class=\"tab-item-content\" id=\"后处理效果展示-2\"><p><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240940392.png\" alt=\"2024-4-16 11_10_45\"></p></div><div class=\"tab-item-content\" id=\"后处理效果展示-3\"><p><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240934876.png\" alt=\"2024-4-16 11_10_57\"></p></div><div class=\"tab-item-content\" id=\"后处理效果展示-4\"><p><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240934877.png\" alt=\"2024-4-16 11_11_03\"></p></div><div class=\"tab-item-content\" id=\"后处理效果展示-5\"><p><img src=\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240934878.png\" alt=\"2024-4-16 11_11_13\"></p></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div><div class=\"tab-item-content\" id=\"后处理效果-2\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">float3 Oil(float2 uv)</span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">     float4 normalmap = tex2D(_OilNormalMap,uv);</span><br><span class=\"line\">     UnpackNormal(normalmap);</span><br><span class=\"line\"></span><br><span class=\"line\">     float2 Coloruv = uv + normalmap.xy*_OilIndensity  * 0.01;</span><br><span class=\"line\"></span><br><span class=\"line\">     float3 Color = tex2D(_MainTex,Coloruv);</span><br><span class=\"line\"></span><br><span class=\"line\">     float3 hsv = RGBToHSV(Color);</span><br><span class=\"line\">     Color.rgb = HSVToRGB(hsv + float3(0,0.29,-0.07));</span><br><span class=\"line\"></span><br><span class=\"line\">     // normalmap = pow(normalmap,_OilRange) * _OilIndensity;</span><br><span class=\"line\"></span><br><span class=\"line\">     </span><br><span class=\"line\">     return Color;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> float3 Vague(float2 uv)</span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">     </span><br><span class=\"line\">     float4 View = float4(0,0,0,0);</span><br><span class=\"line\"></span><br><span class=\"line\">     for(int x = -_VagueLevel;x &lt;=_VagueLevel;x++)</span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         for(int y = -_VagueLevel;y&lt;=_VagueLevel;y++)</span><br><span class=\"line\">         &#123;</span><br><span class=\"line\">             float2 offset = float2(x*_VagueScale,y*_VagueScale)*0.001;</span><br><span class=\"line\">             View += tex2D(_MainTex,uv + offset);</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     View /= (_VagueLevel * 2 +1) * (_VagueLevel * 2 + 1);</span><br><span class=\"line\"></span><br><span class=\"line\">     return View.xyz;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> float3 Cartoon(float2 uv)</span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">     float2 Cartoonuv = uv;</span><br><span class=\"line\"></span><br><span class=\"line\">     Cartoonuv = Cartoonuv*_NoisePowScaleUVScale.z;</span><br><span class=\"line\">     </span><br><span class=\"line\">     float3 Color = tex2D(_MainTex,uv);</span><br><span class=\"line\">     float3 Noise = tex2D(_NoiseMap,Cartoonuv);</span><br><span class=\"line\">     </span><br><span class=\"line\">  </span><br><span class=\"line\">     Noise = pow(Noise,_NoisePowScaleUVScale.x)*_NoisePowScaleUVScale.y;</span><br><span class=\"line\">     if(_ChangeLight)</span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         Color  =  Color+Noise;</span><br><span class=\"line\">         Color = Color.r &gt; Luminance(_luminanceVale);                    </span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     else</span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         if(Color.r &lt;  Luminance(_luminanceVale))</span><br><span class=\"line\">         &#123;</span><br><span class=\"line\">             Color += Noise;</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">             </span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">             </span><br><span class=\"line\">     return Color.r;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> float3 DackCorner(float2 uv)</span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">     float3 Color = tex2D(_MainTex,uv);</span><br><span class=\"line\">     float2 Center=float2(0.5,0.5);</span><br><span class=\"line\">     </span><br><span class=\"line\"></span><br><span class=\"line\">     float Range = saturate(_DackRange - distance(Center,uv));</span><br><span class=\"line\"></span><br><span class=\"line\">     Range = saturate(pow(Range,_DackPowScale.x) * _DackPowScale.y);</span><br><span class=\"line\"></span><br><span class=\"line\">     return Color*Range;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> float3 Disturbance(float2 uv)</span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">     </span><br><span class=\"line\">   </span><br><span class=\"line\">     float3 disturbancemap = tex2D(_DisturbanceMap,(uv + float2(_DisturbanceDirecter.x,_DisturbanceDirecter.y)*_Time*_DisturbanceSpeed) *_DisturbanceIndensity*0.01);</span><br><span class=\"line\">     </span><br><span class=\"line\">     float2 disturbanceuv;</span><br><span class=\"line\">     disturbanceuv = uv + _DisturbanceRange*disturbancemap;</span><br><span class=\"line\"></span><br><span class=\"line\">     float3 Color = tex2D(_MainTex,disturbanceuv);</span><br><span class=\"line\"></span><br><span class=\"line\">     return Color;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h2 id=\"水墨风格shader\"><a href=\"#水墨风格shader\" class=\"headerlink\" title=\"水墨风格shader\"></a>水墨风格shader</h2><div class=\"tabs\" id=\"水墨风格片\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"水墨风格片-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"水墨风格片-2\">细节部分</button><button type=\"button\" class=\"tab \" data-href=\"水墨风格片-3\">部分源代码展示</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"水墨风格片-1\"><div class=\"videos\"><div class=\"video\"><video controls preload><source src='https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/Ink.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div></div></div><div class=\"tab-item-content\" id=\"水墨风格片-2\"><ol>\n<li>处理光照信息<ul>\n<li>首先，对输入的法线进行归一化。</li>\n<li>获取场景中的主光源信息，包括光源方向和阴影衰减。</li>\n</ul>\n</li>\n<li>应用噪声扰动<ul>\n<li>使用噪声纹理（<code>_InteriorNoise</code>）对输入的纹理坐标进行扰动，得到一个噪声值。</li>\n<li>结合另一个纹理（<code>_StrokeTex</code>）和一些调整参数，对原始的纹理坐标进行修改，得到一个新的坐标。</li>\n</ul>\n</li>\n<li>限制坐标范围<ul>\n<li>确保新坐标的值不超过某个上限（如0.95），并进行范围限制，使其在0到1之间。</li>\n</ul>\n</li>\n<li>执行高斯模糊<ul>\n<li>初始化一个用于累加的颜色变量。</li>\n<li>在新坐标周围按照高斯分布采样一个颜色纹理（<code>_Ramp</code>），对每个采样点的颜色进行加权累加，以实现模糊效果。</li>\n</ul>\n</li>\n<li>合成最终颜色<ul>\n<li>将高斯模糊后的颜色作为最终的颜色输出（在这个特定的代码版本中，阴影效果被注释掉了，所以不考虑阴影衰减）。</li>\n</ul>\n</li>\n</ol></div><div class=\"tab-item-content\" id=\"水墨风格片-3\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">float4 burn = tex2D(_InteriorNoise, i.uv);</span><br><span class=\"line\">// a little bit disturbance on normal vector</span><br><span class=\"line\">float diff =  dot(worldNormal, worldLightDir);</span><br><span class=\"line\">diff = pow((diff * 0.5 + 0.5),_darkPow);</span><br><span class=\"line\">float2 k = tex2D(_StrokeTex, i.uv).xy;</span><br><span class=\"line\">float2 cuv = float2(diff, diff) + k * burn.xy * _InteriorNoiseLevel;</span><br><span class=\"line\">// return burn;</span><br><span class=\"line\"></span><br><span class=\"line\">// This iniminate the bias of the uv movement?</span><br><span class=\"line\">if (cuv.x &gt; 0.95)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  cuv.x = 0.95;</span><br><span class=\"line\">  cuv.y = 1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">if (cuv.y &gt;  0.95)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  cuv.x = 0.95;</span><br><span class=\"line\">  cuv.y = 1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">cuv = clamp(cuv, 0, 1);</span><br><span class=\"line\"></span><br><span class=\"line\">//Guassian Blur</span><br><span class=\"line\">float4 sum = float4(0.0, 0.0, 0.0, 0.0);</span><br><span class=\"line\">        float2 tc = cuv;</span><br><span class=\"line\">        //blur radius in pixels</span><br><span class=\"line\">        float blur = radius/resolution/4;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h2 id=\"风格化水面\"><a href=\"#风格化水面\" class=\"headerlink\" title=\"风格化水面\"></a>风格化水面</h2><div class=\"tabs\" id=\"风格化水面\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"风格化水面-1\">渲染效果</button><button type=\"button\" class=\"tab \" data-href=\"风格化水面-2\">细节部分</button><button type=\"button\" class=\"tab \" data-href=\"风格化水面-3\">部分源代码展示</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"风格化水面-1\"><div class=\"videos\"><div class=\"video\"><video controls preload><source src='https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/Water.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div></div>\n\n<div class=\"gallery-container\" data-type=\"data\" data-button=\"\">\n      <div class=\"gallery-data\">[{\"url\":\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240934879.png\",\"alt\":\"2024-4-24 9_05_55\"},{\"url\":\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240934880.png\",\"alt\":\"2024-4-24 9_08_51\"},{\"url\":\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240934881.png\",\"alt\":\"2024-4-24 9_09_09\"},{\"url\":\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240934882.png\",\"alt\":\"2024-4-24 9_13_36\"},{\"url\":\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240934883.png\",\"alt\":\"2024-4-24 9_13_55\"},{\"url\":\"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202404240934884.png\",\"alt\":\"2024-4-24 9_14_29\"}]</div>\n      <div class=\"gallery-items\">\n      </div>\n    </div></div><div class=\"tab-item-content\" id=\"风格化水面-2\"><p>波浪效果</p>\n<ul>\n<li><p>通过引入时间依赖的扰动函数，在顶点着色器中动态调整顶点位置，创造出逼真的波浪起伏效果。</p>\n<p>反射效果</p>\n</li>\n<li><p>利用屏幕空间反射（SSR）或平面反射（PR）技术，实现水面上的高质量反射。通过添加适当的模糊效果，进一步提升SSR的视觉效果，增加场景深度感。</p>\n<p>泡沫、涟漪与焦散</p>\n</li>\n<li><p>应用焦散贴图，模拟光线折射和反射效果，形成焦散光斑。同时，通过动态调整贴图的UV坐标，增添生动的泡沫和涟漪效果。</p>\n</li>\n</ul>\n<p>光照效果</p>\n<ul>\n<li>采用Half Lambert光照模型增强漫反射效果。</li>\n<li>结合Blinn-Phong高光模型，模拟真实的高光反射，提升水面的视觉质感。</li>\n</ul></div><div class=\"tab-item-content\" id=\"风格化水面-3\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> //===================== Foam 边缘水花=======================================================================</span><br><span class=\"line\">#ifdef USE_FOAM</span><br><span class=\"line\">    // return _NoiseMap.Sample(sampler_NoiseMap,  input.positionWS.xz*0.1 + float2(_Time.x*2,0));</span><br><span class=\"line\">    float foamDistance = 1- saturate(depthDistance/2);</span><br><span class=\"line\">    //从中间往 岸边动</span><br><span class=\"line\">    float foamDynamic = 0.5* step( _FoamWidth,frac(foamDistance - _Time.y*0.1*_FoamSpeed + noise.r*0.0325)) * foamDistance*foamDistance;</span><br><span class=\"line\"></span><br><span class=\"line\">    //浪花衰减</span><br><span class=\"line\">    foamDynamic = _EnableDynamicFoam*foamDynamic* smoothstep( _FoamFadeDistance ,1,foamDistance);</span><br><span class=\"line\">    float foamStatic =  0.5 *step( _FoamWidth,frac(foamDistance  + noise.r*0.03525)) * foamDistance*foamDistance;</span><br><span class=\"line\">    float foam = max(foamDynamic,foamStatic);</span><br><span class=\"line\"></span><br><span class=\"line\">    //加点噪音举出</span><br><span class=\"line\">    float foamNoise = SAMPLE_TEXTURE2D(_FoamNoiseMap, sampler_FoamNoiseMap,positionWS.xz*_FoamNoiseMap_ST.xy);</span><br><span class=\"line\">    foamNoise = saturate( pow(foamNoise,_FoamNoisePowScaleVec.x) *_FoamNoisePowScaleVec.y);</span><br><span class=\"line\"></span><br><span class=\"line\">    finalColor += foam*LightLum*_FoamColor*foamNoise* saturate(dot(N,V));</span><br><span class=\"line\"></span><br><span class=\"line\">#endif</span><br><span class=\"line\"></span><br><span class=\"line\">//===================== Caustic 模拟焦散 =================================</span><br><span class=\"line\">//用深度图的世界坐标采样 CausticMap 模拟其在水中晃动的感觉</span><br><span class=\"line\">//贴图焦散</span><br><span class=\"line\"></span><br><span class=\"line\">#ifndef  USE_PROCEDURAL_CAUSTIC</span><br><span class=\"line\">    float4 caustic = SAMPLE_TEXTURE2D(_CausticMap, sampler_CausticMap, depthWorldPosition.xz*0.2*_CausticMap_ST.xy+distortionUV*5);</span><br><span class=\"line\">    // float4 caustic = SAMPLE_TEXTURE2D(_CausticMap, sampler_CausticMap, positionWS.xz*0.2*_CausticMap_ST.xy+distortionUV*5);</span><br><span class=\"line\">#else</span><br><span class=\"line\">//程序化焦散</span><br><span class=\"line\">    float4 caustic =GetCaustic(depthWorldPosition*0.4*_CausticUVScale+distortionUV.xyy*5 + float3(0,_Time.x,0)).xyzz;</span><br><span class=\"line\">#endif</span><br><span class=\"line\"></span><br><span class=\"line\">caustic *= smoothstep(_CausticFade,1, (1-distortionDistanceFade) )*_CausticIntensity*NL01;</span><br><span class=\"line\">finalColor += caustic*LightLum* mainLight.shadowAttenuation;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h2 id=\"森林遗迹\"><a href=\"#森林遗迹\" class=\"headerlink\" title=\"森林遗迹\"></a>森林遗迹</h2><div class=\"tabs\" id=\"森林遗迹\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"森林遗迹-1\">渲染效果</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"森林遗迹-1\"><div class=\"videos\"><div class=\"video\"><video controls preload><source src='https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/VideoPass/forest.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div></div></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n<h2 id=\"工具脚本制作\"><a href=\"#工具脚本制作\" class=\"headerlink\" title=\"工具脚本制作\"></a>工具脚本制作</h2><div class=\"tabs\" id=\"视差卡片\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"视差卡片-1\">mesh合并工具</button><button type=\"button\" class=\"tab \" data-href=\"视差卡片-2\">3D贴图制作工具</button><button type=\"button\" class=\"tab \" data-href=\"视差卡片-3\">动态贴图制作工具</button><button type=\"button\" class=\"tab \" data-href=\"视差卡片-4\">镜子工具</button><button type=\"button\" class=\"tab \" data-href=\"视差卡片-5\">运镜工具</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"视差卡片-1\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class MeshMergerEditor : EditorWindow  </span><br><span class=\"line\">&#123;  </span><br><span class=\"line\">    [MenuItem(&quot;Tools/Merge Meshes&quot;)]  </span><br><span class=\"line\">    private static void MergeSelectedMeshes()  </span><br><span class=\"line\">    &#123;  </span><br><span class=\"line\">        // 获取当前选中的GameObject  </span><br><span class=\"line\">        GameObject[] selectedObjects = Selection.gameObjects;  </span><br><span class=\"line\">        List&lt;Mesh&gt; meshesToMerge = new List&lt;Mesh&gt;();  </span><br><span class=\"line\">  </span><br><span class=\"line\">        // 遍历选中的GameObject，获取它们的MeshFilter组件中的网格  </span><br><span class=\"line\">        foreach (GameObject obj in selectedObjects)  </span><br><span class=\"line\">        &#123;  </span><br><span class=\"line\">            MeshFilter meshFilter = obj.GetComponent&lt;MeshFilter&gt;();  </span><br><span class=\"line\">            if (meshFilter != null)  </span><br><span class=\"line\">            &#123;  </span><br><span class=\"line\">                meshesToMerge.Add(meshFilter.sharedMesh);  </span><br><span class=\"line\">            &#125;  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">        // 如果没有选中任何网格或者选中的GameObject没有MeshFilter组件，则返回  </span><br><span class=\"line\">        if (meshesToMerge.Count == 0)  </span><br><span class=\"line\">        &#123;  </span><br><span class=\"line\">            Debug.LogError(&quot;No meshes selected to merge.&quot;);  </span><br><span class=\"line\">            return;  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">        // Prepare combine instances  </span><br><span class=\"line\">        CombineInstance[] combineInstances = new CombineInstance[meshesToMerge.Count];  </span><br><span class=\"line\">        for (int i = 0; i &lt; meshesToMerge.Count; i++)  </span><br><span class=\"line\">        &#123;  </span><br><span class=\"line\">            combineInstances[i].mesh = meshesToMerge[i];  </span><br><span class=\"line\">            combineInstances[i].transform = Matrix4x4.identity;  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">        // Create a new mesh to hold the combined meshes  </span><br><span class=\"line\">        Mesh combinedMesh = new Mesh();  </span><br><span class=\"line\">        combinedMesh.CombineMeshes(combineInstances);  </span><br><span class=\"line\">        combinedMesh.name = &quot;MergedMesh_&quot; + System.DateTime.Now.ToString(&quot;yyyyMMddHHmmss&quot;);  </span><br><span class=\"line\">  </span><br><span class=\"line\">        // Create a new GameObject to hold the merged mesh  </span><br><span class=\"line\">        GameObject mergedMeshObject = new GameObject(&quot;MergedMeshObject&quot;);  </span><br><span class=\"line\">        mergedMeshObject.AddComponent&lt;MeshFilter&gt;().mesh = combinedMesh;  </span><br><span class=\"line\">        mergedMeshObject.AddComponent&lt;MeshRenderer&gt;(); // Optionally add a MeshRenderer  </span><br><span class=\"line\">  </span><br><span class=\"line\">        // Place the merged mesh object at the world origin by default  </span><br><span class=\"line\">        mergedMeshObject.transform.position = Vector3.zero;  </span><br><span class=\"line\">  </span><br><span class=\"line\">        // Select the new merged mesh object in the Hierarchy view  </span><br><span class=\"line\">        Selection.activeObject = mergedMeshObject;  </span><br><span class=\"line\">  </span><br><span class=\"line\">        // Optionally, you can save the mesh as an asset  </span><br><span class=\"line\">        string path = EditorUtility.SaveFilePanel(&quot;Save Merged Mesh&quot;, &quot;&quot;, combinedMesh.name + &quot;.mesh&quot;, &quot;mesh&quot;);  </span><br><span class=\"line\">        if (!string.IsNullOrEmpty(path))  </span><br><span class=\"line\">        &#123;  </span><br><span class=\"line\">            AssetDatabase.CreateAsset(combinedMesh, path);  </span><br><span class=\"line\">            AssetDatabase.SaveAssets();  </span><br><span class=\"line\">            AssetDatabase.Refresh();  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div><div class=\"tab-item-content\" id=\"视差卡片-2\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">using System;</span><br><span class=\"line\">using System.Collections;</span><br><span class=\"line\">using System.Collections.Generic;</span><br><span class=\"line\">using UnityEditor;</span><br><span class=\"line\">using UnityEngine;</span><br><span class=\"line\">[ExecuteInEditMode]</span><br><span class=\"line\">public class Render3DTexture : MonoBehaviour &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    public Vector3 Size = Vector3.one;</span><br><span class=\"line\">    public Vector3 Offset = Vector3.zero;</span><br><span class=\"line\"></span><br><span class=\"line\">    public Vector3Int TextureSize = new Vector3Int(256,256,256);</span><br><span class=\"line\"></span><br><span class=\"line\">    private Camera renderCam;</span><br><span class=\"line\"></span><br><span class=\"line\">    private RenderTexture renderTexture;</span><br><span class=\"line\"></span><br><span class=\"line\">    private Texture3D volumeTex;</span><br><span class=\"line\"></span><br><span class=\"line\">    public Material SliceMat;</span><br><span class=\"line\"></span><br><span class=\"line\">    public Material BlurMat;</span><br><span class=\"line\"></span><br><span class=\"line\">    public bool Blur = false;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    //public List&lt;Texture2D&gt; textureArray = new List&lt;Texture2D&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    [Range(0,1.0f)]</span><br><span class=\"line\">    public float ClipValueRange = 0;</span><br><span class=\"line\">    private float ClipValue = -0.5f;</span><br><span class=\"line\">    [Tooltip(&quot;输出路径&quot;)]</span><br><span class=\"line\">    public string OutputPath = &quot;testAsset1.asset&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    /// &lt;summary&gt;</span><br><span class=\"line\">    /// 生成相机</span><br><span class=\"line\">    /// &lt;/summary&gt;</span><br><span class=\"line\">    private void NewCam()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        GameObject cam = new GameObject(&quot;TempCam&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">        cam.transform.position = transform.position + Size.y *0.51f *Vector3.up +Offset;</span><br><span class=\"line\"></span><br><span class=\"line\">        Vector3 localEuler = cam.transform.localEulerAngles;</span><br><span class=\"line\"></span><br><span class=\"line\">        localEuler.x = 90;</span><br><span class=\"line\">        localEuler.y = 180;</span><br><span class=\"line\"></span><br><span class=\"line\">        cam.transform.localEulerAngles = localEuler;</span><br><span class=\"line\"></span><br><span class=\"line\">        renderCam = cam.AddComponent&lt;Camera&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">        renderCam.orthographic = true;</span><br><span class=\"line\"></span><br><span class=\"line\">        renderCam.orthographicSize = Size.x*0.5f;</span><br><span class=\"line\"></span><br><span class=\"line\">        renderCam.nearClipPlane = 0.0001f;</span><br><span class=\"line\">        renderCam.farClipPlane = 100;</span><br><span class=\"line\"></span><br><span class=\"line\">        renderCam.clearFlags = CameraClearFlags.SolidColor;</span><br><span class=\"line\"></span><br><span class=\"line\">        renderCam.backgroundColor = Color.black;</span><br><span class=\"line\"></span><br><span class=\"line\">        renderTexture = CreateRT(TextureSize.x, TextureSize.z);</span><br><span class=\"line\"></span><br><span class=\"line\">        renderCam.targetTexture = renderTexture;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public void StartRender()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        NewCam();</span><br><span class=\"line\"></span><br><span class=\"line\">        volumeTex = new Texture3D(TextureSize.x, TextureSize.y, TextureSize.z,TextureFormat.RFloat,false);</span><br><span class=\"line\"></span><br><span class=\"line\">        RenderSlice();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public void RenderSlice()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        //渲染范围</span><br><span class=\"line\">        Vector3 center = transform.position;</span><br><span class=\"line\">        float min = -Size.y * 0.5f + Offset.y + center.y;</span><br><span class=\"line\">        float max = Size.y * 0.5f + Offset.y + center.y;</span><br><span class=\"line\"></span><br><span class=\"line\">        ClipValue = min;</span><br><span class=\"line\"></span><br><span class=\"line\">        Color[] colors = new Color[TextureSize.x * TextureSize.y * TextureSize.z];</span><br><span class=\"line\"></span><br><span class=\"line\">        int layerCount = TextureSize.x * TextureSize.z;</span><br><span class=\"line\"></span><br><span class=\"line\">        for (int layer = 0; layer &lt; TextureSize.y; layer++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            renderCam.Render();</span><br><span class=\"line\"></span><br><span class=\"line\">            ClipValue += (max - min) / TextureSize.y;</span><br><span class=\"line\"></span><br><span class=\"line\">            float progress = (float)layer / TextureSize.y;</span><br><span class=\"line\"></span><br><span class=\"line\">            bool isCancel = EditorUtility.DisplayCancelableProgressBar(&quot;正在执行..&quot;,string.Format(&quot;生成3DTexture中... &#123;0:f2&#125;%&quot;, progress*100), progress);</span><br><span class=\"line\"></span><br><span class=\"line\">            if (SliceMat != null)SliceMat.SetFloat(&quot;_ClipValue&quot;, ClipValue);</span><br><span class=\"line\"></span><br><span class=\"line\">            Texture2D sliceTex = RenderTexture2Texture2D(renderTexture);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            int index = 0;</span><br><span class=\"line\">            //拷贝颜色</span><br><span class=\"line\">            for (int z = 0; z &lt; TextureSize.z; z++)</span><br><span class=\"line\">                for (int x = 0; x &lt; TextureSize.x; x++)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    //XY -&gt;XZ</span><br><span class=\"line\">                    index = x + z * TextureSize.y * TextureSize.x+layer* TextureSize.x;</span><br><span class=\"line\">                    colors[index] = sliceTex.GetPixel(x, z);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            //渲染完成或者取消时关闭进度条</span><br><span class=\"line\">            if (layer &gt;= TextureSize.y - 1 || isCancel)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                EditorUtility.ClearProgressBar();</span><br><span class=\"line\"></span><br><span class=\"line\">                if (isCancel)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    DestroyImmediate(renderCam.gameObject);</span><br><span class=\"line\">                    renderTexture.Release();</span><br><span class=\"line\"></span><br><span class=\"line\">                    return;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        volumeTex.SetPixels(colors);</span><br><span class=\"line\">        volumeTex.Apply();</span><br><span class=\"line\">        if (Blur)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            volumeTex = BlurTexture(volumeTex);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        string filePath = &quot;Assets/&quot;+ OutputPath;</span><br><span class=\"line\">        try</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            AssetDatabase.DeleteAsset(filePath);</span><br><span class=\"line\">            AssetDatabase.CreateAsset(volumeTex, filePath);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        catch (Exception ex)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Debug.LogError(ex.Message);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        DestroyImmediate(renderCam.gameObject);</span><br><span class=\"line\">        renderTexture.Release();</span><br><span class=\"line\">        renderTexture = null;</span><br><span class=\"line\">        UnityEditor.AssetDatabase.SaveAssets();</span><br><span class=\"line\">        AssetDatabase.Refresh();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    /// &lt;summary&gt;</span><br><span class=\"line\">    /// Renderer转成Texture2D</span><br><span class=\"line\">    /// &lt;/summary&gt;</span><br><span class=\"line\">    /// &lt;param name=&quot;rt&quot;&gt;&lt;/param&gt;</span><br><span class=\"line\">    /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class=\"line\">    public Texture2D RenderTexture2Texture2D(RenderTexture rt)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        RenderTexture preRT = RenderTexture.active;</span><br><span class=\"line\">        RenderTexture.active = rt;</span><br><span class=\"line\">        Texture2D tex = new Texture2D(rt.width, rt.height, TextureFormat.ARGB32, false);</span><br><span class=\"line\">        tex.ReadPixels(new Rect(0, 0, rt.width, rt.height), 0, 0);</span><br><span class=\"line\">        tex.Apply();</span><br><span class=\"line\">        RenderTexture.active = preRT;</span><br><span class=\"line\">        return tex;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public void OnDrawGizmos()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Gizmos.DrawWireCube(this.transform.position+Offset, Size);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public void OnDestory()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        renderTexture.Release();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public Texture3D BlurTexture(Texture3D tex)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        for (int i = 0; i &lt; 2; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Color[] colors = new Color[TextureSize.x * TextureSize.y * TextureSize.z];</span><br><span class=\"line\"></span><br><span class=\"line\">            int index = 0;</span><br><span class=\"line\"></span><br><span class=\"line\">            for (int layer = 0; layer &lt; TextureSize.y; layer++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                BlurMat.SetTexture(&quot;_VolumeTex&quot;, tex);</span><br><span class=\"line\">                BlurMat.SetFloat(&quot;_offset&quot;, layer * 1.0f / TextureSize.y);</span><br><span class=\"line\">                Debug.Log(layer * 1.0f / TextureSize.y);</span><br><span class=\"line\"></span><br><span class=\"line\">                RenderTexture rt = new RenderTexture(TextureSize.x, TextureSize.z, 24, RenderTextureFormat.ARGB32);</span><br><span class=\"line\"></span><br><span class=\"line\">                Graphics.Blit(null, rt, BlurMat);</span><br><span class=\"line\"></span><br><span class=\"line\">                Texture2D sliceTex = RenderTexture2Texture2D(rt);</span><br><span class=\"line\"></span><br><span class=\"line\">                //拷贝颜色</span><br><span class=\"line\">                for (int z = 0; z &lt; TextureSize.z; z++)</span><br><span class=\"line\">                    for (int x = 0; x &lt; TextureSize.x; x++)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        //XY -&gt;XZ</span><br><span class=\"line\">                        index = x + z * TextureSize.y * TextureSize.x + layer * TextureSize.x;</span><br><span class=\"line\">                        colors[index] = sliceTex.GetPixel(x, z);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            tex.SetPixels(colors);</span><br><span class=\"line\">            tex.Apply();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return tex;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    private RenderTexture CreateRT(int width, int height)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        RenderTexture rt = new RenderTexture(width, height, 16);</span><br><span class=\"line\">        rt.format = RenderTextureFormat.ARGBFloat;</span><br><span class=\"line\">        rt.wrapMode = TextureWrapMode.Repeat;</span><br><span class=\"line\">        rt.filterMode = FilterMode.Point;</span><br><span class=\"line\">        rt.Create();</span><br><span class=\"line\">        return rt;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    private void Update()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if (SliceMat == null)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            SliceMat = GetComponent&lt;Renderer&gt;().sharedMaterial;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if (SliceMat != null)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            float min = -Size.y * 0.5f + Offset.y+transform.position.y;</span><br><span class=\"line\">            float max = Size.y * 0.5f + Offset.y +transform.position.y;</span><br><span class=\"line\">            float value = Mathf.Lerp(min, max, ClipValueRange);</span><br><span class=\"line\">            SliceMat.SetFloat(&quot;_ClipValue&quot;, value);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div><div class=\"tab-item-content\" id=\"视差卡片-3\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">using System.Collections;</span><br><span class=\"line\">using System.Collections.Generic;</span><br><span class=\"line\">using Palmmedia.ReportGenerator.Core.Parser.Analysis;</span><br><span class=\"line\">using UnityEngine;</span><br><span class=\"line\"></span><br><span class=\"line\">public class Interactive : MonoBehaviour</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    public Camera mainCamera;</span><br><span class=\"line\"></span><br><span class=\"line\">    public RenderTexture TempRT;</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    public Shader DrawShader;</span><br><span class=\"line\"></span><br><span class=\"line\">    private Material DrawMat;</span><br><span class=\"line\">    public int TextureSize = 512;</span><br><span class=\"line\"></span><br><span class=\"line\">    [Range(0,1.0f)]</span><br><span class=\"line\">    public float DrawRadius = 0.5f;</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\">    public RenderTexture PrevRT;//上一帧RT</span><br><span class=\"line\">    //public RenderTexture CurrentRT;//当前帧RT</span><br><span class=\"line\">    public RenderTexture CurrentRT;</span><br><span class=\"line\">    public Shader SnowShader;</span><br><span class=\"line\">    private Material SnowMat;</span><br><span class=\"line\">        </span><br><span class=\"line\">    [Range(0,1)]</span><br><span class=\"line\">    public float AttenSpeed = 0.5f;</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    // Start is called before the first frame update</span><br><span class=\"line\">    void Start()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        mainCamera = Camera.main.GetComponent&lt;Camera&gt;();</span><br><span class=\"line\">        CurrentRT = CreateRT();</span><br><span class=\"line\">        PrevRT = CreateRT();</span><br><span class=\"line\">        TempRT = CreateRT();</span><br><span class=\"line\"></span><br><span class=\"line\">        DrawMat = new Material(DrawShader);</span><br><span class=\"line\">        SnowMat = new Material(SnowShader);</span><br><span class=\"line\"></span><br><span class=\"line\">        GetComponent&lt;Renderer&gt;().material.mainTexture = CurrentRT;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public RenderTexture CreateRT()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        RenderTexture rt = new RenderTexture(TextureSize, TextureSize, 0, RenderTextureFormat.RFloat);</span><br><span class=\"line\">        rt.Create();</span><br><span class=\"line\">        return rt;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    private void DrawAt(float x,float y, float radius)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        //原来的贴图</span><br><span class=\"line\">        DrawMat.SetTexture(&quot;_SourceTex&quot;,CurrentRT);</span><br><span class=\"line\">        //绘制的大小和位置</span><br><span class=\"line\">        DrawMat.SetVector(&quot;_Pos&quot;,new Vector4(x,y,radius));</span><br><span class=\"line\">        //输出</span><br><span class=\"line\">        Graphics.Blit(null,TempRT,DrawMat);</span><br><span class=\"line\">        //进行交换</span><br><span class=\"line\">        RenderTexture rt = TempRT;</span><br><span class=\"line\">        TempRT = CurrentRT;</span><br><span class=\"line\">        CurrentRT = rt;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    // Update is called once per frame</span><br><span class=\"line\">    void Update()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Shader.SetGlobalFloat(&quot;_AttenSpeed&quot;,AttenSpeed);</span><br><span class=\"line\">        //射线检测</span><br><span class=\"line\">        if (Input.GetMouseButton(0))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //鼠标左键按下时进行检测</span><br><span class=\"line\">            Ray ray = mainCamera.ScreenPointToRay(Input.mousePosition);</span><br><span class=\"line\">            //获取碰撞信息</span><br><span class=\"line\">            RaycastHit hit;</span><br><span class=\"line\">            if (Physics.Raycast(ray,out hit))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                //绘制</span><br><span class=\"line\">                DrawAt(hit.textureCoord.x, hit.textureCoord.y, DrawRadius);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        //计算</span><br><span class=\"line\">        SnowMat.SetTexture(&quot;_PrevRT&quot;,PrevRT);</span><br><span class=\"line\">        SnowMat.SetTexture(&quot;_CurrentRT&quot;,CurrentRT);</span><br><span class=\"line\">        Graphics.Blit(null,TempRT,SnowMat);</span><br><span class=\"line\">        //交换RT</span><br><span class=\"line\">        Graphics.Blit(TempRT,PrevRT);</span><br><span class=\"line\">        RenderTexture rt = PrevRT;</span><br><span class=\"line\">        PrevRT = CurrentRT;</span><br><span class=\"line\">        CurrentRT = rt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div><div class=\"tab-item-content\" id=\"视差卡片-4\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">using System;</span><br><span class=\"line\">using System.Collections;</span><br><span class=\"line\">using System.Collections.Generic;</span><br><span class=\"line\">using UnityEngine;</span><br><span class=\"line\">using UnityEngine.Rendering;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[ExecuteInEditMode]</span><br><span class=\"line\">public class PlanarReflection : MonoBehaviour &#123;</span><br><span class=\"line\">    public LayerMask _reflectionMask = -1;</span><br><span class=\"line\">    public bool _reflectSkybox = false;</span><br><span class=\"line\">    Color _clearColor = Color.black;</span><br><span class=\"line\">    public int m_TextureSize = 1024;</span><br><span class=\"line\"></span><br><span class=\"line\">    const string _reflectionSampler = &quot;_ReflectionTex&quot;;</span><br><span class=\"line\">    public float _clipPlaneOffset = 0.07F;</span><br><span class=\"line\"></span><br><span class=\"line\">    Vector3 _oldpos;</span><br><span class=\"line\">    Camera _reflectionCamera;</span><br><span class=\"line\">    RenderTexture _bluredReflectionTexture;</span><br><span class=\"line\">    Material _sharedMaterial;</span><br><span class=\"line\"></span><br><span class=\"line\">    public bool _blurOn = true;</span><br><span class=\"line\"></span><br><span class=\"line\">       </span><br><span class=\"line\"></span><br><span class=\"line\">    [Range(0.0f, 5.0f)]</span><br><span class=\"line\">    public float _blurSize = 1;</span><br><span class=\"line\">    public int _blurIterations = 2;</span><br><span class=\"line\">    public float _downsample = 1;</span><br><span class=\"line\"></span><br><span class=\"line\">#if UNITY_EDITOR</span><br><span class=\"line\">    bool _oldBlurOn;</span><br><span class=\"line\">    float _oldBlurSize;</span><br><span class=\"line\">#endif</span><br><span class=\"line\"></span><br><span class=\"line\">    private Shader _blurShader;</span><br><span class=\"line\">    private Material _blurMaterial;</span><br><span class=\"line\"></span><br><span class=\"line\">    private static bool s_InsideWater;</span><br><span class=\"line\">    private RenderTexture rt;</span><br><span class=\"line\"></span><br><span class=\"line\">    Material BlurMaterial &#123;</span><br><span class=\"line\">        get &#123;</span><br><span class=\"line\">            if (_blurMaterial == null) &#123;</span><br><span class=\"line\">                _blurMaterial = new Material(_blurShader);</span><br><span class=\"line\">                return _blurMaterial;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            return _blurMaterial;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">#if UNITY_EDITOR</span><br><span class=\"line\">    void Awake() &#123;</span><br><span class=\"line\">        _oldBlurOn = _blurOn;</span><br><span class=\"line\">        _oldBlurSize = _blurSize;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">#endif</span><br><span class=\"line\"></span><br><span class=\"line\">    void Start() &#123;</span><br><span class=\"line\">        _sharedMaterial = GetComponent&lt;MeshRenderer&gt;().sharedMaterial;</span><br><span class=\"line\">        if (_blurShader == null)</span><br><span class=\"line\">            _blurShader = Shader.Find(&quot;Hidden/SimpleBlur&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    Camera CreateReflectionCameraFor(Camera cam) &#123;</span><br><span class=\"line\">        String reflName = gameObject.name + &quot;Reflection&quot; + cam.name;</span><br><span class=\"line\">        GameObject go = new GameObject(reflName);</span><br><span class=\"line\">        go.hideFlags = HideFlags.HideAndDontSave;</span><br><span class=\"line\">        Camera reflectCamera = go.AddComponent&lt;Camera&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">        reflectCamera.backgroundColor = _clearColor;</span><br><span class=\"line\">        reflectCamera.clearFlags = _reflectSkybox ? CameraClearFlags.Skybox : CameraClearFlags.SolidColor;</span><br><span class=\"line\"></span><br><span class=\"line\">        SetStandardCameraParameter(reflectCamera, _reflectionMask);</span><br><span class=\"line\"></span><br><span class=\"line\">        if (!reflectCamera.targetTexture) &#123;</span><br><span class=\"line\">            reflectCamera.targetTexture = CreateTexture();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        return reflectCamera;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    void SetStandardCameraParameter(Camera cam, LayerMask mask) &#123;</span><br><span class=\"line\">        cam.cullingMask = mask;</span><br><span class=\"line\">        cam.backgroundColor = Color.black;</span><br><span class=\"line\">        cam.enabled = false;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    RenderTexture CreateTexture() &#123;</span><br><span class=\"line\">#if UNITY_EDITOR</span><br><span class=\"line\">        //RenderTexture rt = new RenderTexture(Mathf.FloorToInt(Screen.width), Mathf.FloorToInt(Screen.height * 0.5f), 16);</span><br><span class=\"line\">        rt = new RenderTexture(m_TextureSize, m_TextureSize, 16);</span><br><span class=\"line\">        </span><br><span class=\"line\">#else</span><br><span class=\"line\">        //RenderTexture rt = new RenderTexture(Mathf.FloorToInt(Screen.width * 0.5f), Mathf.FloorToInt(Screen.height * 0.5f), 16);</span><br><span class=\"line\">        RenderTexture rt = new RenderTexture(m_TextureSize,m_TextureSize, 16);</span><br><span class=\"line\"></span><br><span class=\"line\">#endif</span><br><span class=\"line\">        rt.hideFlags = HideFlags.DontSave;</span><br><span class=\"line\">        return rt;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    void OnWillRenderObject() &#123;</span><br><span class=\"line\">        Camera currentCam = Camera.current;</span><br><span class=\"line\">        if (!currentCam) &#123;</span><br><span class=\"line\">            return;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">#if !UNITY_EDITOR</span><br><span class=\"line\">        if (!currentCam.gameObject.CompareTag(&quot;MainCamera&quot;))</span><br><span class=\"line\">            return;</span><br><span class=\"line\">#endif</span><br><span class=\"line\"></span><br><span class=\"line\">#if UNITY_EDITOR</span><br><span class=\"line\">        if (!_bluredReflectionTexture)</span><br><span class=\"line\">            _bluredReflectionTexture = CreateTexture();</span><br><span class=\"line\">#else</span><br><span class=\"line\">        if(_blurOn) &#123;</span><br><span class=\"line\">            if (!_bluredReflectionTexture)</span><br><span class=\"line\">                _bluredReflectionTexture = CreateTexture();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">#endif</span><br><span class=\"line\"></span><br><span class=\"line\">        if (s_InsideWater) &#123;</span><br><span class=\"line\">            return;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        s_InsideWater = true;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        if (!_reflectionCamera) &#123;</span><br><span class=\"line\">            _reflectionCamera = CreateReflectionCameraFor(currentCam);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        RenderReflectionFor(currentCam, _reflectionCamera);</span><br><span class=\"line\"></span><br><span class=\"line\">        if (_reflectionCamera &amp;&amp; _sharedMaterial) &#123;</span><br><span class=\"line\">            if (_blurOn) &#123;</span><br><span class=\"line\">                PostProcessTexture(currentCam, _reflectionCamera.targetTexture, _bluredReflectionTexture);</span><br><span class=\"line\">                _sharedMaterial.SetTexture(_reflectionSampler, _bluredReflectionTexture);</span><br><span class=\"line\">            &#125; else &#123;</span><br><span class=\"line\">                _sharedMaterial.SetTexture(_reflectionSampler, _reflectionCamera.targetTexture);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        s_InsideWater = false;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">#if UNITY_EDITOR</span><br><span class=\"line\">    bool _blurParamChanged;</span><br><span class=\"line\">    void Update() &#123;</span><br><span class=\"line\">        if (_blurParamChanged) &#123;</span><br><span class=\"line\">            _oldBlurOn = _blurOn;</span><br><span class=\"line\">            _oldBlurSize = _blurSize;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        if (_blurOn != _oldBlurOn || _blurSize != _oldBlurSize) &#123;</span><br><span class=\"line\">            _blurParamChanged = true;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">#endif</span><br><span class=\"line\"></span><br><span class=\"line\">    void RenderReflectionFor(Camera cam, Camera reflectCamera) &#123;</span><br><span class=\"line\">        if (!reflectCamera) &#123;</span><br><span class=\"line\">            return;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        if (_sharedMaterial &amp;&amp; !_sharedMaterial.HasProperty(_reflectionSampler)) &#123;</span><br><span class=\"line\">            return;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        reflectCamera.cullingMask = _reflectionMask;</span><br><span class=\"line\"></span><br><span class=\"line\">        SaneCameraSettings(reflectCamera);</span><br><span class=\"line\"></span><br><span class=\"line\">        reflectCamera.backgroundColor = _clearColor;</span><br><span class=\"line\">        reflectCamera.clearFlags = _reflectSkybox ? CameraClearFlags.Skybox : CameraClearFlags.SolidColor;</span><br><span class=\"line\">        if (_reflectSkybox) &#123;</span><br><span class=\"line\">            if (cam.gameObject.GetComponent(typeof(Skybox))) &#123;</span><br><span class=\"line\">                Skybox sb = (Skybox)reflectCamera.gameObject.GetComponent(typeof(Skybox));</span><br><span class=\"line\">                if (!sb) &#123;</span><br><span class=\"line\">                    sb = (Skybox)reflectCamera.gameObject.AddComponent(typeof(Skybox));</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                sb.material = ((Skybox)cam.GetComponent(typeof(Skybox))).material;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        bool isInvertCulling = GL.invertCulling;</span><br><span class=\"line\">        GL.invertCulling = true;</span><br><span class=\"line\"></span><br><span class=\"line\">        Transform reflectiveSurface = transform; //waterHeight;</span><br><span class=\"line\"></span><br><span class=\"line\">        Vector3 eulerA = cam.transform.eulerAngles;</span><br><span class=\"line\"></span><br><span class=\"line\">        reflectCamera.transform.eulerAngles = new Vector3(-eulerA.x, eulerA.y, eulerA.z);</span><br><span class=\"line\">        reflectCamera.transform.position = cam.transform.position;</span><br><span class=\"line\"></span><br><span class=\"line\">        Vector3 pos = reflectiveSurface.transform.position;</span><br><span class=\"line\">        pos.y = reflectiveSurface.position.y;</span><br><span class=\"line\">        Vector3 normal = reflectiveSurface.transform.up;</span><br><span class=\"line\">        float d = -Vector3.Dot(normal, pos) - _clipPlaneOffset;</span><br><span class=\"line\">        Vector4 reflectionPlane = new Vector4(normal.x, normal.y, normal.z, d);</span><br><span class=\"line\"></span><br><span class=\"line\">        Matrix4x4 reflection = Matrix4x4.zero;</span><br><span class=\"line\">        reflection = CalculateReflectionMatrix(reflection, reflectionPlane);</span><br><span class=\"line\">        _oldpos = cam.transform.position;</span><br><span class=\"line\">        Vector3 newpos = reflection.MultiplyPoint(_oldpos);</span><br><span class=\"line\"></span><br><span class=\"line\">        reflectCamera.worldToCameraMatrix = cam.worldToCameraMatrix * reflection;</span><br><span class=\"line\"></span><br><span class=\"line\">        Vector4 clipPlane = CameraSpacePlane(reflectCamera, pos, normal, 1.0f);</span><br><span class=\"line\"></span><br><span class=\"line\">        Matrix4x4 projection = cam.projectionMatrix;</span><br><span class=\"line\">        projection = CalculateObliqueMatrix(projection, clipPlane);</span><br><span class=\"line\">        reflectCamera.projectionMatrix = projection;</span><br><span class=\"line\"></span><br><span class=\"line\">        reflectCamera.transform.position = newpos;</span><br><span class=\"line\">        Vector3 euler = cam.transform.eulerAngles;</span><br><span class=\"line\">        reflectCamera.transform.eulerAngles = new Vector3(-euler.x, euler.y, euler.z);</span><br><span class=\"line\"></span><br><span class=\"line\">        reflectCamera.Render();</span><br><span class=\"line\"></span><br><span class=\"line\">        GL.invertCulling = isInvertCulling;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    void SaneCameraSettings(Camera helperCam) &#123;</span><br><span class=\"line\">        helperCam.depthTextureMode = DepthTextureMode.None;</span><br><span class=\"line\">        helperCam.backgroundColor = Color.black;</span><br><span class=\"line\">        helperCam.clearFlags = CameraClearFlags.SolidColor;</span><br><span class=\"line\">        helperCam.renderingPath = RenderingPath.Forward;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    static Matrix4x4 CalculateObliqueMatrix(Matrix4x4 projection, Vector4 clipPlane) &#123;</span><br><span class=\"line\">        Vector4 q = projection.inverse * new Vector4(</span><br><span class=\"line\">            Sgn(clipPlane.x),</span><br><span class=\"line\">            Sgn(clipPlane.y),</span><br><span class=\"line\">            1.0F,</span><br><span class=\"line\">            1.0F</span><br><span class=\"line\">            );</span><br><span class=\"line\">        Vector4 c = clipPlane * (2.0F / (Vector4.Dot(clipPlane, q)));</span><br><span class=\"line\">        // third row = clip plane - fourth row</span><br><span class=\"line\">        projection[2] = c.x - projection[3];</span><br><span class=\"line\">        projection[6] = c.y - projection[7];</span><br><span class=\"line\">        projection[10] = c.z - projection[11];</span><br><span class=\"line\">        projection[14] = c.w - projection[15];</span><br><span class=\"line\"></span><br><span class=\"line\">        return projection;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    static Matrix4x4 CalculateReflectionMatrix(Matrix4x4 reflectionMat, Vector4 plane) &#123;</span><br><span class=\"line\">        reflectionMat.m00 = (1.0F - 2.0F * plane[0] * plane[0]);</span><br><span class=\"line\">        reflectionMat.m01 = (-2.0F * plane[0] * plane[1]);</span><br><span class=\"line\">        reflectionMat.m02 = (-2.0F * plane[0] * plane[2]);</span><br><span class=\"line\">        reflectionMat.m03 = (-2.0F * plane[3] * plane[0]);</span><br><span class=\"line\"></span><br><span class=\"line\">        reflectionMat.m10 = (-2.0F * plane[1] * plane[0]);</span><br><span class=\"line\">        reflectionMat.m11 = (1.0F - 2.0F * plane[1] * plane[1]);</span><br><span class=\"line\">        reflectionMat.m12 = (-2.0F * plane[1] * plane[2]);</span><br><span class=\"line\">        reflectionMat.m13 = (-2.0F * plane[3] * plane[1]);</span><br><span class=\"line\"></span><br><span class=\"line\">        reflectionMat.m20 = (-2.0F * plane[2] * plane[0]);</span><br><span class=\"line\">        reflectionMat.m21 = (-2.0F * plane[2] * plane[1]);</span><br><span class=\"line\">        reflectionMat.m22 = (1.0F - 2.0F * plane[2] * plane[2]);</span><br><span class=\"line\">        reflectionMat.m23 = (-2.0F * plane[3] * plane[2]);</span><br><span class=\"line\"></span><br><span class=\"line\">        reflectionMat.m30 = 0.0F;</span><br><span class=\"line\">        reflectionMat.m31 = 0.0F;</span><br><span class=\"line\">        reflectionMat.m32 = 0.0F;</span><br><span class=\"line\">        reflectionMat.m33 = 1.0F;</span><br><span class=\"line\"></span><br><span class=\"line\">        return reflectionMat;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    static float Sgn(float a) &#123;</span><br><span class=\"line\">        if (a &gt; 0.0F) &#123;</span><br><span class=\"line\">            return 1.0F;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if (a &lt; 0.0F) &#123;</span><br><span class=\"line\">            return -1.0F;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return 0.0F;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign) &#123;</span><br><span class=\"line\">        Vector3 offsetPos = pos + normal * _clipPlaneOffset;</span><br><span class=\"line\">        Matrix4x4 m = cam.worldToCameraMatrix;</span><br><span class=\"line\">        Vector3 cpos = m.MultiplyPoint(offsetPos);</span><br><span class=\"line\">        Vector3 cnormal = m.MultiplyVector(normal).normalized * sideSign;</span><br><span class=\"line\"></span><br><span class=\"line\">        return new Vector4(cnormal.x, cnormal.y, cnormal.z, -Vector3.Dot(cpos, cnormal));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    private Dictionary&lt;Camera, CommandBuffer&gt; _cameras = new Dictionary&lt;Camera, CommandBuffer&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    void PostProcessTexture(Camera cam, RenderTexture source, RenderTexture dest)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      </span><br><span class=\"line\">#if UNITY_EDITOR</span><br><span class=\"line\">        if (_blurParamChanged)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if (_cameras.ContainsKey(cam))</span><br><span class=\"line\">                cam.RemoveCommandBuffer(CameraEvent.BeforeForwardOpaque, _cameras[cam]);</span><br><span class=\"line\">            _cameras.Remove(cam);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">#endif</span><br><span class=\"line\">       </span><br><span class=\"line\">        if (_cameras.ContainsKey(cam))</span><br><span class=\"line\">            return;</span><br><span class=\"line\"></span><br><span class=\"line\">        CommandBuffer buf = new CommandBuffer();</span><br><span class=\"line\">        buf.name = &quot;Blur Reflection Texture&quot;;</span><br><span class=\"line\">        _cameras[cam] = buf; </span><br><span class=\"line\">        float width = source.width;</span><br><span class=\"line\">        float height = source.height;</span><br><span class=\"line\">        int rtW = Mathf.RoundToInt(width / _downsample);</span><br><span class=\"line\">        int rtH = Mathf.RoundToInt(height / _downsample);</span><br><span class=\"line\"></span><br><span class=\"line\">        int blurredID = Shader.PropertyToID(&quot;_Temp1&quot;);</span><br><span class=\"line\">        int blurredID2 = Shader.PropertyToID(&quot;_Temp2&quot;);</span><br><span class=\"line\">        buf.GetTemporaryRT(blurredID, rtW, rtH, 0, FilterMode.Bilinear, source.format);</span><br><span class=\"line\">        buf.GetTemporaryRT(blurredID2, rtW, rtH, 0, FilterMode.Bilinear, source.format);</span><br><span class=\"line\"></span><br><span class=\"line\">        buf.Blit((Texture)source, blurredID);</span><br><span class=\"line\">        for (int i = 0; i &lt; _blurIterations; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            float iterationOffs = (i * 1.0f);</span><br><span class=\"line\">            buf.SetGlobalFloat(&quot;_Offset&quot;, iterationOffs / _downsample + _blurSize);</span><br><span class=\"line\">            buf.Blit(blurredID, blurredID2, BlurMaterial, 0);</span><br><span class=\"line\">            buf.Blit(blurredID2, blurredID, BlurMaterial, 0);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        buf.Blit(blurredID, dest);</span><br><span class=\"line\"></span><br><span class=\"line\">        buf.ReleaseTemporaryRT(blurredID);</span><br><span class=\"line\">        buf.ReleaseTemporaryRT(blurredID2);</span><br><span class=\"line\"></span><br><span class=\"line\">        cam.AddCommandBuffer(CameraEvent.BeforeForwardOpaque, buf);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div><div class=\"tab-item-content\" id=\"视差卡片-5\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">using System.Collections.Generic;  </span><br><span class=\"line\">using UnityEngine;  </span><br><span class=\"line\">  </span><br><span class=\"line\">public class CameraMovement : MonoBehaviour  </span><br><span class=\"line\">&#123;  </span><br><span class=\"line\">    public List&lt;Transform&gt; pathPoints;  </span><br><span class=\"line\">    public float moveSpeed = 2.0f;  </span><br><span class=\"line\">    public float rotationSpeed = 30.0f;  </span><br><span class=\"line\">    private int currentIndex = 0;  </span><br><span class=\"line\">    private Transform target;  </span><br><span class=\"line\">    private bool isMoving = false;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    private void Start()  </span><br><span class=\"line\">    &#123;  </span><br><span class=\"line\">        if (pathPoints != null &amp;&amp; pathPoints.Count &gt; 0)  </span><br><span class=\"line\">        &#123;  </span><br><span class=\"line\">            target = pathPoints[currentIndex];  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    private void Update()  </span><br><span class=\"line\">    &#123;  </span><br><span class=\"line\">        // 检查是否按下空格键来启动或停止相机运动  </span><br><span class=\"line\">        if (Input.GetKeyDown(KeyCode.Space))  </span><br><span class=\"line\">        &#123;  </span><br><span class=\"line\">            isMoving = !isMoving;  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">        if (!isMoving || target == null) return;  </span><br><span class=\"line\">  </span><br><span class=\"line\">        Vector3 directionToTarget = (target.position - transform.position).normalized;  </span><br><span class=\"line\">        transform.Translate(directionToTarget * moveSpeed * Time.deltaTime, Space.World);  </span><br><span class=\"line\">  </span><br><span class=\"line\">        if (Vector3.Distance(transform.position, target.position) &lt; 0.1f)  </span><br><span class=\"line\">        &#123;  </span><br><span class=\"line\">            currentIndex = (currentIndex + 1) % pathPoints.Count;  </span><br><span class=\"line\">            target = pathPoints[currentIndex];  </span><br><span class=\"line\">  </span><br><span class=\"line\">            Quaternion targetRotation = Quaternion.LookRotation(target.position - transform.position);  </span><br><span class=\"line\">            transform.rotation = Quaternion.RotateTowards(transform.rotation, targetRotation, rotationSpeed * Time.deltaTime);  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n"},{"title":"博客制作","data":"2024-07-02T11:52:54.000Z","updated":"2024-07-01T16:00:00.000Z","description":"ASE基本知识","cover":"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202403191721942.jpg","_content":"\n## 1.获取服务器\n\n可以从阿里云，百度云，腾讯云找一些服务器，也可以找一些私人的服务器\n\n## 2.安装ssh软件\n\n推荐使用mobaxterm，\n\n传输小文件时可以直接拖动\n\n传输大型文件时，推荐使用可以使用sftp协议的软件，例如filezilla，\n\n用户名为root，密码为服务器密码\n\n## 3.安装博客软件hexo\n\n- 第一步：指定node版本 ，curl --silent --location https://rpm.nodesource.com/setup_14.x | sudo bash\n\n- sudo yum install https://rpm.nodesource.com/pub_16.x/nodistro/repo/nodesource-release-nodistro-1.noarch.rpm -y\n  sudo yum install nodejs -y --setopt=nodesource-nodejs.module_hotfixes=1\n\n- 第二步：安装node， sudo yum -y install nodejs\n\n- 第三步：使用npm命令安装hexo， npm install hexo-cli -g\n\n- 第四步：使用hexo创建一个博客系统 hexo init blog\n\n- 第五步：使用，cd blog进入该目录\n\n- 第六步：安装博客系统依赖程序使用，npm install\n\n- 第七步：启动博客系统服务，hexo server或，hexo s               //默认端口为4000，可以使用-p + [端口号]指定端口，\n\n  使用公网ip      网页输入{公网ip}:4000 出现hexo首页即成功\n\n## 4.编写博客内容\n\n下载typora编写.md文件，hexo博客会自动识别文件的内容\n\ntitle: 标题\n\ndata: 日期\n\n使用git 或mobaxterm文件上传博客内容\n\n\n\n\n\n## 5.选择博客主题界面\n\n更改博客主题\n\n### 5.1关于next\n\nHexo是一款快速、简洁且高效的博客框架，拥有超快生成速度，支持 Markdown，一键部署和高度可扩展性。\n\nNext 是一个高品质优雅的 Hexo 主题。本文介绍 Next 主题的安装和基本的配置。\n\n### 5.2下载next\n\n执行以下命令\n\ncd themes \n\ngit clone https://github.com/next-theme/hexo-theme-next\n\n### 5.3更改参数配置\n\n打开blog目录下的_config.yml文件\n\n修改主题选择 theme: next  ##注意：theme后面加的是存放主题的文件夹名字\n\n修改语言   language: zh-CN\n\n##### 主题配置\n\n缓存支持\n\nNexT v6+ 允许缓存内容生成。在 NexT 配置文件的 cache 部分设置 enable 为 true:\n\ncache:\n  enable: true\n缩小支持\n\nNexT 允许缩小 Hexo 生成。在 NexT 配置文件中将 minify 值设置为true:\n\nminify: true\n\n**选择 Scheme**\n\nScheme 是 NexT 支持的一个特性，通过使用 Scheme， NexT 可以提供不同的视图\n\n在 Next 配置文件中搜索 scheme 找到配置的位置，然后配置你想要的 scheme。\n\n```\n#scheme: Muse\n#scheme: Mist\nscheme: Pisces\n#scheme: Gemini\n```\n\n##### 自定义 Logo\n\n您可以通过在 NexT 配置文件中将图像的 url 添加到 custom_logo 来启用它。\n\ncustom_logo: /images/logo.jpg\n\nimages 为站点根目录下 source 目录下创建的目录。如果目录不存在请创建它。\n\n##### 自定义头像\n\n您可以通过在 Next 配置文件中，设置 avatar 中的参数来启用它。\n\navatar:\n\nReplace the default image and set the url here.\n\n  url: /images/avatar.jpg\n\nIf true, the avatar will be displayed in circle.\n\n  rounded: false\n\nIf true, the avatar will be rotated with the cursor.\n\n  rotated: false\n\n##### 设置导航菜单\n\n默认情况下，所有菜单项都被注释掉，你可以通过设置 menu 中的参数来启用他。\n\nmenu:\n  home: / || fa fa-home\n  #about: /about/ || fa fa-user\n  #tags: /tags/ || fa fa-tags\n  #categories: /categories/ || fa fa-th\n  archives: /archives/ || fa fa-archive\n  #schedule: /schedule/ || fa fa-calendar\n  #sitemap: /sitemap.xml || fa fa-sitemap\n  #commonweal: /404/ || fa fa-heartbeat\n\n除了主页和存档，菜单部分下的所有自定义页面都需要手动创建。\n\n默认情况下 NexT 显示不带标识的菜单项图标。您可以通过编辑 menu_settings 中的值来配置它。\n\nmenu_settings:\n  icons: true\n  badges: false\n设置值 badges 为 true，则显示菜单项中的 Posts / Categories / Tags 的计数。\n\n## 6.域名绑定\n\n## 7.问题总结\n\n#### 1.hexo启动的网站容易挂掉\n\n在启动目录下使用该命令nohup hexo server -p 4000 &\n\n#### 2.使用screen后台启动blog\n\n###### screen定义：Screen是Linux下的一款远程会话管理工具，可以在多个进程之间多路复用一个物理终端的全屏窗口管理器。\n\n即：screen会保持终端的运行\n\n##### 2.1 CentOS系统安装命令\n\nyum install screen\n\n使用which screen查看是否安装成功\n\n##### 2.2 创建一个screen\n\nscreen -S +[名字]\n\n##### 2.3 查看screen的列表\n\nscreen -ls\n\n##### 2.4 进入screen中\n\nscreen -r +[screen.id]或\n\nscreen -r +[名字]\n\n##### 2.5 从screen界面退出\n\n先按ctrl + a 再按d\n\n##### 2.6 删除screen\n\nscreen -S +[名字] -X quit\n\n##### 2.7 擦除screen\n\n**服务器重启之后**，全部的screen均会挂掉，需要借助擦除命令，将所有挂掉的screen清除掉。\n\n使用命令screen -wipe\n\n#### 3.查看端口是否被占用\n\nlsof -i:4000\n\n#### 4.hexo启动成功，网页拒绝访问\n\n使用阿里云服务器时，按步骤安装并启动了hexo文件，启动成功，但是网页拒绝访问，根据阿里云工具提示http状态问题，所以可能权限有问题。\n\n从网页的控制台中找到安全组，手动添加访问端口（也可以一次性选择全部，相当于添加白名单），保存之后便可以访问hexo网页。\n\n#### 5.第三步一直卡着，不能进行下一步操作\n\n切换为淘宝源即可 ，npm config set registry https://registry.npm.taobao.org\n\n6.使用yum安装失败\n\nError: Failed to download metadata for repo 'appstream': Cannot prepare internal mirrorlist: No URLs in mirrorlist\n\nCentOS 已经停止维护的问题。2020 年 12 月 8 号，CentOS 官方宣布了停止维护 CentOS Linux 的计划，并推出了 CentOS Stream 项目，CentOS Linux 8 作为 RHEL 8 的复刻版本，生命周期缩短，于 2021 年 12 月 31 日停止更新并停止维护（EOL），更多的信息可以查看 CentOS 官方公告。如果需要更新 CentOS，需要将镜像从 mirror.centos.org 更改为 vault.centos.org\n第一步\n\ncd /etc/yum.repos.d/\n\n第二步\n\nsed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-*\nsed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*\n第三步\n\nyum makecache\n\n第四步\n\nyum update -y\n\n\n\n\n\n##### 升级node\n\n[Linux node 安装教程_linux node安装_围城少年的博客-CSDN博客](https://blog.csdn.net/weixin_38201500/article/details/124173797)\n\n#### make的安装\n\n1.先去http://ftp.gnu.org/gnu/make/make-4.2.tar.gz 下载安装包；\n2.进入/usr/local/bin/路径下，把安装包上传；\n3. tar -zxvf make-4.2.tar.gz\ncd make-4.2\n./configure\nmake\nmake install\nln -s -f /usr/local/bin/make-4.2/make /usr/bin/make\n\n\n\n##### glibc安装\n\n安装node的时候出现这些问题缺少依赖库\n\n```\nnode: /lib64/libm.so.6: version `GLIBC_2.27' not found (required by node)\nnode: /lib64/libc.so.6: version `GLIBC_2.25' not found (required by node)\nnode: /lib64/libc.so.6: version `GLIBC_2.28' not found (required by node)\nnode: /lib64/libstdc++.so.6: version `CXXABI_1.3.9' not found (required by node)\nnode: /lib64/libstdc++.so.6: version `GLIBCXX_3.4.20' not found (required by node)\nnode: /lib64/libstdc++.so.6: version `GLIBCXX_3.4.21' not found (required by node)\n```\n\n在这里解决\n\n[Error(25) 解决node: /lib64/libm.so.6: version `GLIBC_2.27‘ not found (required by node)-CSDN博客](https://blog.csdn.net/qq_38225558/article/details/128641561)\n\n\n\n### 一键执行命令\n\n给该行命令添加别名，添加到脚本中长期有效\n\n```\necho \"alias hexos='hexo cl && hexo s -p 80'\" >> ~/.bashrc\n```\n\n重新生效该脚本\n\n```\nsource ~/.bashrc\n```\n\n\n\n\n\n","source":"_posts/制作博客.md","raw":"---\ntitle: 博客制作\ndata: 2024-7-2 19:52:54\nupdated: 2024-7-2\ntags: \n    - Process\n    - ECS云服务器\n    - Blog\ncategories: Process\ndescription: ASE基本知识\ncover: https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202403191721942.jpg\n---\n\n## 1.获取服务器\n\n可以从阿里云，百度云，腾讯云找一些服务器，也可以找一些私人的服务器\n\n## 2.安装ssh软件\n\n推荐使用mobaxterm，\n\n传输小文件时可以直接拖动\n\n传输大型文件时，推荐使用可以使用sftp协议的软件，例如filezilla，\n\n用户名为root，密码为服务器密码\n\n## 3.安装博客软件hexo\n\n- 第一步：指定node版本 ，curl --silent --location https://rpm.nodesource.com/setup_14.x | sudo bash\n\n- sudo yum install https://rpm.nodesource.com/pub_16.x/nodistro/repo/nodesource-release-nodistro-1.noarch.rpm -y\n  sudo yum install nodejs -y --setopt=nodesource-nodejs.module_hotfixes=1\n\n- 第二步：安装node， sudo yum -y install nodejs\n\n- 第三步：使用npm命令安装hexo， npm install hexo-cli -g\n\n- 第四步：使用hexo创建一个博客系统 hexo init blog\n\n- 第五步：使用，cd blog进入该目录\n\n- 第六步：安装博客系统依赖程序使用，npm install\n\n- 第七步：启动博客系统服务，hexo server或，hexo s               //默认端口为4000，可以使用-p + [端口号]指定端口，\n\n  使用公网ip      网页输入{公网ip}:4000 出现hexo首页即成功\n\n## 4.编写博客内容\n\n下载typora编写.md文件，hexo博客会自动识别文件的内容\n\ntitle: 标题\n\ndata: 日期\n\n使用git 或mobaxterm文件上传博客内容\n\n\n\n\n\n## 5.选择博客主题界面\n\n更改博客主题\n\n### 5.1关于next\n\nHexo是一款快速、简洁且高效的博客框架，拥有超快生成速度，支持 Markdown，一键部署和高度可扩展性。\n\nNext 是一个高品质优雅的 Hexo 主题。本文介绍 Next 主题的安装和基本的配置。\n\n### 5.2下载next\n\n执行以下命令\n\ncd themes \n\ngit clone https://github.com/next-theme/hexo-theme-next\n\n### 5.3更改参数配置\n\n打开blog目录下的_config.yml文件\n\n修改主题选择 theme: next  ##注意：theme后面加的是存放主题的文件夹名字\n\n修改语言   language: zh-CN\n\n##### 主题配置\n\n缓存支持\n\nNexT v6+ 允许缓存内容生成。在 NexT 配置文件的 cache 部分设置 enable 为 true:\n\ncache:\n  enable: true\n缩小支持\n\nNexT 允许缩小 Hexo 生成。在 NexT 配置文件中将 minify 值设置为true:\n\nminify: true\n\n**选择 Scheme**\n\nScheme 是 NexT 支持的一个特性，通过使用 Scheme， NexT 可以提供不同的视图\n\n在 Next 配置文件中搜索 scheme 找到配置的位置，然后配置你想要的 scheme。\n\n```\n#scheme: Muse\n#scheme: Mist\nscheme: Pisces\n#scheme: Gemini\n```\n\n##### 自定义 Logo\n\n您可以通过在 NexT 配置文件中将图像的 url 添加到 custom_logo 来启用它。\n\ncustom_logo: /images/logo.jpg\n\nimages 为站点根目录下 source 目录下创建的目录。如果目录不存在请创建它。\n\n##### 自定义头像\n\n您可以通过在 Next 配置文件中，设置 avatar 中的参数来启用它。\n\navatar:\n\nReplace the default image and set the url here.\n\n  url: /images/avatar.jpg\n\nIf true, the avatar will be displayed in circle.\n\n  rounded: false\n\nIf true, the avatar will be rotated with the cursor.\n\n  rotated: false\n\n##### 设置导航菜单\n\n默认情况下，所有菜单项都被注释掉，你可以通过设置 menu 中的参数来启用他。\n\nmenu:\n  home: / || fa fa-home\n  #about: /about/ || fa fa-user\n  #tags: /tags/ || fa fa-tags\n  #categories: /categories/ || fa fa-th\n  archives: /archives/ || fa fa-archive\n  #schedule: /schedule/ || fa fa-calendar\n  #sitemap: /sitemap.xml || fa fa-sitemap\n  #commonweal: /404/ || fa fa-heartbeat\n\n除了主页和存档，菜单部分下的所有自定义页面都需要手动创建。\n\n默认情况下 NexT 显示不带标识的菜单项图标。您可以通过编辑 menu_settings 中的值来配置它。\n\nmenu_settings:\n  icons: true\n  badges: false\n设置值 badges 为 true，则显示菜单项中的 Posts / Categories / Tags 的计数。\n\n## 6.域名绑定\n\n## 7.问题总结\n\n#### 1.hexo启动的网站容易挂掉\n\n在启动目录下使用该命令nohup hexo server -p 4000 &\n\n#### 2.使用screen后台启动blog\n\n###### screen定义：Screen是Linux下的一款远程会话管理工具，可以在多个进程之间多路复用一个物理终端的全屏窗口管理器。\n\n即：screen会保持终端的运行\n\n##### 2.1 CentOS系统安装命令\n\nyum install screen\n\n使用which screen查看是否安装成功\n\n##### 2.2 创建一个screen\n\nscreen -S +[名字]\n\n##### 2.3 查看screen的列表\n\nscreen -ls\n\n##### 2.4 进入screen中\n\nscreen -r +[screen.id]或\n\nscreen -r +[名字]\n\n##### 2.5 从screen界面退出\n\n先按ctrl + a 再按d\n\n##### 2.6 删除screen\n\nscreen -S +[名字] -X quit\n\n##### 2.7 擦除screen\n\n**服务器重启之后**，全部的screen均会挂掉，需要借助擦除命令，将所有挂掉的screen清除掉。\n\n使用命令screen -wipe\n\n#### 3.查看端口是否被占用\n\nlsof -i:4000\n\n#### 4.hexo启动成功，网页拒绝访问\n\n使用阿里云服务器时，按步骤安装并启动了hexo文件，启动成功，但是网页拒绝访问，根据阿里云工具提示http状态问题，所以可能权限有问题。\n\n从网页的控制台中找到安全组，手动添加访问端口（也可以一次性选择全部，相当于添加白名单），保存之后便可以访问hexo网页。\n\n#### 5.第三步一直卡着，不能进行下一步操作\n\n切换为淘宝源即可 ，npm config set registry https://registry.npm.taobao.org\n\n6.使用yum安装失败\n\nError: Failed to download metadata for repo 'appstream': Cannot prepare internal mirrorlist: No URLs in mirrorlist\n\nCentOS 已经停止维护的问题。2020 年 12 月 8 号，CentOS 官方宣布了停止维护 CentOS Linux 的计划，并推出了 CentOS Stream 项目，CentOS Linux 8 作为 RHEL 8 的复刻版本，生命周期缩短，于 2021 年 12 月 31 日停止更新并停止维护（EOL），更多的信息可以查看 CentOS 官方公告。如果需要更新 CentOS，需要将镜像从 mirror.centos.org 更改为 vault.centos.org\n第一步\n\ncd /etc/yum.repos.d/\n\n第二步\n\nsed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-*\nsed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*\n第三步\n\nyum makecache\n\n第四步\n\nyum update -y\n\n\n\n\n\n##### 升级node\n\n[Linux node 安装教程_linux node安装_围城少年的博客-CSDN博客](https://blog.csdn.net/weixin_38201500/article/details/124173797)\n\n#### make的安装\n\n1.先去http://ftp.gnu.org/gnu/make/make-4.2.tar.gz 下载安装包；\n2.进入/usr/local/bin/路径下，把安装包上传；\n3. tar -zxvf make-4.2.tar.gz\ncd make-4.2\n./configure\nmake\nmake install\nln -s -f /usr/local/bin/make-4.2/make /usr/bin/make\n\n\n\n##### glibc安装\n\n安装node的时候出现这些问题缺少依赖库\n\n```\nnode: /lib64/libm.so.6: version `GLIBC_2.27' not found (required by node)\nnode: /lib64/libc.so.6: version `GLIBC_2.25' not found (required by node)\nnode: /lib64/libc.so.6: version `GLIBC_2.28' not found (required by node)\nnode: /lib64/libstdc++.so.6: version `CXXABI_1.3.9' not found (required by node)\nnode: /lib64/libstdc++.so.6: version `GLIBCXX_3.4.20' not found (required by node)\nnode: /lib64/libstdc++.so.6: version `GLIBCXX_3.4.21' not found (required by node)\n```\n\n在这里解决\n\n[Error(25) 解决node: /lib64/libm.so.6: version `GLIBC_2.27‘ not found (required by node)-CSDN博客](https://blog.csdn.net/qq_38225558/article/details/128641561)\n\n\n\n### 一键执行命令\n\n给该行命令添加别名，添加到脚本中长期有效\n\n```\necho \"alias hexos='hexo cl && hexo s -p 80'\" >> ~/.bashrc\n```\n\n重新生效该脚本\n\n```\nsource ~/.bashrc\n```\n\n\n\n\n\n","slug":"制作博客","published":1,"date":"2024-07-11T06:04:07.274Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clyh2ognv001be0ds3gj07ur4","content":"<h2 id=\"1-获取服务器\"><a href=\"#1-获取服务器\" class=\"headerlink\" title=\"1.获取服务器\"></a>1.获取服务器</h2><p>可以从阿里云，百度云，腾讯云找一些服务器，也可以找一些私人的服务器</p>\n<h2 id=\"2-安装ssh软件\"><a href=\"#2-安装ssh软件\" class=\"headerlink\" title=\"2.安装ssh软件\"></a>2.安装ssh软件</h2><p>推荐使用mobaxterm，</p>\n<p>传输小文件时可以直接拖动</p>\n<p>传输大型文件时，推荐使用可以使用sftp协议的软件，例如filezilla，</p>\n<p>用户名为root，密码为服务器密码</p>\n<h2 id=\"3-安装博客软件hexo\"><a href=\"#3-安装博客软件hexo\" class=\"headerlink\" title=\"3.安装博客软件hexo\"></a>3.安装博客软件hexo</h2><ul>\n<li><p>第一步：指定node版本 ，curl —silent —location <a href=\"https://rpm.nodesource.com/setup_14.x\">https://rpm.nodesource.com/setup_14.x</a> | sudo bash</p>\n</li>\n<li><p>sudo yum install <a href=\"https://rpm.nodesource.com/pub_16.x/nodistro/repo/nodesource-release-nodistro-1.noarch.rpm\">https://rpm.nodesource.com/pub_16.x/nodistro/repo/nodesource-release-nodistro-1.noarch.rpm</a> -y<br>sudo yum install nodejs -y —setopt=nodesource-nodejs.module_hotfixes=1</p>\n</li>\n<li><p>第二步：安装node， sudo yum -y install nodejs</p>\n</li>\n<li><p>第三步：使用npm命令安装hexo， npm install hexo-cli -g</p>\n</li>\n<li><p>第四步：使用hexo创建一个博客系统 hexo init blog</p>\n</li>\n<li><p>第五步：使用，cd blog进入该目录</p>\n</li>\n<li><p>第六步：安装博客系统依赖程序使用，npm install</p>\n</li>\n<li><p>第七步：启动博客系统服务，hexo server或，hexo s               //默认端口为4000，可以使用-p + [端口号]指定端口，</p>\n<p>使用公网ip      网页输入{公网ip}:4000 出现hexo首页即成功</p>\n</li>\n</ul>\n<h2 id=\"4-编写博客内容\"><a href=\"#4-编写博客内容\" class=\"headerlink\" title=\"4.编写博客内容\"></a>4.编写博客内容</h2><p>下载typora编写.md文件，hexo博客会自动识别文件的内容</p>\n<p>title: 标题</p>\n<p>data: 日期</p>\n<p>使用git 或mobaxterm文件上传博客内容</p>\n<h2 id=\"5-选择博客主题界面\"><a href=\"#5-选择博客主题界面\" class=\"headerlink\" title=\"5.选择博客主题界面\"></a>5.选择博客主题界面</h2><p>更改博客主题</p>\n<h3 id=\"5-1关于next\"><a href=\"#5-1关于next\" class=\"headerlink\" title=\"5.1关于next\"></a>5.1关于next</h3><p>Hexo是一款快速、简洁且高效的博客框架，拥有超快生成速度，支持 Markdown，一键部署和高度可扩展性。</p>\n<p>Next 是一个高品质优雅的 Hexo 主题。本文介绍 Next 主题的安装和基本的配置。</p>\n<h3 id=\"5-2下载next\"><a href=\"#5-2下载next\" class=\"headerlink\" title=\"5.2下载next\"></a>5.2下载next</h3><p>执行以下命令</p>\n<p>cd themes </p>\n<p>git clone <a href=\"https://github.com/next-theme/hexo-theme-next\">https://github.com/next-theme/hexo-theme-next</a></p>\n<h3 id=\"5-3更改参数配置\"><a href=\"#5-3更改参数配置\" class=\"headerlink\" title=\"5.3更改参数配置\"></a>5.3更改参数配置</h3><p>打开blog目录下的_config.yml文件</p>\n<p>修改主题选择 theme: next  ##注意：theme后面加的是存放主题的文件夹名字</p>\n<p>修改语言   language: zh-CN</p>\n<h5 id=\"主题配置\"><a href=\"#主题配置\" class=\"headerlink\" title=\"主题配置\"></a>主题配置</h5><p>缓存支持</p>\n<p>NexT v6+ 允许缓存内容生成。在 NexT 配置文件的 cache 部分设置 enable 为 true:</p>\n<p>cache:<br>  enable: true<br>缩小支持</p>\n<p>NexT 允许缩小 Hexo 生成。在 NexT 配置文件中将 minify 值设置为true:</p>\n<p>minify: true</p>\n<p><strong>选择 Scheme</strong></p>\n<p>Scheme 是 NexT 支持的一个特性，通过使用 Scheme， NexT 可以提供不同的视图</p>\n<p>在 Next 配置文件中搜索 scheme 找到配置的位置，然后配置你想要的 scheme。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#scheme: Muse</span><br><span class=\"line\">#scheme: Mist</span><br><span class=\"line\">scheme: Pisces</span><br><span class=\"line\">#scheme: Gemini</span><br></pre></td></tr></table></figure>\n<h5 id=\"自定义-Logo\"><a href=\"#自定义-Logo\" class=\"headerlink\" title=\"自定义 Logo\"></a>自定义 Logo</h5><p>您可以通过在 NexT 配置文件中将图像的 url 添加到 custom_logo 来启用它。</p>\n<p>custom_logo: /images/logo.jpg</p>\n<p>images 为站点根目录下 source 目录下创建的目录。如果目录不存在请创建它。</p>\n<h5 id=\"自定义头像\"><a href=\"#自定义头像\" class=\"headerlink\" title=\"自定义头像\"></a>自定义头像</h5><p>您可以通过在 Next 配置文件中，设置 avatar 中的参数来启用它。</p>\n<p>avatar:</p>\n<p>Replace the default image and set the url here.</p>\n<p>  url: /images/avatar.jpg</p>\n<p>If true, the avatar will be displayed in circle.</p>\n<p>  rounded: false</p>\n<p>If true, the avatar will be rotated with the cursor.</p>\n<p>  rotated: false</p>\n<h5 id=\"设置导航菜单\"><a href=\"#设置导航菜单\" class=\"headerlink\" title=\"设置导航菜单\"></a>设置导航菜单</h5><p>默认情况下，所有菜单项都被注释掉，你可以通过设置 menu 中的参数来启用他。</p>\n<p>menu:<br>  home: / || fa fa-home</p>\n<h1 id=\"about-about-fa-fa-user\"><a href=\"#about-about-fa-fa-user\" class=\"headerlink\" title=\"about: /about/ || fa fa-user\"></a>about: /about/ || fa fa-user</h1><h1 id=\"tags-tags-fa-fa-tags\"><a href=\"#tags-tags-fa-fa-tags\" class=\"headerlink\" title=\"tags: /tags/ || fa fa-tags\"></a>tags: /tags/ || fa fa-tags</h1><h1 id=\"categories-categories-fa-fa-th\"><a href=\"#categories-categories-fa-fa-th\" class=\"headerlink\" title=\"categories: /categories/ || fa fa-th\"></a>categories: /categories/ || fa fa-th</h1><p>  archives: /archives/ || fa fa-archive</p>\n<h1 id=\"schedule-schedule-fa-fa-calendar\"><a href=\"#schedule-schedule-fa-fa-calendar\" class=\"headerlink\" title=\"schedule: /schedule/ || fa fa-calendar\"></a>schedule: /schedule/ || fa fa-calendar</h1><h1 id=\"sitemap-sitemap-xml-fa-fa-sitemap\"><a href=\"#sitemap-sitemap-xml-fa-fa-sitemap\" class=\"headerlink\" title=\"sitemap: /sitemap.xml || fa fa-sitemap\"></a>sitemap: /sitemap.xml || fa fa-sitemap</h1><h1 id=\"commonweal-404-fa-fa-heartbeat\"><a href=\"#commonweal-404-fa-fa-heartbeat\" class=\"headerlink\" title=\"commonweal: /404/ || fa fa-heartbeat\"></a>commonweal: /404/ || fa fa-heartbeat</h1><p>除了主页和存档，菜单部分下的所有自定义页面都需要手动创建。</p>\n<p>默认情况下 NexT 显示不带标识的菜单项图标。您可以通过编辑 menu_settings 中的值来配置它。</p>\n<p>menu_settings:<br>  icons: true<br>  badges: false<br>设置值 badges 为 true，则显示菜单项中的 Posts / Categories / Tags 的计数。</p>\n<h2 id=\"6-域名绑定\"><a href=\"#6-域名绑定\" class=\"headerlink\" title=\"6.域名绑定\"></a>6.域名绑定</h2><h2 id=\"7-问题总结\"><a href=\"#7-问题总结\" class=\"headerlink\" title=\"7.问题总结\"></a>7.问题总结</h2><h4 id=\"1-hexo启动的网站容易挂掉\"><a href=\"#1-hexo启动的网站容易挂掉\" class=\"headerlink\" title=\"1.hexo启动的网站容易挂掉\"></a>1.hexo启动的网站容易挂掉</h4><p>在启动目录下使用该命令nohup hexo server -p 4000 &amp;</p>\n<h4 id=\"2-使用screen后台启动blog\"><a href=\"#2-使用screen后台启动blog\" class=\"headerlink\" title=\"2.使用screen后台启动blog\"></a>2.使用screen后台启动blog</h4><h6 id=\"screen定义：Screen是Linux下的一款远程会话管理工具，可以在多个进程之间多路复用一个物理终端的全屏窗口管理器。\"><a href=\"#screen定义：Screen是Linux下的一款远程会话管理工具，可以在多个进程之间多路复用一个物理终端的全屏窗口管理器。\" class=\"headerlink\" title=\"screen定义：Screen是Linux下的一款远程会话管理工具，可以在多个进程之间多路复用一个物理终端的全屏窗口管理器。\"></a>screen定义：Screen是Linux下的一款远程会话管理工具，可以在多个进程之间多路复用一个物理终端的全屏窗口管理器。</h6><p>即：screen会保持终端的运行</p>\n<h5 id=\"2-1-CentOS系统安装命令\"><a href=\"#2-1-CentOS系统安装命令\" class=\"headerlink\" title=\"2.1 CentOS系统安装命令\"></a>2.1 CentOS系统安装命令</h5><p>yum install screen</p>\n<p>使用which screen查看是否安装成功</p>\n<h5 id=\"2-2-创建一个screen\"><a href=\"#2-2-创建一个screen\" class=\"headerlink\" title=\"2.2 创建一个screen\"></a>2.2 创建一个screen</h5><p>screen -S +[名字]</p>\n<h5 id=\"2-3-查看screen的列表\"><a href=\"#2-3-查看screen的列表\" class=\"headerlink\" title=\"2.3 查看screen的列表\"></a>2.3 查看screen的列表</h5><p>screen -ls</p>\n<h5 id=\"2-4-进入screen中\"><a href=\"#2-4-进入screen中\" class=\"headerlink\" title=\"2.4 进入screen中\"></a>2.4 进入screen中</h5><p>screen -r +[screen.id]或</p>\n<p>screen -r +[名字]</p>\n<h5 id=\"2-5-从screen界面退出\"><a href=\"#2-5-从screen界面退出\" class=\"headerlink\" title=\"2.5 从screen界面退出\"></a>2.5 从screen界面退出</h5><p>先按ctrl + a 再按d</p>\n<h5 id=\"2-6-删除screen\"><a href=\"#2-6-删除screen\" class=\"headerlink\" title=\"2.6 删除screen\"></a>2.6 删除screen</h5><p>screen -S +[名字] -X quit</p>\n<h5 id=\"2-7-擦除screen\"><a href=\"#2-7-擦除screen\" class=\"headerlink\" title=\"2.7 擦除screen\"></a>2.7 擦除screen</h5><p><strong>服务器重启之后</strong>，全部的screen均会挂掉，需要借助擦除命令，将所有挂掉的screen清除掉。</p>\n<p>使用命令screen -wipe</p>\n<h4 id=\"3-查看端口是否被占用\"><a href=\"#3-查看端口是否被占用\" class=\"headerlink\" title=\"3.查看端口是否被占用\"></a>3.查看端口是否被占用</h4><p>lsof -i:4000</p>\n<h4 id=\"4-hexo启动成功，网页拒绝访问\"><a href=\"#4-hexo启动成功，网页拒绝访问\" class=\"headerlink\" title=\"4.hexo启动成功，网页拒绝访问\"></a>4.hexo启动成功，网页拒绝访问</h4><p>使用阿里云服务器时，按步骤安装并启动了hexo文件，启动成功，但是网页拒绝访问，根据阿里云工具提示http状态问题，所以可能权限有问题。</p>\n<p>从网页的控制台中找到安全组，手动添加访问端口（也可以一次性选择全部，相当于添加白名单），保存之后便可以访问hexo网页。</p>\n<h4 id=\"5-第三步一直卡着，不能进行下一步操作\"><a href=\"#5-第三步一直卡着，不能进行下一步操作\" class=\"headerlink\" title=\"5.第三步一直卡着，不能进行下一步操作\"></a>5.第三步一直卡着，不能进行下一步操作</h4><p>切换为淘宝源即可 ，npm config set registry <a href=\"https://registry.npm.taobao.org\">https://registry.npm.taobao.org</a></p>\n<p>6.使用yum安装失败</p>\n<p>Error: Failed to download metadata for repo ‘appstream’: Cannot prepare internal mirrorlist: No URLs in mirrorlist</p>\n<p>CentOS 已经停止维护的问题。2020 年 12 月 8 号，CentOS 官方宣布了停止维护 CentOS Linux 的计划，并推出了 CentOS Stream 项目，CentOS Linux 8 作为 RHEL 8 的复刻版本，生命周期缩短，于 2021 年 12 月 31 日停止更新并停止维护（EOL），更多的信息可以查看 CentOS 官方公告。如果需要更新 CentOS，需要将镜像从 mirror.centos.org 更改为 vault.centos.org<br>第一步</p>\n<p>cd /etc/yum.repos.d/</p>\n<p>第二步</p>\n<p>sed -i ‘s/mirrorlist/#mirrorlist/g’ /etc/yum.repos.d/CentOS-<em><br>sed -i ‘s|#baseurl=<a href=\"http://mirror.centos.org|baseurl=http://vault.centos.org|g\">http://mirror.centos.org|baseurl=http://vault.centos.org|g</a>‘ /etc/yum.repos.d/CentOS-</em><br>第三步</p>\n<p>yum makecache</p>\n<p>第四步</p>\n<p>yum update -y</p>\n<h5 id=\"升级node\"><a href=\"#升级node\" class=\"headerlink\" title=\"升级node\"></a>升级node</h5><p><a href=\"https://blog.csdn.net/weixin_38201500/article/details/124173797\">Linux node 安装教程<em>linux node安装</em>围城少年的博客-CSDN博客</a></p>\n<h4 id=\"make的安装\"><a href=\"#make的安装\" class=\"headerlink\" title=\"make的安装\"></a>make的安装</h4><p>1.先去<a href=\"http://ftp.gnu.org/gnu/make/make-4.2.tar.gz\">http://ftp.gnu.org/gnu/make/make-4.2.tar.gz</a> 下载安装包；<br>2.进入/usr/local/bin/路径下，把安装包上传；</p>\n<ol>\n<li>tar -zxvf make-4.2.tar.gz<br>cd make-4.2<br>./configure<br>make<br>make install<br>ln -s -f /usr/local/bin/make-4.2/make /usr/bin/make</li>\n</ol>\n<h5 id=\"glibc安装\"><a href=\"#glibc安装\" class=\"headerlink\" title=\"glibc安装\"></a>glibc安装</h5><p>安装node的时候出现这些问题缺少依赖库</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node: /lib64/libm.so.6: version `GLIBC_2.27&#x27; not found (required by node)</span><br><span class=\"line\">node: /lib64/libc.so.6: version `GLIBC_2.25&#x27; not found (required by node)</span><br><span class=\"line\">node: /lib64/libc.so.6: version `GLIBC_2.28&#x27; not found (required by node)</span><br><span class=\"line\">node: /lib64/libstdc++.so.6: version `CXXABI_1.3.9&#x27; not found (required by node)</span><br><span class=\"line\">node: /lib64/libstdc++.so.6: version `GLIBCXX_3.4.20&#x27; not found (required by node)</span><br><span class=\"line\">node: /lib64/libstdc++.so.6: version `GLIBCXX_3.4.21&#x27; not found (required by node)</span><br></pre></td></tr></table></figure>\n<p>在这里解决</p>\n<p><a href=\"https://blog.csdn.net/qq_38225558/article/details/128641561\">Error(25) 解决node: /lib64/libm.so.6: version `GLIBC_2.27‘ not found (required by node)-CSDN博客</a></p>\n<h3 id=\"一键执行命令\"><a href=\"#一键执行命令\" class=\"headerlink\" title=\"一键执行命令\"></a>一键执行命令</h3><p>给该行命令添加别名，添加到脚本中长期有效</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;alias hexos=&#x27;hexo cl &amp;&amp; hexo s -p 80&#x27;&quot; &gt;&gt; ~/.bashrc</span><br></pre></td></tr></table></figure>\n<p>重新生效该脚本</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ~/.bashrc</span><br></pre></td></tr></table></figure>\n","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"Vue","color":"#b8f0ae","icon":"https://img02.anheyu.com/adminuploads/1/2022/09/25/633001374747b.png"}]}],"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"}]}]}},"cover_type":"img","excerpt":"","more":"<h2 id=\"1-获取服务器\"><a href=\"#1-获取服务器\" class=\"headerlink\" title=\"1.获取服务器\"></a>1.获取服务器</h2><p>可以从阿里云，百度云，腾讯云找一些服务器，也可以找一些私人的服务器</p>\n<h2 id=\"2-安装ssh软件\"><a href=\"#2-安装ssh软件\" class=\"headerlink\" title=\"2.安装ssh软件\"></a>2.安装ssh软件</h2><p>推荐使用mobaxterm，</p>\n<p>传输小文件时可以直接拖动</p>\n<p>传输大型文件时，推荐使用可以使用sftp协议的软件，例如filezilla，</p>\n<p>用户名为root，密码为服务器密码</p>\n<h2 id=\"3-安装博客软件hexo\"><a href=\"#3-安装博客软件hexo\" class=\"headerlink\" title=\"3.安装博客软件hexo\"></a>3.安装博客软件hexo</h2><ul>\n<li><p>第一步：指定node版本 ，curl —silent —location <a href=\"https://rpm.nodesource.com/setup_14.x\">https://rpm.nodesource.com/setup_14.x</a> | sudo bash</p>\n</li>\n<li><p>sudo yum install <a href=\"https://rpm.nodesource.com/pub_16.x/nodistro/repo/nodesource-release-nodistro-1.noarch.rpm\">https://rpm.nodesource.com/pub_16.x/nodistro/repo/nodesource-release-nodistro-1.noarch.rpm</a> -y<br>sudo yum install nodejs -y —setopt=nodesource-nodejs.module_hotfixes=1</p>\n</li>\n<li><p>第二步：安装node， sudo yum -y install nodejs</p>\n</li>\n<li><p>第三步：使用npm命令安装hexo， npm install hexo-cli -g</p>\n</li>\n<li><p>第四步：使用hexo创建一个博客系统 hexo init blog</p>\n</li>\n<li><p>第五步：使用，cd blog进入该目录</p>\n</li>\n<li><p>第六步：安装博客系统依赖程序使用，npm install</p>\n</li>\n<li><p>第七步：启动博客系统服务，hexo server或，hexo s               //默认端口为4000，可以使用-p + [端口号]指定端口，</p>\n<p>使用公网ip      网页输入{公网ip}:4000 出现hexo首页即成功</p>\n</li>\n</ul>\n<h2 id=\"4-编写博客内容\"><a href=\"#4-编写博客内容\" class=\"headerlink\" title=\"4.编写博客内容\"></a>4.编写博客内容</h2><p>下载typora编写.md文件，hexo博客会自动识别文件的内容</p>\n<p>title: 标题</p>\n<p>data: 日期</p>\n<p>使用git 或mobaxterm文件上传博客内容</p>\n<h2 id=\"5-选择博客主题界面\"><a href=\"#5-选择博客主题界面\" class=\"headerlink\" title=\"5.选择博客主题界面\"></a>5.选择博客主题界面</h2><p>更改博客主题</p>\n<h3 id=\"5-1关于next\"><a href=\"#5-1关于next\" class=\"headerlink\" title=\"5.1关于next\"></a>5.1关于next</h3><p>Hexo是一款快速、简洁且高效的博客框架，拥有超快生成速度，支持 Markdown，一键部署和高度可扩展性。</p>\n<p>Next 是一个高品质优雅的 Hexo 主题。本文介绍 Next 主题的安装和基本的配置。</p>\n<h3 id=\"5-2下载next\"><a href=\"#5-2下载next\" class=\"headerlink\" title=\"5.2下载next\"></a>5.2下载next</h3><p>执行以下命令</p>\n<p>cd themes </p>\n<p>git clone <a href=\"https://github.com/next-theme/hexo-theme-next\">https://github.com/next-theme/hexo-theme-next</a></p>\n<h3 id=\"5-3更改参数配置\"><a href=\"#5-3更改参数配置\" class=\"headerlink\" title=\"5.3更改参数配置\"></a>5.3更改参数配置</h3><p>打开blog目录下的_config.yml文件</p>\n<p>修改主题选择 theme: next  ##注意：theme后面加的是存放主题的文件夹名字</p>\n<p>修改语言   language: zh-CN</p>\n<h5 id=\"主题配置\"><a href=\"#主题配置\" class=\"headerlink\" title=\"主题配置\"></a>主题配置</h5><p>缓存支持</p>\n<p>NexT v6+ 允许缓存内容生成。在 NexT 配置文件的 cache 部分设置 enable 为 true:</p>\n<p>cache:<br>  enable: true<br>缩小支持</p>\n<p>NexT 允许缩小 Hexo 生成。在 NexT 配置文件中将 minify 值设置为true:</p>\n<p>minify: true</p>\n<p><strong>选择 Scheme</strong></p>\n<p>Scheme 是 NexT 支持的一个特性，通过使用 Scheme， NexT 可以提供不同的视图</p>\n<p>在 Next 配置文件中搜索 scheme 找到配置的位置，然后配置你想要的 scheme。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#scheme: Muse</span><br><span class=\"line\">#scheme: Mist</span><br><span class=\"line\">scheme: Pisces</span><br><span class=\"line\">#scheme: Gemini</span><br></pre></td></tr></table></figure>\n<h5 id=\"自定义-Logo\"><a href=\"#自定义-Logo\" class=\"headerlink\" title=\"自定义 Logo\"></a>自定义 Logo</h5><p>您可以通过在 NexT 配置文件中将图像的 url 添加到 custom_logo 来启用它。</p>\n<p>custom_logo: /images/logo.jpg</p>\n<p>images 为站点根目录下 source 目录下创建的目录。如果目录不存在请创建它。</p>\n<h5 id=\"自定义头像\"><a href=\"#自定义头像\" class=\"headerlink\" title=\"自定义头像\"></a>自定义头像</h5><p>您可以通过在 Next 配置文件中，设置 avatar 中的参数来启用它。</p>\n<p>avatar:</p>\n<p>Replace the default image and set the url here.</p>\n<p>  url: /images/avatar.jpg</p>\n<p>If true, the avatar will be displayed in circle.</p>\n<p>  rounded: false</p>\n<p>If true, the avatar will be rotated with the cursor.</p>\n<p>  rotated: false</p>\n<h5 id=\"设置导航菜单\"><a href=\"#设置导航菜单\" class=\"headerlink\" title=\"设置导航菜单\"></a>设置导航菜单</h5><p>默认情况下，所有菜单项都被注释掉，你可以通过设置 menu 中的参数来启用他。</p>\n<p>menu:<br>  home: / || fa fa-home</p>\n<h1 id=\"about-about-fa-fa-user\"><a href=\"#about-about-fa-fa-user\" class=\"headerlink\" title=\"about: /about/ || fa fa-user\"></a>about: /about/ || fa fa-user</h1><h1 id=\"tags-tags-fa-fa-tags\"><a href=\"#tags-tags-fa-fa-tags\" class=\"headerlink\" title=\"tags: /tags/ || fa fa-tags\"></a>tags: /tags/ || fa fa-tags</h1><h1 id=\"categories-categories-fa-fa-th\"><a href=\"#categories-categories-fa-fa-th\" class=\"headerlink\" title=\"categories: /categories/ || fa fa-th\"></a>categories: /categories/ || fa fa-th</h1><p>  archives: /archives/ || fa fa-archive</p>\n<h1 id=\"schedule-schedule-fa-fa-calendar\"><a href=\"#schedule-schedule-fa-fa-calendar\" class=\"headerlink\" title=\"schedule: /schedule/ || fa fa-calendar\"></a>schedule: /schedule/ || fa fa-calendar</h1><h1 id=\"sitemap-sitemap-xml-fa-fa-sitemap\"><a href=\"#sitemap-sitemap-xml-fa-fa-sitemap\" class=\"headerlink\" title=\"sitemap: /sitemap.xml || fa fa-sitemap\"></a>sitemap: /sitemap.xml || fa fa-sitemap</h1><h1 id=\"commonweal-404-fa-fa-heartbeat\"><a href=\"#commonweal-404-fa-fa-heartbeat\" class=\"headerlink\" title=\"commonweal: /404/ || fa fa-heartbeat\"></a>commonweal: /404/ || fa fa-heartbeat</h1><p>除了主页和存档，菜单部分下的所有自定义页面都需要手动创建。</p>\n<p>默认情况下 NexT 显示不带标识的菜单项图标。您可以通过编辑 menu_settings 中的值来配置它。</p>\n<p>menu_settings:<br>  icons: true<br>  badges: false<br>设置值 badges 为 true，则显示菜单项中的 Posts / Categories / Tags 的计数。</p>\n<h2 id=\"6-域名绑定\"><a href=\"#6-域名绑定\" class=\"headerlink\" title=\"6.域名绑定\"></a>6.域名绑定</h2><h2 id=\"7-问题总结\"><a href=\"#7-问题总结\" class=\"headerlink\" title=\"7.问题总结\"></a>7.问题总结</h2><h4 id=\"1-hexo启动的网站容易挂掉\"><a href=\"#1-hexo启动的网站容易挂掉\" class=\"headerlink\" title=\"1.hexo启动的网站容易挂掉\"></a>1.hexo启动的网站容易挂掉</h4><p>在启动目录下使用该命令nohup hexo server -p 4000 &amp;</p>\n<h4 id=\"2-使用screen后台启动blog\"><a href=\"#2-使用screen后台启动blog\" class=\"headerlink\" title=\"2.使用screen后台启动blog\"></a>2.使用screen后台启动blog</h4><h6 id=\"screen定义：Screen是Linux下的一款远程会话管理工具，可以在多个进程之间多路复用一个物理终端的全屏窗口管理器。\"><a href=\"#screen定义：Screen是Linux下的一款远程会话管理工具，可以在多个进程之间多路复用一个物理终端的全屏窗口管理器。\" class=\"headerlink\" title=\"screen定义：Screen是Linux下的一款远程会话管理工具，可以在多个进程之间多路复用一个物理终端的全屏窗口管理器。\"></a>screen定义：Screen是Linux下的一款远程会话管理工具，可以在多个进程之间多路复用一个物理终端的全屏窗口管理器。</h6><p>即：screen会保持终端的运行</p>\n<h5 id=\"2-1-CentOS系统安装命令\"><a href=\"#2-1-CentOS系统安装命令\" class=\"headerlink\" title=\"2.1 CentOS系统安装命令\"></a>2.1 CentOS系统安装命令</h5><p>yum install screen</p>\n<p>使用which screen查看是否安装成功</p>\n<h5 id=\"2-2-创建一个screen\"><a href=\"#2-2-创建一个screen\" class=\"headerlink\" title=\"2.2 创建一个screen\"></a>2.2 创建一个screen</h5><p>screen -S +[名字]</p>\n<h5 id=\"2-3-查看screen的列表\"><a href=\"#2-3-查看screen的列表\" class=\"headerlink\" title=\"2.3 查看screen的列表\"></a>2.3 查看screen的列表</h5><p>screen -ls</p>\n<h5 id=\"2-4-进入screen中\"><a href=\"#2-4-进入screen中\" class=\"headerlink\" title=\"2.4 进入screen中\"></a>2.4 进入screen中</h5><p>screen -r +[screen.id]或</p>\n<p>screen -r +[名字]</p>\n<h5 id=\"2-5-从screen界面退出\"><a href=\"#2-5-从screen界面退出\" class=\"headerlink\" title=\"2.5 从screen界面退出\"></a>2.5 从screen界面退出</h5><p>先按ctrl + a 再按d</p>\n<h5 id=\"2-6-删除screen\"><a href=\"#2-6-删除screen\" class=\"headerlink\" title=\"2.6 删除screen\"></a>2.6 删除screen</h5><p>screen -S +[名字] -X quit</p>\n<h5 id=\"2-7-擦除screen\"><a href=\"#2-7-擦除screen\" class=\"headerlink\" title=\"2.7 擦除screen\"></a>2.7 擦除screen</h5><p><strong>服务器重启之后</strong>，全部的screen均会挂掉，需要借助擦除命令，将所有挂掉的screen清除掉。</p>\n<p>使用命令screen -wipe</p>\n<h4 id=\"3-查看端口是否被占用\"><a href=\"#3-查看端口是否被占用\" class=\"headerlink\" title=\"3.查看端口是否被占用\"></a>3.查看端口是否被占用</h4><p>lsof -i:4000</p>\n<h4 id=\"4-hexo启动成功，网页拒绝访问\"><a href=\"#4-hexo启动成功，网页拒绝访问\" class=\"headerlink\" title=\"4.hexo启动成功，网页拒绝访问\"></a>4.hexo启动成功，网页拒绝访问</h4><p>使用阿里云服务器时，按步骤安装并启动了hexo文件，启动成功，但是网页拒绝访问，根据阿里云工具提示http状态问题，所以可能权限有问题。</p>\n<p>从网页的控制台中找到安全组，手动添加访问端口（也可以一次性选择全部，相当于添加白名单），保存之后便可以访问hexo网页。</p>\n<h4 id=\"5-第三步一直卡着，不能进行下一步操作\"><a href=\"#5-第三步一直卡着，不能进行下一步操作\" class=\"headerlink\" title=\"5.第三步一直卡着，不能进行下一步操作\"></a>5.第三步一直卡着，不能进行下一步操作</h4><p>切换为淘宝源即可 ，npm config set registry <a href=\"https://registry.npm.taobao.org\">https://registry.npm.taobao.org</a></p>\n<p>6.使用yum安装失败</p>\n<p>Error: Failed to download metadata for repo ‘appstream’: Cannot prepare internal mirrorlist: No URLs in mirrorlist</p>\n<p>CentOS 已经停止维护的问题。2020 年 12 月 8 号，CentOS 官方宣布了停止维护 CentOS Linux 的计划，并推出了 CentOS Stream 项目，CentOS Linux 8 作为 RHEL 8 的复刻版本，生命周期缩短，于 2021 年 12 月 31 日停止更新并停止维护（EOL），更多的信息可以查看 CentOS 官方公告。如果需要更新 CentOS，需要将镜像从 mirror.centos.org 更改为 vault.centos.org<br>第一步</p>\n<p>cd /etc/yum.repos.d/</p>\n<p>第二步</p>\n<p>sed -i ‘s/mirrorlist/#mirrorlist/g’ /etc/yum.repos.d/CentOS-<em><br>sed -i ‘s|#baseurl=<a href=\"http://mirror.centos.org|baseurl=http://vault.centos.org|g\">http://mirror.centos.org|baseurl=http://vault.centos.org|g</a>‘ /etc/yum.repos.d/CentOS-</em><br>第三步</p>\n<p>yum makecache</p>\n<p>第四步</p>\n<p>yum update -y</p>\n<h5 id=\"升级node\"><a href=\"#升级node\" class=\"headerlink\" title=\"升级node\"></a>升级node</h5><p><a href=\"https://blog.csdn.net/weixin_38201500/article/details/124173797\">Linux node 安装教程<em>linux node安装</em>围城少年的博客-CSDN博客</a></p>\n<h4 id=\"make的安装\"><a href=\"#make的安装\" class=\"headerlink\" title=\"make的安装\"></a>make的安装</h4><p>1.先去<a href=\"http://ftp.gnu.org/gnu/make/make-4.2.tar.gz\">http://ftp.gnu.org/gnu/make/make-4.2.tar.gz</a> 下载安装包；<br>2.进入/usr/local/bin/路径下，把安装包上传；</p>\n<ol>\n<li>tar -zxvf make-4.2.tar.gz<br>cd make-4.2<br>./configure<br>make<br>make install<br>ln -s -f /usr/local/bin/make-4.2/make /usr/bin/make</li>\n</ol>\n<h5 id=\"glibc安装\"><a href=\"#glibc安装\" class=\"headerlink\" title=\"glibc安装\"></a>glibc安装</h5><p>安装node的时候出现这些问题缺少依赖库</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node: /lib64/libm.so.6: version `GLIBC_2.27&#x27; not found (required by node)</span><br><span class=\"line\">node: /lib64/libc.so.6: version `GLIBC_2.25&#x27; not found (required by node)</span><br><span class=\"line\">node: /lib64/libc.so.6: version `GLIBC_2.28&#x27; not found (required by node)</span><br><span class=\"line\">node: /lib64/libstdc++.so.6: version `CXXABI_1.3.9&#x27; not found (required by node)</span><br><span class=\"line\">node: /lib64/libstdc++.so.6: version `GLIBCXX_3.4.20&#x27; not found (required by node)</span><br><span class=\"line\">node: /lib64/libstdc++.so.6: version `GLIBCXX_3.4.21&#x27; not found (required by node)</span><br></pre></td></tr></table></figure>\n<p>在这里解决</p>\n<p><a href=\"https://blog.csdn.net/qq_38225558/article/details/128641561\">Error(25) 解决node: /lib64/libm.so.6: version `GLIBC_2.27‘ not found (required by node)-CSDN博客</a></p>\n<h3 id=\"一键执行命令\"><a href=\"#一键执行命令\" class=\"headerlink\" title=\"一键执行命令\"></a>一键执行命令</h3><p>给该行命令添加别名，添加到脚本中长期有效</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;alias hexos=&#x27;hexo cl &amp;&amp; hexo s -p 80&#x27;&quot; &gt;&gt; ~/.bashrc</span><br></pre></td></tr></table></figure>\n<p>重新生效该脚本</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ~/.bashrc</span><br></pre></td></tr></table></figure>\n"},{"title":"问题汇总","data":"2024-07-01T11:52:54.000Z","updated":"2024-06-30T16:00:00.000Z","description":"平常遇到过的一些问题","cover":"https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202310280045950.png","_content":"\n# Blog\n\n文章名不能带#号，否则文章不能输出\n\n","source":"_posts/问题汇总.md","raw":"---\ntitle: 问题汇总\ndata: 2024-7-1 19:52:54\nupdated: 2024-7-1\ntags: \n    - BUG\ncategories: BUG\ndescription: 平常遇到过的一些问题\ncover: https://yin-qin.oss-cn-shanghai.aliyuncs.com/XiaoYao/202310280045950.png\n\n---\n\n# Blog\n\n文章名不能带#号，否则文章不能输出\n\n","slug":"问题汇总","published":1,"date":"2024-07-11T06:04:07.245Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clyh2ognv001ce0ds4kn8g94v","content":"<h1 id=\"Blog\"><a href=\"#Blog\" class=\"headerlink\" title=\"Blog\"></a>Blog</h1><p>文章名不能带#号，否则文章不能输出</p>\n","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"Vue","color":"#b8f0ae","icon":"https://img02.anheyu.com/adminuploads/1/2022/09/25/633001374747b.png"}]}],"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"}]}]}},"cover_type":"img","excerpt":"","more":"<h1 id=\"Blog\"><a href=\"#Blog\" class=\"headerlink\" title=\"Blog\"></a>Blog</h1><p>文章名不能带#号，否则文章不能输出</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clyh2ogn60009e0dsf2lu5yfo","category_id":"clyh2ogmr0004e0ds6aphdxig","_id":"clyh2ognj000ie0ds1lcya3ik"},{"post_id":"clyh2ogmg0001e0ds3u47d5k4","category_id":"clyh2ogmr0004e0ds6aphdxig","_id":"clyh2ognl000ne0ds73u76rd3"},{"post_id":"clyh2ogmp0003e0dsby2q742w","category_id":"clyh2ogmr0004e0ds6aphdxig","_id":"clyh2ognn000re0dshz7udcz0"},{"post_id":"clyh2ogn40007e0ds8htfhggv","category_id":"clyh2ogmr0004e0ds6aphdxig","_id":"clyh2ognq000ye0ds0cqgd6pm"},{"post_id":"clyh2ogn8000be0dsd5x81f6g","category_id":"clyh2ognm000qe0ds9sa9gc6p","_id":"clyh2ognt0017e0dsfbbscjtn"},{"post_id":"clyh2ognb000fe0ds4m58d1js","category_id":"clyh2ognq000ze0dsdzld7lmt","_id":"clyh2ognw001de0dsd0w1h2ed"},{"post_id":"clyh2ogni000he0ds4ffn22uq","category_id":"clyh2ognu0018e0ds8xy69bil","_id":"clyh2ogny001ie0ds9nc566gm"},{"post_id":"clyh2ognk000me0ds0ptm0xqi","category_id":"clyh2ognw001ee0ds7znlcc0o","_id":"clyh2ognz001oe0ds4i8h9eg4"},{"post_id":"clyh2ognm000pe0dsf881bfhf","category_id":"clyh2ognw001ee0ds7znlcc0o","_id":"clyh2ogo0001qe0ds76y29bab"},{"post_id":"clyh2ogno000ue0dsb791gc48","category_id":"clyh2ognw001ee0ds7znlcc0o","_id":"clyh2ogo1001ve0ds4car7qrx"},{"post_id":"clyh2ognp000xe0ds4o6c9i0k","category_id":"clyh2ognw001ee0ds7znlcc0o","_id":"clyh2ogo2001ze0dsairu17n4"},{"post_id":"clyh2ogns0013e0dsagsx4jzi","category_id":"clyh2ognw001ee0ds7znlcc0o","_id":"clyh2ogo30022e0dsb6ci4ynb"},{"post_id":"clyh2ognt0016e0ds0htle7vc","category_id":"clyh2ogo2001ye0dsc7ot6cna","_id":"clyh2ogo40027e0dsfv8ifn29"},{"post_id":"clyh2ognv001be0ds3gj07ur4","category_id":"clyh2ogo30024e0ds5rig98hb","_id":"clyh2ogo4002be0dsc0la7xpk"},{"post_id":"clyh2ognv001ce0ds4kn8g94v","category_id":"clyh2ogo40028e0dsgobke20y","_id":"clyh2ogo5002fe0ds4l04b1x6"}],"PostTag":[{"post_id":"clyh2ogmg0001e0ds3u47d5k4","tag_id":"clyh2ogmt0005e0ds6tmy9kfa","_id":"clyh2ognp000ve0ds4at2fv4g"},{"post_id":"clyh2ogmg0001e0ds3u47d5k4","tag_id":"clyh2ogn9000de0dsf6iaa7q2","_id":"clyh2ognr0010e0dsb6rff4p5"},{"post_id":"clyh2ogmg0001e0ds3u47d5k4","tag_id":"clyh2ognj000ke0dsf8wg7ufc","_id":"clyh2ogns0014e0ds01jb6ys0"},{"post_id":"clyh2ogmp0003e0dsby2q742w","tag_id":"clyh2ogmt0005e0ds6tmy9kfa","_id":"clyh2ogny001ge0ds735gdt6n"},{"post_id":"clyh2ogmp0003e0dsby2q742w","tag_id":"clyh2ogn9000de0dsf6iaa7q2","_id":"clyh2ogny001he0ds3hsic134"},{"post_id":"clyh2ogmp0003e0dsby2q742w","tag_id":"clyh2ognu0019e0dsdq1qezrb","_id":"clyh2ognz001le0ds1j4kg2fe"},{"post_id":"clyh2ogn40007e0ds8htfhggv","tag_id":"clyh2ogmt0005e0ds6tmy9kfa","_id":"clyh2ogo1001se0dsdk0h49ha"},{"post_id":"clyh2ogn40007e0ds8htfhggv","tag_id":"clyh2ogn9000de0dsf6iaa7q2","_id":"clyh2ogo1001te0ds97yrbohn"},{"post_id":"clyh2ogn40007e0ds8htfhggv","tag_id":"clyh2ognz001me0ds52y86dkk","_id":"clyh2ogo1001xe0dsbc9g3lfw"},{"post_id":"clyh2ogn60009e0dsf2lu5yfo","tag_id":"clyh2ogmt0005e0ds6tmy9kfa","_id":"clyh2ogo20021e0dsa1u0e276"},{"post_id":"clyh2ogn60009e0dsf2lu5yfo","tag_id":"clyh2ogn9000de0dsf6iaa7q2","_id":"clyh2ogo30023e0ds3hhx46kw"},{"post_id":"clyh2ogn60009e0dsf2lu5yfo","tag_id":"clyh2ogo1001we0dshtn33s4e","_id":"clyh2ogo30026e0dsbswkc0s4"},{"post_id":"clyh2ogn8000be0dsd5x81f6g","tag_id":"clyh2ogo20020e0dsg8fk9hdo","_id":"clyh2ogo4002ae0ds5kdugv9i"},{"post_id":"clyh2ogn8000be0dsd5x81f6g","tag_id":"clyh2ogo30025e0ds06jz8w8t","_id":"clyh2ogo4002ce0ds3155htdl"},{"post_id":"clyh2ognb000fe0ds4m58d1js","tag_id":"clyh2ogmt0005e0ds6tmy9kfa","_id":"clyh2ogo5002ee0ds4hzo62yf"},{"post_id":"clyh2ognb000fe0ds4m58d1js","tag_id":"clyh2ogo40029e0dsc5djbixf","_id":"clyh2ogo5002ge0ds6w3m5qg2"},{"post_id":"clyh2ogni000he0ds4ffn22uq","tag_id":"clyh2ogmt0005e0ds6tmy9kfa","_id":"clyh2ogo5002ie0ds21oq6czf"},{"post_id":"clyh2ogni000he0ds4ffn22uq","tag_id":"clyh2ogo5002de0ds27gdh47q","_id":"clyh2ogo6002je0dsb9jqa79r"},{"post_id":"clyh2ognk000me0ds0ptm0xqi","tag_id":"clyh2ogmt0005e0ds6tmy9kfa","_id":"clyh2ogo6002le0dshpcxa57p"},{"post_id":"clyh2ognk000me0ds0ptm0xqi","tag_id":"clyh2ogo5002he0ds9rbe4pdp","_id":"clyh2ogo6002me0ds1x7f1mtf"},{"post_id":"clyh2ognm000pe0dsf881bfhf","tag_id":"clyh2ogmt0005e0ds6tmy9kfa","_id":"clyh2ogo8002qe0ds82od82c3"},{"post_id":"clyh2ognm000pe0dsf881bfhf","tag_id":"clyh2ogo6002ke0dse7id0zj6","_id":"clyh2ogo9002re0ds96sv5kgn"},{"post_id":"clyh2ognm000pe0dsf881bfhf","tag_id":"clyh2ogo5002he0ds9rbe4pdp","_id":"clyh2ogo9002te0ds2tdsd9v6"},{"post_id":"clyh2ognm000pe0dsf881bfhf","tag_id":"clyh2ogo6002oe0dse0sma73p","_id":"clyh2ogo9002ue0dse8eh0r2r"},{"post_id":"clyh2ogno000ue0dsb791gc48","tag_id":"clyh2ogmt0005e0ds6tmy9kfa","_id":"clyh2ogoa002xe0ds0vbbbrpz"},{"post_id":"clyh2ogno000ue0dsb791gc48","tag_id":"clyh2ogo6002ke0dse7id0zj6","_id":"clyh2ogoa002ye0ds98nbad8x"},{"post_id":"clyh2ogno000ue0dsb791gc48","tag_id":"clyh2ogo5002he0ds9rbe4pdp","_id":"clyh2ogoa0030e0ds1a6jbbom"},{"post_id":"clyh2ogno000ue0dsb791gc48","tag_id":"clyh2ogo6002oe0dse0sma73p","_id":"clyh2ogoa0031e0ds3ejqf1mv"},{"post_id":"clyh2ognp000xe0ds4o6c9i0k","tag_id":"clyh2ogmt0005e0ds6tmy9kfa","_id":"clyh2ogob0034e0dsef8u2fji"},{"post_id":"clyh2ognp000xe0ds4o6c9i0k","tag_id":"clyh2ogo6002ke0dse7id0zj6","_id":"clyh2ogob0035e0ds9kn0d0h3"},{"post_id":"clyh2ognp000xe0ds4o6c9i0k","tag_id":"clyh2ogo5002he0ds9rbe4pdp","_id":"clyh2ogob0037e0dses8dgfb3"},{"post_id":"clyh2ognp000xe0ds4o6c9i0k","tag_id":"clyh2ogo6002oe0dse0sma73p","_id":"clyh2ogoc0038e0ds2kx33fwb"},{"post_id":"clyh2ogns0013e0dsagsx4jzi","tag_id":"clyh2ogmt0005e0ds6tmy9kfa","_id":"clyh2ogoi003be0dsccdt5abo"},{"post_id":"clyh2ogns0013e0dsagsx4jzi","tag_id":"clyh2ogo6002ke0dse7id0zj6","_id":"clyh2ogoi003ce0ds4yy4bddn"},{"post_id":"clyh2ogns0013e0dsagsx4jzi","tag_id":"clyh2ogo5002he0ds9rbe4pdp","_id":"clyh2ogoj003ee0dscg20az1x"},{"post_id":"clyh2ogns0013e0dsagsx4jzi","tag_id":"clyh2ogo6002oe0dse0sma73p","_id":"clyh2ogoj003fe0dsbnmphkke"},{"post_id":"clyh2ognt0016e0ds0htle7vc","tag_id":"clyh2ogmt0005e0ds6tmy9kfa","_id":"clyh2ogoj003he0ds3h71bdq1"},{"post_id":"clyh2ognt0016e0ds0htle7vc","tag_id":"clyh2ogoc003ae0dsfomfdp8e","_id":"clyh2ogoj003ie0ds1lmy806p"},{"post_id":"clyh2ognv001be0ds3gj07ur4","tag_id":"clyh2ogo6002ke0dse7id0zj6","_id":"clyh2ogor003le0ds4vtfaj35"},{"post_id":"clyh2ognv001be0ds3gj07ur4","tag_id":"clyh2ogoj003ge0dsgs870bk0","_id":"clyh2ogor003me0ds8ucoeig3"},{"post_id":"clyh2ognv001be0ds3gj07ur4","tag_id":"clyh2ogoj003je0ds663v4spg","_id":"clyh2ogor003ne0ds2tfmd02g"},{"post_id":"clyh2ognv001ce0ds4kn8g94v","tag_id":"clyh2ogor003ke0ds0cbubrma","_id":"clyh2ogor003oe0ds9y6ua2of"}],"Tag":[{"name":"TA","_id":"clyh2ogmt0005e0ds6tmy9kfa"},{"name":"Program","_id":"clyh2ogn9000de0dsf6iaa7q2"},{"name":"ASE","_id":"clyh2ognj000ke0dsf8wg7ufc"},{"name":"C#","_id":"clyh2ognu0019e0dsdq1qezrb"},{"name":"CG","_id":"clyh2ognz001me0ds52y86dkk"},{"name":"HLSL","_id":"clyh2ogo1001we0dshtn33s4e"},{"name":"MarkDown","_id":"clyh2ogo20020e0dsg8fk9hdo"},{"name":"Templatet","_id":"clyh2ogo30025e0ds06jz8w8t"},{"name":"Technology","_id":"clyh2ogo40029e0dsc5djbixf"},{"name":"Unreal Engine","_id":"clyh2ogo5002de0ds27gdh47q"},{"name":"Unity","_id":"clyh2ogo5002he0ds9rbe4pdp"},{"name":"Process","_id":"clyh2ogo6002ke0dse7id0zj6"},{"name":"High Definition Render Pipline","_id":"clyh2ogo6002oe0dse0sma73p"},{"name":"Creation","_id":"clyh2ogoc003ae0dsfomfdp8e"},{"name":"ECS云服务器","_id":"clyh2ogoj003ge0dsgs870bk0"},{"name":"Blog","_id":"clyh2ogoj003je0ds663v4spg"},{"name":"BUG","_id":"clyh2ogor003ke0ds0cbubrma"}]}}